Subject:  v24i076:  Public-domain replacement for compress programs, Part04/04
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET
X-Checksum-Snefru: cd7a2268 0bc31d04 3e7e4c73 213f0c6d

Submitted-by: Dan Bernstein <brnstnd@nyu.edu>
Posting-number: Volume 24, Issue 76
Archive-name: yabbawhap/part04

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  FILES FORMLETTER bitout.h texts.h try tryap tryapy
# Wrapped by rsalz@litchi.bbn.com on Wed Mar 20 17:09:25 1991
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 4 (of 4)."'
if test -f 'FILES' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'FILES'\"
else
  echo shar: Extracting \"'FILES'\" \(238 characters\)
  sed "s/^X//" >'FILES' <<'END_OF_FILE'
XBLURB
XCHANGES
XREADME
XFORMLETTER
XPATENTS
XFILES
XQUESTIONS
Xsysconf
Xcheckconf.c
XMakefile
Xtry
Xtryap
Xtryapy
XINSTALL
Xyabba.1
Xunyabba.1
Xhuptrie.h
Xbitout.h
Xpercent.h
Xtexts.h
Xyw.c
Xunwhap.c
Xunyabba.c
Xbitout.c
Xpercent.c
Xtexts.c
Xycoding.4b
Xycoding.uu
END_OF_FILE
  if test 238 -ne `wc -c <'FILES'`; then
    echo shar: \"'FILES'\" unpacked with wrong size!
  fi
  # end of 'FILES'
fi
if test -f 'FORMLETTER' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'FORMLETTER'\"
else
  echo shar: Extracting \"'FORMLETTER'\" \(572 characters\)
  sed "s/^X//" >'FORMLETTER' <<'END_OF_FILE'
XTo: brnstnd@nyu.edu
XFrom: 
XDate: 
X
XPackage: yabbawhap 1.00
XObtained from (e.g., uunet.uu.net): 
XObtained by (e.g., ftp): 
X
X1. Machine architecture (e.g., Sun 4/280): 
X2. Operating system (e.g., SunOS 4.1): 
X3. OS vendor (e.g., Sun): 
X4. Does yabba work on your machine so far (yes/no)? 
X5. Have you tried compiling whap (yes/no)? 
X6. Does whap work so far, if you've compiled it (yes/no)? 
X7. What are CC and CCOPTS in your Makefile?
X   CC=
X   CCOPTS=
X
X8. Describe any problems you've had with yabbawhap.
X
X
X9. Any further questions, comments, or suggestions?
X
X
XYour name:
END_OF_FILE
  if test 572 -ne `wc -c <'FORMLETTER'`; then
    echo shar: \"'FORMLETTER'\" unpacked with wrong size!
  fi
  # end of 'FORMLETTER'
fi
if test -f 'bitout.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'bitout.h'\"
else
  echo shar: Extracting \"'bitout.h'\" \(815 characters\)
  sed "s/^X//" >'bitout.h' <<'END_OF_FILE'
X/* Placed into the public domain by Daniel J. Bernstein. */
X
X/* This is a bit-output library; sorry for the lack of documentation. */
X/* Feel free to use it in other programs requiring fast bit output. */
X/* Outside #defines: BITBUFSIZE, TYPE, BRAINDAMAGED. */
X
X#ifndef BITOUT_H
X#define BITOUT_H
X
X#ifndef BITBUFSIZE
X#define BITBUFSIZE (1000)
X#endif
X
X#ifndef TYPE
X#define TYPE short
X#endif
X
Xtypedef TYPE bitnum; /* must be signed */
Xtypedef unsigned TYPE bitword;
X
Xextern bitword bit_wbuf[];
Xextern bitnum bit_bbuf[];
Xextern int bit_bufsize;
Xextern int bit_printbuf();
Xextern int bit_flushbuf();
Xextern long bit_numout;
Xextern int bit_fillflush();
X
X#define bits_out(n,b) \
X( (bit_wbuf[bit_bufsize] = n), (bit_bbuf[bit_bufsize] = 8 - b), \
X  (bit_bufsize++), ((bit_bufsize == BITBUFSIZE) && bit_printbuf()) )
X
X#endif
END_OF_FILE
  if test 815 -ne `wc -c <'bitout.h'`; then
    echo shar: \"'bitout.h'\" unpacked with wrong size!
  fi
  # end of 'bitout.h'
fi
if test -f 'texts.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'texts.h'\"
else
  echo shar: Extracting \"'texts.h'\" \(427 characters\)
  sed "s/^X//" >'texts.h' <<'END_OF_FILE'
X/* Placed into the public domain by Daniel J. Bernstein. */
X
X#ifndef SQ_TEXTS_H
X#define SQ_TEXTS_H
X
Xextern char *sqauthor[];
Xextern char *sqversion[];
Xextern char *sqcopyright[];
Xextern char *sqwarranty[];
Xextern char *squsage[];
Xextern char *sqhelp[];
X
Xextern char *unsqauthor[];
Xextern char *unsqversion[];
Xextern char *unsqcopyright[];
Xextern char *unsqwarranty[];
Xextern char *unsqusage[];
Xextern char *unsqhelp[];
X
X#endif
END_OF_FILE
  if test 427 -ne `wc -c <'texts.h'`; then
    echo shar: \"'texts.h'\" unpacked with wrong size!
  fi
  # end of 'texts.h'
fi
if test -f 'try' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'try'\"
else
  echo shar: Extracting \"'try'\" \(726 characters\)
  sed "s/^X//" >'try' <<'END_OF_FILE'
X#!/bin/csh -f
X# Public domain.
Xdate
Xecho -n '1. yabba time: '
Xtime ./yabba < $1 > try.Y
Xecho -n '2. unyabba time: '
Xtime ./unyabba < try.Y > try.Y.U
Xecho '3. comparing: (should not produce further output)'
Xcmp try.Y.U $1
Xecho -n '4. compress time: '
Xtime compress < $1 > try.Z
Xecho -n '5. uncompress time: '
Xtime uncompress < try.Z > try.Z.U
Xecho '6. comparing: (should not produce further output)'
Xcmp try.Z.U $1
Xecho '7. file sizes:'
Xls -lds $1 try.Y try.Z
Xecho '8. percentages: '
Xecho -n 'Y to original: '; expr `wc -c < try.Y` '*' 100 / `wc -c < $1`
Xecho -n 'Z to original: '; expr `wc -c < try.Z` '*' 100 / `wc -c < $1`
Xecho -n 'Y to Z: '; expr `wc -c < try.Y` '*' 100 / `wc -c < try.Z`
Xrm -f try.Y try.Z try.Y.U try.Z.U
END_OF_FILE
  if test 726 -ne `wc -c <'try'`; then
    echo shar: \"'try'\" unpacked with wrong size!
  fi
  chmod +x 'try'
  # end of 'try'
fi
if test -f 'tryap' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tryap'\"
else
  echo shar: Extracting \"'tryap'\" \(770 characters\)
  sed "s/^X//" >'tryap' <<'END_OF_FILE'
X#!/bin/csh -f
X# Public domain.
X./whap < /dev/null > /dev/null
Xdate
Xecho -n '1. whap time: '
Xtime ./whap -q < $1 > try.AP
Xecho -n '2. unwhap time: '
Xtime ./unwhap -q < try.AP > try.AP.U
Xecho '3. comparing: (should not produce further output)'
Xcmp try.AP.U $1
Xecho -n '4. compress time: '
Xtime compress < $1 > try.Z
Xecho -n '5. uncompress time: '
Xtime uncompress < try.Z > try.Z.U
Xecho '6. comparing: (should not produce further output)'
Xcmp try.Z.U $1
Xecho '7. file sizes:'
Xls -lds $1 try.AP try.Z
Xecho '8. percentages: '
Xecho -n 'AP to original: '; expr `wc -c < try.AP` '*' 100 / `wc -c < $1`
Xecho -n 'Z to original: '; expr `wc -c < try.Z` '*' 100 / `wc -c < $1`
Xecho -n 'AP to Z: '; expr `wc -c < try.AP` '*' 100 / `wc -c < try.Z`
Xrm -f try.AP try.Z try.AP.U try.Z.U
END_OF_FILE
  if test 770 -ne `wc -c <'tryap'`; then
    echo shar: \"'tryap'\" unpacked with wrong size!
  fi
  chmod +x 'tryap'
  # end of 'tryap'
fi
if test -f 'tryapy' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tryapy'\"
else
  echo shar: Extracting \"'tryapy'\" \(1184 characters\)
  sed "s/^X//" >'tryapy' <<'END_OF_FILE'
X#!/bin/csh -f
X# Public domain.
X./whap < /dev/null > /dev/null
Xdate
Xecho -n '1. yabba time: '
Xtime ./yabba < $1 > try.Y
Xecho -n '2. unyabba time: '
Xtime ./unyabba < try.Y > try.Y.U
Xecho '3. comparing: (should not produce further output)'
Xcmp try.Y.U $1
Xecho -n '4. whap time: '
Xtime ./whap -q < $1 > try.AP
Xecho -n '5. unwhap time: '
Xtime ./unwhap -q < try.AP > try.AP.U
Xecho '6. comparing: (should not produce further output)'
Xcmp try.AP.U $1
Xecho -n '7. compress time: '
Xtime compress < $1 > try.Z
Xecho -n '8. uncompress time: '
Xtime uncompress < try.Z > try.Z.U
Xecho '9. comparing: (should not produce further output)'
Xcmp try.Z.U $1
Xecho '10. file sizes:'
Xls -lds $1 try.Y try.AP try.Z
Xecho '11. percentages: '
Xecho -n 'Y to original: '; expr `wc -c < try.Y` '*' 100 / `wc -c < $1`
Xecho -n 'AP to original: '; expr `wc -c < try.AP` '*' 100 / `wc -c < $1`
Xecho -n 'Z to original: '; expr `wc -c < try.Z` '*' 100 / `wc -c < $1`
Xecho -n 'Y to AP: '; expr `wc -c < try.Y` '*' 100 / `wc -c < try.AP`
Xecho -n 'Y to Z: '; expr `wc -c < try.Y` '*' 100 / `wc -c < try.Z`
Xecho -n 'AP to Z: '; expr `wc -c < try.AP` '*' 100 / `wc -c < try.Z`
Xrm -f try.AP try.Z try.AP.U try.Z.U try.Y try.Y.U
END_OF_FILE
  if test 1184 -ne `wc -c <'tryapy'`; then
    echo shar: \"'tryapy'\" unpacked with wrong size!
  fi
  chmod +x 'tryapy'
  # end of 'tryapy'
fi
echo shar: End of archive 4 \(of 4\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 4 archives.
    rm -f ark[1-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
exit 0 # Just in case...
