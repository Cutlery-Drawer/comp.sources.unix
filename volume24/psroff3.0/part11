Subject:  v24i106:  psroff, Troff to PostScript filter, Part11/19
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET

Submitted-by: Chris Lewis <clewis@ferret.ocunix.on.ca>
Posting-number: Volume 24, Issue 106
Archive-name: psroff3.o/part11

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  lib/psrofflib.S utils/fonts/cmmi10.pk.UU
#   utils/fonts/cmsl10.pk.UU utils/fonts/cmssi10.pk.UU utils/pk2sfp.c
#   widths/Makefile widths/widthps/S2
# Wrapped by clewis@ecicrl on Fri Apr  5 20:56:02 1991
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 11 (of 19)."'
if test -f 'lib/psrofflib.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/psrofflib.S'\"
else
  echo shar: Extracting \"'lib/psrofflib.S'\" \(8799 characters\)
  sed "s/^X//" >'lib/psrofflib.S' <<'END_OF_FILE'
X#	2.17 91/04/05
X#	This file controls psroff, you can insert additional printer
X#	types here.  These are eval'd *late* in processing, so that
X#	you can insert $copies etc.
X#
X#	Syntax:
X#
X# troff=<path to troff>
X# trofftype=[-F...|-T...]
X# name width=<width> t2arg=<troff2ps args> lparg=<lp command line> ptr=<ptr>
X#		<repeat as many printers that you have>
X#
X#	"troff" and "trofftype" stay in effect for each subsequent
X#	printer definition until explicitly overridden:
X#
X#	if troff omitted or assigned "", will use your PATH for troff.
X#	if trofftype omitted or assigned "", will not use width table
X#		directories, and "width" will be unused.  This is not
X#		recommended if you have printers with different character
X#		widths.  Psroff will complain.  See trofftype assignment below.
X#
X#	name: name of config (eg: xt for ditroff->xtroff).
X#	width: name of width files (eg: "ps" for %%FONTDIR%%/ps/ftXX).
X#	ptr: default physical printer id (eg: "lp -d$ptr")
X#
X#	Useful troff2ps args:
X#		-T<type>	driver type (ps, lj, dt)
X#		-p<printer>	printer-specific initializations - eg:
X#				prefix for *.lib and *.fonts files.
X#				(defaults to <type>).  Should be set
X#				*before* -T.
X#		-d<device>	x T <device> for ditroff drivers.
X#				(defaults to alw)
X#		-R<num>		ditroff resolution to use.  Default 300
X#		-O<pageoffset>	offset to be applied *bypassing* troff.
X#				Default "-O.5i".  Set to 0 to get this
X#				perfectly offset-compatible with other
X#				troffs.  Most macro packages are set to
X#				centre their default page layout in
X#				(effectively) 7.5i, the adapters plus
X#				the .5i default makes pages centre
X#				by default in 8.5i (matter of taste).
X#		-Y<vertoff>	ditto, but vertical.  Default 0.
X#				Some postscript printers differ in location.
X#		-N		The troff is actually ditroff.  (You have to
X#				have ditroff widths installed for this!)
X#		-Z		optimizer
X#		-S		Use "stop" to terminate Postscript instead
X#				of control-D
X#		-W<directory>	location of CAT width tables.  Defaults
X#				to FONTDIR/<type>/ft*
X#
X#	lparg: how to get output to printer.  Note the "-n$copies" and
X#		-d$ptr.  The $ptr is the psroff selected physical printer
X#		id, and is what would be specified by psroff -d<printer>.
X#		Default "ptr" is described above.  psxlate is for
X#		page-flipping postscript.  psxlate should really be in
X#		your print spooler.  Or, you could do the psxlate and
X#		print spool invocation manually simply by changing lparg
X#		to "cat".
X#
X#	Use single quotes for all strings that have embedded blanks or
X#	other metacharacters.  (This delays the variable replacement until
X#	the correct point).  Lines can be continued by prepending the
X#	continuation lines with the "name" followed by whitespace.
X#
X#	psroff will use the last assignments to troff and trofftype
X#	ditroff prior to the matching name.
X#
X#	There is one additional magic flag, "v".  If you specify
X#	"v=1" (as in cdps entry below), psroff will arrange to run
X#	catconv on the (it has to be CAT) troff input.  This will
X#	permit you to do the extended character set and drawing routine
X#	stuff without having to manually invoke catconv.  HOWEVER,
X#	before trying this, you have to have Perl, and make sure that
X#	Perl will start it up properly (see MISC regarding catconv).
X#
X#	Note: for the automatic ditroff width table installer to work,
X#	the width parameter, -N and -W (if present) options must be
X#	on the same line.
X
X
Xtroff=''
Xtrofftype='-T$width'
X#	Uncomment the following if you're a Sun or Ultrix -F troff.
X#	Check your manual pages.  (Though some support -F without mentioning
X#	it in their manual pages).  The default is "-T" (Xenix and a few others)
X#	Most BSD-derived troffs use -F, including those needing ASCIIWIDTHS
X#	turned on.
X#trofftype='-F%%FONTDIR%%/$width/ftXX'
X
X#	psroff generating postscript directly.
X#	The clause "| $LIBDIR/psxlate -r" is there to reverse the pages
X#	for some Postscript printers (eg: the ones that print the first
X#	page face up and then drop the second page face up on top of the
X#	first), most more recent Postscript printers don't need this so
X#	you can remove the psxlate call alltogether.  Actually, even if
X#	you do need to reverse pages for your printer, psxlate should
X#	REALLY be in your spooler rather than here - see MISC for more
X#	details.  Or, you could do psxlate and the print spooler manually.
X#	In that case simply change lparg to be lparg='cat'.
X#
Xps	width=ps t2arg=-Tps lparg='| $LIBDIR/psxlate -r | rlp -d$ptr -n$copies'
Xps	ptr='gate!AppleLaser'
X#	Example optimizer entry.
Xops	width=ps t2arg='-Tps -Z -W/usr/lib/font/ps'
Xops	lparg='| $LIBDIR/psxlate -r | rlp -d$ptr -n$copies' ptr='gate!AppleLaser'
X#	For testing new width tables without clobbering real one.
Xtps	width=tps t2arg='-Tps -Z -W/usr/lib/font/tps'
Xtps	lparg='| $LIBDIR/psxlate -r | rlp -d$ptr -n$copies' ptr='gate!AppleLaser'
X
X#	System V'ish LJ printing to printer called laser.
X#	(Your lp filter script should support -og (8 bit, no filtering))
X
Xlj	width=lj t2arg=-Tlj lparg='| lp -d$ptr -og -n$copies' ptr=laser
X
X#	HPLJ-2-postscript testing:
X
Xtlj	width=lj t2arg=-Tlj lparg='| %%LIBDIR%%/lj2ps | rlp -d$ptr -n$copies'
Xtlj	ptr='gate!AppleLaser'
X
X#	Laserjet III (built-in fonts, using supplied widths, Times base)
X
Xlj3	width=lj3 t2arg='-Tlj -plj3 -W%%FONTDIR%%/lj3'
Xlj3	lparg='| lp -d$ptr -og -n$copies' ptr=laser
X#	Laserjet III (built-in fonts, using supplied widths, Univers base)
Xlj3u	width=lj3u t2arg='-Tlj -plj3u -W%%FONTDIR%%/lj3u'
Xlj3u	lparg='| lp -d$ptr -og -n$copies' ptr=laser
X#	Ditroff:
Xdlj3	width=lj3 t2arg='-Tlj -plj3 -N -W%%FONTDIR%%/lj3'
Xdlj3	lparg='| lp -d$ptr -og -n$copies' ptr=laser
X#	Ditroff:
Xdlj3u	width=lj3u t2arg='-Tlj -plj3u -N -W%%FONTDIR%%/lj3u'
Xdlj3u	lparg='| lp -d$ptr -og -n$copies' ptr=laser
X
X
X#	Deskjet: Only difference is troff2ps library inclusions for deskjet.
X#	(dt.lib has a slightly different prolog)
X
Xdj	width=lj t2arg='-Tlj -pdj' lparg='| lp -d$ptr -og -n$copies' ptr=laser
X
X#	DiTROFF test output (outputs ditroff on screen) using
X#	supplied ps widths.
X
Xdt	width=ps t2arg='-Tdt -ddjet' lparg="| cat"
X
X#	Ditroff configurations:
X
X#	Tpscript output (ditroff drivers, PS widths, dt libraries)
X
Xtp	width=ps t2arg='-Tdt -R720 -dalw'
Xtp	lparg='| /usr/lib/troff/tpscript | rlp -d$ptr -n$copies'
Xtp	ptr=gate!AppleLaser
X
X#	jetroff output (ditroff drivers, jt widths, jt libraries)
X#	The jt widths are not supplied - see README.  These are widths
X#	derived from Knuth's PK fonts from TeX, which are what is distributed
X#	with jetroff.  jt.fonts has some example character mapping overrides
X#	to make dt.c's mapping tables correspond to jetroff's
X#	character->font arrangement.  (Box drawing characters in Rick
X#	Richardson's ST (cmtrf) font)
X
Xjt	width=jt t2arg='-Tdt -pjt -ddjet' lparg='| djet | lp -d$ptr -n$copies'
Xjt	ptr=laser
X
X#	X.11 Xtroff using supplied ps width tables
X#
X#	You should probably run xtroff's devpsc ditroff width tables
X#	through gfttab ("cd widths; gfnttab /usr/lib/font/devpsc psc" ?)
X#	and change width to psc.  However, the default "ps" tables work
X#	pretty well.  A few characters in CAT troff do not print as you
X#	would expect: ^, @, \(ga, \(em, \(dg, \(bs, \(eq.  Some of these
X#	may have been fixed in your version of xtroff (patch 10).
X
Xxt	width=ps t2arg='-Tdt -dpsc' lparg='| xtroff'
X
X#	Adobe Transcript psdit - this appears to work, but I've not
X#	set a workable lparg.  A number of characters are missing:
X#	@, ^, ff, ffi, ffl (ligatures are off by default anyways),
X#	\(bs displays as a heart.
X
Xpsd	width=ps t2arg='-Tdt -dpsc' lparg='| psdit | something'
X
X#	AT&T ditroff previewer on 3b2's - using supplied ps width tables.
X#	Using otroff (CAT troff on these machines) to drive.
X#
X#	You should probably run xproof's devpsc ditroff width tables
X#	through gfttab ("cd widths; gfnttab /usr/lib/font/devpsc psc" ?)
X#	and change width to psc.  Special note: xproof keeps each symbol
X#	character/pointsize in a separate file, and counts as a separate font.
X#	The limit appears to be 50 fonts, so testtab.m won't print completely.
X
Xtroff=otroff
Xxp	width=ps t2arg='-Tdt -dpsc' lparg='| xproof'
X#
X
Xtroff=''
Xtrofftype='-T$width'
X
X#	Ditroff input driving postscript
Xdtps	width=alw t2arg='-O0 -Tps -N -W%%FONTDIR%%/ps' ptr='gate!AppleLaser'
Xdtps	lparg='| $LIBDIR/psxlate -r | rlp -d$ptr -n$copies'
X
X#	Ditroff input driving display postscript (ie: IBM RS/6000)
X#	dodps is expecting dpsexec in /usr/local/bin.
X#	I run a patched version of dpsexec - the patch I used
X#	is in the MISC file.
Xdps	width=psc t2arg='-O0 -Tps -N -W%%FONTDIR%%/ps -S -Z'
Xdps	lparg='> /tmp/dps$$ ; %%LIBDIR%%/dodps /tmp/dps$$; rm /tmp/dps$$'
X#	LJ3 widths generating postscript
Xdpslj3	width=lj3 t2arg='-O0 -Tps -N -W%%FONTDIR%%/lj3 -S -Z'
X
Xtroff=/usr/local/bin/otroff
Xcdps	v=1 width=ps t2arg='-Tps -S -Z'
Xcdps	lparg="> /tmp/dps$$; %%LIBDIR%%/dodps /tmp/dps$$; rm /tmp/dps$$'
END_OF_FILE
  if test 8799 -ne `wc -c <'lib/psrofflib.S'`; then
    echo shar: \"'lib/psrofflib.S'\" unpacked with wrong size!
  fi
  # end of 'lib/psrofflib.S'
fi
if test -f 'utils/fonts/cmmi10.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/fonts/cmmi10.pk.UU'\"
else
  echo shar: Extracting \"'utils/fonts/cmmi10.pk.UU'\" \(9072 characters\)
  sed "s/^X//" >'utils/fonts/cmmi10.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 utils/fonts/cmmi10.pk
XM]UD11T9T;U!+(#$N,B!O=71P=70`H```"Z!B/@`$)JX`!":NP#M!#``"'QP=
XM_QS7\MSSVTVEVA$]D2/9$SU_%#UA4]7Q8]3Q<],8/2&3TM#1\;/!P[\=`Z\=
XM$Y+1-TT328O0.$(,(ML?'!S^&W`3`023P[.SM/H\.3T_D\23M).THZ2SA<`0
XMTZ2SM*\\2.,]1SU(/3D\.CLZ.D<!2L!!0PMO@!X='OX<TF<<-B0J.A(Y+02#
XMTC<],V/5)4U18]85/7%$UQ1-OB3;XTW.)-86\]48+4&3TAL]`=`Z+2-RUWT0
XMP#U$#3\F(A\<_AM]7324T3P]`]`\\]$Z/2.N(])..#TTXG/32#TS@]-(/3.3
XMTDD](Y/2.CT3L]`\.ST#I*U=`,`Y10O/IA\='/X;?9I+2CT2XJ/1&O/2&C<7
XM&C<=3S<=4V+5O4XS<=0W&!D],9\](9\](:/1*CT"H[5ME\`P1@I)]AL<'/X;
XM?8I*2CT"XJ/0&O/1&C<6&C<=/S<=0V+4O3XS<=,W'4XCV^,]M-?-,,!(1PR4
XM>B$='OX<TF<<-B0J.A(Y+02#TC<],V/5)4U18]85/7%$UQ1-OB3;]-Q-"Q34
XM1.)-0V/4-CTS@M,X/2.3T$HZ(APW)!TGT<`H2`U,SB,A'/X;>TNDM-'C/#T>
XM,\/1XCP]+5T>,\/1XSP]'C/#T4M*M+?`'$D'"(H2$AS^&VRDT>,]'C/1XST>
XM,]'C/1XST4K&P"A*"-]*%Q4=_1N<T4U.,]3C/4XSU.,]3B.A<Y-3E%.38J%S
XMH6/!0]%=$,!,2PV6PR,A'/X;>WBDT$P]$M$]`=,\'4.QU#H=8Y'7.!V#<=@V
XM':-2VC1-DS$3V#,3/7,14]='/6.#U3D]7SH]0[/2\\/2\]`]!-!(MZ7`)TP*
XMXY`<%QS^&WS136XSUN,];C/6XSUN(]`6/!8]`6/"8[)SHV.4/7/`7TT/A;(H
XM*!S^&WC4BEU$T1$]--+Q$](1/2$3T1(]'Q(]`2/2\3.Q,]$4.A,]+Q0Y%#TA
XM0X%3T?%3<5/2\6-18]$7-!8]+Q<S%STA<R&#T?&#$8/2&3D]$I.3T#DI2I86
XMM\!*3@S;!B$A'/X;=ZFST#T!$\+1\1/!TA(['1$SH=(4*ATO%#D='B%C<=(7
XM-AT1@U'2XADT'1XALR'2'#$=$=!-+QT3T2T3T#TAN<&PP$)/##15(!P>_AS1
XM?6-3TCD[/#D]`X/2-CTS5--#340SU4\DU4XA36CBUD'TU4+TU$---%/3-CTC
XM@]`Y2SLY/2-4U7T0P"U0"D6P&QP<_AM]312$P[.SM/H\/BD\23PY/$D[2CI+
XM.$S0TN(]OC/;XSVTU[U`P%E1#*8=(1PE_AS1?6-3TCD[/#D]`X/2-CTS5--#
XM340SU4\DU4XA36CBUD'TU4)-4S340TTT4V1C8U%!0X,Q43.3,5$CLR%4TD1&
XM&Y<=4F+5)AUC,]:-=]EME)#`/%(,)@T@'1W^&WT]-(30.SP[2_/#KB/$H[2C
XMP[.DPX31S3."TSDM+SD]#C.CPZ3/.D85.D452T01N3,=I3#`.U,)SZ89&![^
XM',91HF(BD:2!PH+"?RT";RT1?SV$V&UITZTYUEV$V#V?)O'2)?+1)BT"<M`7
XM2B@B)RD5>\`O5`E9FQ@<'/\;/<,X.#(I.B(:.A(J.A(;.A(:.Q'QL['0/;XS
XMV^,]OC/;XSVTU=+`P#)5"NRH'!L=_1L;:430-ST2CB/1&.,]$8XST1CC/1&.
XM(]$9\]`:/!PK'0*ATB@=0E+774#(058)5588'!W]&ZJ#32-CTR<],8/2&4T1
XMKST!L\'/.QT#H='SD=)''4-QU#8=7S4=8T'7,RUS,=A!':,1VDV_/<\M<,AG
XM5P\<<R<H'?T;I;63/$Q%/0/0%ST#P8/$P8.UL9.Q$[&?.A(Z&O.1,Y&S@4.!
XMPX%#<=`W%3<=`V%C8=%%%C8=+S07-1TS,9,QU#,9,BU#(:,AU3(:,1UC$;,1
XMUO3$U_/0/8+1+9+1'6#`2E@-06XB(1S_&WMIM+312RU#L=5)'7.!V#<=E%';
XM-!W$(=XQ'?4!#S`13?$3WA(]T4/;%3VA9-@8/7&4U1L]0K/3+$T2T3Q-!8F:
XM4,@Y60E)]A@='/\;NH1-)&32*3TAH]$;3!T#L=%)'3."TS@=1&'6-1UT,=DR
XM':,2VEW//<XSW.,]P]F](,`\6@KL&!P;'/X;C6A+.#PY+#H<.QM*'#L;/!H]
XMH]H]H]H]I-E-H]H]HZ'#H<.QL\&CP:3!H\*3PI/#@[2-:-`H80AU&Q81$OX1
XM=#)C,1-29$)T,W-"@S\X,N,X,^(W,Q$F0Q(C(B(413+0+&(&W=X2#AW^'":_
XM.N,ZXSHR13$3)$4C-B(W(N(W;B<Q-R(V,C8C-24D-A,I1]`@8P;LDA(/$OX1
XM=9)"4U)#5"-4,G(_.^0\.A(I$R@5)2=FP#%D"%/K%A,=_AS0;],^/2/2XSE"
XM.#,1-R9&)T4W-B@U\X-.,X->(W,Q,F0Q0C(B(6130-`B90=S-1,.$OX1=7-!
XM4F%"@2-Q,H$C8CE.0[.A$I$B@4)2=5#`-&8'U5@4%27^'-)-(C+0,DPB3#,M
XM#B/434\]'-#SU.0]3D/4Y#U2U?/0(RT$(M!!+1,ATTTPT#%G!Z&J%!$:_Q&3
XM,G(Q$V)44F1#8U)S3S<SXS<TXC8V)4<363(P$//38F-44F1#8T*6H,`S:`DW
XM\Q@3'?X<1M/STN,]+C/2,U@Q)"=&-C<U1S7B.#3B.#4W-?.#,1-S01-S,1.2
XM(3*C,)`C:06#(`X*'/X;<_9'+6-A(S\3,O%#;S;B-C?S,2-!(S%"(6-`T"IJ
XM!I;#$1`D`!O3_$T@;#P2.10H%2@4-Q4]\\XSSC/.,\-R0V0R="*#(J6@P#AK
XM"%1E%A(=_AQ&TO/1XST>,]$V-C0C%3,4-#,30S,31#(5)3$=!-![,CKS,XXC
XM0T$S0S$S8C%"=$#0&VP$QBH,"1W^'#;V/C4UXS7C->,UXS7C,A0B%3300VT.
XM#%@D(!+^$2-F95$C,5(R0D$R(6,18S$R$71S(32$<R$SDX-O.3@UXCDX-CDW
XM-O.3@S$CDW-!(Y-S,2.3DB%"HJ,PT#)N"9J0&102_A$C95$C(D)!,A%C,3-S
XM(31S(3.#;S@UXC@V-S;S@S$C<T$C<S$CDB%"HS#0)&\'P6T4$1+^$86B0G-B
XM4X)"DC*B+SIN*C'SDR.#0H)2<G)#I8#`-W`(#,X5%1H!$5-4@2,A0F$R$6)1
XM,W)!,X)!,X/W.#XF.#<X)S@W."@W*44I,10J,DSSU.,]1-*<T"IQ!R2#$P\:
XM_A%S05(Q(D)4,F0C8S)S+S<QXS<RXC8T)4435S(\\[XSM(H@P"-R!S?S$Q`2
XM_A$C5#$C(4$A,A%#$3-%,T01,U)O/.,\XSP]$L#0)7,'@``3#Q+^$76"4F%Q
XM4F,R<D/%MXB7PT&#(W(D<B1Q,9)"8G9@T!UT!<<>#PP:`!F"GB..,SSB4XXS
XMCC./-1/S05(Q=$#0)W4)*,H8$Q+^$3.B,2-S+Q,W,?%#8V\W->,W-N(G,Q,U
XM0Q0D$B(65#+0)W8'P6X4$!+^$3.!,2-3$3-3$3-C]#<?0X'B,X%#<5*!7R<6
XM-1@D&E;0.'<+=&8>&A+^$3.B83$C<U,1,W-3$3-S8_0V.!]#<X'B,W.!0W-Q
XM4H*!4H)Q8V-Q8V11@T$B0;5%8,`R>`DD^Q@3$OX15$1A,B%!041",50T(5,T
XM(6-"KSTN,Z(S<20C<20C83,A$F$Q02(R5$1@P#!Y!]@R%!(:_A$SHB$C<_$3
XM-T]#8U\W-.,W->(G-C5')$E1/2/2)B<U1B9%)S4I%2M;P"MZ!W#8$Q`2_A%C
XM85511R)18U&!T1T1T1T1T1T1T1T1@5&101)20QA!1D%C8,`C``G8+AH;'/X;
XM?7I*.CPN*CP:XCT!H]KC/:XSVN,]KC/:36S2P$8!#558(QX=_AS8\MX]U=OQ
XM(]H3/9%$UQ8]8F/6%TU!A-,:/2*CTAM-`<3!T3LM$['221TT@=4W+5-QUD4=
XM=$'9,RV3/?$"X,!-`@PT52`<'OX<T7UC4](Y.SPY/0.#TC8],U330TU$,]5/
XM)-5!0QL33Q0]`X\]`T%#&Q-!]-5"35,TU$---%/3-CTC@]`Y/#LY/2-4U7T0
XMP#L#"QQS'1H=_QS6\MKSV?38$3U_$CUA,]8334%$U!4],6/2\7/1\8/0\9/!
XMH[\;.APZ'$@=!'+1-CT$.6O`)`0+X+@?'AS^&W_:8M<7XAV!!T\=`=+]+1\=
XM`0L.(=@7'7)OVG#`)@4-3,XC(1S^&WW:3#T>,\/1XSP]'C/#T>,\/1XSP]'C
XM/#T4M*M+<+!!!@QZ4B`?'/X;?,=,-8/%.#QAKSQ1I,0;/$&TPQP//030/030
XM+1'1'1'1'#'!'$'`'%&QQ1L<4I+&*!QR@<57RWS'P#,'"555&!L=_QQ%M5>(
XM.6H25$1%<S-SDC*2DB*AHA/8(2V2$=KTVN(]KC/:XSVN,]I-70T`P$(("JJK
XM'!H<`!NM#439XCUXTC(R2C0T-T4U-48V,T8W,S<W3Q1S>/<W04<W,S<V0S8V
XM134U1S0T.D(R/2C7XCV4U-"@P$`)"<NJ&1L<_QN-#53:XCPY.$$W-T0V-S7S
XM8V->(V-C8V-B?S4V-S4U.#4U*30U.B0T/",S+2(C$]5MGB/:35T-`,!."@Q;
XMOB`='?T<TGUD5-$Z/#PY31-TTC<]-%333B1-1/--1$331CTT8])'/2.3T#H]
XM`K/"T"LM$K&A4:)105&244%B@6%!8G%A6(A8>5AX8,`P"PH\.!L6$OX1A-,D
XM+#8F$S<U$C@T$RDT$O.4(2\[,1,[1.([-BI&*"$S$R4D(A97,\!(#`D,SA<7
XM)?\<TETR0M$7+!@K&3D:.!LX&C@;.!LI&C@5B104*Q5Z&RCQPH\<-N(<-QLW
XM*S<K*!$9*1$8*1,D.A5<\=CC'8\=D,`M#0A(H!44&_\15*$WD2EQ*V$B<E$B
XMD4$QH4'2\2'3XA$=3RU>(=7B+4XRU/+5&M`R#@<<<A(/'?X<E9)!<6%BSB+3
XMQ,3$M9(48S-34S-C,H(O."'SD2."+S@3-R0G%287)!E7T!@/!GZ5$0T2_A%V
XM4Y*BHZ*CJ3Y#ORPL)"94P#80!P`"$A$E_QR^(=-J)!D221TATATBT2TATBT?
XM+2'2XBT3T?+2XCTCT4T6R+?&T4T?/1*B,=`VP"X1!_'+%1(;_A$C93$C(D(A
XM,A%C$3-T-'0S@_0X/C,X,^,X,S@U*#TO/1XST?/2)L`Y$@>"V!,0'?X<E+(B
XMDD)R4F)B4V)2<D-S,H/R.",H,O.#+1'B.#(X(S<S*#,G-/)R4F)B4H)"@C&T
XMH-`8$P6IN@\*$OX14GXC;C-N(V-_-4]1(C)$0-`L%`DW\Q@3$OX14H-39D-1
XM)$-!0D-!LS'#$M0!"I-3CS8VXC<T$3<S$3DC$BI"P#,5"558&!,=_AQ4U#U/
XM/333XCU.(]--/STTTSTDT6PB.R,Z)$@F-S8V-S4X0SHR.S$\02T#P"H6":0+
XM&14;_Q%RDGXC@VXS@VXS@VXC@S$T9#$E0B(A,Q533SU.,]3SU2U@T"<7!^=;
XM%1,2_A$6HN)#D_,Y-#@U."4X-3<V-R<V)S8H-2DS.C(K;4`1P#08!P`"$A$E
XM`!R^(=-H1!<R1ST#T.4](A:308(6<=(M$M(=+RT>(](]%=![BXQM!='RH4'$
XM4,`J&0D>U1@5$OX134/5+5(E%!@6%!<7$RT?%"T/)"T!4L\D.S0[)3KS8Y)R
XM<,`Q&@A%LA43&_\1M-`S*B8H)R<W)R@_4X/B0X-3@E.#4X)C<G12<Q%"@R2O
XM/2XSTO/3+4#`)QL))(,8%1+^$7T6TDTT1$DG.#@G\Y)N(Y-CDG.#<X*#<J)B
XMPD+170#`'QP&_I82$Q+^$4TCTRTR)2H6*1<=4=3B+3XBT^(](]0LT"<="*3]
XM%A,2_A$SL3$C@Q$S@Q$SD_0Z'T.QXC.Q3SH5*A8X%S<9-1QGP#\>"8B*&10E
XM_AS2'5XQU>,=7QTVPR$B@S%#4E%20F%3(V%B\3877W%F87;V%C(F%3,E%34D
XM%"@R$CMM/C'5XQT`P$$?"@+6&A8:_Q$TT1(3.Q,32A@Y&3@:1APU'0-!T4,=
XM(R'3,1U$UO/53573$CTA,]$4/0%4OQ<Z&$@:-!(<,A(=%##`2"`*;!H;%R7^
XM'-3QV.,=CC'8&S@6$Q(V%3$3-A4Q$S47/T-1@4-A@4-1D>(S88%#48%347%C
XM46%S45&205&S(3+1?6'8XQV.(='`,"$)]9,:%Q(`$4'3%/'3/R'5(1UQ$:&1
XM$9*2^B@1&2@A&2@2*"<B)D8CUT@95S=U5'#`)2('=@H3$!3_$H:)4V,RT1T?
XM'3%!H1,1EX'1\='QTAP3&A0V)IE7T#TC"7:*&10=_AS4`1$RWQ4KXA8K\6.A
XM8L%2,W$S(2-A(R$R=2$RE?,X-C@V.";S@V-S<W)S@G-RGR8K)!`06L`V)`U`
XM!2(?$OX13>/?+?(D'7$Q4=<2%1V!?QH;%O&AL7&2HG&2H8&#DH%R$G*20R)3
XMJ#FW5]%'2L`R)0A%LA41&OT1E+,R@F)B<E-R4H/S.#XB.#,X(T<S1R1&)1$E
XM)A(C)A1(XATRTK>WK3%0T!XF!<XZ#P\6_Q&'8E)"PL+1WRSB/3Q;:GIK3?/"
XMT;-@P#TG"G=X&Q<;_A%!M&&G49DQDU,ADG+Q&1H1&!LI&A$8&Q$8&B$G&A,6
XM&20T&"9"%4C1K-%M/B+7\]<M?SURU-!"0`A^E184'_X=I=)"L8&1DH*29()D
XM@V*BX@%"AC-C42-2@1-"D1,RM".S,L,CPR.S+SPR/",[,SLD\Z)BDH)RHD+5
XML-`U8`:JKA$0'0`<P\$QHC'Y)!^"47-!@E%_-!?S08,QDR&?,AHQ&TP]\M/!
XM$K$BH3*!8E*!0;10X!U[!2C(#0D2_A$<$Y'(Z'0X.!P<#@<'`XG%PN(R#@#0
XM)7P&)/T0#AH`$9.A(W%"85)A0U%3^SXZ.N,ZXSHU)#1#)4(F,BA8P$A]"B[P
XM&A4<_1)BU"UAAE%R4C)A<R%ADA)1HA)!LA(QQ?(<81T'T2(]`R1"8D0Q8T0Q
XM4T$4,3)A)#1_$ST.(4+1%!TA,M(3'4/4L!-^"``"%1((^!W!+$/$(MC!/"/#
XM)-`1?P1QR`P0!?4;5W)R0;$AT@$!T!\P"``"%1`4_A)6@T-2@C.#+RHAYSH_
XM$J(C@S*"4T.&4-`0,0@``A4-$_P2<914$ZX!`UW`)3((``(5$!/^$D=R8T&3
XM,:,2IZ,1L\3#P\/#PM`7%2@4&2/"T1TAP"XS"``"%1`<_A)6@E-?&#-&0D<R
XM1D,G3//#PJ;2+2\]$]#T$ICX>5LR&308-24I9<`L-`@``A42&_\2SRTCT?30
XM$3P2.R([$SH4.20Y%3@6-Q<V)S88-1DT*335YK.[P"TU"``"%1`<_A(B@DM:
XM:(Y1TA-7$20U*"09+1/1+1\Q*G^6I,(AHR&B08)B4I5@T#<V"``"%1`=_AN$
XMHD)R86)C0F0R=#*"/STM,U4R%"0Q%B-((D@Q.B'D.C\2HQ.2,H,R@E)B<D*E
XM4,`D-P@``A41'/X2$=/3\=(AP2\<$QL=+QTATO'2\M'RT>,]#E31*=`R.`@`
XM`A40'?X;5I)"<8%2@CXRHB.2,W)$864BA[6G<D129#*3(J6UX\(2L2*B,H)3
XM4H90T#<Y"``"%1`<_A)5HD)R8E*",X(RDQ\Z(>,Z,2HQ*4(H0R81-"02-5,_
XMTM,R@C1R-&)#<E%R8D*E<)`2*!```RHE"/X0<;D;GQN1N"N-\+@3*1```RHE
XM"/X*V1V"+9'9\=D=D=&`$BH0``,J)0C^$*0:P:SQK!K"+1"($BL0``,J)0C^
XM"M&H*I&J\:H:H7#0$BP$<<@,!PO^$T,E$S-.(E-354/8$BT$<<@,!PO^$S15
XM-3XE)#,Q4C3(*BX(``(5$A3_$RTTT6PB.R-))4<G12DT*D+RQJ0BDT)T4E1R
XM-)(CML31+3#`*B\(``(5$A3_$],M%,:S(I0R=%)4<D.2)*;\(DHD.25')T4I
XM0RLR+&T4TR#@"CH$<<@,!`3\`V_VX`X[!''(#`0,_`-O]Q$1(DC`*SP,<<H@
XM&1C]%=D]=-9-9-9-9-9-9-9-9-9-;TVDVDVDVDVDVDVDVDVDVDVCT"X]"``"
XM%1`I_AX!#RT_TM/2T]\M/?+3WRT]\M/2T]\M/?+3WRT]\M/2T]\M/?(!`,@K
XM/@QQRB`9&/T5/:3:3:3:3:3:3:3:3:3:3:]-9-9-9-9-9-9-9-9-9-9-<]G`
XM)C\(``(5%10`$ZY1UCDG-R%3,U70J='UTC$]$C+0)2P7&R<I*2@;%-@E6P8X
XMY1`+(/X>ZQH24S0B)3'E%T]C$6(A4R%#,4)!,E$B81)S@:#('%P&..40"2C]
XM'ND8%C-AT18S8NMR8S8=$6,V'E@0P"A=!CCE$`LG_AV/%.85%!4R$F+5)B$C
XM44ZQ44%3(28M4F(2-13C%13Q@+@@7A```RHE"OX/'7$1U1,=,5'1%QSQDLLK
XM/'/"6UQL7,G"L"-?$``#*B4+_A#&'2P<G'Q$PTP2R2L<T8+/)2T20=,3'5$1
XMUQ#P#VED96YT:69I97(@0TU-2?`<8V]D:6YG<V-H96UE(%1E6"!M871H(&ET
X886QI8_`,9F]N=&9A8V5B>71E]`#J``#U
X`
Xend
END_OF_FILE
  if test 9072 -ne `wc -c <'utils/fonts/cmmi10.pk.UU'`; then
    echo shar: \"'utils/fonts/cmmi10.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'utils/fonts/cmmi10.pk.UU'
fi
if test -f 'utils/fonts/cmsl10.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/fonts/cmsl10.pk.UU'\"
else
  echo shar: Extracting \"'utils/fonts/cmsl10.pk.UU'\" \(8638 characters\)
  sed "s/^X//" >'utils/fonts/cmsl10.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 utils/fonts/cmsl10.pk
XM]UD11T9T;U!+(#$N,B!O=71P=70`H```<*XP2@`$)JX`!":NP#]!#``"'QP=
XM_QS5'>+<\]OTVEV2%-@237(DUQ--8C36%%U"5-0633\732&$TAA=#2T!I,\;
XM2QQ+'02?'11TQ4E\P#5""U58'1L<_AM-706#M*.DI)2SGTM'3#CTM(2DE)2D
XM=+TL24I*2>)+1^-,1TM(2DA*24E&UH#`0$,+CCL>'![\'-!W&S8D*3H2*2T$
XM<](V/3-?/5)#UA1-84/7$^)-KD3;37$TUA7SUA8]07/3&3TAHM`L*QTC<M9\
XMP#Q$##CF(!X<_AM-736$T$L\3#OTT#I-!(XTTCA-)'32-TTS?B321TTCA-%'
XM]-(X31.4T#I,2DL[2SQ).M7`P#I%"N.0'!L<_AM-J%I(3#XX30&$T1A&%QCT
XM8=-%+31#TKTT4M/B1ATT87%_32%_31&$T"A,*$PX2E394,`N1@IQRAL:'/X;
XM39A92$L^.$P830&$86&/1ATD4M)$/1O212TN-&'1Y4V$V5U-#0#`1$<,CCLA
XM'![\'-!W&S8D*3H2*2T$<](V/3-?/5)#UA1-84/7$^)-KB3;3-/34TU$---%
XM\]-&\])'/06"T$HJ(BLV)1T6T-`A2`P``A\?'/X;32R%E<Y$I,Y4I,`4WD2D
XMSE2DQ*35E8PL4-`6207''0\1'/\;387.1,Y4SE3.5,35C4#`(TH(..45%!W^
XM&WT,72Y$TN5-+E32](-4?U1'1$@U.18[%#T%T,!+2PQQRB`?'/X;30686UI,
XM/$P=%+'22ATTD=-)'42!U48==%'81#UT--9#$4U4(23501-=15341DU$=-)(
XM32])31]*302TM,2UIFQ;,,`B3`H``AH6'/X;31Q=3D34Y4U.1-5+'B5,'U2Q
XM9*)4HU2$+7+06$T.JJTF)AS^&TD!*84!%L$4`07?$4T13?$4P23/$TH23?$T
XMD331-(%$T41Q1,\51A1-\5115-%D,6319"%TP70A9-\701=-%UA-&$A-&#E,
XM*#A,1RE8E27%T$).#``"'Q\<_AM)BH6TMK+!%+'1%:'?$DH<\42!WQ5''?%D
XM8<\81!WQE#'1E2'1I"'!MM\<7?'4T0$#P@$"Q`$!F<&0P$%/#''*(!P>_!S0
XM?5-CT3D\/"H]`X/2-CTS5--$/5,TU3,]8RXDUHX]9!XDU4,]1$/4-4TD8]%'
XM30.3P[.3TC4]9]#`*E`*XY`<&AS^&TU<5TI*.4I.*$L^)TM'2SA*.4DY2$K0
XMT.--CE383974S1#`6%$,<<H@'"7\'-!]4V/1.3P[.CT#@](V/3-4TT0]4S35
XM,SUC+B36CCUD%-8R]-5#/41#U#5&-D8U$Q4W-!43.3(6$CLQ%DTD0W&Y<=4G
XM'5)AUC0M:==]AMI'P$!2"\<>'QT=_AM-335ST4E,2DM+._2TGTM*2SM*/$D]
XM!'30T--'/22#T4A-!)/024OD24Q)1A1*115:-1''-!VE,,`Y4PCCD!<6'OX<
XMIE&"8B)RDW*C8L)>(\)$P5357574G1O+R]&=1=5-;S3B'1-!T24L-#PE2B8B
XM)C<5><`L5`N..QX<'/P;/<)'5D(I22(:21(J21+QM)$AI*$1M*'0XTVN5-KE
XM3:3;74TYV"I5#``"'QL=^AO4I%M'32CC31CE31CE31CB31KSP;.QTY$!$H$!
XM,T(!90$0R#]6#``"'QT=^QO(DVT$=-(H32&4T1M-`;],'$L=!:'1])'2]('3
XM5AU48=5%'61"UD0==2'90AV?01VO7<\]WRU0R&57$''**RD=^QO$M9-;6D=+
XM6RA,2QE+6QE+6AI*$4H:2A%)*E@221Q($E@<]'%$<=#T851AT44611TE0611
XMTT,74QU$,80QU/0AE"'502E!'601I!'6:EV$M=A,/9/0/9/0+:\M$M/`1E@,
XM``(?'QS_&UQ*AX7%D]))+36!U4<=9&'75!V4,ME2';01W%WDWO7=;;$DVA--
XMD477)4UQ9=4834&5TAM-$K7"T$I;9J;#R#M9#``"'QT<^QO)@VT$=-(H71&D
XMT!M;'02AT5D=%8'31QU%4=9%'64QV$(=E!':;;]-P]SD3</<3<77S0#`/%H)
XMQQX9&1S^&VUE6D8[1RM(*E@;21I)&DH977373737773737377721I)&DH92Q
XME**$L82R=,)TI&25;6;`*V$(``(5$A+]$5>34H12<V-B<]+SJ'1#8U-B<U-S
XM3S@S1T-&$3(2-!(Q(V0SP"]B"..0%Q(=_!PFT4T>4]'B/2,T@Q)"9')$@S\Z
XM(^(Z/B$Z,CHC.3,X,T@D(B0F%4C0(6,''',2#Q+]$79S,U)4,F,S8D+.([XC
XMTM*A(X%"<6)1AE#`+V0(XY`7%!W]'-%M-.73/3XCI#."0A-BA%.#4Y-2HTXC
XMHSXCHU\J-3A&)T@D(4E#8L`E90<<<Q(0$OX1=H-"8G)#<R.2(J(3HATA/.(]
XM$M$K$RD4*!8T*5;`(F8$XY`-$AW_',6S(Y)#@S1S4HXCT>([N_/1Y3T>4]$]
XM)+J`P#MG"``"%18<`!+5.T(B*",A$C<E)!<U.N,V.C4\)2T#,M`232'7\M>\
XMR=%RHV'0)2T#/RT24L)QLI)SQZ#`)F@(XY`7%!W_'%;333Y3T^(]0S63$D*$
XM8V]'-N,X->4X-3@V1T*2D-`7:01QR`P*'?\<@O<W($QF1S;E-N4V-T.1T"!J
XM!..0#1`E!!P!`OT]('M\33SE/.4\Y34E-40U0S<C.5G`-6L(<<H6%1W_'%;4
XM34Y3U.(]4TAC9(-BDV&S4<-!T#,=$Q/1C$(\,TLT.S1*-3HU2#<X-E22@M`6
XM;`1QR`P+'?\<5G3E<WY3?E-^4W.$22#0*6T-55@D(1+_$38V9H0A4D%2A6,2
XM8V](2#;C.3DUY3DY-3DY-DA(0I.3D-`>;@CCD!<4$O\1-C6$$D*$8V]'-N,X
XM->4X-3@V1T*2D-`D;P@``A43$OX1AK)3<X)3DS.R,L(N(\;BPR+",K,SDU-S
XM<U*V@,`N<`CCD!<6&@`11C2T$D*D<H2#<Y-SHGXCH^)3HV\Y-S@W1S@Q)"HS
XM3.(]7C/3G0#`+G$(<<@6$AK]$8118D$R0V$3,X,_.3+B.C'B.C,J,SDS.$0G
XM1B0A.$,]+B/1XSR1T!IR!D1&$!`2_Q$V(W83="14,V0R?C/.4\/4FF#0)W,&
XM3Z80#Q+_$68A0F,R@C&1,I$S@36XB(C$(9,O&B(H(C@3(14D$V70'70&..40
XM"QK\&6XAGR@H-T6_,WY3<XXS42\T%",61-@==0CCD!<1$OP196)'0S@^4C@R
XMXS@S\W0S9%)1%%8FR"EV"''*%A,2_!&$<D@U."8X%S<G-QA%&C4:\T&S,=`R
XM'0,1T5T4TCU"U!S8/'<+CCL>&Q+\$8*"<D9&-#@G)3<W%S9&%_-1$U&#02-!
XMDT$R09,Q0C&S(4,AOS$5,1Q&34<]."`1*"`1&1O`+G@(<<H6%A+_$3@X5523
XM8L-1T#0=(R'3,2U$U3USU4U!(](330%3P7.B<X1T5TD@P#AY"''*%A<:`!%(
XM1V2#DX*C@;-RLW'$4=$U'1\T'2,QU#(=0Q'57536/8+8\=CQT30='T,=(R+4
XM35#0)WH''',2$1+_$4U#8U%S4G-1<V%C<5/3WSTU%S86-Q4W%3@5-R0V--3`
XM(``*``(:&1S^&TV(6$A*/CA+&/3!CC37Y4U^5-=-A=/0P,!%`0U56",>'?X<
XMUBWO/=7;;;$4VA)=@378%$UQ5=4675%TU!A=+QI-$;7!T$LM!+'161TT@M-(
XM'45AUD4M9%'74QV4+?("X,!1`@QQRB`<'OP<T'U38]$Y/#LZ/0.#TC8],U33
XM1#U3--4S/6,DUD%#&Q-!0]`X\]`T%#&Q-!3604UC+TU4,]1$/4-4TD8](W/1
XM.3P[.3TC4]9]`,`V`PL<<QT:'?\<U!W"VO/9]-A=AM8176$DU?$TU/%$TQ5=
XM(631\730\83/&5KQM)\<2"Q'2U.5P%`D!`JJK1P<'/X;5Q]'%>,6\;;Q9Q9V
XMEF]I9_%G'2XA;Q46XDXG%=`?!0P``A\?'/X;0!V$I<Y$I,Y4I,Y4I,Y4I,2D
XMU96,+%#`008+CCL>'1S^&UVU715DTS9=(H33&%TAE-(971&DT1KUW/7<7;3=
XM+>'>'>'2&QTAL=,:'3*"U!@=4G'5-AU%7:7;4,`N!PQQRB`;'?H<1;5(B#EI
XM(E1$17-"<Y,C@I,3D:,2V2$ME=GC39Y4V>5-E-I=31K`/P@+CCL>&1S\&XTM
XM)=?B35C10D$Y-$-&-44T-D4S-T5/%'18XG1H=&,C=%0D9%-#5%-C1#.C)!30
XMG6]-=-A=+1?`.@D,<<H@&QSZ&WTM1=GB2U=&4D9%1/145%XT5$1D1$1_-41'
XM]$0TDT0DHS0SPR0CT3&-1]GTV4VEU-&@P$L*"XX['AL=_1S(U#8]`Z.4PW30
XM14TC4]-/---.(DU$)-0S330TTS4])%/2-ST#@]`J+#HK/"HG%2DE$A89%A(6
XM&"43%A@6$XB#^'A`T"\P"``"%1$=_!N%HS-R8F\H)"D_(Y,BH^,3IN2C$Z(C
XMDR\J,BHC*3,I)2<F)B@D*EG0&#$(``(5#1S\&[*3=E(SKB.>4YY3GE.3I$W`
XM-#((``(5$QS^&Y:R4X&#;QH_1(/S6#0Y/232/2\](](](](](M,M,M,H%RD6
XM&A8;%=%-%-)`P#,S"``"%1(=_1N5LD.!<V&#7B1D0W/2/1/2+2+1.VU#T_/2
XMXD,X0O5T)(,SA#&C48-R4Z:`P#,T"``"%1(<_AO3+2+2\]%-`1/!([$CLB.B
XM,Z%#D5.!8W%C<7-B<V&#49-!HSU>2ST3TDJQP#$U"``"%1(=_1MB<VMYB9Y!
XMTQU!-9$20H)C?Q@](]+B0CA"](0D@S&D,:-1@V&"@D.UD,`Z-@@``A41'?P;
XMI:-!@G%B8U)D0G0S<T+1/1+1,U8Q)"5'(S$7,O22+B.C$Y,N(J,BDS."4G-2
XM<G)"M8#`+S<(``(5$AW[&S'3_3+2(L$QP4&Q0;'4'3'3'3'3+3'3\M(M+ST4
XMT?/1XDT.)-(M`-`V.`@``A42'?T;E;)2@8)B@EXBHO,Y)$<F5"=B*7Q[B"-F
XM)60H0RHS*R+B+"(L$RLD*A4H)S4J:,`\.0@``A41'?P;A:)1@F)B@D.",Y(S
XMDR*CXQ.C$Y03DR.$,H1"81-142-E(]$]$M$T*"1&-$8E-B87*!0Z6L!/)`@`
XM`A43(?T>SQTFLC$B@4%185%146%A,F%#\R830C44,S4;-!M2&YNJJYP17!,\
XM%"46%#,T%2-$%2,U%2,7%107%"46%!85%!@C$BMM/QO`5R8,<<H@'1_]'</<
XM(AVB,=GR0=CS0=@S'9)!V2,=GS(=HQ&)@[2SPK2RL1.QL2.AL32!LD.!HE-Q
XMHV-1LG-!LX,QLX,APY2A(Y.A,Z.10W(3<6)20T*5A7#0(C\'CCL4#QWZ'%=B
XM8D&2(I?X:3L[.SLL+1T=+?'>(06?.TPKP"D^!XX[%!`=_Q2BT/30(%#C'1+1
XM'1+1'1+0+#P\/0.#(X>3(J(CD4)C9V#0$A`$<<@,"1+_$3948^537E-39"G0
XM&Q$$XY`-#QH$$8>TP^6SOE.^4T)31$-$,V(SA8#`.!D(``,5%1W_',71-"LG
XM*3<^)S@W-S<X*#<I-3=B3#4K-BDW.#@HXS@VXSDV.#<R)#8R0C<S(C5D1\`Y
XM&@N..QX;$OT15W5C4D)"5%(2<D-E@C)TDOPZ)]=$0](U/2)ST3<]`X/0.$H1
XM.$D2-R$W%#0S-1=G9<`Z&PQQRB`>$OX1A9624E)"8H(B<D.&@B.DDB*SHA.S
XMHA.](3L\XCL]$J31.5H2.#$I%"<R-Q8T)349667`11P(``(5%!K^%=4=4M4=
XM4;81HE.#<V-Q$T-Q,D*!,C-Q0R-A4R-18Q-A4R-18R-!<S(Q@D(Q<T,1<V-S
XM@U*A%K'5'5+5'6#`7!T.<<HE)1S_&]':U1%834$DH],B2QU!-+'3\42QTO%$
XMP='Q5&'6%D8=8612U19%+6U=4712U1=&'4&$8=081A4:&$86&AA-`9&4P9*4
XMP9&DLH*DL9&DLG24E$E-9<!F'A`XYBHF'OL<T&`0-M:$=:1SH\-CL]`6/#T!
XM5,/0%$T#T!0]`]$330.103/1.1=-$Y%TT3@G31-S9-'0=-$X)^)-$Y%TT3D4
XM$DT#TA,]`](3],/1%3P]`E2DT!=)/#@X2EHUUM!ML-!?'PQQRB`<(/P=`<$!
XM!U'#8R*CHA&CPJ/3@]$38]$C5,(S0]%#-,%3,\%C)+%T%*&$%)*(H804D904
XM@:04<;048K,D8;0D4<0S0=-#,=-3(=1ETW33D\.DHK$S4\%GT@'`H!HA!''(
XM#`D>_!UB;T4UXD7C-N,FXR?QV/-48F"@&3P$<<@,"![]%%)?12TN,6XR7B-2
XM7C-.-$-0L%$C#558(Q\E_1S&)RQS8\?R<L<V/')RQS8\?R<L<V/')RQS8\<G
XM*=`M+[)RQS8\?B)RQS8\<G*](M"2<L<V/'\G+'-CQR<L<V/'\G+'-CQ_)RQ0
XMP&\E#558(QLA^AY4TR0C'1,R4<,R8X0S<1@3,H&3,X&#0X%S4X%R8X%C8H%C
XM<H%3@G%3DV%#LE%2T!05/1139-`U)!LU)1LE-ADU)Q@U-Q<V*!8V.!8G.!4W
XM.!0X.!,Y-Q,Z-Q(\)A,M`E$ST2,4+310X!$G!''(#`8,^1P8]\T$$((01B#0
XM*"@&..40#BK\'M'!LK*RP<*RORORORL[\K\[XBOG/.,M'?+2T=+1`0%PT"LI
XM!CCE$`XJ`!YQ`0$!`=+1TM'>(L/GPN*S^ROSORL[*SLK.RORLK*RLK*QT,`H
XM*@@``A41$OL>GB+2&245(C030S(B-XOTHQ$2="$C0S(T$E)1DM(=+RG`("L,
XM<<H@&QS\%]+B+;/;Y"VSV^(L`IP]OD+;/;XRVSVRTN`0+`1QR`P%#/T#.]YP
XMA$(A$0#@"BX$<<@,!`3\`W?VP$<O"``"%1<I`![8+7/7+7/7+7/7+7/7+7/7
XM+7/7+7/7+7/7+7/7+7/6/7+7/7+7/7+7/7+7/7+7/7+7/7+7/7+7/7+7/6/7
XM+8"0$#H$<<@,!Q+\$4)$\SWO,T0D@!<[!''(#`@:_1%25/0]HT]%-_%O%O%A
XM87#`$#T,<<H@'`S]#RW"W@T]XMP@P%)`#''*(!P=_!S0?5-RT2P<'2&AU!@=
XM86&$@5%R0G%!8F%Q,6*#03%3@U'B$5.34N-3DU$18I-!(6-T03%B81)!07)!
XM(R)!A41QWQWQWQTSDI;0JM`:6P1QR`P.*?X>?W]ROE*^4KY2OE*^4KY"QV=P
XMT!I=!''(#`XI`AY_?\+ELKY2OE*^4KY2OD)W9W#@$6`$<<@,!@SZ'`0A""$$
XM$+OGC.`.$@@``A4&"/<<8\<.&'#!X`\3"``"%0@'\QP.'APX<,"`Z`T4"``"
XM%0H$]QG`V&/P<-@2%0@``A4,!_<<&B^1$G$C0SA54,@)%@@``A4.`?D8T>`/
XM%PSP-B('!^\='(4,&"B.`-`0&`<<<Q(+"/W^4X23GS<R@AK0#2`$<<@,"@3]
XM#W-24U*`X!!>"``"%0H&]QP$`X&PQD"@$.`*7P1QR`P$!/@<;_;0%'T(``(5
XM#0?W'#\T,C0S)2/R4C)20.`/?@@``A4.!/D;'@3^-C^@..`.?P@``A4+!/<<
XM8-X_Q[!@P#$+"558&!T=_QS09%PU$3(Y-D0X-E-'-T4HXC@]'B.#O9OS@]'E
XM.#T>4X/1.#TCA+DY@,`K#`CCD!<5'?\<T&T#4:-C@V1S='."CSU.(]'5<W1S
XM@VY3@VY3@V.#<X0Y.!#0)@T(XY`7%AW_'-FS1)-4DV2.,X-^(X-`%(\X-^4X
XM-^4X-S@X1T22DK`[#@U56",A'?\<P75L$V$C4:-U8X-U9'.$='.$@H\Y/%XC
XMD\+2<Y-T<Y.#;E.3@VY3DX-CDX-TA'0Y.2D0T#8/#558(R(=_QS76;-A(T23
XM=523=62#A(..(Y.#?B.3@T`@CSDX-^4Y.#?E.3@W.3@X2$=$DY*2X!TB"``"
XM%0X,_!P8&/#WQ\T-!`00$(""`A`00$8&("#`"BT%558.#`+_"1V1X!U<"``"
XM%0X,]QP$!"`A`0@(("$!!`00$+B[X^>'C`S("7L(``(5%`'^"]>X"7P0``,J
XM*0'^"]WP#VED96YT:69I97(@0TU33/`58V]D:6YG<V-H96UE(%1E6"!T97AT
X7\`QF;VYT9F%C96)Y=&7T`.H``/7V]O85
X`
Xend
END_OF_FILE
  if test 8638 -ne `wc -c <'utils/fonts/cmsl10.pk.UU'`; then
    echo shar: \"'utils/fonts/cmsl10.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'utils/fonts/cmsl10.pk.UU'
fi
if test -f 'utils/fonts/cmssi10.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/fonts/cmssi10.pk.UU'\"
else
  echo shar: Extracting \"'utils/fonts/cmssi10.pk.UU'\" \(7911 characters\)
  sed "s/^X//" >'utils/fonts/cmssi10.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 utils/fonts/cmssi10.pk
XM]UD11T9T;U!+(#$N,B!O=71P=70`H```Q56-Z0`$)JX`!":NP$!!"JJN'!D=
XM_QS4/8]=8A/5\B/4(SU"--(D31-$T25-`U30)DPV3"A*.$GSE(_4<[5BT$4]
XM!$\]%#/20RTT(].-5,`Y0@JJKAP9'?P<;1O3E(5TI62T;B3$1-`U3$5+1DE7
XMU'TYU(1H=*54Q%XTT$--$T301$Q%2T9(9M2-*L`J0PHXYAL7'_H=T(S0E&1T
XMH7353536/635]-7B35Z4USUTUST!9*-U9*S0><`U1`N./1X:'?P<;1S3I(6$
XMM'],1O301$T4XT32/C--)/)-)#]-%$301$T35-!%3$9*2$A8TZT<P!Q%"8X[
XM&1@=_!QOU636Y$UN1-;]1_36Y$UN1-;]5L`<1@D<=1@7'?P<;]1DU>1-7D35
XM_3?TU>1-7D35]-;`-4<*JJT<&!_Z'=!]'0I&5THG3!9-9-<]=-;TUN)-;B37
XM28-(A.--`T3#8\-DLW.S=*.%5;S1>L`?2`M56AT:'?P<;B3$Y%3$7D3$7]=O
XM3$7D3$7D3$7TQ&#0%DD$<<H,"AW\'&XDY%1>1%XT7D1>1%]&P!]*!XX[%!,>
XM_AS2XDY-%-'D31XTT>1-'B1A=')5;(JVH,!+2PL<=AT<'?P<9-%&30.$PX2T
XME*2DE+2$Q'3$<]%&/21$TT--1"730GTD$Q32<ET61-!E305EQ(3$A;24I*2D
XMI92TE+6$Q'301TT48+`63`BJK18/'?P<;B2N1*Y$KC2N1*Y$K2#`:4T.``4D
XM(1W\'&]M)F;1=3$]$11O,3T"%&,4LB1C%*,D4R2B)&,DDR1C,Y(T8S.#-&,S
XM@D130W,T8T1B1&-$4T1C1%)44U1#1&-40E1C8S-48V,R9&-C(G13<R)D;S<Q
XM)T;S=813DX1CUT;0.4X+55H=&AW\'&XFLU,3HVXS(Y->(S1S8T-S8T1C7B-4
XM4V-C4UXC=#-O.#,U.3(V\Y038Z,38Z=?.V;`/T\+QQX?&A_['=!]2]#1IE:%
XME66T5<5$T4--)"330DU#\4U3%-2./5C]1!]--"320TT51,55I725AE:M'1O4
XM;0#`*U`*..8;&1W\'&T;TY2%?TM&XDQ$30-4Q%3#9+1DI&25?4C2I-?D37Y$
XMU_38P$-1"\<>'QHC^QW0?4O0T:96A95EM%7%1-%#323R333B%-2./5C]1!]-
XM-"1D5#1S141D-%1Y=&B&5JT='0TF%-E=GUV54-`U4@I56!L9'?P<;<`2E(5T
XMM&3#;B3$1--4Q%2T9*1TAF`3@!*=Q&._1TKB2$CB2D?TM%3$5-1`P#)3"..0
XM%Q4?_1VWRY-D8Y)RL6/4XCU/3534;3G0K*T)TUU%U/35\]3S,L-"PE.C9&.;
XMQZ#(&E0*XY`<&1WY'`);37Y$U^1-?C37Y$U^1-?TT]`F50L`!1T8'OH<3B33
XMY#33/D33/C33/C333TPU]+-SHX2#I%3*`2;0R#Y6"JJN'!D=^1STU7U#%=,C
XM32,_31-/30-4PW]*./23E(.D@L1CST4]!$/11"TD,],S+4,CU#(M4Q+6;678
XM33#(:E</''8G)!WY'/3%Q\6S%+(3LQ2Q(Z,DHB.C)*(CDS22,Y,TDC.21()#
XM@T2"0X)D8E-S9&)3<G134V-T4F-BA$-C4X1"<U*4,W-#E#*#0J0R@S.O0BDS
XM*_02HR+#(;,AT2$L(2T?3032/1/1P$A8"JJN'!T=_QQTTC==`Y3$E:2TE,2$
XMT49-)%340TUC)-=!/9;:7</<7:;9C70CUD--1%/31DTC=-$Y3#I+/$D]!731
XM1DTE1-1$R#E9"JJN'!L=^1Q-5!730ETS1=$U70-ULX6DE)2E@\1ST%4])$/3
XM4CU4(]5!/7;879XTVCVN--H]KTU0P#-:"<<>&1H=_AQ_UMA-A-A-A===A-A-
XMA-A=====A-A-A-A===A-A-A-A===A-A-A-A=?]=@T")A![!=%!`2_1%VB5Q#
XM8T&3T\.F6STE8R-S+S@R15(!`\53,]`K8@A$1A41'?T<;B/>0]XC`0,U8QA-
XM153S.#XR.3(X,CDR.$)&0T5$Q#&%,U;0&6,''',2#Q+\$79Y6S13([\[Y3PY
XM$D5#Q)=FP"UD"$1&%1,=_!S3XCY-(]+B.%,VD3705513=$.30X-.,Y-/.#4W
XM141FD3:!.4,VT!UE!QQS$@X2_!%EB$LS1"-R$X(0+>+#LY$45"PY9E#0'68$
XMXY`-$1W\'*:8B732`0XCWB.ON>,]Y#WD/?,!`,`T9P@``A46&P`1I32="-%S
XM0[-4HV.>(V.S0\G)T"%-'SUKO0C28Y13LT2S0\-$I%1U?1F]!Z#0)F@(1$85
XM$1W]'&XCWD/>(P$#-6,80!`U5#1S,X,D<SXS@RY#@R\X,Y`5:0/2?@H)'?T<
XM7B1$VO->,UY#7D-?-M`=:@1$1@L1)00<WB3$"&\]XSWD/>0]XSWS<D1YB*:@
XMT#!K!]*`%!$=_1QN(]Y#WB,!`V1#5$-44T1C-',D<R2(F843A"1D0V\U138U
XM-D,X,SA"T!9L`])^"@D=_1QN(^137D->,UY#7D-?-M`I;0RV#B(>$OT10S9F
XM8QDY0QL;-69D-(2#,Y.3)(2#/C.3DRY#DY,O.3DSP!]N"$1&%1$2_1%#-6,8
XM31-50T<S.#)',^,X,N0X,O.#,-`@;P@``A42$OT1AJE\5&0TA!2C$[;BQOLQ
XM.C)(0T54UJIHP"QP"$1&%1,:_Q%C-8,8;09453=%.#XT.30X-#DT.$1&145&
XMQC&',UCSTN0](]/0*W$(1$85$1K\$64S5R-,1$4T9"1T(X,N,Y,O.#,W0T54
XMD32!-E,P$//>0]-@T!AR!7=Z#@T2_1%#,T,5,Q5&=82$GC.>0Y\ZT!QS!B(C
XM$`\2_A%G:SLT8CXCQYB(M<\R&3(V,\2G9M`9=`7''0\,&/L73B..(V^SXSCD
XM..(Y,R3X56#`'74(1$85$1+\$3\X/C(X,N0X,O.#,W0S93T3D35C--@D=@=@
XMN!,1$OP12C\3DR\X,S<T-R8U-O-#?S,X,CHB*R$[(2Q<2NA#=PKN\AP:$OP1
XMX!\!W`?`9P-P.<#<#'!W!QP9P8<.<.'#G#!QQQP<<<8'.'.!SAS`<P<P'<'8
XM`V!V`-@-`#P#P`\`X`#`+7@'8+@3%1+_$3244X1S9(-4HS/0,3T6TTU#U4TR
XM$M(B/0)#LT.C8X-S<Y-3I$#`,7D'8+@3%1H`$5.C]3DV\X.#8Y\U.O-#PC/0
XM(RT2(]'R(M,1+4\]4M7RU2U3T'T6TETPP")Z!O2@$A(2_Q%?T$T-$]$]$]$]
XM$]$]$]$]$]$]$]$]'1/]%,`;``BJK185'?P<;])DT^1-/D33XTT^1-/D33]-
XM0,!%`0U56",>'?X<UDW%W&VB%-DQ39(DV"1-8T36)4U35-0V73*$TCA-$Y31
XM*EPZ6SQ++02CT%@]%7\]-&/45#U50]9#WB\"X,!!`@QQRB`;'_L=T'U;T=*U
XM9H6D=;5DT$5-)#333R343Q3504/0*.(]`XUH_50?340DTT--)%3055M765AF
XM:M+1O5?0P#T#"<<@&18=_QS2]-1=01/3\A/2\B30(TPS3"1+-$LE2C5*)DDV
XM22=7.$<I1CE&*D4Z12M$.T0L0SQ"\]"-)(`5!`JJK1P='?X<;BG@PYB2^8#]
XMGE^>8,`>!0M56AT:'?P<;]=DQ.14Q%Y$Q%XTQ%Y$Q%Y$Q%],1L`M!@N..QX?
XM'?X<;]SV7>]=[UWO7>]=[UWEW4W4W4WCWCWCWCWDW4W4W4W=MMMMQL`O!PQQ
XMRB`;'OD=595I:#I9)$0S1!-C(V:"(G:"$W/[(2V5V>)-E=GC39Y$V>1-GTTP
XMP#P("XX['AD=^QS1XDUTUHT="M.&*F1$-414121D5/%'18XG1H=%049&049%
XM0T5$4U1#56*HTZT-)]?TU_30P$$)#''*(!L=^1S0XDIF1K9%T%1'%E1%1&1$
XM5%1%7B141&14-&XD5$1D5#1T1$1U-#24-"65)!6F&<T=&]5]GTV?33#`/0H+
XMCCL>'1[^'=*-70T=/&9J6EA-!6323U333C1-1/1--%321DTC@]%(3$E,.SL\
XM.DQ)/1.#TO-ST_-CKZ6DT"TP"``"%1(=_!N5N8MD1&-C4X/S.3,J/R.C(Y,N
XM,Z,>,Z,O.3/S@T1C9#1[B+6@T!HQ"``"%0X<_!O1LX5H8C._.N0ZXSKD.N0U
XM_1#`-#((``(5%!S^&Z;0F35()S<H13D_4J-1L]0]--,]--,],],],],])-)-
XM)-(],],],])-+]-`P#,S"``"%1,=_1NENH1$8W-3A$*44932/232/2306HMM
XM!]----,]/B310_&T,I12=&-4BK:0P#$T"``"%1,;_1K07131$3T"$\\B.R([
XM,CHS.4,Y-#@T.#4W13<V-C8V-S5'-?U;Y#TO-\`K-0@``A44'/T:;1;0<]/C
XM/3\]0R2[G'8T?T9&-TT^--+T4912DV-S@T2IQK#`-38(``(5$AW\&[6YA$&#
XMT3T3T3TBTCTB1',H701E0U<S2#,Y,DDRXSHR\Y,S@U*"8V-C1(C%D,`J-P@`
XM`A42&_H:+3'3TCT3T3T3T4T$T3T3T4T3T4T/30]-#TT.)-#B30]-$-`Q.`@`
XM`A44'?T;ILJ$5&\X-?.C\SHT2#8W1D5(K&RI-4<W-C@UXCHSXCHU.#8W.#1)
XMK&K`.#D(``(5$QW]&Z7(I$*#8V."8I)3DT*CXC.C,Y,SHS2$0X1#=41&:1-H
XM(W4STSTO/2/2-Q<W-3F<6]`Z)`@``A44(?T>SR`2>ZDR(D8R)18S)17B-"KB
XM0RQ1+)R<G8TA6_(TOB)#KR0T)2,U-"(W0B$YK&`2\L#`428,(B4?&A_]'=!-
XMAM:-0S/4)#T_-#TR4],D/3-#TS,]0R/5?6;76R=<)EPF>R11.B1#.24T2"0V
XM-R4V124W1"8X0B<Y,2@Y6CE'(46%([*E9V/0(3\'CCL4#QWY'$=K/2-T$:/\
XM.SM*25E+.SL\+.,L(%D[\\#`(#X'CCL4#QW_%*XC!)XBSB+"P[.TI*2DOB.T
XMD2-E'1*U==`2$`/2?@H'$OT13SXS,^0SY#/S0-`9$01$1@L/&@01SSX[.^0[
XMY#OC._-A1%EHAH#0.!D'L%X4$QW]'*:YFW148W/U.#4W-3@U-S8U1S)H,E@R
XM=S5'-D8W-3A$XSDS\Y-#@U-T4S=3-V,F@-`P&@N..QX;$OT1=F9Y.4P;,V=3
XM,95RU(+`$8`50!DMU6/3=,.$PX61%&=4$!PJ.E=V4,`P&PQQRB`=$OT1=H9Y
XM65L[-%044R.'<A.E@A.M7[U;//.DPY7$=Y$D5!14+"T#E:=99<`]'`@``A46
XM&_\5UCU4U$U3R;N<E%5T5U13(U-4(T-4,T-30T-#4T,S4U,D4U,44V=4=46-
XM";JL/5/535/7'7#`11T-QR`D)AW_'-77U-C3,TWS)-\S3>\T3=-4W31-TU3<
XM\V3;-TVR?2T#?2SSA-G]+9.4V/.DUSI-@K37.TUO/$U3S38]#3:P0AX/CCTH
XM)Q_\'<%]+0G2A6;(64R%I,A+3'3`3&3!3%],%,7B3"3$],+%3TPDQ>1,%,9;
XM3(2TR%I,E87)9FRM*]#!?-#`6!\,<<H@&R/[']L=TM%S/-&].E9H65=9=DF%
XM2C)#2C-"2D-"2C1!2C5!239!2$:)-X@XATB&288Y044Z041)0D0Z0D,Z0T(Z
XM18I%>5=96&9IT[T<,WT3W!VPH!HA!1QS#0D=^QQN(^-3;R;S;B)C;C)C8M@U
XM\V"@&CP%'',-"1W]%&XCU^(F-N(F\VXB;B-B;C-38+!3(PU56",@)?T<Q_)R
XMR#8\@G+(-CR"<L@V/()RR#8\CR<L@V/()RK0/2P"<L@V/(\G+(-CR/)RR#8[
XMTCT*\G+(-CR"<L@V/()RR#8\@G+(-CR.(G+&P&4E#558(QLA^1Y4TB5M$DC#
XM,S2C,U.30U.#0V."4V-S4V-C8V-3<U-3@U-2DT-3DS1#J4/'0]%&)DT35L-8
XMHU,SHE-$@T-C<U-C8V-C4V-C8G-C4W-C0X-30Y-3,[,S0LA#T&4M)&#@#"<$
XM<<@,!`CW''=V9,C`)B@&..40$"K]'M`\/#P\/#SSP\\\\\XCSB/.4\YCT>,]
XM'ST?/1/1.,`E*08XY1`0*@`>@]$]$]'ST>,]'I/DP\XCSSSSSSSSP\/#P\/#
XMP]#`)RH(``(5$1+Z'I\]$M$X,S,R0C)"42%5J6IXI5$A4E(B43,S..(]$I#`
XM(RL,<<H@&QS\%]/RVSV^,ML]OC+;.P*=`ML]OC+;/;XRVSVRTN`,+`1QR`P$
XM"/P"?N;,B-`*+@1QR`P$`_P"%O'`1B\(``(5&"D`'MGRV#V"V#V"V#USV"V#
XMV"V#V"V#USV"V#V"V#V"V#USV"V#V"V#V"V#USV"V#V"V#V"V#USV"V#V"V#
XMV"V0@`XZ!''(#`<2_!%/,SW3/S2`$CL$<<@,!Q?\$4\S/=,_-23R7Q;`$#T,
XM<<H@'0S]#SW#W@V]X]PPP$5`"JJM'!@=^QS0?2K-"69'639&E$6S1<,U1%(U
XM1D%%-T$U.$$U.#'B-3DQ\U.#(U-T(U1C,V-$1%IC:'1EI-A85]*M#1>0T"1;
XM!)]+#!`I_QZ.*(/2WC/2WB/?+>(]+>,]+>,]+>(]+>,]+>*(T"-=!)]+#!`I
XM`AZ.*/T]+>,]+>,]+>(]+>,]+>,]+>(]+>,WXHC@#&`$<<@,!`CW'!(F3N[8
XM#A((``(5"`?W'#8V\V-C8]`0$P@``A4*!_,<<V-C5%-C8W#8$Q0(``(5#@?W
XM&CAF0C0U,C<A.4HHV!,5"``"%0X(]QSSAG,45!1$.EAU8+@)%@@``A4.`_@9
XMWM`1%PO,XQ\*!_$<-C@3-D<S&#4PX`P8!QQS$@8%_/P<XYS@T`X@`])^"@L%
XM_@^"9B8U8I#0%%X(``(5#@?X''*TDA-C,E-#,V,3@]`+7P1QR`P%!/<<&.(0
XMT!1]"``"%0X']QQ#0_,T,S0S-#/S0T#0$GX(``(5#P7X&S13)C0=$T8C5##8
XM#'\(``(5#`3V'/1(\T'0*0L)55@8'!W\'*96F#B)*71TTI(!#B.#WB.#K[1Y
XMXS@]Y#@]Y#@]\X,!`,`F#`B3ZQ85'OP=U#I3.6(Y?0/5+5XCU.(]'\,VXS@V
XMY#@VY#@V\X-PT"<-")/K%A4=_!R5,Y8SAS-S<X*#?B.#;B.#/\,VXS@VY#@V
XMY#@V\X-PL#(.#06S(B$>_!W1.U9$.753.81L(Y/&*BQN(Y/%XCD\+[5T-N,Y
XM.#;D.3@VY#DX-O.3@W#0,P\-!;,B(1W\'*5D0Y=50XA&0W.3<X*B@WXCDX-N
XM(Y.#/[5T-N,Y.#;D.3@VY#DX-O.3@W#0%"((``(5#`CZ'!XC4_$F(A<2)B(7
XM$\@)+0555@X+`OX)V=`47`@``A4,"/,<,7'R%Q(F(A<2XC4QL`M["``"%14#
XM_@P=SQ"`"WP0``,J*@/^#!V?$/`0:61E;G1I9FEE<B!#35-32?`58V]D:6YG
XC<V-H96UE(%1E6"!T97AT\`QF;VYT9F%C96)Y=&7T`.H``/53
X`
Xend
END_OF_FILE
  if test 7911 -ne `wc -c <'utils/fonts/cmssi10.pk.UU'`; then
    echo shar: \"'utils/fonts/cmssi10.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'utils/fonts/cmssi10.pk.UU'
fi
if test -f 'utils/pk2sfp.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/pk2sfp.c'\"
else
  echo shar: Extracting \"'utils/pk2sfp.c'\" \(8075 characters\)
  sed "s/^X//" >'utils/pk2sfp.c' <<'END_OF_FILE'
X/*
X	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X		All Rights Reserved
X
X    See the LICENSE file for a full description of restrictions under which
X    this software is provided.
X
X    Function:		Generates SFP's from PK's.
X */
X
X#ifndef	lint
Xstatic char SCCSID[] =
X    "@(#)pk2sfp.c 2.4 Copyright 91/02/20 09:09:52 Chris Lewis";
X#endif
X
X#include "defs.h"
X#include "pk.h"
X
X#define	MAXMAP 256
X
Xstruct fontmap {
X    short from;
X    short to;
X} fontmap[MAXMAP], *flast = fontmap, *fp;
X
Xchar emittedyet[256];
X
X#define	NOTSET	32767
X
Xint symset = NOTSET;
Xint style = NOTSET;
Xint strokeweight = NOTSET;
Xint typeface = NOTSET;
Xint fontid = NOTSET;
Xint verbose = 0;
Xint merge = 0;
Xint symbol = 0;
Xint partial = 0;
Xint permanent = 0;
X
Xchar *progname;
X
X#ifdef	PARTIAL
Xextern struct enctab encNormal[], encSymbol[];
X
Xneedchar(font, character)
Xint font;
Xlong character; {
X    register struct enctab *tab;
X    register char *p;
X
X    if (!partial)
X	return(1);
X
X    if (symbol)
X	tab = encSymbol;
X    else
X	tab = encNormal;
X
X    for(; tab->e_name; tab++) {
X	for (p = tab->e_seq; *p; p++)
X	    if (((*p) & 0xff) == character)
X		return(1);
X    }
X
X    return(0);
X}
X#else
Xneedchar(font, character)
Xint font;
Xlong character; {
X    return(1);
X}
X#endif
X
Xmain(argc, argv)
Xint argc;
Xchar **argv; {
X    char buf[512];
X    extern int optind;
X    long totalbytes = 0, numbytes;
X    int totalcodes = 0, numcodes;
X
X    extern char *optarg;
X    int i;
X    int c;
X
X    progname = argv[0];
X
X    while((c = getopt(argc, argv, "D:s:t:w:f:i:vmSpP")) != EOF) {
X	switch(c) {
X	    case 'D':
X#ifdef	DEBUG
X		setdebug(optarg, "diagnostics");
X		break;
X#else
X		fprintf(stderr, "%s: DEBUG disabled, recompile\n", progname);
X		exit(1);
X#endif
X	    case 'P':
X		permanent = 1;
X		break;
X	    case 'S':
X		symbol = 1;
X		break;
X	    case 'p':
X		partial = 1;
X		break;
X	    case 's':
X		symset = ((optarg[0] - '0') << 5) + optarg[1] - 64;
X		break;
X	    case 't':
X		style = atoi(optarg);
X		break;
X	    case 'w':
X		strokeweight = atoi(optarg);
X		break;
X	    case 'f':
X		typeface = atoi(optarg);
X		break;
X	    case 'i':
X		fontid = atoi(optarg);
X		break;
X	    case 'v':
X		verbose = 1;
X		break;
X	    case 'm':
X		merge = 1;
X		break;
X
X	    default:
X		fprintf(stderr, "usage: pk2sfp [-Dopts] [<options>] file...\n");
X		fprintf(stderr, "or   : pk2sfp -m [-Dopts] [<options>]");
X		fprintf(stderr, " map file map file ....\n");
X
X		fprintf(stderr, "\t-sna: symset, eg: -s8U\n");
X		fprintf(stderr, "\t-t0|1: style: 0 upright, 1 italic\n");
X		fprintf(stderr, "\t-wn: stroke weight (-7..7)\n");
X		fprintf(stderr, "\t-fn: typeface, eg: 5 is Times Roman\n");
X		fprintf(stderr, "\t-in: prepend fontid n, auto increments\n");
X		fprintf(stderr, "\t-v: verbose - emit actions to stderr\n");
X		fprintf(stderr, "\t-p: only download chars psroff needs\n");
X		fprintf(stderr, "\t-S: font is used for psroff Symbol font\n");
X		fprintf(stderr, "\t-P: mark font as permanent (needs -in)\n");
X		exit(1);
X	}
X    }
X    if (merge)
X	fprintf(stderr, "MERGING fonts\n");
X
X    numbytes = 0;
X
X    for(;argv[optind];optind++) {
X	register struct pkp *pk;
X	register struct pkc *pc;
X
X	numcodes = 0;
X	numbytes = 0;
X
X	strcpy(buf, argv[optind]);
X
X	if (merge && readmerge(buf))
X	    continue;
X
X	/* Read the PK file in-core */
X	pk = pk_read(buf);
X
X	/* Overrides */
X	if (symset != NOTSET)
X	    pk->pkp_symset = symset;
X	if (style != NOTSET)
X	    pk->pkp_style = style;
X	if (strokeweight != NOTSET)
X	    pk->pkp_sw = strokeweight;
X	if (typeface != NOTSET)
X	    pk->pkp_typeface = typeface;
X
X	if (verbose)
X	    if (merge > 1)
X		fprintf(stderr, "Appending %s: ", buf);
X	    else
X		fprintf(stderr, "Emitting %s: ", buf);
X
X	/* you want a font ID select? */
X	if (merge <= 1 && fontid != NOTSET) {
X	    if (verbose)
X		fprintf(stderr, "fontid %d\n", fontid);
X	    printf("\033*c%dD", fontid);
X	} else
X	    if (verbose)
X		fprintf(stderr, "no fontid\n");
X
X	if (merge <= 1 && verbose) {
X	    fprintf(stderr, "\tsymset: %d%c\n", pk->pkp_symset >> 5,
X		(pk->pkp_symset & 0x1f) + 64);
X	    fprintf(stderr, "\ttype: %s\n", pk->pkp_style?"italic":"upright");
X	    fprintf(stderr, "\tstroke weight: %d\n", pk->pkp_sw);
X	    fprintf(stderr, "\ttypeface: %d\n", pk->pkp_typeface);
X	}
X
X	if (merge <= 1) {
X	    /* Emit the SFP header */
X	    epk_desc(pk, stdout);
X	    numbytes += 2048;
X	    numcodes = 0;
X	    if (merge == 1)
X		merge++;
X	}
X
X	/* Emit each character */
X	for (i = 0; i < pk->pkp_num; i++) {
X	    pc = pk->pkp_list[i];
X	    if (merge) {
X		for (fp = fontmap; fp < flast; fp++)
X		    if (pc->pkc_char == fp->from) {
X			pc->pkc_char = fp->to;
X			if (emittedyet[(fp->to)&0xff]) {
X			    if (verbose)
X				fprintf(stderr,
X				"Skipping %02x (%c) as %02x (%c) from %s\n",
X				fp->from, pchr(fp->from),
X				fp->to, pchr(fp->to), buf);
X			    break;
X			}
X			if (verbose)
X			    fprintf(stderr,
X				"Emitting %02x (%c) as %02x (%c) from %s\n",
X				fp->from, pchr(fp->from),
X				fp->to, pchr(fp->to), buf);
X			emittedyet[(fp->to)&0xff] = 1;
X			fp->to = 0x00;
X			numbytes += epkc_desc(pc, stdout);
X			numcodes++;
X			break;
X		    }
X	    } else {
X		DBP((D_FONT,"Downloading char %02x (%c)\n", pc->pkc_char,
X		    pchr(pc->pkc_char)));
X		numbytes += epkc_desc(pc, stdout);
X		numcodes++;
X	    }
X	}
X				/* added to make fonts permanent */
X				/* ron@mlfarm 6.1.90 */
X
X	if (fontid != NOTSET && permanent)
X	    printf("\033*c%dd5F", fontid);
X
X	if (fontid != NOTSET)
X	    fontid++;
X
X	/* Clobber in-core PK */
X	pk_destroy(pk);
X
X	totalbytes += numbytes;
X	totalcodes += numcodes;
X	if (verbose)
X	    fprintf(stderr, "%s: %d bytes %d codes\n", buf, numbytes, numcodes);
X
X    }
X    if (merge)
X	checkmissing((char *) NULL);
X    if (verbose)
X	fprintf(stderr, "total: %d bytes %d codes\n", totalbytes, totalcodes);
X    exit(0);
X}
X
X/*	similar to strtol */
Xshort
Xcvt(p)
Xregister char *p; {
X    register short ret = 0;
X    int base = 10;
X
X    if (!isdigit(*p) && !*(p+1))
X	return(*p);
X
X    if (*p == '0')
X	if (*(p+1) == 'x' || *(p+1) == 'X') {
X	    base = 16;
X	    p += 2;
X	} else
X	    base = 8;
X    while(*p)
X	ret = ret * base + ccvt(*p++);
X    return(ret);
X}
X
Xccvt(c)
Xint c; {
X    if (isdigit(c))
X	return(c - '0');
X    else if (isupper(c))
X	return(c - 'A' + 10);
X    else if (islower(c))
X	return(c - 'a' + 10);
X    else {
X	fprintf(stderr, "%s: bad digit %c in map file\n", progname, c);
X	exit(1);
X    }
X}
Xpchr(x)
Xint x; {
X    if (isascii(x) && isprint(x))
X	return(x);
X    else
X	return('?');
X}
X
X/*	Reads merge descriptor.  Returns non-zero if not a merge */
Xreadmerge(name)
Xchar *name; {
X    char from[20], to[20];
X    FILE *f = fopen(name, "r");
X    char buffer[512];
X    register char *p;
X    if (!f) {
X	fprintf(stderr, "%s: Can't open %s\n", progname, name);
X	exit(1);
X    }
X    if (!fgets(buffer, sizeof(buffer), f)) {
X	fprintf(stderr, "%s: Nothing in this file? (%s)\n", progname, name);
X	fclose(f);
X	return(0);
X    }
X    if (buffer[0] == '\033' || (buffer[0] & 0xff) == PK_pre) {
X	fclose(f);
X	return(0);
X    }
X    checkmissing(name);
X    flast = fontmap;
X    do {
X	for(p = buffer; *p && isspace(*p); p++);
X	if (!*p || *p == '\n' || *p == '#')
X	    continue;
X	switch(sscanf(p, "%s %s", from, to)) {
X	    case 0:
X		continue;
X	    case 1:
X		strcpy(to, from);
X		break;
X	    case 2:
X		if (strcmp(to, "\"") == 0)
X		    strcpy(to, from);
X		break;
X	}
X	if (flast - fontmap >= MAXMAP) {
X	    fprintf(stderr, "%s: too many map sequences in %s\n", progname,
X		name);
X	    exit(1);
X	}
X
X	flast->from = cvt(from);
X	flast->to = cvt(to);
X	flast++;
X    } while (fgets(buffer, sizeof(buffer), f));
X    fclose(f);
X
X#ifdef	DEBUG
X    if (debug&D_FONT) {
X	DBP((D_FONT, "Map from %s map file\n", name));
X	for (fp = fontmap; fp < flast; fp++)
X	    DBP((D_FONT, "  %02x (%c) -> %02x (%c)\n",
X		fp->from, pchr(fp->from),
X		fp->to, pchr(fp->to)));
X    }
X#endif
X    return(1);
X}
X
Xcheckmissing(name)
Xregister char *name; {
X    static char lastmap[512];
X    if (!verbose || flast == fontmap)
X	return;
X    for (fp = fontmap; fp < flast; fp++)
X	if (fp->to)
X	    fprintf(stderr, "Didn't remap 0x%02x:0%o:%d (%c) in map file %s\n",
X		fp->from, fp->from, fp->from, pchr(fp->from), lastmap);
X    if (name)
X	strcpy(lastmap, name);
X}
END_OF_FILE
  if test 8075 -ne `wc -c <'utils/pk2sfp.c'`; then
    echo shar: \"'utils/pk2sfp.c'\" unpacked with wrong size!
  fi
  # end of 'utils/pk2sfp.c'
fi
if test -f 'widths/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'widths/Makefile'\"
else
  echo shar: Extracting \"'widths/Makefile'\" \(8122 characters\)
  sed "s/^X//" >'widths/Makefile' <<'END_OF_FILE'
X#	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X#		All Rights Reserved
X#
X#    See the LICENSE file for a full description of the restrictions
X#    under which this software is provided.
X#
X#2.18 91/04/05
XSCRIPTS	= gfnttab genext installdit
XTD	= testdir
XPSW	= \
X	widthps/DESC \
X	widthps/AB widthps/BR widthps/HB widthps/I  widthps/PX \
X	widthps/AI widthps/BX widthps/HO widthps/NB widthps/R \
X	widthps/AR widthps/C  widthps/NI widthps/S \
X	widthps/AX widthps/CB widthps/HX widthps/NR widthps/S2 \
X	widthps/B  widthps/CO widthps/Hb widthps/NX widthps/ZC \
X	widthps/BB widthps/CX widthps/Hi widthps/PB widthps/ZD \
X	widthps/BI widthps/Hr widthps/PI widthps/BO widthps/H \
X	widthps/Hx widthps/PR
XLJ3W	= \
X	widthlj3/DESC widthlj3/S2 \
X	    widthlj3/B widthlj3/I widthlj3/R widthlj3/S widthlj3/X \
X	widthlj3u/DESC \
X	    widthlj3u/B widthlj3u/I widthlj3u/R widthlj3u/S widthlj3u/X
X
Xinclude ../makeincl
X
Xall:	subst.done $(PSW) $(LJ3W) lj3ext dit2catwid $(SCRIPTS) ljwidths \
X	widths extensions
X
Xunsccswidths:	$(PSW) $(LJ3W)
X
Xlj3ext:		$(LJ3W)
X	@$(IGNORESH) for i in R I B X ; \
X	do \
X	    echo "Creating widthlj3u/T$$i" ; \
X	    sed -e 's/^name /name T/' widthlj3/$$i > widthlj3u/T$$i ; \
X	    echo "Creating widthlj3/U$$i" ; \
X	    sed -e 's/^name /name U/' widthlj3u/$$i > widthlj3/U$$i ; \
X	done
X	rm -f widthlj3u/S2
X	cp widthlj3/S2 widthlj3u/S2
X	touch lj3ext
X
X$(PSW) $(LJ3W):
X	@eval `echo $@ | sed -e 's/\(.*\)\/\([^\/]*\)$$/d=\1 f=s.\2 n=&/'` ; \
X	    cd $$d ; echo Extracting $$n ; $(GET) -s $(GFLAGS) $$f
X
Xditwidths:
X	cd ../lib ; $(MAKE) psrofflib
X	./installdit
X
Xwidths:	gfnttab dit2catwid installdit
X	@if [ ! -r widthps/TE -a -r widthps/s.TE ] ; \
X	then \
X	    cd widthps ; $(GET) -s $(GFLAGS) s.TE ; \
X	fi
X	@if [ ! -r widthps/HW -a -r widthps/s.HW ] ; \
X	then \
X	    cd widthps ; $(GET) -s $(GFLAGS) s.HW ; \
X	fi
X	-rm -f gfnttab.log
X	for i in width* ; \
X	do \
X	    echo "Processing $$i" ; \
X	    ./gfnttab $$i >> gfnttab.log ; \
X	done
X	./installdit
X
Xsubst.done:	../makeincl ../sedscript
X	rm -f $(SCRIPTS)
X	touch subst.done
X
X../utils/pk2ditwid:
X	cd ../utils ; make pk2ditwid
X
X# The "for ps in" list below is sort of monotonic increasing ratios
X# away from point size 10, further, the larger fonts are the ones
X# most likely to not be EXACTLY what pointsize they say they are
X# (eg: my PK 36 is actually closer to 32)
Xsepwidths: ../utils/pk2ditwid
X	rm -f pk2sep.log pk2sep.err
X	@$(IGNORESH) if [ -d $(LJF) ] ; \
X	then \
X	    fontlist=`find $(LJF) -type f \
X		'(' -name '*.*.pk' -o -name '*.*.sfp' ')' -print | \
X		sed -e 's/^\.\///' -e 's/\..*$$//' -e 's/.*\///' | sort -u` ; \
X	    for font in $$fontlist ; \
X	    do \
X		case $$font in \
X		?) ;; \
X		??) ;; \
X		*) \
X		    echo "$$font can't be a psroff/troff font!" \
X			>> pk2dit.err ; \
X		    continue ; \
X		    ;; \
X		esac ; \
X		file= ; \
X		for ps in 10 11 9 12 8 7 14 6 16 18 20 22 24 28 36 ; \
X		do \
X		    file= ; \
X		    if [ -r $(LJF)/$$font.$$ps.pk ] ; \
X		    then \
X			file=$(LJF)/$$font.$$ps.pk ; \
X		    elif [ -r $(LJF)/$$font.$$ps.sfp ] ; \
X		    then \
X			file=$(LJF)/$$font.$$ps.sfp ; \
X		    fi ; \
X		    if [ -n "$$file" ] ; \
X		    then \
X			if [ "$$font" = S ] ; \
X			then \
X			    args=-S ; \
X			else \
X			    args= ; \
X			fi ; \
X			echo "pk2ditwid: $$file" >> pk2sep.log ; \
X			../utils/pk2ditwid $$args $$file >> pk2sep.log \
X			    2>> pk2sep.err ; \
X			if [ $$? != 0 ] ; \
X			then \
X			    echo "pk2ditwid (on $$font) failed - check pk2sep.log" \
X				>> pk2sep.err ; \
X			else \
X			    mv $$font widthlj/$$font.$$ps ; \
X			fi ; \
X		    fi ; \
X		done ; \
X	    done ; \
X	    for ps in 10 11 9 12 8 7 14 6 16 18 20 22 24 28 36 ; \
X	    do \
X		for i in $$fontlist ; \
X		do \
X		    if [ ! -r widthlj/$$i.$$ps ] ; \
X		    then \
X			continue ; \
X		    fi ; \
X		    case $$i in \
X			S) \
X			    args="-s widthlj/R.$$ps widthlj/S.$$ps" ; \
X			    if [ ! -r widthlj/R.$$ps ] ; \
X			    then \
X				continue ; \
X			    fi ; \
X			    ;; \
X			*) \
X			    args="widthlj/S.$$ps widthlj/$$i.$$ps" ; \
X			    ;; \
X		    esac ; \
X		    echo "dit2catwid: $$i.$$ps" >> pk2sep.log ; \
X		    ./dit2catwid $$args widthlj/ft$$i.$$ps >> pk2sep.log \
X			2>> pk2sep.err ; \
X		done ; \
X	    done ; \
X	fi
X
X# The "for ps in" list below is sort of monotonic increasing ratios
X# away from point size 10, further, the larger fonts are the ones
X# most likely to not be EXACTLY what pointsize they say they are
X# (eg: my PK 36 is actually closer to 32)
Xljwidths: ../utils/pk2ditwid
X	rm -f pk2dit.log pk2dit.err
X	@$(IGNORESH) if [ -d $(LJF) ] ; \
X	then \
X	    fontlist=`find $(LJF) -type f \
X		'(' -name '*.*.pk' -o -name '*.*.sfp' ')' -print | \
X		sed -e 's/^\.\///' -e 's/\..*$$//' -e 's/.*\///' | sort -u` ; \
X	    for font in $$fontlist ; \
X	    do \
X		case $$font in \
X		?) ;; \
X		??) ;; \
X		*) \
X		    echo "$$font can't be a psroff/troff font!" \
X			>> pk2dit.err ; \
X		    continue ; \
X		    ;; \
X		esac ; \
X		file= ; \
X		for ps in 10 11 9 12 8 7 14 6 16 18 20 22 24 28 36 ; \
X		do \
X		    if [ -r $(LJF)/$$font.$$ps.pk ] ; \
X		    then \
X			file=$(LJF)/$$font.$$ps.pk ; \
X			break ; \
X		    elif [ -r $(LJF)/$$font.$$ps.sfp ] ; \
X		    then \
X			file=$(LJF)/$$font.$$ps.sfp ; \
X			break ; \
X		    fi ; \
X		done ; \
X		if [ -n "$$file" ] ; \
X		then \
X		    echo "Best fit for $$font is $$file" >> pk2dit.log ; \
X		    if [ "$$font" = S ] ; \
X		    then \
X			args=-S ; \
X		    else \
X			args= ; \
X		    fi ; \
X		    echo "Creating widthlj/$$font from $$file" ; \
X		    ../utils/pk2ditwid $$args $$file >> pk2dit.log \
X			2>> pk2dit.err ; \
X		    if [ $$? != 0 ] ; \
X		    then \
X			echo "pk2ditwid (on $$font) failed - check pk2dit.log" \
X			    >> pk2dit.err ; \
X		    else \
X			mv $$font widthlj/$$font ; \
X		    fi ; \
X		fi ; \
X	    done ; \
X	fi
X	@test ! -s pk2dit.err || (cat pk2dit.err ; exit 1)
X	@rm -f pk2dit.err
X
Xinstall:
X
Xinstallwidths:	installdit
X	@$(IGNORESH) \
X	test -w $(FONTDIR) || (echo "Install as root" ; exit 1 ; ) ; \
X	for i in width* ; \
X	do \
X	    base=`echo $$i | sed -e 's/.*width//'` ; \
X	    test -d $(FONTDIR)/$$base || mkdir $(FONTDIR)/$$base ; \
X	    test -w $(FONTDIR)/$$base || \
X		(echo "Install as root" ; exit 1 ; ) ; \
X	    files=`echo width$$base/ft*` ; \
X	    if [ "$$files" = "width$$base"'/ft*' ] ; \
X	    then \
X		echo "No $$base widths to install" ; \
X		continue ; \
X	    fi ; \
X	    echo "Installing $$base widths" ; \
X	    cp width$$base/ft* $(FONTDIR)/$$base ; \
X	done
X	./installdit -i
X
Xextensions:	genext
X	@$(IGNORESH) \
X	for i in width* ; \
X	do \
X	    if [ ! -r "$$i/R" -o ! -r "$$i/S" ] ; \
X	    then \
X		continue ; \
X	    fi ; \
X	    base=`echo $$i | sed -e 's/.*width//'` ; \
X	    echo "./genext $$i > $$i/$$base.ext" ; \
X	    ./genext $$i > $$i/$$base.ext ; \
X	done
X
Xcmp:
X	test -d $(TD) || mkdir $(TD)
X	@$(IGNORESH) for i in width* ; \
X	do \
X	    base=`echo $$i | sed -e 's/.*width//'` ; \
X	    cd $$i ; \
X	    for j in ft* ; \
X	    do \
X		if [ ! -f $$j ] ; \
X		then \
X		    continue ; \
X		fi ; \
X		echo "Comparing $$j to $(FONTDIR)/$$base/$$j" ; \
X		set +e ; \
X		cmp -l $$j $(FONTDIR)/$$base/$$j ; \
X		set -e ; \
X	    done ; \
X	    cd ../ ; \
X	done > $(TD)/widthdiff 2>&1
X
Xtest:	dit2catwid $(SCRIPTS)
X	test -d $(TD) || mkdir $(TD)
X	rm -f $(TD)/*
X	cp widthps/S $(TD)/S
X	chmod +w $(TD)/S
X	sed -e '1,/charset/d' widthps/S2 >> $(TD)/S
X	./dit2catwid -v $(TD)/S widthps/R $(TD)/ftR > $(TD)/ftR.nout
X	@echo "Comparing $(TD)/ftR and $(FONTDIR)/ps/ftR"
X	-cmp -l $(TD)/ftR $(FONTDIR)/ps/ftR
X	./dit2catwid -vc $(TD)/S widthps/R $(TD)/ftR.c > $(TD)/ftR.c.nout
X	./dit2catwid -sv widthps/R $(TD)/S $(TD)/ftS > $(TD)/ftS.nout
X	@echo "Comparing $(TD)/ftS and $(FONTDIR)/ps/ftS"
X	-cmp -l $(TD)/ftS $(FONTDIR)/ps/ftS
X	./dit2catwid -svc widthps/R $(TD)/S $(TD)/ftS.c > $(TD)/ftS.c.nout
X
Xclean:
X	rm -rf dit2catwid $(SCRIPTS) */ft* *.o $(TD) *.fonts.new
X	rm -f gfnttab.log pk2dit.log pk2sep.log pk2dit.err pk2sep.err
X	rm -f */[A-Z]*.out */*.ext lj3ext
X	rm -f widthlj3/U[RIBX] widthlj3u/T[RIBX]
X
Xdit2catwid.o:	../defs.h
X
X../cattab.o:	../defs.h
X	@echo "cattab.o is out of date, please run make troff2ps in top level first"
X	exit
X
Xdit2catwid:	../cattab.o dit2catwid.o
X	$(CC) $(CFLAGS) -o dit2catwid dit2catwid.o ../cattab.o $(LIBFLAGS)
END_OF_FILE
  if test 8122 -ne `wc -c <'widths/Makefile'`; then
    echo shar: \"'widths/Makefile'\" unpacked with wrong size!
  fi
  # end of 'widths/Makefile'
fi
if test -f 'widths/widthps/S2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'widths/widthps/S2'\"
else
  echo shar: Extracting \"'widths/widthps/S2'\" \(867 characters\)
  sed "s/^X//" >'widths/widthps/S2' <<'END_OF_FILE'
X# BracketF
X#2.2 91/02/06
Xname S2
Xinternalname BracketF
Xspecial
Xcharset
Xbv	50	2	0101	bold vertical
Xlt	50	2	0102	left top of big curly bracket
Xlk	50	2	0103	left centre of big curly bracket
Xlb	50	2	0104	left bottom of big curly bracket
Xrt	50	2	0105	right top of big curly bracket
Xrk	50	2	0106	right centre of big curly bracket
Xrb	50	2	0107	right bottom of big curly bracket
Xlc	50	2	0110	left ceiling (left top of big square bracket)
Xlf	50	2	0111	left floor (left bottom of big square bracket)
Xrc	50	2	0112	right ceiling (right top of big square bracket)
Xrf	50	2	0113	right floor (right bottom of big square bracket)
Xbr	0	2	0114	box vertical rule (matches ul)
Xrn	50	2	0115	root en extender
Xci	100	3	0116	circle
X\|	17	0	0117	1/6em narrow space
X\^	8	0	0120	1/12 em narrow space
Xr1	80	0	0121	reversible reaction ( chemical )
Xr2	80	0	0122	reversible reaction - 2 full arrows
END_OF_FILE
  if test 867 -ne `wc -c <'widths/widthps/S2'`; then
    echo shar: \"'widths/widthps/S2'\" unpacked with wrong size!
  fi
  # end of 'widths/widthps/S2'
fi
echo shar: End of archive 11 \(of 19\).
cp /dev/null ark11isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    echo "Read the README to get started with psroff installation"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
