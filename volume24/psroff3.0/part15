Subject:  v24i110:  psroff, Troff to PostScript filter, Part15/19
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET

Submitted-by: Chris Lewis <clewis@ferret.ocunix.on.ca>
Posting-number: Volume 24, Issue 110
Archive-name: psroff3.o/part15

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  DITROFF LJIII fonts.lj/H.10.pk.UU fonts.lj/S.7.pk.UU
#   fonts.lj/S.8.pk.UU fonts.lj/S.9.pk.UU man/dumpft.1.S
#   tests/chartab.m tests/testtab.m utils/catconv.S utils/showfont.S
#   widths/widthps/HX
# Wrapped by clewis@ecicrl on Fri Apr  5 20:56:04 1991
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 15 (of 19)."'
if test -f 'DITROFF' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'DITROFF'\"
else
  echo shar: Extracting \"'DITROFF'\" \(3322 characters\)
  sed "s/^X//" >'DITROFF' <<'END_OF_FILE'
X		Ditroff input configuration notes
X			2.3 91/02/20
X
XThis document attempts to describe some of the issues of using
Xpsroff with ditroff instead of CAT troff.
X
XThe heart of the whole issue is the use of the -N option
Xto troff2ps (see lib/psrofflib.S).  Which permits the translation
Xof ditroff codes into the desired output format.  This translation
Xis fully supported in this release.
X
XThere are some other ancilliary issues in ditroff which you
Xshould be aware of:
X
X	- trofftype
X	- width tables
X	- macro adapters
X	- page offsets
X
XTrofftype:
X---------
X
XIs forced to be '-T$width' if the -N option is in t2arg in
Xlib/psrofflib.S by psroff.S
X
XWidth tables:
X------------
X
XPsroff installation does not install ditroff width tables
Xinto a place for ditroff to find them.  The "make installwidths"
Xonly installs CAT-compatible width tables in FONTDIR/<widthname>/ft*,
Xyet, ditroff will insist upon a FONTDIR/dev<widthname>/*.out format.
X
XThe supplied lj3 and ps widths (widths/width???) files are designed to
Xoperate with full ditroff.  To use them, copy widths/widthlj3/[A-Z]* to
XFONTDIR/devlj3 or widths/widthps/[A-Z]* to FONTDIR/devpsc.  Then,
Xchdir to that directory and run "makedev".  Some ditroff releases
Xcame without a "makedev" program.  A reimplementation
Xof makedev was published in comp.sources.misc in 1988:
X
X	v02i084   mkfont  mkfont/rdfont--compile and uncompile ditroff fonts
X
XOther width tables that are built on the fly (lj & jt) need some
Xhand fiddling before being slammed into makedev (headers on the files,
Xand more complete DESC files).
X
XIn the lib/psrofflib.S file you should specify the "width=" parameter
Xto be the suffix of the ditroff directory.  Eg: FONTDIR/devpsc should
Xbe "width=psc".
X
XIf you wish to use the optimizer, you will need to perform a
X"make installwidths", and then supply "-Z" and "-W/usr/lib/font/<x>",
Xwhere <x> is "ps" or "lj3".  Eg: the optimizer must read CAT format
Xwidth tables, and the name may not necessarily be the same as the
X"$width" parameter.
X
XIf you alter width tables, you will have to repeat this process
X(rerunning makedev with new width tables in dev$width, and
Xreinstalling the CAT width tables by using "make installwidths").
X
XMacro Adapters & Page offsets:
X-----------------------------
X
XWhen you specify "-mm", tsroff goes and looks for a file called
X"tmac.m" in the macro library area, namely, /usr/lib/tmac.
XIn order to support CAT troff, psroff looks in LIBDIR/adapters
Xfor a file called tmac.m, which includes LIBDIR/adapters/cmn.pre
Xto predefine some CAT-specific things, then includes
X/usr/lib/tmac/tmac.m to customize the real tmac.m macros for
XCAT limitations, then includes LIBDIR/adapters/cmn.post.
X
XYou'll probably want to simply replace adapters/tmac.*.S with
Xa ".so" of the real macros.  Eg, for -mm, replace tmac.m.S
Xwith:
X	.so /usr/lib/tmac/tmac.m
X	.de sR
X	\X'\\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9'
X	..
X(Note, since I don't really know the ditroff convention for
Xthe contents of \X, other code that relies on particular
Xbehaviour for \X may not work.  Though, if you use the .sR
Xmechanism as described in the psroff/troff2ps manual pages,
Xthat will work just as it does with CAT troff.
X
XAlso, you'll probably want to override the default 1/2 inch offset
Xthat troff2ps implements by specifying -O0 in the t2arg entry of
Xlib/psrofflib.S.
END_OF_FILE
  if test 3322 -ne `wc -c <'DITROFF'`; then
    echo shar: \"'DITROFF'\" unpacked with wrong size!
  fi
  # end of 'DITROFF'
fi
if test -f 'LJIII' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'LJIII'\"
else
  echo shar: Extracting \"'LJIII'\" \(4729 characters\)
  sed "s/^X//" >'LJIII' <<'END_OF_FILE'
X		PSROFF RELEASE 3.0 LJIII 1.2 91/04/05
X
X			Feb 19, 1991
X			Chris Lewis
X
XThis file describes some of the differences between the "lj" and "lj3"
Xvariants of psroff, and how you can make your older laserjet work
Xbetter with better fonts.  The LASERFONTS file describes how to use
XTeX fonts to build reasonably useful fonts for laserjets.  This file
Xdescribes the lj3 structure using the scalable typefaces on the lj3,
Xand how this can be ported back to dumber laserjets.
X
XThe original laserjet support in psroff is based upon commonly available
Xfont sets from HP.  Which predated the Laserjet III.  This mechanism
Xwas based upon the Math-8 and Roman-8 symbol set.  To make things simpler,
Xbecause Math-8 itself is a little rare, psroff includes a "Math-8" set
Xthat has been synthesized from TeX fonts at each of the 14 CAT troff
Xsizes.  For best results you also need a set of the Roman, Italic
Xand Bold fonts at the same sizes.  In Psroff, there is included a Roman
XItalic and Bold font at 10 points for you to play with.
X
XHowever, since then the Laserjet III was released by HP.  There
Xare two fundamental changes that this printer introduced: the first being
Xthat the printer contains scalable typefaces.  Thus, psroff can treat
Xit almost like a Postscript printer, and not download at all.  The
Xother being that these scalable typefaces and an IBM PC program
Xto generate SFP's (HP Soft font format) at any given size is being
Xsold as a quite inexpensive product.  It allows you to buy the
XHPLJ III fonts and build a complete set of softfonts for your older
Xprinter.
X
XFurther, the "DeskTop" symbolset available on LJIII's is a better match
Xto what CAT Troff needs, so this is used instead of Roman-8 for the LJIII.
X
XLJIII Structure:
X
XThere are two sets of widths for LJIII's, "lj3" and "lj3u".  The former
Xhas the Times font for R, I, B, X and S (Upright, Italic, Bold, BoldItalic
Xand Symbol), and the latter has Univers for R, I, B, X and S.  When the
Xfont tables are built, the Times widths are cross-linked into the Univers
Xarea as TR, TI, TB and TX.  Similarly, the Univers fonts are cross-linked
Xinto the Roman area as UR, UI, UB and UX.  The Times S font is not available
Xunder Univers and vice-versa because troff can't handle two separate S fonts.
XThis permits you to select what your base fonts should be, whether Times or
XUnivers, at the same time the other fonts can be selected with ".fp"'s with
Xthe appropriate T or U prefix.  There are separate entries in the psrofflib
Xfile (selectable by different -T arguments to psroff) to select whether
Xyou want your base font as Times or Univers.
X
XIf you wish to add additional scalable typefaces, you should probably
Xbuild a new family directory (widthlj3?), place the width files there,
Xand modify the Makefile to cross-link these files into widthlj3 and
Xwidthlj3u.  Then add a new entry into psrofflib to use the new widths.
X
XAt present, there is no easy way to build width tables for extra scalable
Xfonts - the supplied widths were built by an eclectic mix of perl and C
Xprograms on several different machines using the font metric files available
Xfrom HP.  N.K. Krishnan (of HP, krishnan@iag.hp.com, did a lot of the hard
Xwork) and I could probably never reproduce the same set of steps again.
XPerhaps the simplest thing to do would be to copy an existing set and manually
Xtweak them using the test sheet as a guide.
X
XZapf-Dingbats Cartridge/S2 font:
X
XThere is a scalable font cartridge that contains Zapf-Dingbats.  This
Xfonts contains *real* \(bs, \(lh and \(rh.  The default psroff setup
Xis to use a "sun" for bs, and =>/<= for rh/lh.  If you *really* want to
Xuse the "real" glyphs, you have to obtain the cartridge and follow these
Xsteps:
X	- edit lj3.fonts and lj3u.fonts and uncomment the 3 lines in
X	  each that refer to bs/lh/rh.  This is described more precisely
X	  in lj3[u].fonts.
X	- edit widths/widthlj3/S and widths/widthlj3u/S and *remove*
X	  the three lines pertaining to bs, lh and rh.
X	- edit widths/widthlj3/DESC and widths/widthlj3u/DESC and
X	  change the line:
X	    fonts 5 R I B X S
X	  to:
X	    fonts 6 R I B X S S2
X
XUsing Scaled fonts on non-LJIII's:
X
XIf you obtain the scalable typefaces and the PC program, you can
Xuse the program to generate SFP's for each typeface at the CAT
Xtroff sizes.  You will want to build these fonts as Roman-8
Xsymbolsets.  Then, copy these files from your PC to your UNIX system
Xthat's running psroff.  (Don't forget to copy the files in *binary*
Xmode!!!).  Follow the instructions in LASERFONTS on how to build
Xand install these fonts and the new width tables etc.  Without some
Xwork you will not be able to use a MATH-8 font produced in this way
Xwithout borrowing some of the overrides from lj3.fonts into lj.fonts.
END_OF_FILE
  if test 4729 -ne `wc -c <'LJIII'`; then
    echo shar: \"'LJIII'\" unpacked with wrong size!
  fi
  # end of 'LJIII'
fi
if test -f 'fonts.lj/H.10.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fonts.lj/H.10.pk.UU'\"
else
  echo shar: Extracting \"'fonts.lj/H.10.pk.UU'\" \(5603 characters\)
  sed "s/^X//" >'fonts.lj/H.10.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 fonts.lj/H.10.pk
XM]UD``*``````````!":N``0FKM@/J0```!4)!_T<-S<W-S<W,-`0J````!4)
XM!_@<8U-34U-34V#0$+,````<"0?W'"4W'B,S%S4@F`PA````#0,=^QS2$::0
XMV!(B````%0L(_QSB-3$F+B$7$28AL#PC````(QXE_AS"XB<L8V/&XB<L8V/&
XMXR<L8V.-`=+BHG+&-CQN,G*M(="#8\;B)RQC8\;B)RQC8\;B)RP@T#@D````
XM%1`A_AY_+'>T02)",R0B,R?C-"=#)U(HB8F8F8DA6",X(TXW)$8D(24C,30C
XM(T(A-:EL\G#`9R4````C'B'^'D32*&T#>,)T)*-S0Z)S8X-S8X*#8W.#8V.3
XM8V*C8U.C8U+#0U/$)$/1A2TV4]1&)DU#5M,EC1-$),-30\)38Z-38Z)C8Y-C
XM8X-S8X*#8W.#8W*C0W.D)'+(<]!H+21`P$LF````'QH?_AV$V&UHU3(]3D-#
XMTS--,R34,CU3%-9M=;)UPF7"9[)4$[)$,Y)31()$4W)39%-3=$)C@S)SDQ*3
XMA:.4@2-H0SHZ5G8@Z`LG````#`,(_!S_M);0("@````0"RK^'H-S<W-_-_-^
XM(WXS?K.>,YXCGSGSDY.3D]@@*0```!`+*OX>.3DY.?.?.>(YXSGK/C<WXC?S
XM?S<W-S<XT"<J````%1`2_AYR`0/?*"0D(5(B45$A5*CVBD42%14B)1)"0H\@
XM$#TGT`\K````(!L<_A?>PL`X[-+`Z`LL````#`,(_`+_M);("2T````."P(`
XM"=G8"2X````,`P/\`I#0+B\````5$"G^'@$/+3_2T]+3WRT]\M/?+3WRT]+3
XMWRT]\M/?+3WRT]+3WRT]\@$`T"`P````%1`=_AMDJ'I41$-C/B.#'L.CXA.#
XM,V-$1%IXEE#`$C$````5#1S\&W&C=EA2,Z[7-=W0*S(````5$!S^&U698T1#
XM<S*$$Y,2I!&D$;/]/$P\3#Q+2TM,/#P\/#P\/`(@T"DS````%1`=_AM6B6-3
XM0W,CA"\93/3#Q+2'EJ<!!-/4WC7[:4(H-#5%F670*C0````5$AO_&J35T1/"
XM$[,3LB.O,CGS,X\T-S4V138V-48U-S1'-`)N:S30)34````5$!S^&A\!`N8]
XM,E:UQ&-#54)&0D=.7$$902E")T0T1IAFT"XV````%1`=_AN%F'-18\/////3
XM-4,H,QHF1"5D%(,4EN2C\3DQ.#,H,S8U-#>*5=@;-P```!40&_X:`BT\///#
XMQ,/$P\]+XDOC3#SE2-`I.````!40'?X;5HI41#\X,>,Z/Q.#-$1:AHI41#\X
XM,>4Z,3@R1D-$1:AET#$Y````%1`=_AMDJ'-#4V,S@C.#$Y,3HAY#II03A!1E
XM)$8J$S@C14+?/2T])1<E-$:*5[@*.@````P#$OP1G8FX#SL````,`Q?\$9V)
XM$N(1$A"8#+@````-`QW[%)IA'2#`$#T````@&PS^#QW!W@R]X=P0T""Y````
XM%`\=_A1>(P6AWSSC+#OSL[2DOB/#H2-E$!`K9T#0(#\````4#QW^'#=K/21D
XM(:/BP[2DI*2CPL/.(L\]$%KB-\`Y0````!P7'?X<I]&ZT8959*-4:31J,VLD
XM5#835%434W?F4Y,34W,C5%0D5#1#:51G=&64UVA&TYS0A<`[00```!P9'?\<
XML]CUUQ$];R(]0R33(TTR0](T31)4T28]#S9+\X2BE).DC]1_/$8M!%\]%#/2
XM4O/303U4R#!"````'!4=_!S0C35(5$I#2T+D3$%+0DE3U$TFU$1H-*4DM13$
XM'D30C$%+0DE3U$T7P"=#````&Q4?_1VHO'1D9))4TTT_33XDT^A-7B35]-5-
XM5,%4HF1TC+=`R#!$````'A<=_!S1G3=(5DI42U-,0TT$)-$R]-%!32,>=-*.
XM+104T$+TQ#2E1(9=-]&0N!%%````&1(=_!S<ZL+\4>M,+8#8$$8````8$1W\
XM'`*.K?`2'M30P"Y'````'!4?_1VGO0=&54DT2R--/TT^)-/E34])S1/B%-`_
XM),,TLT2C5)-D97T+=-@.2````!T4'?P<[$P#+MQ`:`E)````#`0=_!S=P!!*
XM````%`T>_AR>VV=U0<*E9-A!2P```!T6'?P<0!"-04Q"2T-*1$E%2$9'1T9(
XM14E$2D0[0UI":D$Q27)89$AE1U962$9(54E%2D1*4TM#],0DU!35N`Q,````
XM%@\=_!SLY+T@R#=-````)!L=_!SB;2GB$]`A?B([(G)),G,Y(W\T<S?T-R1_
XM1%-'4U)75#-7XF,R9^)S$G?BA(?70-@S3@```!T4'?P<]KJF$Z84EO(Y8DAC
XM.&\T=O1&939E168U;V1&]T-H,VA";Y,FE!:C%JK[8,`U3P```!\:'_X=IM3-
XM#1M665A73$5<5$T4/B330>=-6=-?%--"714TT41<55I76%E66]'0S4:@R!]0
XM````&Q0=_!S1;31(4TI"2T'E3(M!2E%(8M0])>Q-,,`^40```!\:(_X=IM3-
XM#1M665A76E5<5$T4/B330>A-5/%--"1S9#1D1$5D)51T%'58E5:]'0T=)A3:
XM39797940V#-2````&Q4=_!S8`25(5$I#2T+D3$%+0DI22&,!-`$EV$9'1S='
XM1O2$7TE$]*0TM"],04U`P"Y3````%Q(?_AUGFV-D0X,SHC+2XSTDTDT7R:N:
XMJ=!M%-+TX])=`A.S%),U8VN78,@-5````!P9'?\<`E[=M*#8%U4````=%![\
XM'.`833\4LS235'-T5(K&<,@T5@```!P9'?\<]-4^(4TS/TT31=`U],-^)*.?
XM2#M'+/1CT$4M'T0])#+30CU/,BU4$M;UV#O(7U<````G)!W_'$Q-!_Q<,4L1
XM/"+B2B(Z,T@R.31((T@T2"0X-4<D.";T8T1C9&)C8W128V*$0V1#A$)T0Y\T
XM*#0J0R@S.D(I0COB,BHR+0,1LR'1,1PA+17%T4T%TCT3@,!%6````!P9'?\<
XM%-(S701$Q&2SA).4A*1DQ%/1-$T4)--!/5;777]-=M8Q/4,DTD,]%%/0-DLX
XM24A8.D<\14Q3314CTT%--<@Q60```!P;'0`<7505U#-=(U3115T#=;.4I)63
XMM73$<]!5/21$TT,]11/603UVV%VNM+"P,EH````9%!W^'!_'PTPUPTPUPTPT
XMPUPTPUPTPTPUPTPUPTPTPUPTPUPTPTPUPTPUPTP]P+@,6P````P(*?T>S^UE
XMS+@,70````P(*0`>S.UES]`37@```!4.!_T<8K26<R-30S-C$X/@"V`````,
XM`PC\'&DM_]`>80```!0.$OX11FH\(V,AD_LX9*+!1FXH=5'1D3)C,-@A8@``
XM`!4/'?T<ZCPS5#&#TE111S$X?EEH,4<Q5%'2,8,S1=`;8P```!(.$OX15GE+
XM)%,3D1.N4\.SD213.TEF,-`@9````!4/'?X<SJ-%,S@3+15%\3AN67@Q-T%4
XM4M.!-%,PT!QE````$@X2_A%5>%HT1"-R(H`RXL.SD213+#IF,,`39@````T.
XM'0`<AG=H4ZYC?[?M(W#`*F<````5$AO_$61$31/2,T-^0V-S0XJ)@Q2O/3M]
XM!-(CE!XCQZ0593T5R(78%&@````5#AW]'.H[,U,Q@M%5AV[(,+@,:0````H$
XM'?X<Q-'L4X`1:@````L*)0,<;C34Z<5)0813V"QK````%`\=_1SJ/#=!-D(U
XM0S1$,T4R1C%'AY91-E(U0T0U-#5#-D(W,C=!.$"("6P````*`QW]'-[(&&T`
XM```B&Q+]$3-F8S&3DM$;%69HA(;LDY/8$FX````5#A+]$3-3,8+158=NR##0
XM'V\````5$A+_$6:J?%1D-(0CHQY#QZ03HR2$-&1<>J9@V"%P````%0\:_1$S
XM5#&#TE111S$X?EEH,49!5%'2,8,S1><\T"%Q````%0\:_A%4,S@3+15%%&03
XMAN67@Q-T%44M.!-%,^?#V!%R````#@D2_1$S8G&S5/1>HV#`&G,````0#1+_
XM$3=:*Q1B'SI*=X:*2_2773*E<]`3=`````\,&/\7/E-OM.LY-!24A5+8$74`
XM```5#A+]$>TX9@%1D3)C,-@>=@```!,0$O\1\Z,3DB\X,^(V->(T-_,CGR(J
XM,2OT8-@Y=P```!P9$O\1\W5V<A)S$V(38B-3$U,O-3(E,S0C,S3S,S,S4C-"
XM,F,B4R)O,34Q-_(2<A*%=92#4-`I>````!,2$@`1$Z,D@T1C8U.#0Y,CMM0!
XM`P$4UK,CDT*30W-C4X,SHQ2DV"QY````$Q`:_Q'SH_$X,D<S\V-34F-#<D-S
XM,H,CDB.3$K(2LA'?/?+?+3AY:EO0&'H````2#A+_$1XME)2CI)2CHZ24HZ24
XMD"R8"?8````5%`,`#-+@$:P````5#@7]&SP=^'?_N'[@\-@+JP```!4,!/P<
XMXT1`T!#^````(!L<_AK>PL`XZM+`.,!4T@```"`;'/X7I]4G+1*RL=(9'4%Q
XMU!$5'4$Q0=,4$QTQ82'2%Q$=(9+1&BT!LOP<*QT"H=$I'2$1<=(2%ATQ,4'3
XM%!,=05$1U!<=09'2&RLM$G+5>L`??@```"`;"?X.5=,3C2$KT!%%2UA86T5!
XM'0LATH,=-5#`3/L````J)1S^%]HJ+82$UDA-<Y/72$UDA-9(37.3UTA-9(36
XM2$USD]=(36](3:2$VCD]I(3:2$VDA-HY/:2$VDA-I(3:.3VDA-I(3:*BR$S]
XM````*B4<_A<J+:2$VDA-HY/:2$VDA-I(3:.3VDA-I(3:2$VCD]I(3:](362$
XMUSD]=(362$UDA-<Y/72$UDA-9(37.3UTA-9(38*BVM`[O0```!(+)?T<-5)!
XM,U$B9?5F$3DI.2HI-R(D,R,D,34AXC4Q)3$T(R,T(B<Y*BDY*3$6;U5B(5,Q
XM0E4PF`E?````%14#`/?5B`E\````#`(I^Q[9&`K\````&105_A0/(,`K/```
XM`"`9&/T5V3UTUDUDUDUDUDUDUDUDUDUO3:3:3:3:3:3:3:3:3:3:3:/(*SX`
XM```@&1C]%3VDVDVDVDVDVDVDVDVDVDVO3636363636363636363637/9R"Q<
XM````%1`I_A[RTN(M+B+2XBTN(M+RTN(M+B+2XBTO+2XBTN(M+B+2XBTBTA#0
XM&WL````5#BG]'J2#H[*^P[*SDX33T\+.P\+#P]38&WT````5#BG]'DT]/"SL
XM/"P\/4@Z.ROL.RLY.$K`-[L````@&1W\'-1=8D'3-AT3<=$I'#D<-SLW/#@=
X<#SV.(]6]3C/8XSU'H5FA0D6!45=#43,XA'6`]4'3
X`
Xend
END_OF_FILE
  if test 5603 -ne `wc -c <'fonts.lj/H.10.pk.UU'`; then
    echo shar: \"'fonts.lj/H.10.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'fonts.lj/H.10.pk.UU'
fi
if test -f 'fonts.lj/S.7.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fonts.lj/S.7.pk.UU'\"
else
  echo shar: Extracting \"'fonts.lj/S.7.pk.UU'\" \(4268 characters\)
  sed "s/^X//" >'fonts.lj/S.7.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 fonts.lj/S.7.pk
XM]UD``'``````````!":N``0FKL`M(0```!85'?\5UQUB_5+5XBU?+5\M7RU2
XM@I)SDF$2@J)RKR8L\D+1XB(M/TU?+-`O)````"$;#?X,1+1C%')",F)1@2&"
XM,9$1HA&RXK.RL1*A$9$R@2&!4F(R0G039+1`L!HE````&A44_A"AQSQ5Q3QQ
XM!"W@0AQSQ5Q3QQK0*"8````:%`W^##2C(B-B06)!87(A891ADW&B<:-AE'&!
XM(F%Q0F%"8U2CV"$J````&A`0_`XL6C$X,S8U-#<R.6OTMI,C<T-38S.#$Z7"
XMN`DM````&A("_0?8P"0\````&A(4_1#3+130/0/03$Q-`]`]#TTSU#TTTTTT
XMTSU#TTTRR"0]````&A(4_1`M--,]0]------,]0]/TT#T#T$Q,30/0/031+3
XMR!1#````%1(4_Q/40X-/.A3B.QZS/*C`+40````;%A3^$Z\M9-1M,2/2(DT1
XM0]`53!8[%TH8.1HW*D8<-2Q$'1,QTD+7$!_`+T@````9%!3^$W;#0X.#4Z-"
XMPC/#(M$A,Q83;B.#8Q83;1,2T2(\,RPD.C4X.#0\9\`D2P```!<4%/\3GB+4
XM]-(131\2/0XA0[\6.1=(\8-QE&&C4Y0F:+`:3@```!83%/\3'\4N(<,0(1L6
XM_!8;$"#B'%VPR`]0````&184_Q/9[4,Z,Y20R"M2````&!,4_A/5([,DLC2Q
XM0[)#L42A5-,]3SU!U!H6&Q4;)!PC'",<,M0=4=`64P````T*$/X,53)!(G)^
XM0I.$@Y\H%R30&E0````9%!3^$R2$-U82-#,S8B)A^"$@$NP]M,`H50```!@3
XM%/X32\XCT7DR,C4D-",T-#'C-34Q-#0S)#0E,C(Y?1XCRT#0)%<````9%!3^
XM$UO>(X131.4C0S-20S)C,R-S(R*3$Q+&`2XCVT#0*E@````8%13_$W?#4X.3
XM4[-"TCXSTS+20[-?*R<I)!,I(R09%#,G(RXA9V'(+5D````<%A3^$P'QUR32
XM$ST11,)3P62B<Z&3@:1QLV'$4=`T'10BTC(=-M1-;RK`+5H````2#Q3^$V61
XM47%Q4V)#<='R9#)"0A(R81(B@B\I(B@B*2(I%!@D)B8D*%?`)EP````:$AO]
XM$],M%,30/03$Q-`]!,]---,]------,]----,@30%\@E7@```!H2&_T3+333
XM33/3333333/333],30/03$Q-`]!,31(%T!>X"5\````/#@,`^M[@)&$````6
XM$0W^#`/`!A!&#"8#)@&3`-&`:8`XP!@@#!@.!!FA\&#`+6(````3$!K_$Z2B
XM08%B87)1@E&!48)?$V88%>,9(_&20G)2<5$A0F$U?QT>,=+`(F,````1$!,`
XM#$1Q)V$4(T$A<4$1@B'!(<XA$=#B+1XAT>,6T"1D````#PL4_A-D8C'C0J.$
XM8A-!0C)"+R82)2'R83%2,5%1,7-0T!9E````#@D-_0Q%,F%R8G<B?QCR@D$U
XM(-`A9@````\,&O\3CQM'$38:&AHI\J&N,I.O*CI96CKR83&#0-`B9P```!$-
XM$_\,(D0A$A(R$2)3(U,B8O,F+C(F(O)BORKB*Q3@)&@````0"Q3^$P.`B#&,
XM,09@S!L#8&___V!L#8,P9@C#&,$0'`#@%&D````,!PW^#!@P88,&&#!CAQ9G
XM`.`?:@```!,.#?X,&#ACX9,,@#0`X`/X&'!@Q8,6#'`RP'#0)6L````4#Q3^
XM$S,!`@$/+3WRT]\M.THA.",G)"8F)"<C*"(J(2HPT"1L````%`\3_@Q.(F).
XM,F)"8E\F(A(E,A%#$2$2(4,R\LXBT0$`X!YM````$0T-_@QX&,#&!F!C`Q@P
XMP0P888,8&8&P#@``T"%N````#PP:_Q-_&U4A1"DIXBL;]T*?*>(J.DE96CHF
XM$Q@TT!MO````$`P-_@QC<C)"43)BXA)T]R(6(R45$R=%T"!P````$P\-_@PM
XM$!(Q,5%!,:$QDB*?$RCR,G)"<D-A85#0(W$````1#1/^#'2"(F%14E+B,F+R
XM)B,F%"44(1,5(C;RKB*QP-`;<@```!,/#?X,:4LR0F)B3B)R/R<D)B86&!,J
XM2,`5<P````\-#?X,*QT4%A4;\K\;XBKR@.`?=````!(.#?\,.`4P-,!C`9@$
XM8!&`3`(P",!#`@80!X#`,G4````4$!K^$[\='C'1'062(2)203(R05$Q45+Q
XM)15%%2(5%2(D%",D$R4B$CAL\='C&M`Q=@```!41$_\,([$1(I%3<7)A@E&B
XM0:(QPA'3`0(!$]$2P2.A0I%2@7)Q<C$ADB$1LR#`-7<````6$AK_$]#QT^,=
XM,8-A41$B44(1(E%2,D%B(E%A\R46$B46$_)145)!07(A,I?1\=/C&M`A>```
XM`!42#0`,,=$QPO(0$!XA%R8_8F$A8E$R-2)&)E1#4*@)>0````H"'?T5W]`3
XM>@```!$+'?X5@V*.HG-4HZZBHK/8$WL````1"QW^%4HZZBHK-BCJ)S5'T!A\
XM````&A0/_@TTP1BA&G5&17H1J!'$!]`J>`U]````&A00_@Z@W*#<H-@<?@``
XM`!$+'?X5XBKB*N(JXBKB*O*N(JXBKB*O*A#`*W\````:%!3^$S1D2"@31D5D
XM9/<G3]-=$Q+1(CPS.C4J)D9(-#LR/0;234\IP!>A````$0P:_A-AHI1Q$A%"
XM(B(10D'M926@%*(````A&PK^"[KQP!P!/;O!OAOO%<`7HP```!$,&OX37M8E
XM%"01(B(D$2$722L5H!2D````(1H*_0M/&]&]&\V2&_&_\;K8'*8````1#0[_
XM#2M)9R(V(T0E0O)V5"(T0B-F=)*PT!RH````$0T._PVRE'94(D-")%;W(D4D
XM-"5")VE+(+@)L`````\.`P`6WM@0M0```!80$?X0["Q:,49#QV70$+8````6
XM$!'^$%9\-&03I>S"T!JW````%@X4_1!H2C.CH[*SORP"#\/"P\/#RFC`'[H`
XM```:$A3]$&Q-$ST3T3TBTCTN4M,],M,],],]/1;`R!^[````&A(4_1#&T=,]
XM,],],M,^73+2/2+2/1/1,]%,8,`BO@```!H2&_T3;$T3/1/1/2+2/2Y2TSTR
XMTSTSTST]%L!._4#((K\````:$AO]$\;1TSTSTSTRTSY=,M(](M(]$]$ST4P%
XM/]00N`S(````%A`)_@K4YL(@D!',````$0L._@U#9S^1V/&3=C3`-\T````A
XM&QK^$Z?4T,5UD]`W/2-3U#0M8C/6,BV"$]A>7:78,2V"(]8S+6)#U#4](W/0
XM.5=<T-1ZP`_.````#PH:_A-.4DU^U$)`P!3/````#PH:_A-.4DKE0M7D)-?D
XM0D#0']4````.#!K^$X.1(7(2<2)QKD*>4IY"H7(A<A)Q(9.`X"G8````$0L8
XM_A4!@#!^&<8\AI#6.\9XSQGG/,>8\QYCW&L)XSQCF'X,`8#`1]D````A&QK^
XM$Z?5O11TL[.2TB<M0E+6)"E5(R@5)2(G%34A)R871QTDXV+2(28M`B)B<5(R
XM8E%20H5B4M0G+2*3L[1TT;U7H+@,V@```!4/$/X/U.N]0*@+X````!X*'?04
XMW.O%J`SA````'@H=]!;KQ5UPP!3B````'@H=]!2"9%147T7T551>U570%N,`
XM```>"Q_Z%FZ5]5545&4X9UA7]7Z5R!/D````'@H=]!;M561E;T?T='1T@J@,
XM\````!X+'?H4W.O&4)`+\0```!X+'?H6;JW2R!7R````'@L=^A0I2$A(2$=7
XM1_5T?M10V!;S````'@H?]!;I5O5E975S535%3U3I5<`6]````!X+'?H6;M16
XM1O5D961D9&1D<I`X"?4````>!1_T%M>X"?8````A(`$`"-3`(?L````A&Q+^
XM#Z\MLMLMO6?84ME-A-P]T]P]W7C5KRW?+2#8"OP````5#Q#^#P\@P"']````
XM(1L2_@_2\MTMTIUGV-TMU-Q-D]D]HUUXU=ORV_*@L`_^````&A06_A2>DIW.
X%>2G<]?;2
X`
Xend
END_OF_FILE
  if test 4268 -ne `wc -c <'fonts.lj/S.7.pk.UU'`; then
    echo shar: \"'fonts.lj/S.7.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'fonts.lj/S.7.pk.UU'
fi
if test -f 'fonts.lj/S.8.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fonts.lj/S.8.pk.UU'\"
else
  echo shar: Extracting \"'fonts.lj/S.8.pk.UU'\" \(4648 characters\)
  sed "s/^X//" >'fonts.lj/S.8.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 fonts.lj/S.8.pk
XM]UD``(``````````!":N``0FKL`Z(0```!H:(?\8W!VR_:+:\MKRVO+:\MKR
XMVO*API/"@2*RLJ+0*2T"@M(G+2)BTS4M3R0M;R(MCTVO+2#0-"0````C'@[^
XM#47%<B2#05%C8G$QDD&A$J(APL3"P]+3PL3"P2*B$:%"D3%R8V%10X0B=<5`
XMH!4E````&Q84_A&4MO:V0$S1!,2V]K9)T"PF````&Q8._@U$LR,4<D)B46&"
XM,6&B$F&D<;*!PG&T8:(2<9$R88%28D)T5+/8)2H````;$!+[$"Q:,3@S-C4E
XM-C0H,CEK]+:3(W-"<E-38S.#$Z7"N`DM````&Q0"_0C<P"@\````&Q06_1+5
XM+33132/2/2313132/2/2]-4]8]5-5-5-4]8]5-5-4L@H/0```!L4%OT2+535
XM35/6/5353535/6/5]-(](])-%-%-(](])-%-,M7(%4,````6$Q?_%M5#DT\[
XM%.(\'M$ST*G`,40````=&!?^%K\MCTUO$CU/%#TA8]`F3!@[*$H:.2I('#<=
XM!&'1-1TD0=,S'40MD0(PP#9(````&Q87_A:&T28J.#<Z-3PT+1(_/1,3TV,8
XM$VXCHV,8$VTS$M,B/1,RT20\-3HW.#HF+1:`P"Q+````&!47_Q:AUN(]1=/Q
XM$](A31\3/0(TSQ4[)4KQ<Y)TCQDW*48;-3HS=9"P&TX````8%1?_%A_'+B'%
XM$"CQL8_!CQL0/.(<??#(#U`````:%Q?_%MKM<SLSE9#(,E(````9%!?^%M8C
XMPR3",]`4/"-,%#P5/434/5/434+5'5'5'!4=`?0=`C'0(QT#+5'6$-`:4P``
XM``T,$?\-9D)1(I*AKB*CHZ2DH[*AHH-`P"!4````&Q87_A8EA3=G$S-#-'(R
XM8G(B<9(2U"$=;M$]*U#0+U4````9%!?^%EO>(P$(HR,3<D,R4E-",U-#'D-C
XM4Q-30S)30E)#,G,C$Z@!'B/;0,`H5P```!L6%_X6:]+B.48U3G(U-#4T-"8T
XM,S<D,RDC,BLQ,2T7U.(]*U#`+E@````9%!?^%FBC8W*B4L(SPQY#T3$M$B\\
XM,RPE\J)R@D$R@C)!@4,R8C+B%F80R#%9````'1@7_A8",=DDU!,],432%3T1
XM9-`7/!A**3H:2"LX'$8M`V'2\T'4\R'6]-CRL,`R6@```!,0%_X69I%2<8%1
XMH4."(Y+BT293)"42(Q@1(AHQ*B'RLA*B(;(AHC*148%Q4I6`4"I<````&Q0>
XM_15L)J1H1I-I1H1H1H1I-I1H]&Q&PVQ&Q&Q&Q&PVQ&Q&PM*"2"E>````&Q0>
XM_14EU%U%TUU%U%U%U%TUU%WT646C6D6464646C6D646RU7.H"5\````1$0,`
XM^=C@*&$````7$@[^#0?``PP1`02`8F`8L`,L`-,`.(`.(`,,`<,`L&#$C\#`
XMP#9B````%!,=_Q;$T"0:)BD8&!DF&28:)AH7&2859Q58&A<:)>,;)/*B4I)A
XM$7)A,5)Q19\=3C'5P"9C````$A(4``U4@3=Q)"-1(G)!$I%!$:$QT1(='B$1
XMTN(M/B'3XQ;0*60````0#1?^%G2!0E%A0K&RPK.SI((B85)!8C)Q+R@2)R+Q
XM@3\F%2,G1]`490````X*#OX-53-B?R>"Y"D:)"-2T"!F````$`T=_A:1OQU'
XM9BH;*BKRKRKF*SM*:6H\\F(QDT#0)&<````2#Q3_#2-4(3$B,A$S81$R<C-B
XMXD)RXS)R/R<M\LXBT4#0+F@````0#1?^%G2"(F)!4E%184)B,7(B<B)Q+R<B
XMLB<AXB<B\F(R4D)184)B(H.`T!9I````#`@._@U!;B)>(E\F)#4T$A,30^`D
XM:@```!00#OX-"`X8/AA,&8`R`#P`/\`P<&`P8#%@,6`RP#+`',`J:P```!40
XM%_X60](M$]'RT3T?+2\M$]'RT$L2*A,I%2<6)A<E*",I(BI<(,`F;````!41
XM%/X-48%N(G)>,G)2<F\G(Q(F,Q%$$2(2(5,S\M'B+2'3T"%M````$0\._@T4
XMD?,H(R<C*"/R<D)B0F)24F)"<B*"$Y/`T")N````$`T=_Q:1OQQ6(40JY"SW
XM4J*O*N(K.SM*:EL[)A080]`<;P```!$-#OX-57)!47$Q@A*$XI/Y(2<B)B0D
XM)E;`)'`````4$@[_#4T3TB%!06%1,6%A,<XA0;)!L5&B4:)2@F*"<5#0(W$`
XM```2#A3^#82",F)17R8N(R<O(G(R8D)A0A$R4B1O*^(L'=`=<@```!01#O\-
XM:UPS0H)B8G)>(H)/*"87)R89%"M*P!IS````$!`._PU,/0(5&!87%QT?+1\=
XM'B+0\I#0('0````3$0[_#3.1,2)S\1,H-"@5XBD4\I%2@7%Q@E&U8,`P=0``
XM`!41'?X6P=+C'2XQT&@R$R4D%",E%1(E%DXF%D]18A)14C%10E(A,I;0\=+C
XM&\`U=@```!83%/\-(]`1$BL2$RD7-QDF&C0<(QT#$=(],M4M,](1/0$RP4.A
XM8I%S<9(Q(;(A$=`RP#EW````%Q4=_Q;2'6XQUN,:-A83$B45/Q$R46-"07%?
XM)1<5)185)1<5)186)148)!0:(A,M!M3QUN,<P"IX````%A0._PTQT1,=$_$=
XM,Y%Q'Q@G$1@F(1@7$A<F(A8U(S(Q(C5B9T1&F`EY````"@(A_!C8T!=Z````
XM$@TA_AB4@J*NHJ*B=-+"SJ+"PL38%WL````2#2'^&$TL+.HL+"Q(*BKJ*BHG
XM2=`:?````!L6$?X/1-$HL1JE1(2$1:H1N"'4"@`N6`U]````&Q82_A"&WH;>
XMAM@??@```!(-(?X8\LXBSB+.(LXBSB+/+.(LXBSB+.(L+!#`-7\````;%A?^
XM%D1D:"@S1D,B9&(3<G6"A.+573,2TR(]$S+1)#PU.C<X.38[-#T#(])M3TUB
XMH,`5H0```!(,'?T68:*4=E$B(2(R,NV5)9`7H@```",>#/X-K1M/&T&T$]*P
XM&R&R\;(6P!6C````$@P=_19>V24C(R(2(A5G22L5H!>D````(QT,_0U1P/'`
XM'`&_WR'"'"\<(;S8(*8````2#Q#_#RU+:2)')#8E1"="\I9T(E1"0V(D=I2R
XMT-`@J````!(/$/\/TK26=")C0D12)';Y(D<D128T)T(I:TT@J`FP````$1$#
XM`!G8V!.U````&!,3_A+M(!%=,3LS1T:Z=M`3M@```!@3$_X29ZMD=#.S$]7M
XM`1+`([<````8$1;]$HEK1,/0/0/1\M$]$M(!?2/2\M(](](])-*XD,`CN@``
XM`!L4%OT2C&T432/3/3/4\M0]3C+5/5\M4]4]4]5-71C`R".[````&Q06_1+(
XMT=5-4]4]4]7RU3X]4M0_U"U#TSTSTD31;(#`)KX````;%![]%8QM%$TCTSTS
XMU/+4/4XRU3U?+5/5/5/535T8P&S]8,@FOP```!L4'OT5R-'535/5/5/5\M4^
XM/5+4/]0M0],],])$T6P'/]80N`S(````&!,)_@O:YL4@T!+,````$@T._@Y%
XM:3^Q!0\;.65`P#O-````(QX=_A:XU\TTA,3$D],W/5-3US0MDC/9,BVR$]M>
XM;=7;,2VR(]DS+9)#US4]4W/3.4Q,2$T\UXO`#\X````0#!W^%EYR7;[54E#`
XM%,\````0#!W^%EY27;Y5+9Y27;Y5)=`=U0````\.'?X6HZ$Q^"(O@<Y"OF*^
XM0L\8\B*!,:.@X#38````$@T;_A@`8`,#^#&"#C!YA\@RP9X<\,>&/#'CCQAX
XMP\8></,&F"?#/!CA@Q@_@8`,`,!.V0```",>'?X6QMC--670/#LM,I+5)RUR
XM7RV2,K9R(I%B8A*18W2"<82!U$XW+4(2<=,B)R@6(R<8%20H%A8E*58G+5*2
XMTRL\/05ET\V&P-@-V@```!81$OX1`F[=`F"H"^`````?"B'S%]SL!:@,X0``
XM`!\*(?,9[`5=<,`7X@```!\+(?,7DG1D9&1E9&5D;U9&[75@T!CC````'PPC
XM^AE^I?965E9%9CEI25A8]8ZER!;D````'PLA\QGM=71_5T=71U=(2$A)(*@,
XM\````!\+(?D7W.P&4)`+\0```!\+(?D9;K'2R!7R````'PPA^A<J24E)24E(
XM6$CB6.UUV!CS````'PLC\QGJ5_5U=(6%@V5%5&5?5>I6P!;T````'PPA^AE^
XMUUXF5T=71T='1T=(*B@)]0```!\%(_,9W+@)]@```",B`0`(UK`C^P```",>
XM%/X1ORSRS_+.RVS%+-3,30/1/0/1RXRI+1\M'RQ0F`K\````%A$2_A$/@+`C
XM_0```",>%/X1Q?+1+1\IRWS-$M%-!,T\T\XURWRL\L_RS_*PH`_^````&Q88
X+_A:NHJT>BBK1]?;1
X`
Xend
END_OF_FILE
  if test 4648 -ne `wc -c <'fonts.lj/S.8.pk.UU'`; then
    echo shar: \"'fonts.lj/S.8.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'fonts.lj/S.8.pk.UU'
fi
if test -f 'fonts.lj/S.9.pk.UU' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fonts.lj/S.9.pk.UU'\"
else
  echo shar: Extracting \"'fonts.lj/S.9.pk.UU'\" \(5098 characters\)
  sed "s/^X//" >'fonts.lj/S.9.pk.UU' <<'END_OF_FILE'
Xtable
X !"#$%&'()*+,-./0123456789:;<=>?
X@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
Xbegin 644 fonts.lj/S.9.pk
XM]UD``)``````````!":N``0FKL!!(0```!T=)?\;WQWB_=+=\MWRW?+=\MWR
XMW?+=\L'0*ST"H1/"D2.RT3HM$Y+3."TS<M4V+5\U+7\S+9\Q+;]-WRU`T#DD
XM````)B$0_@]5U8F4,E)4<H$RA$*A(:,RL1'#$M+]0!`O`032TA/!$;(SH2&B
XM1((Q@G124C29A=50P!8E````'AH4_A*TV/;80(`"<(!-CVV$L-`L)@```!X9
XM$/X/1<0X@U)44F&$,G&3(G\;6!PY'3CQQ8&B(W&2-'%R5'(SAD7$V"DJ````
XM'A,2^Q$@$5TQ.S,Y-3<W-3DS.S$]]=,3LS.34W-S4Y,SLQ/5`1*H"2T````>
XM%P+]"=/`*#P````>%Q;]$]<]5-1-1-1-1-1-1-1-1-3TV$V$V$V$V$V$V$V$
XMV$V#R"@]````'A<6_1,]A-A-A-A-A-A-A-A-A-CTU$U$U$U$U$U$U$U$U$U3
XMU\@80P```!@3&OX9U5.#4Y)3H5.BXD.Q[30\Q\`X1````"`;&OX9T!W//:79
XM$3V/$SUO%3U/%STO&3T!L[*TH=`Y+02!TC<M)&'4-2U$0=8S+60MP0*0P#Y(
XM````'AD:_AF7TS4\.3D[-ST#5-!$/2,TTD(]0Q34@QD3CB.S@QD3C]1!/4,D
XMTD,](T3013T#<[.3D\-3TWG`)DL````;&!K_&;XBV.)-;B$CU.(4/2XA8]#B
XM&#OB&CGQPW+#9+0X:F@93@```!H5&OX9E.)\'`\786]X;Q=AU>,7R4#(#U``
XM```=&!K^&=OMI#HTLK#(/%(````<%QK^&=DCT4)-(C/3%#TB--(4/2%3T15-
XM<]@]=-<]@MCQV!V!T18=(5'3%!TR,=04'3(QTD+8'9'0'%,````.#13_#W92
XM43*BKRKROSI*66AX6DHZ\H-0P"%4````'AD:_ADTM$AX*5D25#13<S-R@Q.!
XMXJ(2V.TCU-!@P#95````'!<:_AE=#2XSU)PR,C@T-#4U-3-%-4(V-C'C1C9!
XM-C8R135#-34U-#0X,C(\G4XSTM!0P"U7````'AD:_AEM#4XSM'-T(V-C7F-3
XM4W)34H\T-#DS,SLC,RT#$Q/3?7XSU-!@T#%8````'!<:_AF'U%23DV2T0],T
XMU!Y4`13Q34/STU.S<K*#DT%"DD+U&141%"<D$N)W<<@X60```"`;&OX9`I'<
XM)-8C/6%$U"4]0632)STAA-`I/0&DLK.QT/.1TO-QU/-1UO,QV#$=E=KSW!T`
XMP#5:````%!(:_AF%LD*1@8&";S@M,M/B-U,U)1(T)T0H0RE".4'SHR.B,Y,R
XMHD*30X)B<H)#II!`+5P````>%Q_]%V`EY%Q%Q%Q%Q%Q%Q%Q%Q%Q%TV!&!&!&
XM!&!&!&!&!&!&!&`M5Y"H+%X````>%Q_]%RNDNDNDNDNDNDNDNDNDNDNCMTMD
XMMDMDMDMDMDMDMDMDN"!TTZ@)7P```!,3`P#XWL`P80```!D4$/X/9=$C-A,U
XM)1,V-!,H,Q(X,A,I,A+SDQ$SE$.34J-3DV)U<5(R(55C,,!`8@```!84(?\9
XMT$T20K%BH7/X&#]QDV&3<9*!-Y$Q,I%'@9-QHG&3;B&C8:)BDV*2<H-Q$6-Q
XM,4*11:\=7C'5'6#`*6,````4$A?^#T21-G$X820502)R02&1,=`3'1\1'2XB
XMT^(=/B+2XRTQ@-`Q9````!$.&OX9A()!8F%2ORP[2EI:6"%%,S0U)"8C-Q,H
XM$C@2\W(C<3)R,V%247(QE'#0%F4````0#!#^#V9#@I./.)/D.O*R464PT"=F
XM````$0\A_AF>(0$&@D%R%6+"PM'2SRSB+.0M\\3&J(BFSST9$RI%T"-G````
XM$Q`7_@\C5#$B(C(1-%3B,V/C,V,^,V,S8U)CWSSC/270,6@````2#QK_&9.Q
XM,H%"<D-28D-B0F/S-CXB-S\=+S<R\G,C<C-C0F)24U)28D*"(J.0T!=I````
XM#@D0_@]"<UXS7B-3;S1%1!(C%$/0*6H````6$1#^#T)S4U$3,T(B0S&C(;,1
XMM<F#0W-37B-C,1-C(1."(2*3(,`O:P```!82&OX91-,]/STDTO/232\])-+B
XM/2307"$[(DDD."4W-44W-#@S.4$[,2Q`P"=L````%Q(7_@]2<G-C7C-C7C-C
XM7B-C,2-4,14Q(B$C%$,_/1XSTBTPT"1M````$Q$0_@\6<E-SXC-S0V-#<T-C
XM4V)C4F-2<T*#,I,BEK30T"MN````$0\A_QF>(0$&<T%B)5.SOD/2%8)1819A
XMTL\L\M\]2WF)BFP\*1,J1-`C;P```!,.$/X/98)!4U(S8R*"$W,2AOAH(3<Q
XM*"(V,R4U%"A6P"9P````%A,0_@\],M0=0B03%Q83'0(QT/$RSR,K)"LD.?-#
XM@U2"8F#0*7$````4$!?^#Y2C,G)28V)2<D-RXS-S(W,S<D-C0V)#$3-3)'\\
XMXST@$,`B<@```!83$/X/;071310T1S8V-S8H->(X-?*#8G."8I)#Q;#`'',`
XM```1$1#^#ST2TATB)!D6'2XBT>(M'B/0/2*PT"=T````%1$0_@\S@C$B9!$S
XM9$-S\S@D.!3SD4.!0Y%#@6*!8V&"0J5PP#YU````%Q(A_AG0\=/C'3XQT6DR
XM$C8D%"0E%",E%3$U%3$F%685919E%B$U%3$U%2,D%20D%"8R$CEM'C'3XAS`
XM.78````8%!?_#S3!(2.A(32!@X&$8:-1LT'$(=$Q'233/5\]--(130$SP4.Q
XM4[%4D7.!A#$AHR$AQ##`0W<````9%2'^&=+QUN,=;C&C85(Q(E%$$3-!5$-!
XM8_,T%R0T%Q0U%Q0T&!0T%Q0U%Q4E%A8S%A<S%1DR$RQ]/C'6XAT`P#!X````
XM&!40_P\QT20=!"'2,ATR$=0A&"<_DG$1@H$1@G$A@F(B8U(T%R0X&%8V=%-P
XMB`EY````"P(E_!O1T!=Z````$PPE_1N3<X..PX.#9+.CKL.CH[/8%WL````3
XM#"7]&TLZ.NPZ.CLW.#CL.#@V2-`@?````!X9$OX110$1.-$JP1-4I8.%I%,1
XMRB'8,0$5"U`T.`U]````'AD2_A%NTF[2;M@A?@```!,.)?X;\MXBWB+>(MXB
XMWB+>(MXBWB+>(MXBWB+2T<`\?P```!X:&OX9185I23-3(U,B=G(3A(7Z*DXM
XME=<Q+7(CU3,M4D/3-3T3<\.3H[.#T#8](T/4,CUFV/3:+,`8H0```!,.(?X9
XM<<*_21$A%B(B(B0D+MQB8)`7H@```"8A#/X.L/&W&W&W$]BS&U&U&U\6T!BC
XM````$PXA_AEN`;)B0D(B(B)A$A&?2RT6D!>D````)B`,_0Y?&T&T&T&SUB&V
XM&V&V\;#():8````3$!+_$2T4Q;(4DC1R5%)S0H0O*FDR)T,E12-'(CEJ3"T0
XMP"6H````$Q`2_Q'1+$M902=#)44D-R)(;Z(CDC1R5%)T,I,BIL31(*@)L```
XM`!,3`P`<WL@5M0```!H5%OX5[3+472,3T#-)1M"I8,`5M@```!H5%OX5::T&
XM24,]`Q/27M/4(+`GMP```!H3&/T4BVP43"/#/$+$/$+$/$\L7<_%/%+%/%+%
XM/%/%3%P8L,`FN@```!X7&/T4C2;41-4]8]<M<]<M<]?E+8/8+8/8+8/8/838
XMU(T@R":[````'A<8_132C4V$V#V#V"V#V"V#Y=@M<]<M<]<M<]8]5$U&TH#`
XM)[X````>%Q_]%XTFU$35/6/6/7\M<]?D+8/8\M@]@]@]A-C4C2!^_9#()[\`
XM```>%Q_]%]*-3838/8/8/8\M@^38+7/]<M<]8]8]5$U&T@A?V1"X#,@````:
XM%0K^#=[GQR#0%,P````3#A#^$%2(6C_!!6\<.EB$4+!%S0```"8A(?X9P7R\
XM'&5UPDP4L\4Y/'-SR34\LT+-(SS3+RSR$\]>;17//Q+/(CS3,LTD/+-3R3<\
XM<Y/%.TP4PE=<;!RWP=`:S@```!$-(?X98;Y#OB%S(2,=$R$C?QOM.^06P"//
XM````$0TA_AEAOC.Q<4%!'=]AOC.QW!OC._%MT104%QOC.Q;0)=4````0#R'^
XM&:.R(:(BDA.",9XBSD.^8[Y#SB*1,H,2DB*A(K.@T#/8````$PX>_ANO)W4D
XM)?)3,E4O)2$A-#%N)")C,F\R-B,VXB)&$T/Q(24B5#/S4E)"5W\JP%O9````
XM)B$A_AG0?:T-9'33/0/0/2.RUBDM@G\MHE+<(RQX(BHF)R(I)C<A*3<922U4
XMY(/5(2<]0B*"U"(H.!<C*"@6)2@F%B8J9R<M@I+6*STCT#T#TT=-;0VGT+@-
XMV@```!<2$_X2VNPL+:"8"^`````B"R7R&M+K5J@,X0```"(+)?(<[$5MP,`9
XMX@```"(-)?(:LI2$A(2$A(6$A82/6$CME8#0&N,````B#2?Z'(ZU]U=75U=5
XM9SIJ65E96?6>M<@8Y````"(-)?(<[964GUE)64E92DI*2DI+(*@,\````"(+
XM)?@:W.Q&4)`+\0```"(+)?@<;K72R!CR````(@TE^AHK2DI*2DI)64E92?64
XMGME0V!KS````(@TG\ASK6?65E965IJ-V575U=7]7ZUC`&?0````B#27Z'([9
XM6$CUA(6$A82$A(2$A)*P"`GU````(@4G\AS2N`GV````)B4!``G9L"C[````
XM)B$6_A/!'3+2\M(M(M+-;/4\],]---,]0M3.C-DM0M3RU"U!QW@*_````!<2
XM$_X2#^"P*/T````F(1;^$\<=0M3RU"U"G-C/TSU$TTSTT#T2;.?-TBTBTO+2
X8+3'!T!#^````'AD:_AC.LK`TZ<*P-/7V
X`
Xend
END_OF_FILE
  if test 5098 -ne `wc -c <'fonts.lj/S.9.pk.UU'`; then
    echo shar: \"'fonts.lj/S.9.pk.UU'\" unpacked with wrong size!
  fi
  # end of 'fonts.lj/S.9.pk.UU'
fi
if test -f 'man/dumpft.1.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man/dumpft.1.S'\"
else
  echo shar: Extracting \"'man/dumpft.1.S'\" \(3182 characters\)
  sed "s/^X//" >'man/dumpft.1.S' <<'END_OF_FILE'
X.\"Copyright 1988 by Chris Lewis 2.3 91/03/20
X.TH DUMPFT %%MANEXT%% "Psroff %%T2VERSION%%"
X.SH NAME
Xdumpft \- Look at troff font width files
X.SH SYNOPSIS
X.B dumpft
X.B "[\-s]"
X.B "[\-t]"
X.B "[\-w]"
X.B "[\-f]"
X.B "[\-d]"
X.BI "[\-h" skip "]"
X.BI "[" options "]"
X< width
X.SH DESCRIPTION
XThe
X.B dumpft
Xprogram allows you to look at CAT troff width files.
XIt produces on standard output a ditroff-like width table.
XThe unitwidth is 6 and the resolution is 432, so the numbers
Xyou see are precisely the same as are in the CAT file.
X.PP
XThe produced width table can be modified and used with
X.B dit2catwid
Xto generate new width tables, but you should specify
Xthe
X.B \-d
Xoption.
XThe
X.B \-d
Xoption tells dumpft to generate the widths with a unitwidth of 10
Xand resolution 300 which matches the
X.B dit2catwid
Xdefaults.
X.RB ( dit2catwid
Xdoesn't support changing unitwidth (yet)).
X.PP
XThe
X.B \-s
Xoption tells
X.B dumpft
Xthat the width table it's reading is for the
Xsymbol font
X(usually
X.BR ftS ")."
X.PP
XThe
X.B \-t
Xoption tells
X.B dumpft
Xto dump the names of each of the characters in the font table
Xa form suitable for wrapping .TS/.TE around to generate a full
Xset of CAT troff character tables.
X.PP
XThe
X.B \-w
Xoption tells
X.B dumpft
Xto dump all of the characters in the font table
Xas a set of strings for inclusion in troff
Xdocuments.
X.PP
XSimilarly, the
X.B \-f
Xoption tells psroff to generate a formatted example of all CAT troff
Xcharacters in the R, I, B and S fonts.
X.PP
XFor various reasons, you might want to look at CAT troff width tables
Xfrom systems that have different width file formats.
XCAT troff width files vary from system to system by how much extraneous
Xjunk is prepended to the actual 224 byte table.
XOften, width tables are generated by compiling a C char array.
XSome vendors remove the a.out header from the beginning of the resultant
Xobject file, and others leave it there.
XIn order to interpret the width tables the program must skip over
Xthe junk (if any).
X.PP
XThe
X.BI "\-h" skip
Xtells
X.B dumpft
Xto skip \fIskip\fP bytes before reading the table.
XThe default
Xskip is set to what you built
X.B psroff
Xwith (HEADERSIZE define), you only need to specify
X.B \-h
Xif you're reading width files from another system.
X.PP
XFYI: Xenix usually has HEADERSIZE 0.
XSun and Ultrix (and probably other BSD derived systems)
Xshould have HEADERSIZE 32.
X.PP
XIf you have difficulties setting HEADERSIZE correctly, you might
Xwant to use this option with varying settings
Xon /usr/lib/font/ftR (as supplied by your vendor) until
X.B dumpft
Xstops screeching about missing widths.
X.PP
X.B Dumpft
Xprovides error messages on stderr if width entries are
Xmissing or extra ones are found.
XIf you get lots of error messages, you're probably looking at a S
Xfont file without
Xthe
X.B \-s
Xoption or vice-versa, or HEADERSIZE is wrong.
X.PP
XFor the curious, the full set of width table entries are in the
Xsource for
X.B cattab.c
Xin the psroff source directory.
X.SH FILES
X.if t .ta 2.5i
X.if n .ta 3.5i
X%%FONTDIR%%/<width>/ft*	psroff-built width tables.
X.br
X%%FONTDIR%%/ft*	CAT width tables from your vendor.
X.SH "SEE ALSO"
Xtroff2ps(%%MANEXT%%), troff(1), cat(5L) and
Xcattab.c source.
X.SH AUTHOR
XWritten by Chris Lewis
END_OF_FILE
  if test 3182 -ne `wc -c <'man/dumpft.1.S'`; then
    echo shar: \"'man/dumpft.1.S'\" unpacked with wrong size!
  fi
  # end of 'man/dumpft.1.S'
fi
if test -f 'tests/chartab.m' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tests/chartab.m'\"
else
  echo shar: Extracting \"'tests/chartab.m'\" \(3285 characters\)
  sed "s/^X//" >'tests/chartab.m' <<'END_OF_FILE'
X.\"2.1 90/07/18
X.lg 1
X.DS
X.TS
Xallbox;
Xcf3 p14 s s s s s
Xc c c || c c c
Xl l l || l l l.
XMathematical and Other Characters
X=
Xcharacter	denotation	name	character	denotation	name
X=
X\(pl	\e(pl	math plus	\(ib	\e(ib	improper subset
X\(mi	\e(mi	math minus	\(ip	\e(ip	improper superset
X\(eq	\e(eq	math equal	\(if	\e(if	infinity
X\(**	\e(**	math star	\(pd	\e(pd	partial derivative
X\(sc	\e(sc	section	\(gr	\e(gr	gradient
X\(aa	\e\(aa or \e(aa	acute accent	\(no	\e(no	not
X\(ga	\e\(ga or \e(ga	grave accent	\(is	\e(is	integral sign
X\(ul	\(ul or \e(ul	underrule	\(pt	\e(pt	proportional to
X\(sl	\(sl or \e(sl	slash	\(es	\e(es	empty set
X\(sr	\e(sr	square root	\(mo	\e(mo	member of
X\(rn	\e(rn	root en	\(br	\e(br or |	box rule
X\(>=	\e(>=	\(>=	\(dd	\e(dd	dbl dagger
X\(<=	\e(<=	\(<=	\(rh	\e(rh	right hand
X\(==	\e(==	equivalence	\(lh	\e(lh	left hand
X\(~=	\e(~=	approx =	\(or	\e(or	or
X\(ap	\e(ap	approximates	\(ci	\e(ci	circle
X\(!=	\e(!=	not equal	\(lt	\e(lt	left top of big { and (
X\(->	\e(->	right arrow	\(lb	\e(lb	left bot of big { and (
X\(<-	\e(<-	left arrow	\(rt	\e(rt	right top of big } and )
X\(ua	\e(ua	up arrow	\(rb	\e(rb	right bot of big } and )
X\(da	\e(da	down arrow	\(lk	\e(lk	left ctr of big { and (
X\(mu	\e(mu	multiply	\(rk	\e(rk	right ctr of big } and )
X\(di	\e(di	divide	\(bv	\e(bv	bold vertical
X\(+-	\e(+-	plus-minus	\(lf	\e(lf	left floor
X\(cu	\e(cu	cup (union)	\(rf	\e(rf	right floor
X\(ca	\e(ca	intersection	\(lc	\e(lc	left ceiling
X\(sb	\e(sb	subset of	\(rc	\e(rc	right ceiling
X\(sp	\e(sp	superset of
X.TE
X.DE
X.P
XAlignment test:
X.DS
X\(sr\(rn
X.DE
X.P
XLigatures:
Xfido, floor, snaffle, suffix, shuffle.
X.DS
X.EQ
Xsum from i=0 to {i= inf} x sup i
X.EN
X.EQ
Xsqrt a+b + 1 over sqrt {ax sup 2 +bx+c}
X.EN
X.EQ
Xsqrt {a sup 2 over b sub 2}
X.EN
X.TS
Xallbox;
Xcf3 p14 s s s s s
Xc c c || c c c
Xl l l || l l l.
XGreek Characters
X=
Xcharacter	denotation	name	character	denotation	name
X=
X\(*a	\e(*a	alpha	\(*A	\e(*A	Alpha
X\(*b	\e(*b	beta	\(*B	\e(*B	Beta
X\(*g	\e(*g	gamma	\(*G	\e(*G	Gamma
X\(*d	\e(*d	delta	\(*D	\e(*D	Delta
X\(*e	\e(*e	epsilon	\(*E	\e(*E	Epsilon
X\(*z	\e(*z	zeta	\(*Z	\e(*Z	Zeta
X\(*y	\e(*y	eta	\(*Y	\e(*Y	Eta
X\(*h	\e(*h	theta	\(*H	\e(*H	Theta
X\(*i	\e(*i	iota	\(*I	\e(*I	Iota
X\(*k	\e(*k	kappa	\(*K	\e(*K	Kappa
X\(*l	\e(*l	lambda	\(*L	\e(*L	Lambda
X\(*m	\e(*m	mu	\(*M	\e(*M	Mu
X\(*n	\e(*n	nu	\(*N	\e(*N	Nu
X\(*c	\e(*c	xi	\(*C	\e(*C	Xi
X\(*o	\e(*o	omicron	\(*O	\e(*O	Omicron
X\(*p	\e(*p	pi	\(*P	\e(*P	Pi
X\(*r	\e(*r	rho	\(*R	\e(*R	Rho
X\(*s	\e(*s	sigma	\(*S	\e(*S	Sigma
X\(ts	\e(ts	terminal sigma
X\(*t	\e(*t	tau	\(*T	\e(*T	Tau
X\(*u	\e(*u	upsilon	\(*U	\e(*U	Upsilon
X\(*f	\e(*f	phi	\(*F	\e(*F	Phi
X\(*x	\e(*x	chi	\(*X	\e(*X	Chi
X\(*q	\e(*q	psi	\(*Q	\e(*Q	Psi
X\(*w	\e(*w	omega	\(*W	\e(*W	Omega
X.TE
X.DE
X.DS
X.TS
Xallbox;
Xcf3 p14 s s s s s
Xc c c || c c c
Xl l l || l l l.
XNon-ASCII Characters and minus on the Standard Fonts
X=
Xcharacter	denotation	name	character	denotation	name
X=
X\&`	\`	open quote	\(34	\e(34	3/4
X\&'	\'	close quote	\(fi	\e(fi	fi
X\&``	\`\`	open double quotes	\(fl	\e(fl	fl
X\&''	\'\'	close double quotes	\(ff	\e(ff	ff
X\(em	\e(em	3/4 em	\(Fi	\e(Fi	ffi
X\(hy	\e(hy	- hyphen	\(Fl	\e(Fl	ffl
X\-	\e-	minus	\(de	\e(de	degree
X\(bu	\e(bu	bullet	\(dg	\e(dg	dagger
X\(sq	\e(sq	square	\(fm	\e(fm	foot mark
X\(ru	\e(ru	rule	\(ct	\e(ct	cent sign
X\(14	\e(14	1/4	\(rg	\e(rg	registered
X\(12	\e(12	1/2	\(co	\e(co	copyright
X.TE
X.DE
X.S
END_OF_FILE
  if test 3285 -ne `wc -c <'tests/chartab.m'`; then
    echo shar: \"'tests/chartab.m'\" unpacked with wrong size!
  fi
  chmod +x 'tests/chartab.m'
  # end of 'tests/chartab.m'
fi
if test -f 'tests/testtab.m' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tests/testtab.m'\"
else
  echo shar: Extracting \"'tests/testtab.m'\" \(3044 characters\)
  sed "s/^X//" >'tests/testtab.m' <<'END_OF_FILE'
X.\" 2.3 91/03/25
X.po .25i
X.in 0
X.fp 1 R
X.fp 2 I
X.fp 3 B
X.fp 4 S
X.ps 12
X.vs 14
X.sp |.3i
X.ce 4
XPSROFF TEST SHEET (2.3)
X.br
XPlease fill out and mail to: BOX 13215
X.br
XKanata PO, Kanata, Ontario, Canada K2K 1X4
X.br
X\*(2d \*(2v \*(pt
X.ps 10
X.vs 12
X.TS
Xl lw(1.2i) l lw(1.2i) l lw(1.2i).
X
XUNIX	_	Hardware:	_	Printer	_
Xversion				make/model
X
XName:	_	E-mail 	_	driver/printer	_
X		address		(ps/dt/lj)
X.TE
X.TS
Xbox;
Xc s s s s s s s s s s s s s s s
Xl l | l l | l l | l l | l l | l l | l l | l l.
XNormal Font Listing
X_
X!	!	$	$	%	%	&	&	'	'	(	(	)	)	*	*
X_
X+	+	,	,	\-	\e-	\.	.	/	/	0	0	1	1	2	2
X_
X3	3	4	4	5	5	6	6	7	7	8	8	9	9	:	:
X_
X;	;	\&=	\&=	?	?	A	A	B	B	C	C	D	D	E	E
X_
XF	F	G	G	H	H	I	I	J	J	K	K	L	L	M	M
X_
XN	N	O	O	P	P	Q	Q	R	R	S	S	T	T	U	U
X_
XV	V	W	W	X	X	Y	Y	Z	Z	[	[	]	]	`	`
X_
Xa	a	b	b	c	c	d	d	e	e	f	f	g	g	h	h
X_
Xi	i	j	j	k	k	l	l	m	m	n	n	o	o	p	p
X_
Xq	q	r	r	s	s	t	t	u	u	v	v	w	w	x	x
X_
Xy	y	z	z	|	|	\(hy	\e(hy	\(bu	\e(bu	\(sq	\e(sq	\(em	\e(em	\(ru	\e(ru
X_
X\(14	\e(14	\(12	\e(12	\(34	\e(34	\(fi	\e(fi	\(fl	\e(fl	\(ff	\e(ff	\(Fi	\e(Fi	\(Fl	\e(Fl
X_
X\(de	\e(de	\(dg	\e(dg	\(fm	\e(fm	\(rg	\e(rg	\(co	\e(co	\(ct	\e(ct
X.T&
Xc s s s s s s s s s s s s s s s
Xl l | l l | l l | l l | l l | l l | l l | l l.
X=
XSymbol Font Listing
X_
X"	"	#	#	<	<	>	>	@	@	\e	\ee	^	^	\(br	\e(br
X_
X{	{	}	}	~	~	\(sc	\e(sc	\(aa	\e(aa	\(ga	\e(ga	\(ul	\e(ul	\(sl	\e(sl
X_
X\(*a	\e(*a	\(*b	\e(*b	\(*g	\e(*g	\(*d	\e(*d	\(*e	\e(*e	\(*z	\e(*z	\(*y	\e(*y	\(*h	\e(*h
X_
X\(*i	\e(*i	\(*k	\e(*k	\(*l	\e(*l	\(*m	\e(*m	\(*n	\e(*n	\(*c	\e(*c	\(*o	\e(*o	\(*p	\e(*p
X_
X\(*r	\e(*r	\(*s	\e(*s	\(*t	\e(*t	\(*u	\e(*u	\(*f	\e(*f	\(*x	\e(*x	\(*q	\e(*q	\(*w	\e(*w
X_
X\(*G	\e(*G	\(*D	\e(*D	\(*H	\e(*H	\(*L	\e(*L	\(*C	\e(*C	\(*P	\e(*P	\(*S	\e(*S	\(*U	\e(*U
X_
X\(*F	\e(*F	\(*Q	\e(*Q	\(*W	\e(*W	\(sr	\e(sr	\(ts	\e(ts	\(rn	\e(rn	\(>=	\e(>=	\(<=	\e(<=
X_
X\(==	\e(==	\(mi	\e(mi	\(~=	\e(~=	\(ap	\e(ap	\(!=	\e(!=	\(->	\e(->	\(<-	\e(<-	\(ua	\e(ua
X_
X\(da	\e(da	\(eq	\e(eq	\(mu	\e(mu	\(di	\e(di	\(+-	\e(+-	\(cu	\e(cu	\(ca	\e(ca	\(sb	\e(sb
X_
X\(sp	\e(sp	\(ib	\e(ib	\(ip	\e(ip	\(if	\e(if	\(pd	\e(pd	\(gr	\e(gr	\(no	\e(no	\(is	\e(is
X_
X\(pt	\e(pt	\(es	\e(es	\(mo	\e(mo	\(pl	\e(pl	\(dd	\e(dd	\(rh	\e(rh	\(lh	\e(lh	\(**	\e(**
X_
X\(bs	\e(bs	\(or	\e(or	\(ci	\e(ci	\(lt	\e(lt	\(lb	\e(lb	\(rt	\e(rt	\(rb	\e(rb	\(lk	\e(lk
X_
X\(rk	\e(rk	\(bv	\e(bv	\(lf	\e(lf	\(rf	\e(rf	\(lc	\e(lc	\(rc	\e(rc
X.TE
X.br
X!$%&'()*+,\(\-\./0123456789:;=?ABCDEFGHIJKLMNOPQRSTUVWXYZ[
X.br
X]`abcdefghijklmnopqrstuvwxyz|\(hy\(bu\(sq\(em\(ru\(14\(12\(34\(fi\(fl\(ff\(Fi\(Fl\(de\(dg\(fm\(rg\(co\(ct
X.br
X"#<>@\e^\(br{}~\(sc\(aa\(ga\(ul\(sl\(*a\(*b\(*g\(*d\(*e\(*z\(*y\(*h\(*i\(*k\(*l\(*m\(*n\(*c\(*o\(*p\(*r\(*s\(*t\(*u\(*f\(*x\(*q\(*w\(*G\(*D\(*H\(*L\(*C\(*P\(*S\(*U\(*F\(*Q\(*W\(sr\(ts\(rn
X.br
X\(>=\(<=\(==\(mi\(~=\(ap\(!=\(->\(<-\(ua\(da\(eq\(mu\(di\(+-\(cu\(ca\(sb\(sp\(ib\(ip\(if\(pd\(gr\(no\(is\(pt\(es\(mo\(pl\(dd\(rh\(lh\(**\(bs\(or\(ci\(lt\(lb\(rt\(rb\(lk\(rk\(bv\(lf\(rf\(lc\(rc
X.br
X\f1Roman 10p\fP
X\f2Italic 10p\fP
X\f3Bold 10p\fP
X\f1Roman 10p\fP
X\f2Italic 10p\fP
X\f3Bold 10p\fP
X.br
X.ps 16
X.vs 18
X\f1Roman 16p\fP
X\f2Italic 16p\fP
X\f3Bold 16p\fP
X\f1Roman 16p\fP
X\f2Italic 16p\fP
X\f3Bold 16p\fP
END_OF_FILE
  if test 3044 -ne `wc -c <'tests/testtab.m'`; then
    echo shar: \"'tests/testtab.m'\" unpacked with wrong size!
  fi
  chmod +x 'tests/testtab.m'
  # end of 'tests/testtab.m'
fi
if test -f 'utils/catconv.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/catconv.S'\"
else
  echo shar: Extracting \"'utils/catconv.S'\" \(5458 characters\)
  sed "s/^X//" >'utils/catconv.S' <<'END_OF_FILE'
X#! /usr/bin/perl
Xeval "exec  /usr/bin/perl -S $0 $*"
X	if $running_under_some_shell;
X
X#	NOTE: some perl's don't get installed in /usr/bin/perl - you
X#	may have to fix the above lines to suit your installation.
X
X#	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X#		All Rights Reserved
X#
X#    See the LICENSE file for a full description of the restrictions
X#    under which this software is provided.
X#
X#	This does a very simpleminded conversion of ditroff-only-isms
X#	(such as graphics) into something handleable by CAT troff.
X#	1.6 91/03/25
X$cc{'em'}=1; $cc{'ru'}=1; $cc{'14'}=1; $cc{'12'}=1; $cc{'hy'}=1;
X$cc{'34'}=1; $cc{'fi'}=1; $cc{'fl'}=1; $cc{'ff'}=1; $cc{'ct'}=1;
X$cc{'Fl'}=1; $cc{'Fi'}=1; $cc{'de'}=1; $cc{'dg'}=1; $cc{'rg'}=1;
X$cc{'bu'}=1; $cc{'fm'}=1; $cc{'co'}=1; $cc{'sq'}=1; $cc{'*q'}=1;
X$cc{'*h'}=1; $cc{'*n'}=1; $cc{'*m'}=1; $cc{'*l'}=1; $cc{'*i'}=1;
X$cc{'*z'}=1; $cc{'*s'}=1; $cc{'*d'}=1; $cc{'*b'}=1; $cc{'*c'}=1;
X$cc{'*y'}=1; $cc{'*f'}=1; $cc{'*u'}=1; $cc{'*k'}=1; $cc{'*p'}=1;
X$cc{'da'}=1; $cc{'*a'}=1; $cc{'or'}=1; $cc{'*x'}=1; $cc{'*e'}=1;
X$cc{'eq'}=1; $cc{'*o'}=1; $cc{'<-'}=1; $cc{'*r'}=1; $cc{'ua'}=1;
X$cc{'*t'}=1; $cc{'ul'}=1; $cc{'*Q'}=1; $cc{'bs'}=1; $cc{'if'}=1;
X$cc{'*g'}=1; $cc{'ip'}=1; $cc{'pt'}=1; $cc{'rh'}=1; $cc{'*w'}=1;
X$cc{'gr'}=1; $cc{'*F'}=1; $cc{'*H'}=1; $cc{'*W'}=1; $cc{'cu'}=1;
X$cc{'rn'}=1; $cc{'ts'}=1; $cc{'*L'}=1; $cc{'mi'}=1; $cc{'*G'}=1;
X$cc{'is'}=1; $cc{'*P'}=1; $cc{'sb'}=1; $cc{'sp'}=1; $cc{'ap'}=1;
X$cc{'pd'}=1; $cc{'*D'}=1; $cc{'sr'}=1; $cc{'*S'}=1; $cc{'~='}=1;
X$cc{'*C'}=1; $cc{'sl'}=1; $cc{'ca'}=1; $cc{'*U'}=1; $cc{'no'}=1;
X$cc{'rc'}=1; $cc{'lt'}=1; $cc{'bv'}=1; $cc{'lk'}=1; $cc{'lb'}=1;
X$cc{'rt'}=1; $cc{'rk'}=1; $cc{'rb'}=1; $cc{'rf'}=1; $cc{'lf'}=1;
X$cc{'lc'}=1; $cc{'mu'}=1; $cc{'di'}=1; $cc{'+-'}=1; $cc{'<='}=1;
X$cc{'>='}=1; $cc{'=='}=1; $cc{'!='}=1; $cc{'aa'}=1; $cc{'ga'}=1;
X$cc{'lh'}=1; $cc{'mo'}=1; $cc{'es'}=1; $cc{'dd'}=1; $cc{'br'}=1;
X$cc{'**'}=1; $cc{'ib'}=1; $cc{'ci'}=1; $cc{'pl'}=1; $cc{'->'}=1;
X$cc{'sc'}=1;
X
X@regnames = split(//,
X    "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
X$regpref = "@";
X$inpic = 0;
Xprint(".de lf\n");
Xprint(".mk\n");
Xprint("..\n");
X
Xwhile($line = <STDIN>) {
X    chop($line);
X    $index = 0;
X    if ($line =~ /^\.PS/) {
X	$inpic = 1;
X	print "$line\n";
X	next;
X    }
X    if ($line =~ /^\.PE/) {
X	$inpic = 0;
X	print "$line\n";
X	next;
X    }
X    if ($inpic && ($line eq '.sp -1')) {
X	printf(".rt\n");
X	next;
X    }
X    if ($line =~ /\\D'/) {
X	$line = do process($line);
X    }
X    if ($line =~ /\\X'/) {
X	$line = do Xprocess($line);
X    }
X    $line = do findspecials($line);
X    print "$line\n";
X    while($index) {
X	print ".rr" . $regpref . $regnames[--$index] . "\n";
X    }
X}
X
Xsub findspecials {
X    local($line, $newline, $pre, $opcode, $arglist) = ($_[0]);
X#    printf("in process: $line\n");
X    $predefs = '';
X    while($line =~ /\\\((..)/) {
X	($pre, $line, $char) = ($`, $', $1);
X#	print("pre: $pre\nline: $line\nopcode: $opcode\narglist: $arglist\n");
X	$newline .= $pre;
X	if ($cc{$char}) {
X	    $newline .= "\\($char";
X	} else {
X	    $newline .= "\\ka\\o'\\(bs\\(bs'C$char\\(bs\\h'|\\nau+1n'";
X	}
X    }
X    $newline .= $line;
X    return("$predefs$newline");
X}
X
Xsub process {
X    local($line, $newline, $pre, $opcode, $arglist) = ($_[0]);
X#    printf("in process: $line\n");
X    $predefs = '';
X    while($line =~ /\\D'\s*(.)\s*([^']+)'/) {
X	($pre, $line, $opcode, $arglist) = ($`, $', $1, $2);
X#	print("pre: $pre\nline: $line\nopcode: $opcode\narglist: $arglist\n");
X	$newline .= $pre;
X	$newargs = '';
X	$newy = '';
X	$newx = '';
X	@args = split(/[ \t]+/, $arglist);
X	for ($i = 0; $i <= $#args; $i++) {
X	    $arg = $args[$i];
X	    if ($arg =~ '-') {
X		$arg = "0$arg";
X	    }
X	    $num = $regpref . $regnames[$index];
X	    $predefs .= ".nr $num $arg\n";
X	    $newargs .= "\\(ts\\n($num";
X	    if ($opcode eq '~') {
X		if ($i % 2) {
X		    $newy .= "+\\n($num";
X		} else {
X		    $newx .= "+\\n($num";
X		}
X	    }
X	    $index++;
X	}
X	$newline .= "\\ka\\o'\\(bs\\(bs'D$opcode$newargs\\(bs\\h'|\\nau";
X	# Reposition...
X	if ($opcode eq 'l') {
X	    $newline .= sprintf("+\\n(%s%su'\\v'\\n(%s%su'",
X		$regpref, $regnames[$index - 2], $regpref, $regnames[$index - 1]);
X	} elsif ($opcode eq 'c' || $opcode eq 'C') {
X	    $newline .= sprintf("+\\n(%s%su'", $regpref, $regnames[$index - 1]);
X	} elsif ($opcode eq 'e' || $opcode eq 'E') {
X	    $newline .= sprintf("+\\n(%s%su'", $regpref, $regnames[$index - 2]);
X	} elsif ($opcode eq '~') {
X	    # drop leading + sign
X	    $newy = substr($newy, 1, 9999);
X	    $newline .= "$newx'\\v'$newy'";
X	} else {
X	    $newline .= "'";
X	}
X	if ($line) {
X	    $newline .= "\\\n";
X	}
X    }
X    $newline .= $line;
X    return("$predefs$newline");
X}
X
Xsub Xprocess {
X    local($line, $newline, $pre, $opcode, $arglist) = ($_[0]);
X#    printf("in process: $line\n");
X    $predefs = '';
X    while($line =~ /\\X'\s*(.)\s*([^']+)'/) {
X	($pre, $line, $opcode, $arglist) = ($`, $', $1, $2);
X#	print("pre: $pre\nline: $line\nopcode: $opcode\narglist: $arglist\n");
X	$newline .= $pre;
X	$newargs = '';
X	$newy = '';
X	$newx = '';
X
X	if ($arglist =~ /[-0-9]+/) {
X	    if ($arglist =~ '-') {
X		$arglist = "0$arglist";
X	    }
X	    $num = $regpref . $regnames[$index];
X	    $predefs = ".nr $num $arglist\n";
X	    $newargs = "\\(ts\\n($num";
X	    $index++;
X	} else {
X	    $newargs = "$arglist";
X	}
X	$newline .= "\\ka\\o'\\(bs\\(bs'$opcode$newargs\\(bs\\h'|\\nau'";
X    }
X    $newline .= $line;
X    return("$predefs$newline");
X}
END_OF_FILE
  if test 5458 -ne `wc -c <'utils/catconv.S'`; then
    echo shar: \"'utils/catconv.S'\" unpacked with wrong size!
  fi
  # end of 'utils/catconv.S'
fi
if test -f 'utils/showfont.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/showfont.S'\"
else
  echo shar: Extracting \"'utils/showfont.S'\" \(4693 characters\)
  sed "s/^X//" >'utils/showfont.S' <<'END_OF_FILE'
X%%STARTSHELL%%
X#	Copyright 1989, 1990, 1991 Chris Lewis
X#		All Rights Reserved
X#
X#    See the LICENSE file for a full description of the restrictions
X#    under which this software is provided.
X#
X#@(#)showfont 2.2 91/02/20
X# Shell script to dump postscript fonts with widths into a pretty table
X# usage: showfont <fontname>
X# emits postscript to display the font called <fontname> along with
X# interesting font metrics.  If a file exists called <fontname>,
X# the file is merged with the postscript, and a second argument is
X# used for the font name.
X#
X#	Cell format:
X# octal    decimal    hex
X# height   CHARACTER
X# widthps
X# lbear    catwidth   rbear
X#
X# widthps is suitable for the widths/widthps/entries (unitwidth 10, res 720)
X# cat width is same scale as CAT: (unitwidth 6, res 432)
X# the Character is displayed at 18 point.
X
Xcopies=1
Xif [ $# = 0 ]
Xthen
X    echo "usage: showfont <fontname>" >&2
X    exit 1
Xfi
X(
Xcat << !END!
X%! PS-Adobe 1.0
X%%Title: showfont -- displays the font metrics in a pretty one page table
X%%Creator: Ken Marchant & Chris Lewis
X%%CreationDate: March 1989
X%%Pages: atend
X%%
X/SAVEOBJ save def
X!END!
X
Xif [ -r "$1" ]
Xthen
X    cat $1
X    shift
Xfi
Xfont=$1
Xcase $font in
X    /*)
X	font=`echo $font | sed -e 's/^.//'`
X	;;
Xesac
Xcat << !ENDTHING!
X
X(START showfont display $font `date`\n) print
Xflush
X/FONTname ($font) def
X
X%%  Setup functions used and etc...
X
X/rowmove {
X    /I exch def
X    I 16 mod 30 mul 72 add
X    680 I 16 idiv 30 mul sub
X    moveto
X} def
X
X/widths 259 array def
X/widthps 259 array def
X/heights 259 array def
X/lbear 259 array def
X/rbear 259 array def
X/tmp 1 string def
X.5 setlinewidth
X
X/Helvetica findfont 9 scalefont setfont
X
X%% Draw the grid around the cells
X%% and add the hex labels to the outside of the box
X
X0 1 16
X{
X    /i exch def
X    /j i 30 mul def
X    %% vertical lines
X    j 62 add dup 220 moveto
X    700 lineto
X    stroke
X
X    %% horizontal lines
X    j 220 add dup 62 exch moveto
X    542 exch lineto
X    stroke
X
X    i 16 ge { clear exit } if
X
X    %% hex across the top
X    j 77 add dup 705 moveto
X    i 16 (   ) cvrs show
X
X    %% hex along the sides
X    50 670 j sub 12 add moveto
X    i 16 (   ) cvrs show
X}
Xfor
X
X%	scale width in points at 18pts to width in 1/720'nds at 10 point.
X/myscaleps {
X    720 mul 72 div 10 mul 18 div round cvi
X} def
X
X
X%	scale width in points at 18 pts, to width in 1/432'nds at 6 point.
X/myscale {
X    2 mul
X    % 10 mul round cvi 10 div
X    round cvi
X} def
X
X/irmove {
X    CY add exch
X    CX add exch moveto
X} def
X
X%% Print out the headings in the font to be displayed and Times-Roman
X
X/Times-Roman findfont 18 scalefont setfont
X295 FONTname stringwidth pop .5 mul sub 750 moveto FONTname show
X
XFONTname findfont 18 scalefont setfont
X295 FONTname stringwidth pop .5 mul sub 730 moveto FONTname show
X
X%% loop thru all the charcters and display in 18 point
X%% insert the character widths into the widths array
X0 1 258
X{
X    newpath
X    /i exch def
X    i rowmove
X    i 255 gt {
X	i 256 eq { /tmp (ff) def } if
X	i 257 eq { /tmp (ffi) def } if
X	i 258 eq { /tmp (ffl) def } if
X    } {
X	/tmp 1 string def
X		 tmp 0 i put
X    } ifelse
X    tmp show
X
X    widths i tmp stringwidth pop dup /width exch def
X    myscale put
X
X    widthps i tmp stringwidth pop myscaleps put
X
X    %	Set current point again.
X    i rowmove
X    /curx currentpoint pop def
X
X    % retrieve bounding box info.
X    tmp false charpath flattenpath pathbbox
X    /ury exch def
X    /urx exch def
X    /lly exch def
X    /llx exch def
X
X    % calc left bearing as leftx - curx
X
X    lbear i llx curx sub myscale put
X
X    % calc height as upper y - lower y
X
X    heights i ury lly sub myscale put
X
X    % calc right bearing as width - upper x
X
X    rbear i width urx curx sub sub myscale put
X
X}
Xfor
X
X%%display the widths in the widths array
X
X/Helvetica-Narrow findfont 5 scalefont setfont
X
X0 1 258
X{
X    /i exch def
X
X    i rowmove
X
X    currentpoint /CY exch def /CX exch def
X
X    2 -8 irmove
X    widths i get (       ) cvs show
X
X    -9 8 irmove
X    heights i get (       ) cvs show
X
X    -9 0 irmove
X    widthps i get (       ) cvs show
X
X    -9 -8 irmove
X    lbear i get (       ) cvs show
X
X    12 -8 irmove
X    rbear i get (       ) cvs show
X
X    -9 15 irmove
X    i 8 (   ) cvrs show
X
X    1 15 irmove
X    i 10 (   ) cvrs show
X
X    12 15 irmove
X    i 16 (   ) cvrs show
X}
Xfor
X
XFONTname findfont 18 scalefont setfont
X72 144 moveto (This is a test of this font.) show
X72 124 moveto (ABCDEFGHIJKLMNOPQRSTUVWXYZ) show
X72 104 moveto (abcdefghijklmnopqrstuvwxyz) show
X72 84 moveto (0123456789!@#\$\\%^&*\\(\\)_+=) show
X72 64 moveto ({}[]\\\\|;:'",.<>?/&~\`) show
X
Xshowpage
X(END showfont display $font `date`\n) print
Xflush
XSAVEOBJ restore
X%%Pages: 1
X!ENDTHING!
Xecho "\004\c"
X)
END_OF_FILE
  if test 4693 -ne `wc -c <'utils/showfont.S'`; then
    echo shar: \"'utils/showfont.S'\" unpacked with wrong size!
  fi
  # end of 'utils/showfont.S'
fi
if test -f 'widths/widthps/HX' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'widths/widthps/HX'\"
else
  echo shar: Extracting \"'widths/widthps/HX'\" \(2918 characters\)
  sed "s/^X//" >'widths/widthps/HX' <<'END_OF_FILE'
X# Helvetica-BoldOblique
X#2.2 91/02/06
Xname HX
Xinternalname HelvBO
Xligatures fi fl ff ffi ffl 0
Xspacewidth 28
Xcharset
X!	33	2	041
X"	47	2	042
X#	56	2	043
X$	56	3	044
X%	89	2	045
X&	72	2	046
X'	28	2	047
X(	33	3	050
X)	33	3	051
X*	39	2	052
X+	58	0	053
X,	28	1	054
X-	33	0	055
Xhy	"
X.	28	0	056
X/	28	2	057
Xsl	"
X0	56	2	060
X1	56	2	061
X2	56	2	062
X3	56	2	063
X4	56	2	064
X5	56	2	065
X6	56	2	066
X7	56	2	067
X8	56	2	070
X9	56	2	071
X:	33	0	072
X;	33	1	073
X<	58	0	074
X=	58	0	075
X>	58	0	076
X?	61	2	077
X@	98	3	0100
XA	72	2	0101
XB	72	2	0102
XC	72	2	0103
XD	72	2	0104
XE	67	2	0105
XF	61	2	0106
XG	78	2	0107
XH	72	2	0110
XI	28	2	0111
XJ	56	2	0112
XK	72	2	0113
XL	61	2	0114
XM	83	2	0115
XN	72	2	0116
XO	78	2	0117
XP	67	2	0120
XQ	78	2	0121
XR	72	2	0122
XS	67	2	0123
XT	61	2	0124
XU	72	2	0125
XV	67	2	0126
XW	94	2	0127
XX	67	2	0130
XY	67	2	0131
XZ	61	2	0132
X[	33	3	0133
X\	28	2	0134
X]	33	3	0135
Xa^	58	2	0136	asciicircum
X_	56	1	0137
Xru	"
X`	28	2	0140
Xa	56	0	0141
Xb	61	2	0142
Xc	56	0	0143
Xd	61	2	0144
Xe	56	0	0145
Xf	33	2	0146
Xg	61	1	0147
Xh	61	2	0150
Xi	28	2	0151
Xj	28	3	0152
Xk	56	2	0153
Xl	28	2	0154
Xm	89	0	0155
Xn	61	0	0156
Xo	61	0	0157
Xp	61	1	0160
Xq	61	1	0161
Xr	39	0	0162
Xs	56	0	0163
Xt	33	2	0164
Xu	61	0	0165
Xv	56	0	0166
Xw	78	0	0167
Xx	56	0	0170
Xy	56	1	0171
Xz	50	0	0172
X{	39	3	0173
X|	28	3	0174
X}	39	3	0175
Xa~	58	0	0176	asciitilde
XI!	33	1	0241	exclamdown
Xct	56	3	0242	cent
Xpo	56	2	0243	sterling
X$J	56	2	0245	yen
Xsc	56	3	0247	section
Xfm	24	2	0251	quotesingle
Xn'	"
Xlq	50	2	0252	quotedblleft
Xd<	56	0	0253	guillemotleft
Xl<	33	0	0254	guilsinglleft
Xr>	33	0	0255	guilsinglright
Xfi	61	2	0256	fi
Xfl	61	2	0257	fl
X\-	56	0	0261	endash
Xdg	56	3	0262	dagger
Xdd	56	3	0263	daggerdbl
Xpp	56	3	0266	paragraph
Xbu	35	0	0267	bullet
Xbq	50	2	0271	quotedblbase
Xrq	50	2	0272	quotedblright
Xd>	56	0	0273	guillemotright
Xpm	100	2	0275	perthousand
XI?	61	1	0277	questiondown
Xga	33	2	0301	grave
X\`	"
Xaa	33	2	0302	acute
X\'	"
X^	33	2	0303	circumflex
X~	33	2	0304	tilde
Xma	33	2	0305	macron
Xbe	33	2	0306	breve
Xdt	33	2	0307	dotaccent
X..	33	2	0310	dieresis
Xum	"
Xri	33	2	0312	ring
Xcd	33	1	0313	cedilla
X''	33	2	0315	hungarumlaut
Xog	33	1	0316	ogonek
Xhc	33	2	0317	caron
Xem	100	0	0320	emdash
Xa:	56	2	0321	adieresis
Xo:	61	2	0322	odieresis
Xu:	61	2	0323	udieresis
XA:	72	2	0324	Adieresis
XO:	78	2	0325	Odieresis
XU:	72	2	0326	Udieresis
XAE	100	2	0341	AE
XPL	61	2	0350	Lslash
XO/	78	2	0351	Oslash
XOE	100	2	0352	OE
Xae	89	0	0361	ae
Xui	28	0	0365	dotlessi
XPl	28	2	0370	lslash
Xo/	61	0	0371	oslash
Xoe	94	0	0372	oe
Xss	61	2	0373	germandbls
Xff	61	2	0100	ff ligature - faked
XFi	89	2	0100	Fi ligature - faked
XFl	89	2	0100	Fl ligature - faked
X12	73	2	0100	1/2 faked - code is irrelevent
X13	73	2	0100	1/3 faked - code is irrelevent
X14	73	2	0100	1/4 faked - code is irrelevent
X18	73	2	0100	1/8 faked - code is irrelevent
X23	73	2	0100	2/3 faked - code is irrelevent
X34	73	2	0100	3/4 faked - code is irrelevent
X38	73	2	0100	3/8 faked - code is irrelevent
X58	73	2	0100	5/8 faked - code is irrelevent
X78	73	2	0100	7/8 faked - code is irrelevent
Xsq	100	3	0100	square box
END_OF_FILE
  if test 2918 -ne `wc -c <'widths/widthps/HX'`; then
    echo shar: \"'widths/widthps/HX'\" unpacked with wrong size!
  fi
  # end of 'widths/widthps/HX'
fi
echo shar: End of archive 15 \(of 19\).
cp /dev/null ark15isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    echo "Read the README to get started with psroff installation"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
