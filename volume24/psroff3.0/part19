Subject:  v24i114:  psroff, Troff to PostScript filter, Part19/19
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET

Submitted-by: Chris Lewis <clewis@ferret.ocunix.on.ca>
Posting-number: Volume 24, Issue 114
Archive-name: psroff3.o/part19

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  adapters/Makefile adapters/cmn.dit.S adapters/cmn.pre.S
#   adapters/tmac.an.S adapters/tmac.e.S adapters/tmac.m.S
#   adapters/tmac.s.S dt.h lib/Makefile lib/dj.fonts lib/dj.lib
#   lib/dt.fonts lib/jt.fonts lj.h man/Makefile tests/Makefile
#   utils/fonts/README utils/lj2ps.S utils/maps/S.cmtrf
#   utils/maps/alnum.ROMAN8 utils/maps/cmmi.MATH8 utils/maps/cmr.MATH8
#   utils/maps/cmr.ROMAN8 utils/maps/cmss.ROMAN8 utils/maps/cmsy.MATH8
#   utils/maps/cmsy.ROMAN8 utils/maps/cmti.MATH8
#   utils/maps/cmti.ROMAN8 utils/maps/cmtt.ROMAN8 widths/widthlj3/S2
# Wrapped by clewis@ecicrl on Fri Apr  5 20:56:07 1991
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 19 (of 19)."'
if test -f 'adapters/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/Makefile'\"
else
  echo shar: Extracting \"'adapters/Makefile'\" \(425 characters\)
  sed "s/^X//" >'adapters/Makefile' <<'END_OF_FILE'
X# 2.5 91/03/19
XADAPTERS	= cmn.post cmn.pre tmac.an tmac.m tmac.s tmac.e cmn.dit
XMACROS		= tmac.t2
X
Xinclude ../makeincl
X
Xall:	subst.done $(ADAPTERS) $(MACROS)
X
Xsubst.done:	../makeincl ../sedscript
X	rm -f $(ADAPTERS) $(MACROS)
X	touch subst.done
X
Xclean:
X	rm -f $(ADAPTERS) $(MACROS)
X
Xinstall:
X	cd $(LIBDIR)/adapters ; rm -f $(ADAPTERS)
X	cp $(ADAPTERS) $(LIBDIR)/adapters
X	cd $(RTMACDIR) ; rm -f $(MACROS)
X	cp $(MACROS) $(T2DIR)
END_OF_FILE
  if test 425 -ne `wc -c <'adapters/Makefile'`; then
    echo shar: \"'adapters/Makefile'\" unpacked with wrong size!
  fi
  # end of 'adapters/Makefile'
fi
if test -f 'adapters/cmn.dit.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/cmn.dit.S'\"
else
  echo shar: Extracting \"'adapters/cmn.dit.S'\" \(75 characters\)
  sed "s/^X//" >'adapters/cmn.dit.S' <<'END_OF_FILE'
X.\"1.1 91/02/19
X.de sR
X\X'\\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9'
X..
END_OF_FILE
  if test 75 -ne `wc -c <'adapters/cmn.dit.S'`; then
    echo shar: \"'adapters/cmn.dit.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/cmn.dit.S'
fi
if test -f 'adapters/cmn.pre.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/cmn.pre.S'\"
else
  echo shar: Extracting \"'adapters/cmn.pre.S'\" \(801 characters\)
  sed "s/^X//" >'adapters/cmn.pre.S' <<'END_OF_FILE'
X.\"@(#)ident cmn.pre 2.2 91/03/18
X.\"Turn ligatures off
X'lg 0
X.\"Rename normal ".tm" to one that troff2ps understands and punts to stderr.
X.rn tm tM
X.de tm
X.tM ME\\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
X..
X.de sR
X.\"Output request sequence - thru .tm - caught by backend
X.if t \{\
X.\"M is illegal C/A/T opcode - triggers troff2 to start collecting.
X.\"newline is terminator
X'tM M\\$1
X\}
X..
X.de sy
X.sR "S\\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9"
X..
X.\"	Some troffs have built-in width tables for the base fonts.
X.\"	This forces troff to reload them from /usr/lib/font...
X.fp 1 R
X.fp 2 I
X.fp 3 B
X.fp 4 S
X.\"	Fix CAT Troff's ".fp" request to both load the font width
X.\"	table, plus issue the special request to the back end to switch
X.\"	fonts.
X.rn fp fP
X.de fp
X.fP \\$1 \\$2
X.sR "F\\$1\\$2"
X..
END_OF_FILE
  if test 801 -ne `wc -c <'adapters/cmn.pre.S'`; then
    echo shar: \"'adapters/cmn.pre.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/cmn.pre.S'
fi
if test -f 'adapters/tmac.an.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/tmac.an.S'\"
else
  echo shar: Extracting \"'adapters/tmac.an.S'\" \(305 characters\)
  sed "s/^X//" >'adapters/tmac.an.S' <<'END_OF_FILE'
X.\"@(#)ident tmac.an 2.1 90/07/18
X.so %%LIBDIR%%/adapters/cmn.pre
X.so %%RTMACDIR%%/tmac.an
X.\"Default offset (my version of the man macros uses it).
X.nr )O .463i
X.\"See if someone's using the -rO option (ala MM)
X.if \nO .nr )O \nOu
X.po \n()Ou
X.\"Clobber cut marks.
X.rm }C
X.so %%LIBDIR%%/adapters/cmn.post
END_OF_FILE
  if test 305 -ne `wc -c <'adapters/tmac.an.S'`; then
    echo shar: \"'adapters/tmac.an.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/tmac.an.S'
fi
if test -f 'adapters/tmac.e.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/tmac.e.S'\"
else
  echo shar: Extracting \"'adapters/tmac.e.S'\" \(302 characters\)
  sed "s/^X//" >'adapters/tmac.e.S' <<'END_OF_FILE'
X.\"@(#)ident tmac.e 2.1 90/10/27
X.\" -me adapter
X.so %%LIBDIR%%/adapters/cmn.pre
X.so %%RTMACDIR%%/tmac.e
X.\"	Reset the page offset to what works.  ME doesn't do anything fancy
X.\"	but a single .po itself, so this will work fine.
X.po 0.75i
X.\"	Clobber cut marks.
X.rm @m
X.so %%LIBDIR%%/adapters/cmn.post
END_OF_FILE
  if test 302 -ne `wc -c <'adapters/tmac.e.S'`; then
    echo shar: \"'adapters/tmac.e.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/tmac.e.S'
fi
if test -f 'adapters/tmac.m.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/tmac.m.S'\"
else
  echo shar: Extracting \"'adapters/tmac.m.S'\" \(254 characters\)
  sed "s/^X//" >'adapters/tmac.m.S' <<'END_OF_FILE'
X.\"@(#)ident tmac.m 2.1 90/07/18
X.so %%LIBDIR%%/adapters/cmn.pre
X.\"Default linewidth 6.5 inches & page offset .963 inches.
X.if !\nW .nr W 6.5i
X.if !\nO .nr O .463i
X.so %%RTMACDIR%%/tmac.m
X.\"Clobber MM cut marks.
X.rm )k
X.so %%LIBDIR%%/adapters/cmn.post
END_OF_FILE
  if test 254 -ne `wc -c <'adapters/tmac.m.S'`; then
    echo shar: \"'adapters/tmac.m.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/tmac.m.S'
fi
if test -f 'adapters/tmac.s.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'adapters/tmac.s.S'\"
else
  echo shar: Extracting \"'adapters/tmac.s.S'\" \(335 characters\)
  sed "s/^X//" >'adapters/tmac.s.S' <<'END_OF_FILE'
X.\"@(#)ident tmac.s 2.1 90/07/18
X.so %%LIBDIR%%/adapters/cmn.pre
X.\"Trick MS into thinking the initial page offset is .25i less than normal.
X.\"(because of the .5inch rightshift in troff2ps)
X.\"Then, defaulted MS will be exactly centered.
X.po .713i
X.so %%RTMACDIR%%/tmac.s
X.\"Clobber cut marks.
X.rm CM
X.so %%LIBDIR%%/adapters/cmn.post
END_OF_FILE
  if test 335 -ne `wc -c <'adapters/tmac.s.S'`; then
    echo shar: \"'adapters/tmac.s.S'\" unpacked with wrong size!
  fi
  # end of 'adapters/tmac.s.S'
fi
if test -f 'dt.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'dt.h'\"
else
  echo shar: Extracting \"'dt.h'\" \(895 characters\)
  sed "s/^X//" >'dt.h' <<'END_OF_FILE'
X/*
X	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X		All Rights Reserved
X
X    See the LICENSE file for a full description of restrictions under which
X    this software is provided.
X
X    Function:		Ditroff driver definitions
X			Hacked from ps.h
X */
X
X/* 2.3 91/02/20 */
X
X/*	This is actually done in the back-end */
X#define	DTRESOLUTION	300
X/*	Troff assumes 7.5" paper width, most macro packages print in
X	6.5" area within that.  Sooo, we'll center the paperwidth on the
X	physical page - implying .5" inch physical margins.*/
X#define	TROFF2DTX(x) ((((long) (x)+pageoffset)*dtresolution)/TROFFRESOLUTION)
X/*	11" paper length */
X#define	TROFF2DTY(y) ((((long) (y)+pageyoffset)*dtresolution)/TROFFRESOLUTION)
X
Xextern int dtProlog(), dtEpilog(), dtChar(), dtPage(), dtPassthru(), dtDraw();
X
X#ifdef	DT
Xextern struct troff2befont dtSymFont[], dtStdFont[];
Xextern int dtresolution;
X#endif
END_OF_FILE
  if test 895 -ne `wc -c <'dt.h'`; then
    echo shar: \"'dt.h'\" unpacked with wrong size!
  fi
  # end of 'dt.h'
fi
if test -f 'lib/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/Makefile'\"
else
  echo shar: Extracting \"'lib/Makefile'\" \(451 characters\)
  sed "s/^X//" >'lib/Makefile' <<'END_OF_FILE'
X#2.3 91/04/04
X
Xinclude ../makeincl
X
XLIBS	= confid.ps lethead.ps \
X	  dj.fonts dj.lib \
X	  dt.fonts \
X	  jt.fonts \
X	  lj.fonts lj.lib \
X	  lj3.fonts lj3.lib \
X	  lj3u.fonts \
X	  ps.fonts ps.lib \
X	  psrofflib
X
Xall:	subst.done $(LIBS)
X
Xsubst.done:	../makeincl ../sedscript
X	rm -f psrofflib
X	touch subst.done
X
Xclean:
X	rm -f psrofflib
X
Xinstall:
X	cd $(LIBDIR)/lib ; rm -f $(LIBS) lj3u.lib
X	cp $(LIBS) $(LIBDIR)/lib
X	cd $(LIBDIR)/lib ; ln lj3.lib lj3u.lib
END_OF_FILE
  if test 451 -ne `wc -c <'lib/Makefile'`; then
    echo shar: \"'lib/Makefile'\" unpacked with wrong size!
  fi
  # end of 'lib/Makefile'
fi
if test -f 'lib/dj.fonts' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/dj.fonts'\"
else
  echo shar: Extracting \"'lib/dj.fonts'\" \(725 characters\)
  sed "s/^X//" >'lib/dj.fonts' <<'END_OF_FILE'
X#@(#)dj.fonts 2.1 90/07/18
X#	Deskjet information.  See lj.fonts.
XR  Times-Roman      \033(8U\033(s1p0s00b05T sssspspssssssss
XI  Times-Italic     \033(8U\033(s1p1s-3b05T sssssssssssssss
XB  Times-Bold       \033(8U\033(s1p0s03b05T sssssssssssssss
XS  Symbol           \033(8U\033(s0p0s00b03T ppppppppppppppp
XBI Times-BoldItalic \033(8U\033(s1p1s03b05T sssssssssssssss
XC  Courier          \033(8U\033(s0p0s00b03T ssssbsbssssssss
XCI Courier-Italic   \033(8U\033(s0p1s-3b03T ssssbsbssssssss
XCB Courier-Bold     \033(8U\033(s0p0s03b03T ssssbsbssssssss
XL  LinePrinter      \033(8U\033(s0p0s00b00T sssssssssssssss
XLI LinePrinter-Ital \033(8U\033(s0p1s-3b00T sssssssssssssss
XLB LinePrinter-Bold \033(8U\033(s0p0s03b00T sssssssssssssss
END_OF_FILE
  if test 725 -ne `wc -c <'lib/dj.fonts'`; then
    echo shar: \"'lib/dj.fonts'\" unpacked with wrong size!
  fi
  # end of 'lib/dj.fonts'
fi
if test -f 'lib/dj.lib' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/dj.lib'\"
else
  echo shar: Extracting \"'lib/dj.lib'\" \(329 characters\)
  sed "s/^X//" >'lib/dj.lib' <<'END_OF_FILE'
X%ident  @(#)dj.lib: 2.1 90/07/18 16:52:21 Chris Lewis"
X%See lj.lib for further information.
X\033E\033&k2G			%reset printer, set CR=CR,LF=CRLF,FF=CRFF */
X\033&l6d66p0o0e66f0L		%letter size, portrait, no perf skip */
X\0339				%reset side margins */
X\033&a0r0C			%move cursor to 0,0 */
X\033(0U				%set US ascii font (ron@mlfarm) */
END_OF_FILE
  if test 329 -ne `wc -c <'lib/dj.lib'`; then
    echo shar: \"'lib/dj.lib'\" unpacked with wrong size!
  fi
  # end of 'lib/dj.lib'
fi
if test -f 'lib/dt.fonts' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/dt.fonts'\"
else
  echo shar: Extracting \"'lib/dt.fonts'\" \(589 characters\)
  sed "s/^X//" >'lib/dt.fonts' <<'END_OF_FILE'
X#@(#)dt.fonts 2.1 90/07/18
X#	DO NOT CHANGE THE ORDER OF THE FIRST FOUR LINES - THESE ARE
X#	THE DEFAULT TROFF FONTS IN POSITIONS 1-4.  IN PARTICULAR, IF
X#	SYMBOL ISN'T THE FOURTH ENTRY, BOXES, TABLES, AND OTHER FANCY
X#	CHARACTERS DON'T WORK SHIT.
XR	Times-Roman
XI	Times-Italic
XB	Times-Bold
XS	Symbol
X..	BracketFont
XBB	Bookman-Demi
XBI	Times-BoldItalic
XBO	Bookman-LightItalic
XBR	Bookman-Light
XBX	Bookman-DemiItalic
XC	Courier
XCB	Courier-Bold
XCO	Courier-Oblique
XCX	Courier-BoldOblique
XH	Helvetica
XHB	Helvetica-Bold
XHO	Helvetica-Oblique
XHX	Helvetica-BoldOblique
XPA	Palatino-Roman
XPB	Palatino-Bold
END_OF_FILE
  if test 589 -ne `wc -c <'lib/dt.fonts'`; then
    echo shar: \"'lib/dt.fonts'\" unpacked with wrong size!
  fi
  # end of 'lib/dt.fonts'
fi
if test -f 'lib/jt.fonts' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/jt.fonts'\"
else
  echo shar: Extracting \"'lib/jt.fonts'\" \(680 characters\)
  sed "s/^X//" >'lib/jt.fonts' <<'END_OF_FILE'
X#@(#)jt.fonts 2.1 90/07/18
X#	DO NOT CHANGE THE ORDER OF THE FIRST FOUR LINES - THESE ARE
X#	THE DEFAULT TROFF FONTS IN POSITIONS 1-4.  IN PARTICULAR, IF
X#	SYMBOL ISN'T THE FOURTH ENTRY, BOXES, TABLES, AND OTHER FANCY
X#	CHARACTERS DON'T WORK SHIT.
XR	Times-Roman
XI	Times-Italic
XB	Times-Bold
XS	Symbol
XST	Rick's-Troff-font
XSI	Rest-of-Symbol
XCW	Courier
XH	Helvetica
XHB	Helvetica-Bold
XHD	Helvetica-Idon't-know
XHI	Helvetica-Italic
Xnormal
Xru	4
Xco	4
Xsq	4
X|	4
Xsymbol
Xlt	4
Xlb	4
Xrt	4
Xrb	4
Xlk	4
Xrk	4
Xbv	4
Xlf	4
Xrf	4
Xlc	4
Xrc	4
Xsr	4
Xrn	4
Xul	4
Xbr	4
X<	4
X>	4
X\	4
X{	4
X}	4
X*a	5
X*b	5
X*g	5
X*d	5
X*e	5
X*z	5
X*y	5
X*h	5
X*i	5
X*k	5
X*l	5
X*m	5
X*n	5
X*c	5
X*p	5
X*r	5
X*s	5
X*t	5
X*u	5
X*f	5
X*x	5
X*q	5
X*w	5
Xrh	5
Xlh	5
Xpd	5
END_OF_FILE
  if test 680 -ne `wc -c <'lib/jt.fonts'`; then
    echo shar: \"'lib/jt.fonts'\" unpacked with wrong size!
  fi
  # end of 'lib/jt.fonts'
fi
if test -f 'lj.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lj.h'\"
else
  echo shar: Extracting \"'lj.h'\" \(816 characters\)
  sed "s/^X//" >'lj.h' <<'END_OF_FILE'
X/*
X	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X		All Rights Reserved
X
X    See the LICENSE file for a full description of restrictions under which
X    this software is provided.
X
X    Function:		Laserjet Driver definitions
X */
X
X/* 2.2 91/02/20 */
X
X/*	We're using decipoints */
X#define	LJRESOLUTION	720
X
X/*	Troff assumes 7.5" paper width, most macro packages print in
X	6.5" area within that.  Sooo, we'll center the paperwidth on the
X	physical page - implying .5" inch physical margins.*/
X#define	TROFF2LJX(x) (((long) (x)+pageoffset)*LJRESOLUTION/TROFFRESOLUTION)
X
X/*	11" paper length */
X#define	TROFF2LJY(y) (((long) (y)+pageyoffset)*LJRESOLUTION/TROFFRESOLUTION)
X
Xextern int ljProlog(), ljEpilog(), ljChar(), ljPage();
X
Xextern struct troff2befont ljSymFont[], ljStdFont[];
X
Xextern int fontCount;
END_OF_FILE
  if test 816 -ne `wc -c <'lj.h'`; then
    echo shar: \"'lj.h'\" unpacked with wrong size!
  fi
  # end of 'lj.h'
fi
if test -f 'man/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man/Makefile'\"
else
  echo shar: Extracting \"'man/Makefile'\" \(810 characters\)
  sed "s/^X//" >'man/Makefile' <<'END_OF_FILE'
X# 2.4 91/03/25
X
XMANPAGES = troff2ps.1 psroff.1 cat.5 pk2sfp.1 dumpft.1 hpinterp.1 \
X	asc2ps.1 psxlate.1
X
XMANDIR = %%MANDIR%%
X
Xinclude ../makeincl
X
Xall:	subst.done $(MANPAGES)
X
Xsubst.done:	../makeincl ../sedscript
X	rm -f $(MANPAGES)
X	touch subst.done
X
Xclean:
X	rm -f $(MANPAGES)
X
Xinstall:
X	@$(IGNORSH) if [ -d $(MANDIR) -a -n "$(MANEXT)" ] ; \
X	then \
X	    for i in $(MANPAGES) ; \
X	    do \
X		if [ $$i = cat.5 ] ; then continue ; fi ; \
X		f=`basename $$i .1` ; \
X		echo "Installing $$i in $(MANDIR)/$$f.$(MANEXT)" ; \
X		cp $$i $(MANDIR)/$$f.$(MANEXT) ; \
X	    done \
X	fi
X	@$(IGNORSH) if [ -d $(MANDIR)/../man5 ] ; \
X	then \
X	    echo "Installing cat.5 in $(MANDIR)/../man5/cat.5" ; \
X	    cp cat.5 $(MANDIR)/../man5/cat.5 ; \
X	else \
X	    echo "Can't figure out where to install cat.5 - do it yourself" ; \
X	fi
END_OF_FILE
  if test 810 -ne `wc -c <'man/Makefile'`; then
    echo shar: \"'man/Makefile'\" unpacked with wrong size!
  fi
  # end of 'man/Makefile'
fi
if test -f 'tests/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tests/Makefile'\"
else
  echo shar: Extracting \"'tests/Makefile'\" \(86 characters\)
  sed "s/^X//" >'tests/Makefile' <<'END_OF_FILE'
X#2.2 91/02/19
X
Xinclude ../makeincl
X
Xall:	testtab.m chartab.m ltest.m exttab.m
X
Xclean:
END_OF_FILE
  if test 86 -ne `wc -c <'tests/Makefile'`; then
    echo shar: \"'tests/Makefile'\" unpacked with wrong size!
  fi
  # end of 'tests/Makefile'
fi
if test -f 'utils/fonts/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/fonts/README'\"
else
  echo shar: Extracting \"'utils/fonts/README'\" \(454 characters\)
  sed "s/^X//" >'utils/fonts/README' <<'END_OF_FILE'
X		utils/fonts/README 1.1 91/02/19
X
XThese font files are from two sources:
X
X    - cmtrf10.300pk is from Rick Richardson's jetroff, and may
X      only be distributed for use with psroff.
X    - the other PK's are from Knuth's TeX as found in the University
X      of Toronto distribution.
X
XThese are included expressly for giving an example of mergeing fonts.
XSee the map files (utils/maps), and the utils/Makefile.S for how
Xthese are used to generate PK's.
END_OF_FILE
  if test 454 -ne `wc -c <'utils/fonts/README'`; then
    echo shar: \"'utils/fonts/README'\" unpacked with wrong size!
  fi
  # end of 'utils/fonts/README'
fi
if test -f 'utils/lj2ps.S' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/lj2ps.S'\"
else
  echo shar: Extracting \"'utils/lj2ps.S'\" \(743 characters\)
  sed "s/^X//" >'utils/lj2ps.S' <<'END_OF_FILE'
X%%STARTSHELL%%
X#	Copyright 1985, 1986, 1987, 1988, 1989, 1990, 1991 Chris Lewis
X#		All Rights Reserved
X#
X#    See the LICENSE file for a full description of the restrictions
X#    under which this software is provided.
X#
X#    Function: laserjet to postscript converter
X#2.2 91/02/20
Xif [ $# != 0 ]
Xthen
X    dontdelete=1
Xfi
Xif [ -f utils/hpinterp ]
Xthen
X    hpinterp=`pwd`/utils/hpinterp
Xelse
X    hpinterp=%%LIBDIR%%/hpinterp
Xfi
X
Xif [ -f utils/pk2ps ]
Xthen
X    pk2ps=`pwd`/utils/pk2ps
Xelse
X    pk2ps=%%LIBDIR%%/pk2ps
Xfi
X
Xtd=/tmp/$$
X(
X    mkdir $td
X    cd $td
X    mkdir FONTS
X    $hpinterp -p > postscript
X    rm FONTS/*.desc
X    $pk2ps -f FONTS/* > fonts
X    cat fonts postscript
X    echo "\004"
X)
Xif [ -z "$dontdelete" ]
Xthen
X    rm -fr $td
Xfi
END_OF_FILE
  if test 743 -ne `wc -c <'utils/lj2ps.S'`; then
    echo shar: \"'utils/lj2ps.S'\" unpacked with wrong size!
  fi
  # end of 'utils/lj2ps.S'
fi
if test -f 'utils/maps/S.cmtrf' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/S.cmtrf'\"
else
  echo shar: Extracting \"'utils/maps/S.cmtrf'\" \(536 characters\)
  sed "s/^X//" >'utils/maps/S.cmtrf' <<'END_OF_FILE'
X#	From Ronald Florence's makeS program 2.1 90/07/18
X#	These describe the remappings of Rick Richardson's
X#	cmtrf PK font into MATH8 encoding.
X0xE2	1	left top
X0xE4	2	left bottom
X0xF2	3	right top
X0xF4	4	right bottom
X0xE3	5	left center
X0xF3	6	right center
X0xF5	7	bold vertical
X0xE1	8	left floor
X0xF1	9	right floor
X0xE0	0xa	left ceiling
X0xF0	0xb	right ceiling
X0x21	0xc	square root
X0xB0	0xd	root en extender
X0xD9	0x11	copyright
X0xDA	0x12	square
X#
X0x3C	0x3C	<
X0x3d	0x3e	>
X0x79	0x10	br
X0x5F	0x0e	ul/ru
X0x7a	{
X0x7b	}
X0x7e	\
X0xfc	0x13	solid box
END_OF_FILE
  if test 536 -ne `wc -c <'utils/maps/S.cmtrf'`; then
    echo shar: \"'utils/maps/S.cmtrf'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/S.cmtrf'
fi
if test -f 'utils/maps/alnum.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/alnum.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/alnum.ROMAN8'\" \(206 characters\)
  sed "s/^X//" >'utils/maps/alnum.ROMAN8' <<'END_OF_FILE'
X#	2.1 90/07/18 for simple merging of other fonts.
X0x30
X0x31
X0x32
X0x33
X0x34
X0x35
X0x36
X0x37
X0x38
X0x39
X@
XA
XB
XC
XD
XE
XF
XG
XH
XI
XJ
XK
XL
XM
XN
XO
XP
XQ
XR
XS
XT
XU
XV
XW
XX
XY
XZ
Xa
Xb
Xc
Xd
Xe
Xf
Xg
Xh
Xi
Xj
Xk
Xl
Xm
Xn
Xo
Xp
Xq
Xr
Xs
Xt
Xu
Xv
Xw
Xx
Xy
Xz
END_OF_FILE
  if test 206 -ne `wc -c <'utils/maps/alnum.ROMAN8'`; then
    echo shar: \"'utils/maps/alnum.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/alnum.ROMAN8'
fi
if test -f 'utils/maps/cmmi.MATH8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmmi.MATH8'\"
else
  echo shar: Extracting \"'utils/maps/cmmi.MATH8'\" \(518 characters\)
  sed "s/^X//" >'utils/maps/cmmi.MATH8' <<'END_OF_FILE'
X#	From Ronald Florence's makeS program. 2.1 90/07/18
X0xB	0x61	alpha
X0xC	0x62	beta
X0xD	0x63	gamma
X0xE	0x64	delta
X0xF	0x65	epsilon
X0x10	0x66	zeta
X0x11	0x67	eta
X0x12	0x68	theta
X0x13	0x69	iota
X0x14	0x6A	kappa
X0x15	0x6B	lambda
X0x16	0x6C	mu
X0x17	0x6D	nu
X0x18	0x6E	xi
X0x19	0x70	pi
X0x1A	0x71	rho
X0x1B	0x72	sigma
X0x1C	0x73	tau
X0x1D	0x74	upsilon
X0x1E	0x75	phi
X0x1F	0x76	chi
X0x20	0x77	psi
X0x21	0x78	omega
X0x2E	0xA6	right hand
X0x2F	0xA8	left hand
X0x40	0x5A	partial derivative
X0x26	0x53	terminal sigma
X0x6f	0x6f	omicron (italic o)
END_OF_FILE
  if test 518 -ne `wc -c <'utils/maps/cmmi.MATH8'`; then
    echo shar: \"'utils/maps/cmmi.MATH8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmmi.MATH8'
fi
if test -f 'utils/maps/cmr.MATH8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmr.MATH8'\"
else
  echo shar: Extracting \"'utils/maps/cmr.MATH8'\" \(208 characters\)
  sed "s/^X//" >'utils/maps/cmr.MATH8' <<'END_OF_FILE'
X#	From Ronald Florence's makeS program 2.1 90/07/18
X0	0x43	Gamma
X1	0x44	Delta
X2	0x48	Theta
X3	0x4B	Lambda
X4	0x4E	Xi
X5	0x50	Pi
X6	0x52	Sigma
X7	0x54	Upsilon
X8	0x55	Phi
X9	0x57	Psi
X0xA	0x58	Omega
X0174	0366	em dash
END_OF_FILE
  if test 208 -ne `wc -c <'utils/maps/cmr.MATH8'`; then
    echo shar: \"'utils/maps/cmr.MATH8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmr.MATH8'
fi
if test -f 'utils/maps/cmr.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmr.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/cmr.ROMAN8'\" \(659 characters\)
  sed "s/^X//" >'utils/maps/cmr.ROMAN8' <<'END_OF_FILE'
X#	CMR -> ROMAN8 (Times Roman) map file.
X#	For experimentation 2.1 90/07/18
X#	This is mostly 1-1 ASCII correspondance, but
X#	several characters are missing. This should be
X#	used in conjunction with the other .ROMAN8 files.
X!
X"
X043	"	octothorpe
X%
X'
X&
X(
X)
X*
X+
X,
X-
X.
X/
X#	digits
X0x30
X0x31
X0x32
X0x33
X0x34
X0x35
X0x36
X0x37
X0x38
X0x39
X:
X;
X=
X?
X@
XA
XB
XC
XD
XE
XF
XG
XH
XI
XJ
XK
XL
XM
XN
XO
XP
XQ
XR
XS
XT
XU
XV
XW
XX
XY
XZ
X[
X]
X`
Xa
Xb
Xc
Xd
Xe
Xf
Xg
Xh
Xi
Xj
Xk
Xl
Xm
Xn
Xo
Xp
Xq
Xr
Xs
Xt
Xu
Xv
Xw
Xx
Xy
Xz
X023	0250	acute accent
X022	0251	grave accent
X~	0254	small tilde
X^	"	small caret (prefer bigger)
X027	0263	degree
X0173	0366	medium hyphen (eg: minus)
X$
X0x7f	0xab	umlaut
X0x3e	0xb9	upside down ?
X0x3c	0xb8	upside down !
END_OF_FILE
  if test 659 -ne `wc -c <'utils/maps/cmr.ROMAN8'`; then
    echo shar: \"'utils/maps/cmr.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmr.ROMAN8'
fi
if test -f 'utils/maps/cmss.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmss.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/cmss.ROMAN8'\" \(37 characters\)
  sed "s/^X//" >'utils/maps/cmss.ROMAN8' <<'END_OF_FILE'
X#2.1 90/07/18	Pick up double quote
X"
END_OF_FILE
  if test 37 -ne `wc -c <'utils/maps/cmss.ROMAN8'`; then
    echo shar: \"'utils/maps/cmss.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmss.ROMAN8'
fi
if test -f 'utils/maps/cmsy.MATH8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmsy.MATH8'\"
else
  echo shar: Extracting \"'utils/maps/cmsy.MATH8'\" \(702 characters\)
  sed "s/^X//" >'utils/maps/cmsy.MATH8' <<'END_OF_FILE'
X#	Some from Ronald Florence's makeS program 2.1 90/07/18
X0	0x2D	math minus
X2	0x2A	multiply
X4	0x25	divide
X6	0xFE	plus-minus
X0xD	0xCD	circle
X0xF	0xCC	bullet
X0x11	0x7D	exactly equal
X0x12	0xBE	improper subset
X0x13	0xBF	improper superset
X0x14	0x5C	<=
X0x15	0x5E	>=
X0x1A	0xBA	subset of
X0x1B	0xBB	superset of
X0x20	0xA4	left arrow
X0x21	0xA2	right arrow
X0x22	0xA1	up arrow
X0x23	0xA3	down arrow
X0x27	0x7C	~=
X0x2F	0x26	proportional to
X0x31	0x24	infinity
X0x32	0xB7	member of
X0x3A	0xC8	not
X0x3B	0xD8	empty set
X0x5B	0xB5	cup (union)
X0x5C	0xB6	cap (intersection)
X0x72	0x59	gradient
X0x73	0xD5	integral sign
X0x79	0xCE	dagger
X0x7A	0xCF	double dagger
X0x28	0xfb	left hand
X0x29	0xfd	right hand
X0x7e	0x7f	heart - normal \(bs
END_OF_FILE
  if test 702 -ne `wc -c <'utils/maps/cmsy.MATH8'`; then
    echo shar: \"'utils/maps/cmsy.MATH8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmsy.MATH8'
fi
if test -f 'utils/maps/cmsy.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmsy.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/cmsy.ROMAN8'\" \(125 characters\)
  sed "s/^X//" >'utils/maps/cmsy.ROMAN8' <<'END_OF_FILE'
X#	2.1 90/07/18
X06	0xfe	plus equals
X013	0322	circle crossbar
X034	0373	<<
X035	0375	>>
X0x78	0xbd	section
X0x18	0x7e	normal tilde
END_OF_FILE
  if test 125 -ne `wc -c <'utils/maps/cmsy.ROMAN8'`; then
    echo shar: \"'utils/maps/cmsy.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmsy.ROMAN8'
fi
if test -f 'utils/maps/cmti.MATH8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmti.MATH8'\"
else
  echo shar: Extracting \"'utils/maps/cmti.MATH8'\" \(50 characters\)
  sed "s/^X//" >'utils/maps/cmti.MATH8' <<'END_OF_FILE'
X#	cmti to R 2.1 90/07/18
X0x24	0xfc	Pound Sterling
END_OF_FILE
  if test 50 -ne `wc -c <'utils/maps/cmti.MATH8'`; then
    echo shar: \"'utils/maps/cmti.MATH8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmti.MATH8'
fi
if test -f 'utils/maps/cmti.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmti.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/cmti.ROMAN8'\" \(50 characters\)
  sed "s/^X//" >'utils/maps/cmti.ROMAN8' <<'END_OF_FILE'
X#	cmti to R 2.1 90/07/18
X0x24	0xbb	Pound Sterling
END_OF_FILE
  if test 50 -ne `wc -c <'utils/maps/cmti.ROMAN8'`; then
    echo shar: \"'utils/maps/cmti.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmti.ROMAN8'
fi
if test -f 'utils/maps/cmtt.ROMAN8' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'utils/maps/cmtt.ROMAN8'\"
else
  echo shar: Extracting \"'utils/maps/cmtt.ROMAN8'\" \(244 characters\)
  sed "s/^X//" >'utils/maps/cmtt.ROMAN8' <<'END_OF_FILE'
X#	2.1 90/07/18
X#	cmtt family roman.
X!
X0x22	0x22	"
X0x23	0x23	#
X$
X%
X&
X'
X(
X)
X*
X+
X,
X-
X.
X/
X0
X1
X2
X3
X4
X5
X6
X7
X8
X9
X:
X;
X<
X=
X>
X?
X@
XA
XB
XC
XD
XE
XF
XG
XH
XI
XJ
XK
XL
XM
XN
XO
XP
XQ
XR
XS
XT
XU
XV
XW
XX
XY
XZ
X[
X\
X]
X^
X_
X`
Xa
Xb
Xc
Xd
Xe
Xf
Xg
Xh
Xi
Xj
Xk
Xl
Xm
Xn
Xo
Xp
Xq
Xr
Xs
Xt
Xu
Xv
Xw
Xx
Xy
Xz
X{
X|
X}
X~
END_OF_FILE
  if test 244 -ne `wc -c <'utils/maps/cmtt.ROMAN8'`; then
    echo shar: \"'utils/maps/cmtt.ROMAN8'\" unpacked with wrong size!
  fi
  # end of 'utils/maps/cmtt.ROMAN8'
fi
if test -f 'widths/widthlj3/S2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'widths/widthlj3/S2'\"
else
  echo shar: Extracting \"'widths/widthlj3/S2'\" \(179 characters\)
  sed "s/^X//" >'widths/widthlj3/S2' <<'END_OF_FILE'
X# Zapf-Dingbats
X# Scalable cartridge, See LJIII file. Real bs/lh/rh
X#2.2 91/04/05
Xname S2
Xspecial
Xinternalname ZapfDing
Xligatures 0
Xcharset
Xrh	36	0	0301
Xlh	36	0	0341
Xbs	36	2	0305
END_OF_FILE
  if test 179 -ne `wc -c <'widths/widthlj3/S2'`; then
    echo shar: \"'widths/widthlj3/S2'\" unpacked with wrong size!
  fi
  # end of 'widths/widthlj3/S2'
fi
echo shar: End of archive 19 \(of 19\).
cp /dev/null ark19isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    echo "Read the README to get started with psroff installation"
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0

exit 0 # Just in case...
