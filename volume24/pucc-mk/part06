Subject:  v24i062:  Purdue shell turbo charger and manual installer, Part06/06
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET
X-Checksum-Snefru: 5315b8f0 97a7d548 2dfd72f6 62604791

Submitted-by: Kevin Braunsdorf <ksb@cc.purdue.edu>
Posting-number: Volume 24, Issue 62
Archive-name: pucc-mk/part06

#!/bin/sh
# This is part 06 of pucc-1c
# ============= mk/machine.h ==============
if test ! -d 'mk'; then
    echo 'x - creating directory mk'
    mkdir 'mk'
fi
if test -f 'mk/machine.h' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/machine.h (File already exists)'
else
echo 'x - extracting mk/machine.h (Text)'
sed 's/^X//' << 'Purdue' > 'mk/machine.h' &&
#define bsd		/**/
/* #define SYSV		/**/
/* #define dynix   	/**/
X
#if defined(PUCC)
#endif /* on PUCC machines */
X
#if defined(SYSV)
#define getwd(Mb)	getcwd(Mb, MAXPATHLEN)
extern char *getcwd();
#else
extern char *getwd();
#endif
X
/*
X * The lines below control bsd style (struct rusage) wait3 utilization.
X * Zero (0) implies not code for resource limits,
X * one (1) implies produce code for limitting resources.
X */
#if defined(bsd)||defined(dynix)
#define	RESOURCE	1
#else
#define RESOURCE	0
#endif
X
#if defined(bsd)
#define strchr	index
#define strrchr	rindex
#endif /* under bsd these names are wrong */
Purdue
chmod 0644 mk/machine.h ||
echo 'restore of mk/machine.h failed'
Wc_c="`wc -c < 'mk/machine.h'`"
test 610 -eq "$Wc_c" ||
	echo 'mk/machine.h: original size 610, current size' "$Wc_c"
fi
# ============= mk-lib/pre-out ==============
if test ! -d 'mk-lib'; then
    echo 'x - creating directory mk-lib'
    mkdir 'mk-lib'
fi
if test -f 'mk-lib/pre-out' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-out (File already exists)'
else
echo 'x - extracting mk-lib/pre-out (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-out' &&
# an a.out file, we hope						(ksb)
X
$Compile(*):	: '%f is a binary, why %m(%s) it?' && ${false-false}
$Compile(*):	: '%f is a binary, why %m it?' && ${false-false}
X
$Display(*):	${strings-strings} %s %f |${PAGER-${more-more}}
$Display(*):	${strings-strings} %f |${PAGER-${more-more}}
X
$Display(*):	${nm-nm} %s %f |${PAGER-${more-more}}
$Display(*):	${nm-nm} -a %f |${PAGER-${more-more}}
X
$Display(*):	${od-od} %s %f |${PAGER-${more-more}}
$Display(*):	${od-od} -a %f |${PAGER-${more-more}}
X
$Run(*):	%f %s
$Run(*):	%f <%s
X
$Info(*):	${echo-echo} "executable file"
X
$*(*):		: '%f is a binary, do not know how to %m(%s) it' && ${false-false}
$*(*):		: '%f is a binary, do not know how to %m it' && ${false-false}
Purdue
chmod 0444 mk-lib/pre-out ||
echo 'restore of mk-lib/pre-out failed'
Wc_c="`wc -c < 'mk-lib/pre-out'`"
test 712 -eq "$Wc_c" ||
	echo 'mk-lib/pre-out: original size 712, current size' "$Wc_c"
fi
# ============= mk-lib/dot-c ==============
if test -f 'mk-lib/dot-c' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-c (File already exists)'
else
echo 'x - extracting mk-lib/dot-c (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-c' &&
# a C source file, or asm file						(ksb)
X
$Compile(*):	${cc-cc} ${cc_debug--O} -D%s -o %F %f
$Compile(*):	${cc-cc} ${cc_debug--O} -o %s %f
$Compile(*):	${cc-cc} ${cc_debug--O} -o %F %f %s
$Compile(*):	${cc-cc} ${cc_debug--O} -o %F %f
$Cc(*):		${cc-cc} ${cc_debug--O} -c -D%s %f
$Cc(*):		${cc-cc} ${cc_debug--O} -c %f
X
$Clean(*):	${rm-rm} -f %F.o %F
$Clean(*):	${rm-rm} -f %F.o
X
$Depend(*):	${maketd-maketd} -da -I/usr/include/local -D%s %f
$Depend(*):	${maketd-maketd} -da -I/usr/include/local %f
X
$Info(*):	${echo-echo} "C source"
Purdue
chmod 0444 mk-lib/dot-c ||
echo 'restore of mk-lib/dot-c failed'
Wc_c="`wc -c < 'mk-lib/dot-c'`"
test 533 -eq "$Wc_c" ||
	echo 'mk-lib/dot-c: original size 533, current size' "$Wc_c"
fi
# ============= mk-lib/dot-e ==============
if test -f 'mk-lib/dot-e' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-e (File already exists)'
else
echo 'x - extracting mk-lib/dot-e (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-e' &&
# EFL source file (extended fortran language)				(ksb)
X
$Compile(*):	${efl-efl} %s %f >%P.f && %b %o %P.f && ${rm-rm} %P.f
$Compile(*):	${efl-efl} -C %f >%P.f && %b %o -d%s %P.f && ${rm-rm} %P.f
$Compile(*):	${efl-efl} -C %f >%P.f && %b %o %P.f && ${rm-rm} %P.f
$Compile(*):	${efl-efl} %s %f >/tmp/%F.f && %b %o /tmp/%F.f && ${rm-rm} /tmp/%F.f
$Compile(*):	${efl-efl} -C %f >/tmp/%F.f && %b %o -d%s /tmp/%F.f && ${rm-rm} /tmp/%F.f
$Compile(*):	${efl-efl} -C %f >/tmp/%F.f && %b %o /tmp/%F.f && ${rm-rm} /tmp/%F.f
X
$Clean(*):	${rm-rf} %s %P.f
$Clean(*):	${rm-rf} -f %P.f
X
$Efl(*):	${efl-efl} %s %f >%P.f
$Efl(*):	${efl-efl} -C %f >%P.f
X
$Info(*):	${echo-echo} "efl source"
Purdue
chmod 0444 mk-lib/dot-e ||
echo 'restore of mk-lib/dot-e failed'
Wc_c="`wc -c < 'mk-lib/dot-e'`"
test 672 -eq "$Wc_c" ||
	echo 'mk-lib/dot-e: original size 672, current size' "$Wc_c"
fi
# ============= mk-lib/dot-l ==============
if test -f 'mk-lib/dot-l' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-l (File already exists)'
else
echo 'x - extracting mk-lib/dot-l (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-l' &&
# a lex input file, or a lisp program					(ksb)
X
$Compile(*):	%b %o -mLex %f && %b %o -m%m -s%s %F.c
$Compile(*):	%b %o -mLex %f && %b %o -m%m %F.c
$Compile(*):	${LISP-kcl} %s %f
$Compile(*):	${LISP-kcl} %f
X
$Lex(*):	${lex-lex} %f && ${cmp-cmp} -s lex.yy.c %F.c || ${mv-mv} lex.yy.c %F.c && ${rm-rm} -f lex.yy.c
$Lex(*):	${lex-lex} %f
X
$Lisp(*):	${LISP-kcl} %s %f
$Lisp(*):	${LISP-kcl} %f
X
$Clean(*):	${rm-rm} -f %F.[co] lex.yy.[co] %F
$Clean(*):	${rm-rm} -f %F.[co] lex.yy.[co]
X
$Info(*):	${echo-echo} "lex input or LISP source"
Purdue
chmod 0444 mk-lib/dot-l ||
echo 'restore of mk-lib/dot-l failed'
Wc_c="`wc -c < 'mk-lib/dot-l'`"
test 530 -eq "$Wc_c" ||
	echo 'mk-lib/dot-l: original size 530, current size' "$Wc_c"
fi
# ============= mk-lib/dot-man ==============
if test -f 'mk-lib/dot-man' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-man (File already exists)'
else
echo 'x - extracting mk-lib/dot-man (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-man' &&
# a manual page source file						(ksb)
X
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -%x %s |${PAGER-${more-more}}
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -%x |${PAGER-${more-more}}
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -%x %s >%f.fmt
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -%x >%f.fmt
X
$Display(*):	${tbl-tbl} %f |${nroff-nroff} -%x %s |${PAGER-${more-more}}
$Display(*):	${tbl-tbl} %f |${nroff-nroff} -%x |${PAGER-${more-more}}
$Laser(*):	${tbl-tbl} %f |${ltroff-ltroff} -%x %s
$Laser(*):	${tbl-tbl} %f |${ltroff-ltroff} -%x
X
$Clean(*):	${rm-rm} -f %F.fmt
$Mkcat(*):	${tbl-tbl} /usr/local/lib/pl.man %f|${nroff-nroff} -h -%x|colcrt -U| cat -s
X
$Info(*):	${echo-echo} "manual page"
Purdue
chmod 0444 mk-lib/dot-man ||
echo 'restore of mk-lib/dot-man failed'
Wc_c="`wc -c < 'mk-lib/dot-man'`"
test 693 -eq "$Wc_c" ||
	echo 'mk-lib/dot-man: original size 693, current size' "$Wc_c"
fi
# ============= mk-lib/dot-ps ==============
if test -f 'mk-lib/dot-ps' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-ps (File already exists)'
else
echo 'x - extracting mk-lib/dot-ps (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-ps' &&
# a PostScript file							(ksb)
X
$Display(*):	# on %{DISPLAY}\n\t${xps-xps} -c %s %f
$Display(*):	# on %{DISPLAY}\n\t${xps-xps} -c letter %f
$Display(*):	: 'set $DISPLAY %m(%s) %f' && ${false-false}
$Display(*):	: 'set $DISPLAY %m %f' && ${false-false}
X
$Laser(*):	${lpr-lpr} -P${LASER-%s} %f
$Laser(*):	${lpr-lpr} -P%{LASER} %f
$Laser(*):	(echo '%%!' && cat %f) |${lpr-lpr} -P${LASER-%s}
$Laser(*):	(echo '%%!' && cat %f) |${lpr-lpr} -P%{LASER}
X
$Laser(*):	: 'set $LASER to %m(%s) %f' && ${false-false}
$Laser(*):	: 'set $LASER to %m %f' && ${false-false}
X
$Info(*):	${echo-echo} "PostScript source"
Purdue
chmod 0444 mk-lib/dot-ps ||
echo 'restore of mk-lib/dot-ps failed'
Wc_c="`wc -c < 'mk-lib/dot-ps'`"
test 601 -eq "$Wc_c" ||
	echo 'mk-lib/dot-ps: original size 601, current size' "$Wc_c"
fi
# ============= mk-lib/dot-r ==============
if test -f 'mk-lib/dot-r' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-r (File already exists)'
else
echo 'x - extracting mk-lib/dot-r (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-r' &&
# RatFor source file							(ksb)
X
$Compile(*):	${ratfor-ratfor} %s %f >%P.f && %b %o %P.f && ${rm-rm} %P.f
$Compile(*):	${ratfor-ratfor} -C %f >%P.f && %b %o %s %P.f && ${rm-rm} %P.f
$Compile(*):	${ratfor-ratfor} -C %f >%P.f && %b %o %P.f && ${rm-rm} %P.f
$Compile(*):	${ratfor-ratfor} %s %f >/tmp/%F.f && %b %o /tmp/%F.f && ${rm-rm} /tmp/%F.f
$Compile(*):	${ratfor-ratfor} -C %f >/tmp/%F.f && %b %o -d%s /tmp/%F.f && ${rm-rm} /tmp/%F.f
$Compile(*):	${ratfor-ratfor} -C %f >/tmp/%F.f && %b %o /tmp/%F.f && ${rm-rm} /tmp/%F.f
X
$Ratfor(*):	${ratfor-ratfor} %s %f >%P.f
$Ratfor(*):	${ratfor-ratfor} -C %f >%P.f
X
$Clean(*):	${rm-rf} %s %P.f
$Clean(*):	${rm-rf} -f %P.f
X
$Info(*):	${echo-echo} "ratfor source"
Purdue
chmod 0444 mk-lib/dot-r ||
echo 'restore of mk-lib/dot-r failed'
Wc_c="`wc -c < 'mk-lib/dot-r'`"
test 705 -eq "$Wc_c" ||
	echo 'mk-lib/dot-r: original size 705, current size' "$Wc_c"
fi
# ============= mk-lib/dot-shar ==============
if test -f 'mk-lib/dot-shar' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-shar (File already exists)'
else
echo 'x - extracting mk-lib/dot-shar (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-shar' &&
# extract shar file under Compile					(ksb)
X
$Compile(*):	${sed-sed} -n -e '/^#/,$p' <%f | ${sh-sh} %s
$Compile(*):	${sed-sed} -n -e '/^#/,$p' <%f | ${sh-sh}
X
$Clean(*):	${rm-rm} -f %P
$Clean(*):	${rm-rm} -rf %P
X
$Display(*):	${sed-sed} -n -e '/^#/,$p' %s <%f | ${PAGER-${more-more}}
$Display(*):	${sed-sed} -n -e '/^#/,$p' <%f | ${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "shell archive"
X
$Run(*):	${sed-sed} -n -e '/^#/,$p' %s <%f | ${sh-sh} %s
$Run(*):	${sed-sed} -n -e '/^#/,$p' <%f | ${sh-sh}
Purdue
chmod 0444 mk-lib/dot-shar ||
echo 'restore of mk-lib/dot-shar failed'
Wc_c="`wc -c < 'mk-lib/dot-shar'`"
test 501 -eq "$Wc_c" ||
	echo 'mk-lib/dot-shar: original size 501, current size' "$Wc_c"
fi
# ============= mk-lib/dot-t ==============
if test -f 'mk-lib/dot-t' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-t (File already exists)'
else
echo 'x - extracting mk-lib/dot-t (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-t' &&
# an nroff source file							(ksb)
X
$Compile(*):	${eqn-eqn} %f |${tbl-tbl} |${nroff-nroff} %s |${PAGER-${more-more}}
$Compile(*):	${eqn-eqn} %f |${tbl-tbl} |${nroff-nroff} |${PAGER-${more-more}}
X
$Display(*):	${eqn-eqn} %f |${tbl-tbl} |${nroff-nroff} %s |${PAGER-${more-more}}
$Display(*):	${eqn-eqn} %f |${tbl-tbl} |${nroff-nroff} |${PAGER-${more-more}}
X
$Laser(*):	${eqn-eqn} %f |${tbl-tbl} |${ltroff-ltroff} %s
$Laser(*):	${eqn-eqn} %f |${tbl-tbl} |${ltroff-ltroff}
X
$Clean(*):	${rm-rm} -f %F.fmt
X
$Info(*):	${echo-echo} "nroff/troff source"
Purdue
chmod 0444 mk-lib/dot-t ||
echo 'restore of mk-lib/dot-t failed'
Wc_c="`wc -c < 'mk-lib/dot-t'`"
test 545 -eq "$Wc_c" ||
	echo 'mk-lib/dot-t: original size 545, current size' "$Wc_c"
fi
# ============= mk-lib/comma-v ==============
if test -f 'mk-lib/comma-v' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/comma-v (File already exists)'
else
echo 'x - extracting mk-lib/comma-v (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/comma-v' &&
# try an RCS delta file... really pushing it here			(ksb)
# this is not (usually) a default rule because I think it stinks a little
X
$Display(*):	${co-co} -q -p %f |${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "RCS delta file"
X
$*(*):		${co-co} -q %f && %b %o -m%m -d%s %Q, && ${rcsclean-rcsclean} %Q,
$*(*):		${co-co} -q %f && %b %o -m%m %Q, && ${rcsclean-rcsclean} %Q,
$*(*):		t=/tmp/c$\$`expr %Q, : '.*/\\(.*\\)' '|' %Q,` &&\n\t${co-co} -q -p %f >$t && %b %o -m%m -d%s $t && ${rm-rm} $t
$*(*):		t=/tmp/c$\$`expr %Q, : '.*/\\(.*\\)' '|' %Q,` &&\n\t${co-co} -q -p %f >$t && %b %o -m%m $t && ${rm-rm} $t
Purdue
chmod 0444 mk-lib/comma-v ||
echo 'restore of mk-lib/comma-v failed'
Wc_c="`wc -c < 'mk-lib/comma-v'`"
test 605 -eq "$Wc_c" ||
	echo 'mk-lib/comma-v: original size 605, current size' "$Wc_c"
fi
# ============= mkcat/INSTALL ==============
if test ! -d 'mkcat'; then
    echo 'x - creating directory mkcat'
    mkdir 'mkcat'
fi
if test -f 'mkcat/INSTALL' -a X"$1" != X"-c"; then
	echo 'x - skipping mkcat/INSTALL (File already exists)'
else
echo 'x - extracting mkcat/INSTALL (Text)'
sed 's/^X//' << 'Purdue' > 'mkcat/INSTALL' &&
# $Id: INSTALL,v 1.2 90/11/28 09:43:42 ksb Exp $
X
Mkcat depends on an aux tool (which is also neat) called mk.  You need
to install mk someplace where mkcat can find it, if you hide it in a
lib directory you'll have to put a full path to it in this program, or
add that directory to the PATH we were given.
X
Mkcat will find many problems in a std manual system (for example the
`cd' manual page conflicts with the `sh' manual page in section 1).
You'll have to edit the manual source to fix them.
X
Mkcat can keep pages either compressed or as plain text, you choose with
mkcat -R.  (See mkcat -V for defaults or current setup.)
X
ksb@cc.purdue.edu
Purdue
chmod 0444 mkcat/INSTALL ||
echo 'restore of mkcat/INSTALL failed'
Wc_c="`wc -c < 'mkcat/INSTALL'`"
test 647 -eq "$Wc_c" ||
	echo 'mkcat/INSTALL: original size 647, current size' "$Wc_c"
fi
# ============= mk-lib/pre-a ==============
if test -f 'mk-lib/pre-a' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-a (File already exists)'
else
echo 'x - extracting mk-lib/pre-a (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-a' &&
# a library archive, or just an archive					(ksb)
X
$Compile(*):	${ar-ar} xv %f && %b %o -m%m -d%s %P
$Compile(*):	${ar-ar} xv %f && %b %o -m%m %P
X
$Display(*):	${ar-ar} t%s %f |${PAGER-${more-more}}
$Display(*):	${ar-ar} tv %f |${PAGER-${more-more}}
$Display(*):	${nm-nm} %s %f |${PAGER-${more-more}}
$Display(*):	${nm-nm} -o %f |${PAGER-${more-more}}
X
$Clean(*):	${rm-rm} -%sf %P
$Clean(*):	${rm-rm} -f %P
$Clean(*):	${rm-rm} -rf %P
X
$Info(*):	${echo-echo} "ar archive"
Purdue
chmod 0444 mk-lib/pre-a ||
echo 'restore of mk-lib/pre-a failed'
Wc_c="`wc -c < 'mk-lib/pre-a'`"
test 471 -eq "$Wc_c" ||
	echo 'mk-lib/pre-a: original size 471, current size' "$Wc_c"
fi
# ============= mk-lib/pre-C ==============
if test -f 'mk-lib/pre-C' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-C (File already exists)'
else
echo 'x - extracting mk-lib/pre-C (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-C' &&
# a compacted file							(ksb)
X
$Display(*):	${ccat-ccat} %f |${PAGER-${more-more}} %s
$Display(*):	${ccat-ccat} %f |${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "compacted data"
X
$*(*):		${ccat-ccat} %f >%P && %b %o -m%m -d%s %P && rm -f %P
$*(*):		${ccat-ccat} %f >/tmp/C$\$%F && %b %o -m%m -d%s /tmp/C$\$%F && rm -f /tmp/C$\$%F
$*(*):		${ccat-ccat} %f >%P && %b %o -m%m %P && rm -f %P
$*(*):		${ccat-ccat} %f >/tmp/C$\$%F && %b %o -m%m /tmp/C$\$%F && rm -f /tmp/C$\$%F
Purdue
chmod 0444 mk-lib/pre-C ||
echo 'restore of mk-lib/pre-C failed'
Wc_c="`wc -c < 'mk-lib/pre-C'`"
test 473 -eq "$Wc_c" ||
	echo 'mk-lib/pre-C: original size 473, current size' "$Wc_c"
fi
# ============= mk-lib/pre-patch ==============
if test -f 'mk-lib/pre-patch' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-patch (File already exists)'
else
echo 'x - extracting mk-lib/pre-patch (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-patch' &&
# file to install a patch, by default					(ksb)
X
$Compile(*):	${patch-patch} -p0 %s %F <%f
$Compile(*):	${patch-patch} -p0 %F <%f
$Compile(*):	${patch-patch} -p0 %s <%f
$Compile(*):	${patch-patch} -p0 <%f
X
$Patch(*):	${patch-patch} -p0 %s %F <%f
$Patch(*):	${patch-patch} -p0 %F <%f
$Patch(*):	${patch-patch} -p0 %s <%f
$Patch(*):	${patch-patch} -p0 <%f
X
$Clean(*):	${rm-rm} %s -f %F.orig %F.rej
$Clean(*):	${rm-rm} -f %F.orig %F.rej
X
$Info(*):	${echo-echo} "diff output, patch input"
Purdue
chmod 0444 mk-lib/pre-patch ||
echo 'restore of mk-lib/pre-patch failed'
Wc_c="`wc -c < 'mk-lib/pre-patch'`"
test 485 -eq "$Wc_c" ||
	echo 'mk-lib/pre-patch: original size 485, current size' "$Wc_c"
fi
# ============= mk-lib/dot-1 ==============
if test -f 'mk-lib/dot-1' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-1 (File already exists)'
else
echo 'x - extracting mk-lib/dot-1 (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-1' &&
# the Compile target here is wrong, but for historical reason we leave it
X
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -man |${PAGER-${more-more}}
$Compile(*):	${tbl-tbl} %f |${nroff-nroff} -man >%F.fmt
X
$Clean(*):	${rm-rm} -f %F.fmt
X
$Display(*):	${tbl-tbl} %f |${nroff-nroff} -man |${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "manual page"
X
$Laser(*):	${tbl-tbl} %f |${ltroff-ltroff} -man
X
$Mkcat(*):	${tbl-tbl} /usr/local/lib/pl.man %f|${nroff-nroff} -h -man|colcrt -U| cat -s
Purdue
chmod 0444 mk-lib/dot-1 ||
echo 'restore of mk-lib/dot-1 failed'
Wc_c="`wc -c < 'mk-lib/dot-1'`"
test 481 -eq "$Wc_c" ||
	echo 'mk-lib/dot-1: original size 481, current size' "$Wc_c"
fi
# ============= mk-lib/dot-dvi ==============
if test -f 'mk-lib/dot-dvi' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-dvi (File already exists)'
else
echo 'x - extracting mk-lib/dot-dvi (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-dvi' &&
# device indepented TeX output					(jws&ksb)
X
$Compile(*):	${dvi2ps-dvi2ps} %s %f >%F.ps
$Compile(*):	${dvi2ps-dvi2ps} %f >%F.ps
$Compile(*):	: '%f is TeX output, cannot %m(%s) it' && ${false-false}
$Compile(*):	: '%f is TeX output, cannot %m it' && ${false-false}
X
$Laser(*):	${lpr-lpr} -d -P${LASER-${PRINTER-%s}} %f
$Laser(*):	${lpr-lpr} -d %f
X
$Info(*):	${echo-echo} "TeX output"
Purdue
chmod 0444 mk-lib/dot-dvi ||
echo 'restore of mk-lib/dot-dvi failed'
Wc_c="`wc -c < 'mk-lib/dot-dvi'`"
test 384 -eq "$Wc_c" ||
	echo 'mk-lib/dot-dvi: original size 384, current size' "$Wc_c"
fi
# ============= mk-lib/dot-f ==============
if test -f 'mk-lib/dot-f' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-f (File already exists)'
else
echo 'x - extracting mk-lib/dot-f (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-f' &&
# a FORTRAN source file							(ksb)
X
$Compile(*):	${fc-f77} ${fc_debug--O} -D%s -o %F %f
$Compile(*):	${fc-f77} ${fc_debug--O} -o %F %f
$Fc(*):		${fc-f77} ${fc_debug--O} -c -D%s %f
$Fc(*):		${fc-f77} ${fc_debug--O} -c %f
X
$Clean(*):	${rm-rm} -f %F.o %F
$Clean(*):	${rm-rm} -f %F.o
$Depend(*):	${maketd-maketd} -da -I/usr/include/local -D%s %f
$Depend(*):	${maketd-maketd} -da -I/usr/include/local %f
X
$Info(*):	${echo-echo} "FORTRAN source"
Purdue
chmod 0444 mk-lib/dot-f ||
echo 'restore of mk-lib/dot-f failed'
Wc_c="`wc -c < 'mk-lib/dot-f'`"
test 441 -eq "$Wc_c" ||
	echo 'mk-lib/dot-f: original size 441, current size' "$Wc_c"
fi
# ============= mk-lib/dot-m4 ==============
if test -f 'mk-lib/dot-m4' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-m4 (File already exists)'
else
echo 'x - extracting mk-lib/dot-m4 (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-m4' &&
# an m4 source file -- simple, but needed for recursive calls		(ksb)
X
$Compile(*):	${m4-m4} %s %f
$Compile(*):	${m4-m4} %f
X
$M4(*):		${m4-m4} %s %f
$M4(*):		${m4-m4} %f
X
$Display(*):	${m4-m4} %s %f |${PAGER-${more-more}}
$Display(*):	${m4-m4} %f |${PAGER-${more-more}}
X
$Depend(*):	${maketd-maketd} -4 %s %f
$Depend(*):	${maketd-maketd} -4 -r %f
$Depend(*):	${maketd-maketd} -4 %f
X
$Info(*):	${echo-echo} "m4 source"
Purdue
chmod 0444 mk-lib/dot-m4 ||
echo 'restore of mk-lib/dot-m4 failed'
Wc_c="`wc -c < 'mk-lib/dot-m4'`"
test 417 -eq "$Wc_c" ||
	echo 'mk-lib/dot-m4: original size 417, current size' "$Wc_c"
fi
# ============= mk-lib/dot-mk ==============
if test -f 'mk-lib/dot-mk' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-mk (File already exists)'
else
echo 'x - extracting mk-lib/dot-mk (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-mk' &&
# a Makefile								(ksb)
X
$Compile(*):	${make-make} ${cc_debug+DEBUG-$cc_debug} -f %f %s
$Compile(*):	${make-make} ${cc_debug+DEBUG-$cc_debug} -f %f
$Make(*):	${make-make} ${cc_debug+DEBUG-$cc_debug} -f %f %s
$Make(*):	${make-make} ${cc_debug+DEBUG-$cc_debug} -f %f
X
$Clean(*):	${make-make} -f %f %s clean
$Clean(*):	${make-make} -f %f clean
$Depend(*):	${make-make} -f %f %s depend
$Depend(*):	${make-make} -f %f depend
X
$Info(*):	${echo-echo} "a make(1) makefile"
Purdue
chmod 0444 mk-lib/dot-mk ||
echo 'restore of mk-lib/dot-mk failed'
Wc_c="`wc -c < 'mk-lib/dot-mk'`"
test 467 -eq "$Wc_c" ||
	echo 'mk-lib/dot-mk: original size 467, current size' "$Wc_c"
fi
# ============= mk-lib/dot-p ==============
if test -f 'mk-lib/dot-p' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-p (File already exists)'
else
echo 'x - extracting mk-lib/dot-p (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-p' &&
# a Pascal source file							(ksb)
X
$Compile(*):	${pc-pc} ${pc_debug--O} -D%s %f -o %F
$Compile(*):	${pc-pc} ${pc_debug--O} %f -o %F
$Pc(*):		${pc-pc} ${pc_debug--O} -c -D%s %f
$Pc(*):		${pc-pc} ${pc_debug--O} -c %f
X
$Clean(*):	${rm-rm} -f %F.o %F
$Clean(*):	${rm-rm} -f %F.o
$Depend(*):	${maketd-maketd} -da -I/usr/include/local -D%s %f
$Depend(*):	${maketd-maketd} -da -I/usr/include/local %f
X
$Info(*):	${echo-echo} "Pascal source"
Purdue
chmod 0444 mk-lib/dot-p ||
echo 'restore of mk-lib/dot-p failed'
Wc_c="`wc -c < 'mk-lib/dot-p'`"
test 435 -eq "$Wc_c" ||
	echo 'mk-lib/dot-p: original size 435, current size' "$Wc_c"
fi
# ============= mk-lib/pre-cpio ==============
if test -f 'mk-lib/pre-cpio' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-cpio (File already exists)'
else
echo 'x - extracting mk-lib/pre-cpio (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-cpio' &&
# extract cpio files							(ksb)
X
$Compile(*):	${%x-%x} ${cpio_debug--icvm} %s <%f
$Compile(*):	${%x-%x} ${cpio_debug--icvm} <%f
$Clean(*):	${rm-rm} -rf %P
$Run(*):	${%x-%x} ${cpio_debug--icvm} %s <%f
$Run(*):	${%x-%x} ${cpio_debug--icvm} <%f
X
$Display(*):	${%x-%x} ${cpio_debug--icvmt} %s <%f |${PAGER-${more-more}}
$Display(*):	${%x-%x} ${cpio_debug--icvmt} <%f |${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "cpio archive"
Purdue
chmod 0444 mk-lib/pre-cpio ||
echo 'restore of mk-lib/pre-cpio failed'
Wc_c="`wc -c < 'mk-lib/pre-cpio'`"
test 426 -eq "$Wc_c" ||
	echo 'mk-lib/pre-cpio: original size 426, current size' "$Wc_c"
fi
# ============= mk/Tests/typenot ==============
if test ! -d 'mk/Tests'; then
    echo 'x - creating directory mk/Tests'
    mkdir 'mk/Tests'
fi
if test -f 'mk/Tests/typenot' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/Tests/typenot (File already exists)'
else
echo 'x - extracting mk/Tests/typenot (Text)'
sed 's/^X//' << 'Purdue' > 'mk/Tests/typenot' &&
$Compile: MK=-t/dev/null %b -a%C%I%N%V -mType %f
X
$Type(0): %Yf : is a plain file
$Type(1): %Y~s : not a socket
$Type(2): %Y~c : not a char special
$Type(3): %Y~b : not a block special
$Type(4): %Y~d : not a dir
$Type(5): %Y~p : not a fifo
$Type(6): %Y~l : not a symbolic link
$Type(7): %Y~f : not a plain file ; exit 1
Purdue
chmod 0644 mk/Tests/typenot ||
echo 'restore of mk/Tests/typenot failed'
Wc_c="`wc -c < 'mk/Tests/typenot'`"
test 320 -eq "$Wc_c" ||
	echo 'mk/Tests/typenot: original size 320, current size' "$Wc_c"
fi
# ============= mk/Tests/markers ==============
if test -f 'mk/Tests/markers' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/Tests/markers (File already exists)'
else
echo 'x - extracting mk/Tests/markers (Text)'
sed 's/^X//' << 'Purdue' > 'mk/Tests/markers' &&
$Compile: MK=-t/dev/null %b -a%C%N%I%V -mMarks -dSubs %f
X
# This file checks to be sure mk will find the correct marked line.
X
$Marks(*): [ "%M" = "marks" ] && [ "%m" = "Marks" ]
$Marks: false
$Marks(notme): false
$Marks(*): [ "%S" = "subs" ] && [ "%s" = "Subs" ]
Purdue
chmod 0644 mk/Tests/markers ||
echo 'restore of mk/Tests/markers failed'
Wc_c="`wc -c < 'mk/Tests/markers'`"
test 264 -eq "$Wc_c" ||
	echo 'mk/Tests/markers: original size 264, current size' "$Wc_c"
fi
# ============= mk/Tests/params ==============
if test -f 'mk/Tests/params' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/Tests/params (File already exists)'
else
echo 'x - extracting mk/Tests/params (Text)'
sed 's/^X//' << 'Purdue' > 'mk/Tests/params' &&
$Compile: %b -a%C%N%I%V -mParams -e/dev/null:./@ -t/dev/null:./@@ -l 69 %f
X
$Params(1): [ "%T" = "/dev/null:./@@" ] && [ _"%t" = _"-t/dev/null:./@@" ]
$Params(2): [ "%E" = "/dev/null:./@" ] && [ _"%e" = _"-e/dev/null:./@" ]
$Params(3): [ "%L" = "69" ] && [ _"%l" = _"-l69" ]
Purdue
chmod 0644 mk/Tests/params ||
echo 'restore of mk/Tests/params failed'
Wc_c="`wc -c < 'mk/Tests/params'`"
test 275 -eq "$Wc_c" ||
	echo 'mk/Tests/params: original size 275, current size' "$Wc_c"
fi
# ============= mk-lib/m-mkcat ==============
if test -f 'mk-lib/m-mkcat' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/m-mkcat (File already exists)'
else
echo 'x - extracting mk-lib/m-mkcat (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/m-mkcat' &&
# the Mkcat target is used by the new manual system to format a page	(ksb)
# the way it should be installed on-line (nroff -h, for instance)
X
$Mkcat(*): ${tbl-tbl} /usr/local/lib/pl.man %f|${nroff-nroff} -h -man|colcrt -U|cat -s
$Mkcat(*): ${tbl-tbl} /usr/local/lib/pl.man %f|${nroff-nroff} -h -man|colcrt |cat -s
Purdue
chmod 0444 mk-lib/m-mkcat ||
echo 'restore of mk-lib/m-mkcat failed'
Wc_c="`wc -c < 'mk-lib/m-mkcat'`"
test 314 -eq "$Wc_c" ||
	echo 'mk-lib/m-mkcat: original size 314, current size' "$Wc_c"
fi
# ============= mk-lib/m-run ==============
if test -f 'mk-lib/m-run' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/m-run (File already exists)'
else
echo 'x - extracting mk-lib/m-run (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/m-run' &&
# the Run target will run the file, or build an run it			(ksb)
X
$Run(*):	%b %o -mCompile -d%s %f && %P
$Run(*):	%b %o -mCompile %f && %P %s
$Run(*):	%b %o -mCompile %f && %P
$Run(*):	%f %s
$Run(*):	%f
$Run(*):	%P %s
$Run(*):	%P
$Run(*):	sh %f %s
$Run(*):	sh -x %f %s
$Run(*):	sh %f
$Run(*):	sh -x %f
Purdue
chmod 0444 mk-lib/m-run ||
echo 'restore of mk-lib/m-run failed'
Wc_c="`wc -c < 'mk-lib/m-run'`"
test 300 -eq "$Wc_c" ||
	echo 'mk-lib/m-run: original size 300, current size' "$Wc_c"
fi
# ============= mk-lib/type-b ==============
if test -f 'mk-lib/type-b' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/type-b (File already exists)'
else
echo 'x - extracting mk-lib/type-b (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/type-b' &&
# the file is a block-special, what to do?				(ksb)
X
$Display(*):	${ls-ls} %s %f
$Display(*):	${ls-ls} -l %f
X
$Info(*):	${echo-echo} "block special"
X
$*(*):		: '%f is a block special file, cannot %m(%s) it.' && ${false-false}
$*(*):		: '%f is a block special file, cannot %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/type-b ||
echo 'restore of mk-lib/type-b failed'
Wc_c="`wc -c < 'mk-lib/type-b'`"
test 298 -eq "$Wc_c" ||
	echo 'mk-lib/type-b: original size 298, current size' "$Wc_c"
fi
# ============= mk-lib/type-c ==============
if test -f 'mk-lib/type-c' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/type-c (File already exists)'
else
echo 'x - extracting mk-lib/type-c (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/type-c' &&
# the file is a character-special, what to do?				(ksb)
X
$Display(*):	${ls-ls} %s %f
$Display(*):	${ls-ls} -l %f
X
$Info(*):	${echo-echo} "character special"
X
$*(*):		: '%f is a character special file, cannot %m(%s) it.' && ${false-false}
$*(*):		: '%f is a character special file, cannot %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/type-c ||
echo 'restore of mk-lib/type-c failed'
Wc_c="`wc -c < 'mk-lib/type-c'`"
test 314 -eq "$Wc_c" ||
	echo 'mk-lib/type-c: original size 314, current size' "$Wc_c"
fi
# ============= mk-lib/type-d ==============
if test -f 'mk-lib/type-d' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/type-d (File already exists)'
else
echo 'x - extracting mk-lib/type-d (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/type-d' &&
# the file is a directory, what to do?					(ksb)
X
$Display(*):	${ls-ls} %s %f
$Display(*):	${ls-ls} -aF %f
X
$Info(*):	${echo-echo} "directory"
X
$*(*):		: '%f is a directory, cannot %m(%s) it.' && ${false-false}
$*(*):		: '%f is a directory, cannot %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/type-d ||
echo 'restore of mk-lib/type-d failed'
Wc_c="`wc -c < 'mk-lib/type-d'`"
test 274 -eq "$Wc_c" ||
	echo 'mk-lib/type-d: original size 274, current size' "$Wc_c"
fi
# ============= mk-lib/type-p ==============
if test -f 'mk-lib/type-p' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/type-p (File already exists)'
else
echo 'x - extracting mk-lib/type-p (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/type-p' &&
# the file is a fifo, what to do?					(ksb)
X
$Display(*):	${ls-ls} %s %f
$Display(*):	${ls-ls} -l %f
X
$Info(*):	${echo-echo} "fifo"
X
$*(*):		: '%f is a fifo (named pipe), cannot %m(%s) it.' && ${false-false}
$*(*):		: '%f is a a fifo (named pipe), cannot %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/type-p ||
echo 'restore of mk-lib/type-p failed'
Wc_c="`wc -c < 'mk-lib/type-p'`"
test 281 -eq "$Wc_c" ||
	echo 'mk-lib/type-p: original size 281, current size' "$Wc_c"
fi
# ============= mk-lib/type-s ==============
if test -f 'mk-lib/type-s' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/type-s (File already exists)'
else
echo 'x - extracting mk-lib/type-s (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/type-s' &&
# the file is a socket, what to do?					(ksb)
X
$Display(*):	${ls-ls} %s %f
$Display(*):	${ls-ls} -l %f
X
$Info(*):	${echo-echo} "socket"
X
$*(*):		: '%f is a socket, cannot %m(%s) it.' && ${false-false}
$*(*):		: '%f is a a socket, cannot %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/type-s ||
echo 'restore of mk-lib/type-s failed'
Wc_c="`wc -c < 'mk-lib/type-s'`"
test 263 -eq "$Wc_c" ||
	echo 'mk-lib/type-s: original size 263, current size' "$Wc_c"
fi
# ============= mk-lib/file-gmon.out ==============
if test -f 'mk-lib/file-gmon.out' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/file-gmon.out (File already exists)'
else
echo 'x - extracting mk-lib/file-gmon.out (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/file-gmon.out' &&
# this file is not an a.out file, do not run it				(ksb)
X
$Compile(*):	${gprof-gprof} %s %f
$Compile(*):	${gprof-gprof} %f
X
$Run(*):	: '%s is an input file for gprof, will not %m(%s) it' && ${false-false}
$Run(*):	: '%s is an input file for gprof, will not %m it' && ${false-false}
X
$Info(*):	${echo-echo} "gprof input"
Purdue
chmod 0444 mk-lib/file-gmon.out ||
echo 'restore of mk-lib/file-gmon.out failed'
Wc_c="`wc -c < 'mk-lib/file-gmon.out'`"
test 320 -eq "$Wc_c" ||
	echo 'mk-lib/file-gmon.out: original size 320, current size' "$Wc_c"
fi
# ============= mk-lib/pre-o ==============
if test -f 'mk-lib/pre-o' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-o (File already exists)'
else
echo 'x - extracting mk-lib/pre-o (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-o' &&
# a object file								(ksb)
X
$Compile(*):	${cc-cc} ${cc_debug--O} -o %s %f
$Compile(*):	${cc-cc} ${cc_debug--O} -o %F %f %s
$Compile(*):	${cc-cc} ${cc_debug--O} -o %F %f
X
$Clean(*):	${rm-rm} -f %F
X
$Display(*):	${nm-nm} %s %f |${PAGER-${more-more}}
$Display(*):	${nm-nm} -o %f |${PAGER-${more-more}}
X
$Info(*):	${echo-echo} "object code"
Purdue
chmod 0444 mk-lib/pre-o ||
echo 'restore of mk-lib/pre-o failed'
Wc_c="`wc -c < 'mk-lib/pre-o'`"
test 339 -eq "$Wc_c" ||
	echo 'mk-lib/pre-o: original size 339, current size' "$Wc_c"
fi
# ============= mk-lib/pre-tar ==============
if test -f 'mk-lib/pre-tar' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-tar (File already exists)'
else
echo 'x - extracting mk-lib/pre-tar (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-tar' &&
# extract tar/ar files							(ksb)
X
$Compile(*):	${%x-%x} %s %f
$Compile(*):	${%x-%x} -xvf %f
X
$Clean(*):	${rm-rm} -f %P
$Clean(*):	${rm-rm} -rf %P
X
$Run(*):	${%x-%x} %s %f
$Run(*):	${%x-%x} -tvf %f
X
$Display(*):	${%x-%x} %s %f
$Display(*):	${%x-%x} -tvf %f
X
$Info(*):	${echo-echo} "tar archive"
Purdue
chmod 0444 mk-lib/pre-tar ||
echo 'restore of mk-lib/pre-tar failed'
Wc_c="`wc -c < 'mk-lib/pre-tar'`"
test 296 -eq "$Wc_c" ||
	echo 'mk-lib/pre-tar: original size 296, current size' "$Wc_c"
fi
# ============= mk-lib/dot- ==============
if test -f 'mk-lib/dot-' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot- (File already exists)'
else
echo 'x - extracting mk-lib/dot- (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-' &&
# any file with no extender
X
$Info(*):	${echo-echo} "no extender (`file %f |sed -e 's/[%f]*:[ \t][ \t]*//'`)"
X
$*(*):	: 'no extender on %f, do not know how to %m(%s) it.' && ${false-false}
$*(*):	: 'no extender on %f, do not know how to %m it.' && ${false-false}
Purdue
chmod 0444 mk-lib/dot- ||
echo 'restore of mk-lib/dot- failed'
Wc_c="`wc -c < 'mk-lib/dot-'`"
test 263 -eq "$Wc_c" ||
	echo 'mk-lib/dot-: original size 263, current size' "$Wc_c"
fi
# ============= mk-lib/dot-h ==============
if test -f 'mk-lib/dot-h' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-h (File already exists)'
else
echo 'x - extracting mk-lib/dot-h (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-h' &&
# a C header file							(ksb)
X
$Compile(perl):	${h2ph-h2ph} %f
$Compile(*):	: 'ignore header files'
X
$Info(*):	${echo-echo} "C header file"
X
$*(*):	: 'extender %x on %f? do not know how to %m(%s) it.'
$*(*):	: 'extender %x on %f? do not know how to %m it.'
Purdue
chmod 0444 mk-lib/dot-h ||
echo 'restore of mk-lib/dot-h failed'
Wc_c="`wc -c < 'mk-lib/dot-h'`"
test 257 -eq "$Wc_c" ||
	echo 'mk-lib/dot-h: original size 257, current size' "$Wc_c"
fi
# ============= mk-lib/dot-sh ==============
if test -f 'mk-lib/dot-sh' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-sh (File already exists)'
else
echo 'x - extracting mk-lib/dot-sh (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-sh' &&
# a script written in any shell						(ksb)
X
$Compile(*):	sed -e '/#$/d' -e '/^#[^!]/d' %f > %D/%F && chmod 755 %D/%F
$Compile(*):	sed -e '/#$/d' -e '/^#[^!]/d' %f > %F && chmod 755 %F
$Clean(*):	rm -f %D/%F
$Clean(*):	rm -f %F
X
$Info(*):	${echo-echo} "%x commands"
X
$Run(*):	%x %f %s
$Run(*):	%x %f
Purdue
chmod 0444 mk-lib/dot-sh ||
echo 'restore of mk-lib/dot-sh failed'
Wc_c="`wc -c < 'mk-lib/dot-sh'`"
test 299 -eq "$Wc_c" ||
	echo 'mk-lib/dot-sh: original size 299, current size' "$Wc_c"
fi
# ============= mkcat/main.h ==============
if test -f 'mkcat/main.h' -a X"$1" != X"-c"; then
	echo 'x - skipping mkcat/main.h (File already exists)'
else
echo 'x - extracting mkcat/main.h (Text)'
sed 's/^X//' << 'Purdue' > 'mkcat/main.h' &&
/*
X * parse options
X */
X
extern char *progname, u_terse[], *u_help[];
extern int main();
extern int fCkAlso, fDelete, fGenInstck, fInstall, fMkLinks, fInitNew, fVersion, fMkWhatis, fJustComp, fFormat, fExec, fVerbose, iExit;
extern char *pcCat, *pcMan, *pcRoot, *pcWhatis, copyright[];
Purdue
chmod 0644 mkcat/main.h ||
echo 'restore of mkcat/main.h failed'
Wc_c="`wc -c < 'mkcat/main.h'`"
test 286 -eq "$Wc_c" ||
	echo 'mkcat/main.h: original size 286, current size' "$Wc_c"
fi
# ============= mk/main.h ==============
if test -f 'mk/main.h' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/main.h (File already exists)'
else
echo 'x - extracting mk/main.h (Text)'
sed 's/^X//' << 'Purdue' > 'mk/main.h' &&
/*
X * parse options
X */
X
extern char *progname, uline[], *help[];
extern int main(), usage();
extern int fFirst, debug, fAll, fConfirm, fCase, lines, fExec, fVerbose;
extern char *submark, *pchExamine, *markstr, *pchTemplates, *pathname;
Purdue
chmod 0644 mk/main.h ||
echo 'restore of mk/main.h failed'
Wc_c="`wc -c < 'mk/main.h'`"
test 238 -eq "$Wc_c" ||
	echo 'mk/main.h: original size 238, current size' "$Wc_c"
fi
# ============= mk-lib/dot-xbm ==============
if test -f 'mk-lib/dot-xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-xbm (File already exists)'
else
echo 'x - extracting mk-lib/dot-xbm (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-xbm' &&
# an X bitmap file							(ksb)
X
$Info(*):	${echo-echo} "an X bitmap image"
X
$Display(*):	# on %{DISPLAY}\n\t${xloadimage-xloadimage} %f
$Display(*):	: 'set ${DISPLAY} to %m(%s) %f'
$Display(*):	: 'set ${DISPLAY} to %m %f'
Purdue
chmod 0444 mk-lib/dot-xbm ||
echo 'restore of mk-lib/dot-xbm failed'
Wc_c="`wc -c < 'mk-lib/dot-xbm'`"
test 222 -eq "$Wc_c" ||
	echo 'mk-lib/dot-xbm: original size 222, current size' "$Wc_c"
fi
# ============= mk-lib/m-compile ==============
if test -f 'mk-lib/m-compile' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/m-compile (File already exists)'
else
echo 'x - extracting mk-lib/m-compile (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/m-compile' &&
# the Compile target derives the obvious excutable from the source file	(ksb)
X
$Compile(*): ${make-make} %s %P.o
$Compile(*): ${make-make} %P.o
$Compile(*): ${make-make} %s %P
$Compile(*): ${make-make} %P
Purdue
chmod 0444 mk-lib/m-compile ||
echo 'restore of mk-lib/m-compile failed'
Wc_c="`wc -c < 'mk-lib/m-compile'`"
test 205 -eq "$Wc_c" ||
	echo 'mk-lib/m-compile: original size 205, current size' "$Wc_c"
fi
# ============= mk-lib/m-display ==============
if test -f 'mk-lib/m-display' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/m-display (File already exists)'
else
echo 'x - extracting mk-lib/m-display (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/m-display' &&
# this target does something to show the contents of the file		(ksb)
# in a nice format
X
$Display(*): ${PAGER-${more-more}} %s %f
$Display(*): ${PAGER-${more-more}} %f
$Display(*): ${cat-cat} %s %f
$Display(*): ${cat-cat} %f
Purdue
chmod 0444 mk-lib/m-display ||
echo 'restore of mk-lib/m-display failed'
Wc_c="`wc -c < 'mk-lib/m-display'`"
test 225 -eq "$Wc_c" ||
	echo 'mk-lib/m-display: original size 225, current size' "$Wc_c"
fi
# ============= mk-lib/pre-ln ==============
if test -f 'mk-lib/pre-ln' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/pre-ln (File already exists)'
else
echo 'x - extracting mk-lib/pre-ln (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/pre-ln' &&
# a lint library							(ksb)
X
$Info(*):	${echo-echo} "lint library"
X
$*(*):		: '%f is a lint library, cannot %m(%s) it' && ${false-false}
$*(*):		: '%f is a lint library, cannot %m it' && ${false-false}
Purdue
chmod 0444 mk-lib/pre-ln ||
echo 'restore of mk-lib/pre-ln failed'
Wc_c="`wc -c < 'mk-lib/pre-ln'`"
test 203 -eq "$Wc_c" ||
	echo 'mk-lib/pre-ln: original size 203, current size' "$Wc_c"
fi
# ============= mk-lib/dot-C ==============
if test -f 'mk-lib/dot-C' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-C (File already exists)'
else
echo 'x - extracting mk-lib/dot-C (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-C' &&
# a C++ source file, or a compacted file				(ksb)
X
# We'd like to compile the c++ case, but we do not know how, try Cc
$Compile(*):	%b %o -mCc -d%s %f
$Compile(*):	%b %o -mCc %f
X
$Info(*):	${echo-echo} "C++ source or compacted data"
Purdue
chmod 0444 mk-lib/dot-C ||
echo 'restore of mk-lib/dot-C failed'
Wc_c="`wc -c < 'mk-lib/dot-C'`"
test 233 -eq "$Wc_c" ||
	echo 'mk-lib/dot-C: original size 233, current size' "$Wc_c"
fi
# ============= mk-lib/dot-pl ==============
if test -f 'mk-lib/dot-pl' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-pl (File already exists)'
else
echo 'x - extracting mk-lib/dot-pl (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-pl' &&
# perl source file							(ksb)
X
$Compile(*):	${perl-perl} -u %s %f ; echo "Now run undump"
$Compile(*):	${perl-perl} -u %f ; echo "Now run undump"
X
$Run(*):	${perl-perl} %s %f
$Run(*):	${perl-perl} %f
X
$Info(*):	${echo-echo} "perl source"
Purdue
chmod 0444 mk-lib/dot-pl ||
echo 'restore of mk-lib/dot-pl failed'
Wc_c="`wc -c < 'mk-lib/dot-pl'`"
test 239 -eq "$Wc_c" ||
	echo 'mk-lib/dot-pl: original size 239, current size' "$Wc_c"
fi
# ============= mk-lib/dot-el ==============
if test -f 'mk-lib/dot-el' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-el (File already exists)'
else
echo 'x - extracting mk-lib/dot-el (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-el' &&
# a emacs lisp source file						(ksb)
X
$Compile(*):	${gnuemacs-gnuemacs} -batch -f %s %f
$Compile(*):	${gnuemacs-gnuemacs} -batch -f batch-byte-compile %f
X
$Info(*):	${echo-echo} "emacs lisp source"
Purdue
chmod 0444 mk-lib/dot-el ||
echo 'restore of mk-lib/dot-el failed'
Wc_c="`wc -c < 'mk-lib/dot-el'`"
test 199 -eq "$Wc_c" ||
	echo 'mk-lib/dot-el: original size 199, current size' "$Wc_c"
fi
# ============= mk/Tests/lines ==============
if test -f 'mk/Tests/lines' -a X"$1" != X"-c"; then
	echo 'x - skipping mk/Tests/lines (File already exists)'
else
echo 'x - extracting mk/Tests/lines (Text)'
sed 's/^X//' << 'Purdue' > 'mk/Tests/lines' &&
$Compile: MK=-t/dev/null %b -a%C%I%N%V -mLines -l 2 %f
$Lines(1): true
# one dry line
# two 
# three to make sure
$Lines(2): false
Purdue
chmod 0644 mk/Tests/lines ||
echo 'restore of mk/Tests/lines failed'
Wc_c="`wc -c < 'mk/Tests/lines'`"
test 131 -eq "$Wc_c" ||
	echo 'mk/Tests/lines: original size 131, current size' "$Wc_c"
fi
# ============= mk-lib/dot-ph ==============
if test -f 'mk-lib/dot-ph' -a X"$1" != X"-c"; then
	echo 'x - skipping mk-lib/dot-ph (File already exists)'
else
echo 'x - extracting mk-lib/dot-ph (Text)'
sed 's/^X//' << 'Purdue' > 'mk-lib/dot-ph' &&
# perl header file							(ksb)
X
$Compile(*):	: 'ignore header file'
X
$Info(*):	${echo-echo} "perl header file"
Purdue
chmod 0444 mk-lib/dot-ph ||
echo 'restore of mk-lib/dot-ph failed'
Wc_c="`wc -c < 'mk-lib/dot-ph'`"
test 111 -eq "$Wc_c" ||
	echo 'mk-lib/dot-ph: original size 111, current size' "$Wc_c"
fi
exit 0

exit 0 # Just in case...
