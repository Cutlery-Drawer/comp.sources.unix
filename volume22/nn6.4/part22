Subject:  REPOST v22i057:  NN Newsreader, release 6.4, Part22/21
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET
X-Checksum-Snefru: cb918cf4 25fa0738 76c323fb 6929ba25

Submitted-by: "Kim F. Storm" <storm@texas.dk>
Posting-number: Volume 22, Issue 57
Archive-name: nn6.4/part22

[  I goofed.  There are 22 parts, not 21 parts.  Sorry for the delay in
   reposting these.  --r$  ]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then feed it
# into a shell via "sh file" or similar.  To overwrite existing files,
# type "sh file -c".
# The tool that generated this appeared in the comp.sources.unix newsgroup;
# send mail to comp-sources-unix@uunet.uu.net if you want that tool.
# Contents:  FILES SPLITNN1 back_act.sh conf/m-3b1g.h conf/m-att3b.h
#   conf/m-dec3100.h conf/m-gould.h conf/m-hp9000.h conf/m-i80286.h
#   conf/m-i80386.h conf/m-m680x0.h conf/m-m88000.h conf/m-mips.h
#   conf/m-pyramid.h conf/m-rt6150.h conf/m-sgi4D.h conf/m-sparc.h
#   conf/m-sun386i.h conf/m-symmetry.h conf/m-vax.h conf/s-3b1g.h
#   conf/s-aux1-1.h conf/s-bsd4-3.h conf/s-dnix5-2.h conf/s-dnix5-3.h
#   conf/s-dynix3-0.h conf/s-hpux2-1.h conf/s-hpux3-0.h
#   conf/s-pyramid.h conf/s-sunos3.h conf/s-sunos4-0.h
#   conf/s-sys5-tcap.h conf/s-texas1500.h conf/s-tower32.h
#   conf/s-uport2-2.h conf/s-usg3-1.h conf/s-xenix386ds.h contrib/cn
#   cvt-help.c debug.h dir.h help/adm.upgrade1 help/adm.upgrade2
#   help/adm.upgrade3 help/adm.upgrade4 help/adm.welcome
#   help/help.attr help/help.help help/help.set help/help.show
#   inews/Manifest inews/clientlib.h inews/version.c nngrab.sh
#   nnspew.sh nnusage.sh upgrade_rc.sh usercheck.c
# Wrapped by storm@texas.dk on Sun May  6 18:20:30 1990
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
echo If this archive is complete, you will see the following message:
echo '          "shar: End of archive 22 (of 22)."'
if test -f 'FILES' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'FILES'\"
else
  echo shar: Extracting \"'FILES'\" \(62 characters\)
  sed "s/^X//" >'FILES' <<'END_OF_FILE'
Xtail +3 MANIFEST | grep -v "Directory for" | awk '{print $1}'
END_OF_FILE
  if test 62 -ne `wc -c <'FILES'`; then
    echo shar: \"'FILES'\" unpacked with wrong size!
  fi
  chmod +x 'FILES'
  # end of 'FILES'
fi
if test -f 'SPLITNN1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'SPLITNN1'\"
else
  echo shar: Extracting \"'SPLITNN1'\" \(245 characters\)
  sed "s/^X//" >'SPLITNN1' <<'END_OF_FILE'
X# split nn.1 in 4 parts
Xcd man
X
Xsed -n \
X-e '/BEGINPART A/,/ENDPART A/w nn.1.A' \
X-e '/BEGINPART B/,/ENDPART B/w nn.1.B' \
X-e '/BEGINPART C/,/ENDPART C/w nn.1.C' \
X-e '/BEGINPART D/,/ENDPART D/w nn.1.D' nn.1
X
X# dont have to 'make' it
Xtouch nn.1
END_OF_FILE
  if test 245 -ne `wc -c <'SPLITNN1'`; then
    echo shar: \"'SPLITNN1'\" unpacked with wrong size!
  fi
  # end of 'SPLITNN1'
fi
if test -f 'back_act.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'back_act.sh'\"
else
  echo shar: Extracting \"'back_act.sh'\" \(522 characters\)
  sed "s/^X//" >'back_act.sh' <<'END_OF_FILE'
X# prefix is inserted above by make
X
X#
X#	back_act will maintain a set of `old' active files
X#	in the DB directory where they can be used by nngoback
X#	to backtrack the rc file a number of days.
X#
X#	It should be invoked by cron every day at midnight.
X#	It should run as user `news'!
X#
X
Xcd $DB || exit 1
X
Xp=15
Xl=""
Xfor i in 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
Xdo
X	if [ -f active.$i ]
X	then
X		mv active.$i active.$p
X		l=$p
X	elif [ -n "$l" ]
X	then
X		ln active.$l active.$p
X	fi
X	p=$i
Xdone
X
Xcp $ACTIVE active.0
Xchmod 644 active.0
END_OF_FILE
  if test 522 -ne `wc -c <'back_act.sh'`; then
    echo shar: \"'back_act.sh'\" unpacked with wrong size!
  fi
  # end of 'back_act.sh'
fi
if test -f 'conf/m-3b1g.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-3b1g.h'\"
else
  echo shar: Extracting \"'conf/m-3b1g.h'\" \(771 characters\)
  sed "s/^X//" >'conf/m-3b1g.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	These defs for GCC 1.34 on a UNIX-PC.  Written by Steve
X *	Simmons (scs@lokkur.dexter.mi.us).  Shoot me, not Kim.
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X/*
X * 	Define NO_VARARGS if the varargs feature is not available
X *
X *	Also define NO_VARARGS if the vprintf/vsprintf routines are not
X *	available (however, this will only by safe on some machines, like
X *	the VAX).
X *
X */
X
X/* #define NO_VARARGS */
X
X#ifdef NETWORK_DATABASE
XYOU LOSE ON NETWORK_DATABASE
X#endif
END_OF_FILE
  if test 771 -ne `wc -c <'conf/m-3b1g.h'`; then
    echo shar: \"'conf/m-3b1g.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-3b1g.h'
fi
if test -f 'conf/m-att3b.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-att3b.h'\"
else
  echo shar: Extracting \"'conf/m-att3b.h'\" \(688 characters\)
  sed "s/^X//" >'conf/m-att3b.h' <<'END_OF_FILE'
X
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X/*
X *	Define NETWORK_BYTE_ORDER if the machine's int32's are
X *	already in network byte order, i.e. m68k based.
X */
X
X#define NETWORK_BYTE_ORDER	/* */
END_OF_FILE
  if test 688 -ne `wc -c <'conf/m-att3b.h'`; then
    echo shar: \"'conf/m-att3b.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-att3b.h'
fi
if test -f 'conf/m-dec3100.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-dec3100.h'\"
else
  echo shar: Extracting \"'conf/m-dec3100.h'\" \(519 characters\)
  sed "s/^X//" >'conf/m-dec3100.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This file is for a DECstation 3100, running Ultrix
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#undef NO_VARARGS
X
X#ifdef NETWORK_DATABASE
X#undef NETWORK_BYTE_ORDER
X#include <netinet/in.h>
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 519 -ne `wc -c <'conf/m-dec3100.h'`; then
    echo shar: \"'conf/m-dec3100.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-dec3100.h'
fi
if test -f 'conf/m-gould.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-gould.h'\"
else
  echo shar: Extracting \"'conf/m-gould.h'\" \(750 characters\)
  sed "s/^X//" >'conf/m-gould.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X/*
X *	GOULD/UTX has varargs.h but not v[s]printf()
X */
X
X#define NO_VARARGS
X
X
X/*
X *	Not in network byte order on the GOULD
X */
X
X#undef NETWORK_BYTE_ORDER	/* */
X#ifdef NETWORK_DATABASE
X#include <netinet/in.h>
X#endif
END_OF_FILE
  if test 750 -ne `wc -c <'conf/m-gould.h'`; then
    echo shar: \"'conf/m-gould.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-gould.h'
fi
if test -f 'conf/m-hp9000.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-hp9000.h'\"
else
  echo shar: Extracting \"'conf/m-hp9000.h'\" \(550 characters\)
  sed "s/^X//" >'conf/m-hp9000.h' <<'END_OF_FILE'
X
X/************** Machine (and compiler) dependent definitions. **************
X *
X *    This is for HP9000 Series 320 and 800 (at least)
X */
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X/*
X *	Define NETWORK_BYTE_ORDER if the machine's int32's are
X *	already in network byte order, i.e. m68k based.
X */
X
X#define NETWORK_BYTE_ORDER	/* */
END_OF_FILE
  if test 550 -ne `wc -c <'conf/m-hp9000.h'`; then
    echo shar: \"'conf/m-hp9000.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-hp9000.h'
fi
if test -f 'conf/m-i80286.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-i80286.h'\"
else
  echo shar: Extracting \"'conf/m-i80286.h'\" \(691 characters\)
  sed "s/^X//" >'conf/m-i80286.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This is for the Intel 80286 processor.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#define I286_BUG
X
X#ifdef NETWORK_DATABASE
X
X#undef NETWORK_BYTE_ORDER	/* THEY ARE NOT */
X
X/*
X * Needs byte swapping here!
X */
X
XYOU LOSE -- HOW IS THIS DONE ON THE 286?
X
X#define htonl(l)	...	/* host long to network long */
X#define ntohl(l)	...	/* network long to host long */
X
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 691 -ne `wc -c <'conf/m-i80286.h'`; then
    echo shar: \"'conf/m-i80286.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-i80286.h'
fi
if test -f 'conf/m-i80386.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-i80386.h'\"
else
  echo shar: Extracting \"'conf/m-i80386.h'\" \(669 characters\)
  sed "s/^X//" >'conf/m-i80386.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This file is for 80386 based UNIX/XENIX systems.
X */
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X#ifdef NETWORK_DATABASE
X
X#undef NETWORK_BYTE_ORDER	/* THEY ARE NOT */
X
XYOU LOSE -- I DON'T KNOW HOW TO DO THIS ON 80386 BASED SYSTEMS!
X
X#define htonl(l)	...	/* host long to network long */
X#define ntohl(l)	...	/* network long to host long */
X
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 669 -ne `wc -c <'conf/m-i80386.h'`; then
    echo shar: \"'conf/m-i80386.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-i80386.h'
fi
if test -f 'conf/m-m680x0.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-m680x0.h'\"
else
  echo shar: Extracting \"'conf/m-m680x0.h'\" \(427 characters\)
  sed "s/^X//" >'conf/m-m680x0.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	For all Motorola 68000/68020/68030/... based systems.
X */
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#define NETWORK_BYTE_ORDER
END_OF_FILE
  if test 427 -ne `wc -c <'conf/m-m680x0.h'`; then
    echo shar: \"'conf/m-m680x0.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-m680x0.h'
fi
if test -f 'conf/m-m88000.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-m88000.h'\"
else
  echo shar: Extracting \"'conf/m-m88000.h'\" \(509 characters\)
  sed "s/^X//" >'conf/m-m88000.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	For all Motorola 88000 based systems.
X *	From: jjohnson@urbana.mcd.mot.com (Jeff Johnson)
X *	      Motorola Inc -- Urbana Design Center
X */
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#define NETWORK_BYTE_ORDER
END_OF_FILE
  if test 509 -ne `wc -c <'conf/m-m88000.h'`; then
    echo shar: \"'conf/m-m88000.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-m88000.h'
fi
if test -f 'conf/m-mips.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-mips.h'\"
else
  echo shar: Extracting \"'conf/m-mips.h'\" \(552 characters\)
  sed "s/^X//" >'conf/m-mips.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This file is for a Mips M12, running Umips
X *	From: beldar@mips.com (Gardner Cohen)
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#undef NO_VARARGS
X
X#ifdef NETWORK_DATABASE
X#undef NETWORK_BYTE_ORDER
X#include <netinet/in.h>
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 552 -ne `wc -c <'conf/m-mips.h'`; then
    echo shar: \"'conf/m-mips.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-mips.h'
fi
if test -f 'conf/m-pyramid.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-pyramid.h'\"
else
  echo shar: Extracting \"'conf/m-pyramid.h'\" \(676 characters\)
  sed "s/^X//" >'conf/m-pyramid.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#define NO_VARARGS
X
X#define STRCSPN
X
X#ifdef NETWORK_DATABASE
X#define NETWORK_BYTE_ORDER
X#include <netinet/in.h>
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 676 -ne `wc -c <'conf/m-pyramid.h'`; then
    echo shar: \"'conf/m-pyramid.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-pyramid.h'
fi
if test -f 'conf/m-rt6150.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-rt6150.h'\"
else
  echo shar: Extracting \"'conf/m-rt6150.h'\" \(446 characters\)
  sed "s/^X//" >'conf/m-rt6150.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	For IBM/RT 6150
X *	From: marcel@duteca.tudelft.nl (Marcel J.E. Mol)
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#define NETWORK_BYTE_ORDER	/* */
END_OF_FILE
  if test 446 -ne `wc -c <'conf/m-rt6150.h'`; then
    echo shar: \"'conf/m-rt6150.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-rt6150.h'
fi
if test -f 'conf/m-sgi4D.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-sgi4D.h'\"
else
  echo shar: Extracting \"'conf/m-sgi4D.h'\" \(523 characters\)
  sed "s/^X//" >'conf/m-sgi4D.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This file is for a Silicon Graphics 4D series machines
X */
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X#undef NO_VARARGS
X
X#ifdef NETWORK_DATABASE
X#undef NETWORK_BYTE_ORDER
X#include <netinet/in.h>
X#endif	/* NETWORK DATABASE */
END_OF_FILE
  if test 523 -ne `wc -c <'conf/m-sgi4D.h'`; then
    echo shar: \"'conf/m-sgi4D.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-sgi4D.h'
fi
if test -f 'conf/m-sparc.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-sparc.h'\"
else
  echo shar: Extracting \"'conf/m-sparc.h'\" \(664 characters\)
  sed "s/^X//" >'conf/m-sparc.h' <<'END_OF_FILE'
X
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X
X/*
X *	Define NETWORK_BYTE_ORDER if the machine's longs are
X *	already in network byte order.
X */
X
X#define NETWORK_BYTE_ORDER
END_OF_FILE
  if test 664 -ne `wc -c <'conf/m-sparc.h'`; then
    echo shar: \"'conf/m-sparc.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-sparc.h'
fi
if test -f 'conf/m-sun386i.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-sun386i.h'\"
else
  echo shar: Extracting \"'conf/m-sun386i.h'\" \(673 characters\)
  sed "s/^X//" >'conf/m-sun386i.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X
X/*
X *	Not in network byte order on the 386
X */
X
X#undef NETWORK_BYTE_ORDER	/* */
X#ifdef NETWORK_DATABASE
X#include <netinet/in.h>
X#endif
END_OF_FILE
  if test 673 -ne `wc -c <'conf/m-sun386i.h'`; then
    echo shar: \"'conf/m-sun386i.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-sun386i.h'
fi
if test -f 'conf/m-symmetry.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-symmetry.h'\"
else
  echo shar: Extracting \"'conf/m-symmetry.h'\" \(645 characters\)
  sed "s/^X//" >'conf/m-symmetry.h' <<'END_OF_FILE'
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	This file is for the Symmetry.
X *	Use with s-dynix3-0.h.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X/*
X * The Symmetry C compiler lacks vprintf/vsprintf and strcspn
X */
X
X#define NO_VARARGS
X#define STRCSPN
X
X/*
X *	Not in network byte order on the 386
X */
X
X#undef NETWORK_BYTE_ORDER	/* */
X#ifdef NETWORK_DATABASE
X#include <netinet/in.h>
X#endif
END_OF_FILE
  if test 645 -ne `wc -c <'conf/m-symmetry.h'`; then
    echo shar: \"'conf/m-symmetry.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-symmetry.h'
fi
if test -f 'conf/m-vax.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/m-vax.h'\"
else
  echo shar: Extracting \"'conf/m-vax.h'\" \(788 characters\)
  sed "s/^X//" >'conf/m-vax.h' <<'END_OF_FILE'
X
X/************** Machine (and compiler) dependent definitions. **************
X *
X *	Define appropriate types for the following ranges of integer
X *	variables.  These are processor & compiler dependent, but the
X *	distributed definitions will probably work on most systems.
X */
X
X
X
X/*      MACHINE TYPE	DEFINED TYPE		VALUE RANGE	*/
X
Xtypedef unsigned char	int8;		/*        0 ..     255 */
Xtypedef short		int16;		/*  -10,000 ..  10,000 */
Xtypedef long		int32;		/* -100,000 .. 100,000 */
Xtypedef unsigned long	uint32;		/* 	  0 ..  2^31-1 */
X
X
X/*
X *	VAX/BSD has varargs.h but not v[s]printf()
X */
X
X#define NO_VARARGS
X
X
X/*
X *	The VAX does not have longs in network byte order
X */
X
X#undef NETWORK_BYTE_ORDER	/* we need to use ntohl/htonl */
X#ifdef NETWORK_DATABASE
X#include <netinet/in.h>
X#endif
END_OF_FILE
  if test 788 -ne `wc -c <'conf/m-vax.h'`; then
    echo shar: \"'conf/m-vax.h'\" unpacked with wrong size!
  fi
  # end of 'conf/m-vax.h'
fi
if test -f 'conf/s-3b1g.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-3b1g.h'\"
else
  echo shar: Extracting \"'conf/s-3b1g.h'\" \(298 characters\)
  sed "s/^X//" >'conf/s-3b1g.h' <<'END_OF_FILE'
X/*
X *	These defs for GCC 1.34 on a UNIX-PC.  Written by Steve
X *	Simmons (scs@lokkur.dexter.mi.us).  Shoot me, not Kim.
X */
X
X#include "s-sys5-tcap.h"
X
X#undef	SIGNAL_HANDLERS_ARE_VOID
X
X#undef	HAVE_MKDIR
X
X#undef	DETATCH_TERMINAL
X
X#undef	MAILX
X#define	MAILX		"/bin/mail"
X
X#define COMPILER_FLAGS -g -O
END_OF_FILE
  if test 298 -ne `wc -c <'conf/s-3b1g.h'`; then
    echo shar: \"'conf/s-3b1g.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-3b1g.h'
fi
if test -f 'conf/s-aux1-1.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-aux1-1.h'\"
else
  echo shar: Extracting \"'conf/s-aux1-1.h'\" \(741 characters\)
  sed "s/^X//" >'conf/s-aux1-1.h' <<'END_OF_FILE'
X/*
X *	This version is for A/UX 1.1 (approx. System V Release 3.1)
X */
X
X#define NO_DIRENT_H
X#include "s-sys5.h"
X
X/*
X *	Define if your system has BSD like job control (SIGTSTP works)
X */
X
X#define HAVE_JOBCONTROL			/* */
X
X/*
X *	Define if your system provides the "directory(3X)" access routines
X *
X *	If true, include the header file(s) required by the package below
X *	(remember that <sys/types.h> or equivalent is included above)
X *	Also typedef Direntry to the proper struct type.
X */
X
X#define	HAVE_DIRECTORY			/* */
X
X#include <sys/dir.h>			/* A/UX */
X
Xtypedef struct direct Direntry;		/* System V */
X
X/*
X *	Define HAVE_MULTIGROUP if system has simultaneous multiple group
X *	membership capability (BSD style).
X */
X
X#define HAVE_MULTIGROUP
X
END_OF_FILE
  if test 741 -ne `wc -c <'conf/s-aux1-1.h'`; then
    echo shar: \"'conf/s-aux1-1.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-aux1-1.h'
fi
if test -f 'conf/s-bsd4-3.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-bsd4-3.h'\"
else
  echo shar: Extracting \"'conf/s-bsd4-3.h'\" \(294 characters\)
  sed "s/^X//" >'conf/s-bsd4-3.h' <<'END_OF_FILE'
X/*
X *	This version is for 4.3 systems
X */
X
X#include "s-bsd4-2.h"
X
X/*
X *	Define MICRO_ALARM to timeout in 0.1 seconds if possible
X */
X
X#undef	MICRO_ALARM
X#define MICRO_ALARM()	ualarm(100000,0)	/* BSD 4.3 */
X
X/*
X *	Define if your system has a 4.3BSD like syslog library.
X */
X
X#define HAVE_SYSLOG
END_OF_FILE
  if test 294 -ne `wc -c <'conf/s-bsd4-3.h'`; then
    echo shar: \"'conf/s-bsd4-3.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-bsd4-3.h'
fi
if test -f 'conf/s-dnix5-2.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-dnix5-2.h'\"
else
  echo shar: Extracting \"'conf/s-dnix5-2.h'\" \(331 characters\)
  sed "s/^X//" >'conf/s-dnix5-2.h' <<'END_OF_FILE'
X/*
X *	This version is for dnix version 5.2 on DIAB DS90.
X */
X
X#include "s-sys5.h"
X
X#undef	SIGNAL_HANDLERS_ARE_VOID	/* not void on dnix */
X
X/*
X *	Define AVOID_SHELL_EXEC if the system gets confused by
X *		#!/bin/sh
X *	lines in shell scripts, e.g. only reads #! and thinks it
X *	is a csh script.
X */
X
X#define AVOID_SHELL_EXEC		/* */
END_OF_FILE
  if test 331 -ne `wc -c <'conf/s-dnix5-2.h'`; then
    echo shar: \"'conf/s-dnix5-2.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-dnix5-2.h'
fi
if test -f 'conf/s-dnix5-3.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-dnix5-3.h'\"
else
  echo shar: Extracting \"'conf/s-dnix5-3.h'\" \(275 characters\)
  sed "s/^X//" >'conf/s-dnix5-3.h' <<'END_OF_FILE'
X/*
X *	This version is for dnix version 5.3 on DIAB DS90.
X */
X
X#include "s-sys5.h"
X
X/*
X *	Define AVOID_SHELL_EXEC if the system gets confused by
X *		#!/bin/sh
X *	lines in shell scripts, e.g. only reads #! and thinks it
X *	is a csh script.
X */
X
X#define AVOID_SHELL_EXEC		/* */
END_OF_FILE
  if test 275 -ne `wc -c <'conf/s-dnix5-3.h'`; then
    echo shar: \"'conf/s-dnix5-3.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-dnix5-3.h'
fi
if test -f 'conf/s-dynix3-0.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-dynix3-0.h'\"
else
  echo shar: Extracting \"'conf/s-dynix3-0.h'\" \(95 characters\)
  sed "s/^X//" >'conf/s-dynix3-0.h' <<'END_OF_FILE'
X/*
X *	This version is for Dynix 3.0 systems
X */
X
X#include "s-bsd4-2.h"
X
X#undef HAVE_MULTIGROUP
END_OF_FILE
  if test 95 -ne `wc -c <'conf/s-dynix3-0.h'`; then
    echo shar: \"'conf/s-dynix3-0.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-dynix3-0.h'
fi
if test -f 'conf/s-hpux2-1.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-hpux2-1.h'\"
else
  echo shar: Extracting \"'conf/s-hpux2-1.h'\" \(672 characters\)
  sed "s/^X//" >'conf/s-hpux2-1.h' <<'END_OF_FILE'
X/*
X *    This version is for HP-UX 2.1 (on HP9000 Series 800)
X */
X
X#include "s-hpux.h"
X
X/*
X *    Define if your system has BSD like job control (SIGTSTP works)
X */
X
X#define HAVE_JOBCONTROL            /* */
X
X
X/*
X *    Define if your system has a 4.3BSD like syslog library.
X */
X
X#define HAVE_SYSLOG
X
X/*
X *    Define HAVE_GETHOSTNAME if your system provides a BSD like
X *    gethostname routine.
X */
X
X#undef	HAVE_UNAME
X#define	HAVE_GETHOSTNAME
X
X/*
X *    Define DETATCH_TERMINAL to be a command sequence which
X *    will detatch a process from the control terminal
X */
X
X#undef	DETATCH_TERMINAL
X
X/*
X *    Define standard compiler flags here:
X */
X
X#define COMPILER_FLAGS -O -z
END_OF_FILE
  if test 672 -ne `wc -c <'conf/s-hpux2-1.h'`; then
    echo shar: \"'conf/s-hpux2-1.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-hpux2-1.h'
fi
if test -f 'conf/s-hpux3-0.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-hpux3-0.h'\"
else
  echo shar: Extracting \"'conf/s-hpux3-0.h'\" \(288 characters\)
  sed "s/^X//" >'conf/s-hpux3-0.h' <<'END_OF_FILE'
X/*
X *    This version is for HP-UX 3.0 (on HP9000 Series 800)
X */
X
X#include "s-hpux2-1.h"
X
X#define    SIGNAL_HANDLERS_ARE_VOID
X
X/*
X *    Define DETATCH_TERMINAL to be a command sequence which
X *    will detatch a process from the control terminal
X */
X
X#define	DETATCH_TERMINAL	setpgrp();
END_OF_FILE
  if test 288 -ne `wc -c <'conf/s-hpux3-0.h'`; then
    echo shar: \"'conf/s-hpux3-0.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-hpux3-0.h'
fi
if test -f 'conf/s-pyramid.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-pyramid.h'\"
else
  echo shar: Extracting \"'conf/s-pyramid.h'\" \(229 characters\)
  sed "s/^X//" >'conf/s-pyramid.h' <<'END_OF_FILE'
X/*
X *	This version is for PYRAMID (almost BSD 4.2) systems
X *	(also known as Nixdorf Targon 35).
X */
X
X#define USE_STRINGS_H
X
X#include "s-bsd4-2.h"
X
Xextern FILE *popen();
X
X#undef	MAILX
X#define	MAILX	"/usr/.ucbucb/Mail"		/* BSD */
END_OF_FILE
  if test 229 -ne `wc -c <'conf/s-pyramid.h'`; then
    echo shar: \"'conf/s-pyramid.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-pyramid.h'
fi
if test -f 'conf/s-sunos3.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-sunos3.h'\"
else
  echo shar: Extracting \"'conf/s-sunos3.h'\" \(275 characters\)
  sed "s/^X//" >'conf/s-sunos3.h' <<'END_OF_FILE'
X/*
X *	This version is for SunOS 3.x systems (tested on 3.5)
X */
X
X#define	USE_STRINGS_H
X
X#include "s-bsd4-2.h"
X
X#define	HAVE_STRCHR
X
X/*
X *	Define MICRO_ALARM to timeout after 0.1 seconds if possible
X */
X
X#undef	MICRO_ALARM
X#define MICRO_ALARM()	ualarm(100000,0)	/* BSD 4.3 */
END_OF_FILE
  if test 275 -ne `wc -c <'conf/s-sunos3.h'`; then
    echo shar: \"'conf/s-sunos3.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-sunos3.h'
fi
if test -f 'conf/s-sunos4-0.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-sunos4-0.h'\"
else
  echo shar: Extracting \"'conf/s-sunos4-0.h'\" \(311 characters\)
  sed "s/^X//" >'conf/s-sunos4-0.h' <<'END_OF_FILE'
X/*
X *	This version is for SUNOS 4.0
X */
X
X#define	USE_STRINGS_H
X
X#include "s-bsd4-3.h"
X
X#define HAVE_STRCHR			/* */
X
X/*
X *	Define if a signal handler has type void (see signal.h)
X */
X
X#define	SIGNAL_HANDLERS_ARE_VOID	/* */
X
X/*
X *	Specify where the Bourne Shell is.
X */
X
X#undef	SHELL
X#define SHELL		"/usr/bin/sh"
END_OF_FILE
  if test 311 -ne `wc -c <'conf/s-sunos4-0.h'`; then
    echo shar: \"'conf/s-sunos4-0.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-sunos4-0.h'
fi
if test -f 'conf/s-sys5-tcap.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-sys5-tcap.h'\"
else
  echo shar: Extracting \"'conf/s-sys5-tcap.h'\" \(155 characters\)
  sed "s/^X//" >'conf/s-sys5-tcap.h' <<'END_OF_FILE'
X/*
X *	System V based system
X *	TERMCAP is used instead of TERMINFO
X */
X
X#include "s-sys5.h"
X
X#undef USE_TERMINFO
X#undef TERMLIB
X
X#define TERMLIB -ltermlib
END_OF_FILE
  if test 155 -ne `wc -c <'conf/s-sys5-tcap.h'`; then
    echo shar: \"'conf/s-sys5-tcap.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-sys5-tcap.h'
fi
if test -f 'conf/s-texas1500.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-texas1500.h'\"
else
  echo shar: Extracting \"'conf/s-texas1500.h'\" \(149 characters\)
  sed "s/^X//" >'conf/s-texas1500.h' <<'END_OF_FILE'
X/*
X *	This file is for the Texas Instruments System 1500
X *	68020/68030 based multiprocessor systems (use with m-m680x0.h).
X */
X
X#include "s-sys5.h"
END_OF_FILE
  if test 149 -ne `wc -c <'conf/s-texas1500.h'`; then
    echo shar: \"'conf/s-texas1500.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-texas1500.h'
fi
if test -f 'conf/s-tower32.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-tower32.h'\"
else
  echo shar: Extracting \"'conf/s-tower32.h'\" \(141 characters\)
  sed "s/^X//" >'conf/s-tower32.h' <<'END_OF_FILE'
X/*
X *	This version is for Tower-32 machines.
X */
X
X#define NO_DIRENT_H
X#include "s-sys5.h"
X
X#undef	SIGNAL_HANDLERS_ARE_VOID
X#undef	HAVE_MKDIR
END_OF_FILE
  if test 141 -ne `wc -c <'conf/s-tower32.h'`; then
    echo shar: \"'conf/s-tower32.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-tower32.h'
fi
if test -f 'conf/s-uport2-2.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-uport2-2.h'\"
else
  echo shar: Extracting \"'conf/s-uport2-2.h'\" \(362 characters\)
  sed "s/^X//" >'conf/s-uport2-2.h' <<'END_OF_FILE'
X/*
X *	This version is for Microport UNIX V.2 machines.
X */
X
X#define NO_DIRENT_H
X#include "s-sys5.h"
X
X#undef SIGNAL_HANDLERS_ARE_VOID
X#undef HAVE_MKDIR
X
X/*
X *	Specify where the Bourne Shell is.
X */
X
X#undef	SHELL
X#define	SHELL		"/bin/ksh"
X
X/*
X *	Use P.D. malloc library for the 286.
X *	This may not be needed if you don't have it...
X */
X
X#define EXTRA_LIB	 -lm286
END_OF_FILE
  if test 362 -ne `wc -c <'conf/s-uport2-2.h'`; then
    echo shar: \"'conf/s-uport2-2.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-uport2-2.h'
fi
if test -f 'conf/s-usg3-1.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-usg3-1.h'\"
else
  echo shar: Extracting \"'conf/s-usg3-1.h'\" \(72 characters\)
  sed "s/^X//" >'conf/s-usg3-1.h' <<'END_OF_FILE'
X/*
X *	This version is for System V Release 3.1
X */
X
X#include "s-sys5.h"
END_OF_FILE
  if test 72 -ne `wc -c <'conf/s-usg3-1.h'`; then
    echo shar: \"'conf/s-usg3-1.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-usg3-1.h'
fi
if test -f 'conf/s-xenix386ds.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'conf/s-xenix386ds.h'\"
else
  echo shar: Extracting \"'conf/s-xenix386ds.h'\" \(501 characters\)
  sed "s/^X//" >'conf/s-xenix386ds.h' <<'END_OF_FILE'
X/*
X *	For XENIX386 release 2.3.2 development system.
X *	Uses system V libraries and system calls.
X * 	This version uses "termcap", but XENIX also has "terminfo".
X */
X
X#include "s-sys5-tcap.h"
X
X#undef	SIGNAL_HANDLERS_ARE_VOID
X
X#define AVOID_SHELL_EXEC
X
X#undef	MAILX
X#define	MAILX	"/usr/bin/mail"		/* SCO XENIX */
X
X/*
X *	Define standard compiler flags here:
X */
X
X#define COMPILER_FLAGS	-O
X
X/*
X *	If your system requires other libraries when linking nn
X *	specify them here:
X */
X
X#define EXTRA_LIB	-ldir
END_OF_FILE
  if test 501 -ne `wc -c <'conf/s-xenix386ds.h'`; then
    echo shar: \"'conf/s-xenix386ds.h'\" unpacked with wrong size!
  fi
  # end of 'conf/s-xenix386ds.h'
fi
if test -f 'contrib/cn' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'contrib/cn'\"
else
  echo shar: Extracting \"'contrib/cn'\" \(688 characters\)
  sed "s/^X//" >'contrib/cn' <<'END_OF_FILE'
X# !/bin/sh
X# Sun Nov 30 22:34:48 EST 1986	(...!sunybcs!gworek / ...!boulder!forys)
X# Thu Feb 8   gt6152a@prism.gatech.edu
X#             Modefied cn to work with nn (patchlevel 10)
X#             NOTE:  You might want to change the following line below:
X#		     printf "[%3.3s] %-20.20", $2, $1; \
X#                                      ^^^^^
X#                    This is the max length of the new group name that will be
X#                    printed.
X#
X#	cn - Check for available news, multicolumn style.
X#
X	nncheck -Q -t | sort +1 -2 |\
X		awk '{ \
X			printf "[%3.3s] %-20.20s", $1, $2; \
X			if ((NR % 3) == 0) \
X				print ""; \
X		} END { \
X			if ((NR) && (NR % 3)) \
X				print ""; \
X		}'
END_OF_FILE
  if test 688 -ne `wc -c <'contrib/cn'`; then
    echo shar: \"'contrib/cn'\" unpacked with wrong size!
  fi
  chmod +x 'contrib/cn'
  # end of 'contrib/cn'
fi
if test -f 'cvt-help.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cvt-help.c'\"
else
  echo shar: Extracting \"'cvt-help.c'\" \(530 characters\)
  sed "s/^X//" >'cvt-help.c' <<'END_OF_FILE'
X/*
X *	(c) Copyright 1990, Kim Fabricius Storm.  All rights reserved.
X *
X *	Convert help-files to binary.
X *	;:X	->	^X (control X)
X */
X
X#include <stdio.h>
X
Xmain()
X{
X    register int c;
X
X    while ((c = getchar()) != EOF) {
X	if (c == ';') {
X	    c = getchar();
X	    if (c == ':') {
X		c = getchar();
X		putchar(c & 0xf);
X		continue;
X	    }
X	    putchar(';');
X	    putchar(c);
X	    continue;
X	}
X	if (c >= 1 && c <= 7) {
X	    putchar(';');
X	    putchar(':');
X	    putchar(c | 0x40);
X	    continue;
X	}
X	putchar(c);
X    }
X
X    exit(0);
X}
END_OF_FILE
  if test 530 -ne `wc -c <'cvt-help.c'`; then
    echo shar: \"'cvt-help.c'\" unpacked with wrong size!
  fi
  # end of 'cvt-help.c'
fi
if test -f 'debug.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'debug.h'\"
else
  echo shar: Extracting \"'debug.h'\" \(496 characters\)
  sed "s/^X//" >'debug.h' <<'END_OF_FILE'
X/*
X *	(c) Copyright 1990, Kim Fabricius Storm.  All rights reserved.
X *
X *	Debug flags and defines
X *
X *	Notice:  no modules are conditioned by this file in the
X *		 makefile.  touch the source file to have a change
X *		 in debugging setup to reflect the program behaviour
X */
X
X
X/* debugging */
X
X#define RC_TEST		1	/* rc file updates */
X#define DG_TEST		2 	/* digest decoding */
X#define SEQ_TEST	4	/* sequence file decoding */
X#define SEQ_DUMP	8	/* dump sequence after read */
X
Xextern int Debug;
END_OF_FILE
  if test 496 -ne `wc -c <'debug.h'`; then
    echo shar: \"'debug.h'\" unpacked with wrong size!
  fi
  # end of 'debug.h'
fi
if test -f 'dir.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'dir.h'\"
else
  echo shar: Extracting \"'dir.h'\" \(759 characters\)
  sed "s/^X//" >'dir.h' <<'END_OF_FILE'
X/*
X *	(c) Copyright 1990, Kim Fabricius Storm.  All rights reserved.
X *
X *	Directory access routines (faked ones).
X *
X *	If HAVE_DIRECTORY is not defined, traditional sysV directory
X *	structure is assumed unless NOT_SYS5_DIRECTORY is defined (in
X *	which case a shell command is used to list a directory).
X */
X
X#ifndef HAVE_DIRECTORY
X
X#ifndef NOT_SYS5_DIRECTORY
Xstatic struct dir_entry {
X    short int	d_ino;
X    char	d_name[15];
X} dirbuf;
X
X#define Direntry struct dir_entry
X#define	DIR FILE
X#define opendir(name)	fopen(name, "r")
X#define readdir(dirp)	(fread(&dirbuf, 16, 1, dirp) == 1 ? &dirbuf : NULL)
X#undef rewinddir
X#define rewinddir(dirp)	rewind(dirp)
X#define closedir(dirp)	fclose(dirp)
X
X#define HAVE_DIRECTORY
X#define FAKED_DIRECTORY
X
X#endif
X#endif
END_OF_FILE
  if test 759 -ne `wc -c <'dir.h'`; then
    echo shar: \"'dir.h'\" unpacked with wrong size!
  fi
  # end of 'dir.h'
fi
if test -f 'help/adm.upgrade1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/adm.upgrade1'\"
else
  echo shar: Extracting \"'help/adm.upgrade1'\" \(392 characters\)
  sed "s/^X//" >'help/adm.upgrade1' <<'END_OF_FILE'
X;:AUPGRADE NOTICE;:A
X
XYou are now using nn release 6.4.
X
XThe major change from release 6.3 is that the ~/.nn/rc file is no
Xlonger used, since release 6.4 uses the standard .newsrc file to store
Xinformation about which groups you subscribe to and which articles you
Xhave read.
X
XSince you have no .newsrc file already, your current rc file will now
Xbe converted into a .newsrc automatically...
END_OF_FILE
  if test 392 -ne `wc -c <'help/adm.upgrade1'`; then
    echo shar: \"'help/adm.upgrade1'\" unpacked with wrong size!
  fi
  # end of 'help/adm.upgrade1'
fi
if test -f 'help/adm.upgrade2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/adm.upgrade2'\"
else
  echo shar: Extracting \"'help/adm.upgrade2'\" \(666 characters\)
  sed "s/^X//" >'help/adm.upgrade2' <<'END_OF_FILE'
X;:AUPGRADE NOTICE;:A
X
XYou are now using nn release 6.4.
X
XThe major change from release 6.3 is that the ~/.nn/rc file is no
Xlonger used, since release 6.4 uses the standard .newsrc file to store
Xinformation about which groups you subscribe to and which articles you
Xhave read.
X
XTo upgrade to release 6.4, your old rc file must be converted to the
Xstandard .newsrc format.
X
XYou already have a .newsrc, but it is older than the rc file, so
Xyou may just proceed and let nn upgrade the rc file to the new format.
X
XThe existing .newsrc will be saved in .newsrc.old, so you can still go
Xback and merge parts of it into the new .newsrc in case you have
Xspecial requirement.
END_OF_FILE
  if test 666 -ne `wc -c <'help/adm.upgrade2'`; then
    echo shar: \"'help/adm.upgrade2'\" unpacked with wrong size!
  fi
  # end of 'help/adm.upgrade2'
fi
if test -f 'help/adm.upgrade3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/adm.upgrade3'\"
else
  echo shar: Extracting \"'help/adm.upgrade3'\" \(626 characters\)
  sed "s/^X//" >'help/adm.upgrade3' <<'END_OF_FILE'
X;:AUPGRADE NOTICE;:A
X
XYou are now using nn release 6.4.
X
XThe major change from release 6.3 is that the ~/.nn/rc file is no
Xlonger used, since release 6.4 uses the standard .newsrc file to store
Xinformation about which groups you subscribe to and which articles you
Xhave read.
X
XTo upgrade to release 6.4, your old rc file must be converted to the
Xstandard .newsrc format, and nn may do this for you if you proceed.
X
XHowever, the current .newsrc file is newer than the .nn/rc file, so it
Xis likely that you have used another news reader since you last used
Xnn, and that you just want to proceed using the existing .newsrc file.
END_OF_FILE
  if test 626 -ne `wc -c <'help/adm.upgrade3'`; then
    echo shar: \"'help/adm.upgrade3'\" unpacked with wrong size!
  fi
  # end of 'help/adm.upgrade3'
fi
if test -f 'help/adm.upgrade4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/adm.upgrade4'\"
else
  echo shar: Extracting \"'help/adm.upgrade4'\" \(485 characters\)
  sed "s/^X//" >'help/adm.upgrade4' <<'END_OF_FILE'
X;:AUPGRADE NOTICE (continued);:A
X
XSince you did not want to use the current .newsrc file although it is
Xnewer than the .nn/rc file, you will now have the option to let nn
Xconvert the rc file to .newsrc format and replace the current .newsrc
Xwith the result.
X
XThe existing .newsrc file will be saved in .newsrc.old, so you will
Xstill have the opportunity to go back to using the current .newsrc
Xfile, or merge it with the .newsrc file created by nn if you have
Xspecial requirements.
X
X
X
END_OF_FILE
  if test 485 -ne `wc -c <'help/adm.upgrade4'`; then
    echo shar: \"'help/adm.upgrade4'\" unpacked with wrong size!
  fi
  # end of 'help/adm.upgrade4'
fi
if test -f 'help/adm.welcome' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/adm.welcome'\"
else
  echo shar: Extracting \"'help/adm.welcome'\" \(599 characters\)
  sed "s/^X//" >'help/adm.welcome' <<'END_OF_FILE'
X;:AWelcome to the nn news reader;:A				;:ARelease ;:D;:A
X
XUnlike the other news readers you might be familiar with, the ultimate
Xgoal of nn is "not to read news"; actually, "nn" is an acronym for "No
XNews", and the motto of nn is:
X
X	No news is good news, but nn is better.
X
XI hope that you will enjoy using nn.
X
XThree levels of online help is available:
X ;:A?;:A	gives a quick reference guide for the current mode.
X ;:A:help;:A	explains how to get help on specific subjects.
X ;:A:man;:A	opens the online manual.
X
XUse ;:AQ;:A to quit nn.
X
XHave fun,
X
XKim Fabricius Storm
XTexas Instruments A/S
XDenmark
END_OF_FILE
  if test 599 -ne `wc -c <'help/adm.welcome'`; then
    echo shar: \"'help/adm.welcome'\" unpacked with wrong size!
  fi
  # end of 'help/adm.welcome'
fi
if test -f 'help/help.attr' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/help.attr'\"
else
  echo shar: Extracting \"'help/help.attr'\" \(328 characters\)
  sed "s/^X//" >'help/help.attr' <<'END_OF_FILE'
X;:AARTICLE ATTRIBUTES;:A
X
XThe following attributes are used to mark articles on the menu:
X
X(blank)	Unread
X
X*	Selected (if terminal doesn't have standout mode or at slow speed)
X
X.	Read (or saved)
X,	Seen on menu (but not read)
X
X+	Marked with `l' for later treatment
X=	Marked with `L' for treatment on next invocation
X
X#	Cancelled
END_OF_FILE
  if test 328 -ne `wc -c <'help/help.attr'`; then
    echo shar: \"'help/help.attr'\" unpacked with wrong size!
  fi
  # end of 'help/help.attr'
fi
if test -f 'help/help.help' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/help.help'\"
else
  echo shar: Extracting \"'help/help.help'\" \(314 characters\)
  sed "s/^X//" >'help/help.help' <<'END_OF_FILE'
X;:AHELP COMMAND;:A
X
X:man		Read online manual
X
X:help SUBJECT	Get help on specified SUBJECT
X
XHelp is available on the the following subjects:
X
Xcommands	commands that can be bound to keys
Xextended	extended commands (:command)
Xmap		key mapping
Xset		variable setting
Xshow		displaying various tables
Xvariables	variables
END_OF_FILE
  if test 314 -ne `wc -c <'help/help.help'`; then
    echo shar: \"'help/help.help'\" unpacked with wrong size!
  fi
  # end of 'help/help.help'
fi
if test -f 'help/help.set' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/help.set'\"
else
  echo shar: Extracting \"'help/help.set'\" \(413 characters\)
  sed "s/^X//" >'help/help.set' <<'END_OF_FILE'
X;:ASET COMMAND;:A
X
X:set			show changed variables
X:set all		show all variables
X
X	Modified variables are marked with a *
X	Local variables are marked with a >
X
X:set VARIABLE VALUE	set VARIABLE to VALUE
X
X:unset VARIABLE		reset VARIABLE
X
X:toggle VARIABLE	toggle boolean VARIABLE
X
X:local VARIABLE [VALUE]	make VARIABLE local to current group
X			if VALUE is specified assign it to the local variable
X
X
X;:Chelp.variables
END_OF_FILE
  if test 413 -ne `wc -c <'help/help.set'`; then
    echo shar: \"'help/help.set'\" unpacked with wrong size!
  fi
  # end of 'help/help.set'
fi
if test -f 'help/help.show' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'help/help.show'\"
else
  echo shar: Extracting \"'help/help.show'\" \(591 characters\)
  sed "s/^X//" >'help/help.show' <<'END_OF_FILE'
X;:ASHOW COMMAND;:A
X
X:show kill		show auto kill/select entries for current
X			groups and all groups.
X
X:show groups		show groups with unread articles (= Y command)
X:show groups all	show all subscribed groups
X:show groups subscr	show unread subscribed groups
X:show groups total	show all available groups
X:show groups unsub	show unsubscribed groups
X
X:show map		show current mode's key bindings
X:show map key		show global key bindings
X:show map menu/show	show specified mode's key bindings
X:show map #		show multi key definitions
X
X:show rc [GROUP]	show (current) GROUP's .newsrc and select data.
END_OF_FILE
  if test 591 -ne `wc -c <'help/help.show'`; then
    echo shar: \"'help/help.show'\" unpacked with wrong size!
  fi
  # end of 'help/help.show'
fi
if test -f 'inews/Manifest' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'inews/Manifest'\"
else
  echo shar: Extracting \"'inews/Manifest'\" \(649 characters\)
  sed "s/^X//" >'inews/Manifest' <<'END_OF_FILE'
X   2 -r--r--r--  1 news         1406 Dec 21 18:00 Makefile
X   1 -rw-r--r--  1 news          649 Dec 21 18:00 Manifest
X   3 -r--r--r--  1 news         2391 Dec 21 18:00 README
X   2 -r--r--r--  1 news         1863 Dec 21 18:00 README.NN
X  11 -r--r--r--  1 news        11154 Dec 21 18:00 clientlib.c
X   1 -r--r--r--  1 news          230 Dec 21 18:00 clientlib.h
X   4 -r--r--r--  1 news         3106 Dec 21 18:00 conf.h
X   8 -r--r--r--  1 news         7983 Dec 21 18:00 inews.c
X   3 -r--r--r--  1 news         2530 Dec 21 18:00 nntp.h
X   3 -r--r--r--  1 news         2167 Dec 21 18:00 uname.c
X   1 -r--r--r--  1 news          103 Dec 21 18:00 version.c
END_OF_FILE
  if test 649 -ne `wc -c <'inews/Manifest'`; then
    echo shar: \"'inews/Manifest'\" unpacked with wrong size!
  fi
  # end of 'inews/Manifest'
fi
if test -f 'inews/clientlib.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'inews/clientlib.h'\"
else
  echo shar: Extracting \"'inews/clientlib.h'\" \(230 characters\)
  sed "s/^X//" >'inews/clientlib.h' <<'END_OF_FILE'
X/*
X * Definitions for NNTP client routines.
X *
X * @(#)clientlib.h	1.1	(Berkeley) 1/9/88
X */
X
Xextern	char	*getserverbyfile();
Xextern	int	server_init();
Xextern	void	put_server();
Xextern	int	get_server();
Xextern	void	close_server();
END_OF_FILE
  if test 230 -ne `wc -c <'inews/clientlib.h'`; then
    echo shar: \"'inews/clientlib.h'\" unpacked with wrong size!
  fi
  # end of 'inews/clientlib.h'
fi
if test -f 'inews/version.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'inews/version.c'\"
else
  echo shar: Extracting \"'inews/version.c'\" \(103 characters\)
  sed "s/^X//" >'inews/version.c' <<'END_OF_FILE'
X/*
X * Provide the version number of this release.
X */
X
Xchar	nntp_version[] = "1.5.7 (10 November 89)";
END_OF_FILE
  if test 103 -ne `wc -c <'inews/version.c'`; then
    echo shar: \"'inews/version.c'\" unpacked with wrong size!
  fi
  # end of 'inews/version.c'
fi
if test -f 'nngrab.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nngrab.sh'\"
else
  echo shar: Extracting \"'nngrab.sh'\" \(600 characters\)
  sed "s/^X//" >'nngrab.sh' <<'END_OF_FILE'
X# nngrab -- quick news retrieval by keyword
X#
X# From: James A. Woods (ames!jaw), NASA Ames Research Center
X#
X# Naturally, you're running fast e?grep (GNU-style) or this is all for
X# naught.
X
X
Xtrap "rm -f $TMP/nngrab$$" 0 1 2 15
X
Xif [ ! $# -eq 1 ] ; then
X	echo "usage: $0 keyword-pattern"
X	exit 1
Xfi
X
Xif [ -s $DB/subjects ] ; then
X	egrep -i "^[^:]*:.*$1" $DB/subjects |
X	sed 's/^\([^:]*\):.*/\1/' |
X	uniq > $TMP/nngrab$$
X
X	if [ ! -s $TMP/nngrab$$ ] ; then
X		echo "Pattern '$1' not found in any subjects"
X		exit
X	fi
X
X	$BIN/nn -Q -mxX -s/"$1" -G `cat $TMP/nngrab$$`
Xelse
X	$BIN/nn -Q -mxX -s/"$1" all
Xfi
END_OF_FILE
  if test 600 -ne `wc -c <'nngrab.sh'`; then
    echo shar: \"'nngrab.sh'\" unpacked with wrong size!
  fi
  # end of 'nngrab.sh'
fi
if test -f 'nnspew.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nnspew.sh'\"
else
  echo shar: Extracting \"'nnspew.sh'\" \(564 characters\)
  sed "s/^X//" >'nnspew.sh' <<'END_OF_FILE'
X# nnspew -- generate subject line database
X#
X# From: James A. Woods (ames!jaw), NASA Ames Research Center
X#
X# Updates the auxiliary 'subjects' file.  It must be activated regularly
X# via a system-wide 'cron' or 'at' command, e.g.
X#
X# 	2 6,9,12,15,18,21 * * *  root /bin/nice /usr/lib/nn/nnspew
X
Xtrap "rm -f $TMP/nnsubj$$* ; exit" 0 1 2 15
X
X# We use a "secret" 'nn -SPEW' call to do the hard part:
X
Xif $BIN/nn -SPEW < /dev/null > $TMP/nnsubj$$a
Xthen
X	if sort -u $TMP/nnsubj$$a > $TMP/nnsubj$$b
X	then
X		mv $TMP/nnsubj$$b $DB/subjects
X		chmod 644 $DB/subjects
X	fi
Xfi
END_OF_FILE
  if test 564 -ne `wc -c <'nnspew.sh'`; then
    echo shar: \"'nnspew.sh'\" unpacked with wrong size!
  fi
  # end of 'nnspew.sh'
fi
if test -f 'nnusage.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'nnusage.sh'\"
else
  echo shar: Extracting \"'nnusage.sh'\" \(674 characters\)
  sed "s/^X//" >'nnusage.sh' <<'END_OF_FILE'
X# CONFIG file is inserted here
X
XOPT=""
XSORTMODE=""
XALL=false
X
XLOOP=true
Xwhile $LOOP
Xdo
X	case "$1" in
X	-a)	OPT="$OPT -a"
X		ALL=true
X		shift ;;
X	-t)	SORTMODE="+1nr"
X		shift ;;
X	*)	LOOP=false
X	esac
Xdone
X
Xif [ -f $DB/acct -a -f $BIN/nnacct ] ; then
X	$BIN/nnacct -r $OPT $@ | sort $SORTMODE
X	exit
Xfi
X
Xif $ALL
Xthen
X	grep '^U:' $LOG
Xelse
X	grep "^U:.*(${LOGNAME-$USER})" $LOG
Xfi |
X
X${AWK} '
XBEGIN {
X	any=0
X}
XNF == 7 {
X	if (split($7, t, ".") == 2) {
X		u[$5] += t[1] * 60 + t[2]
X		any=1
X	}
X}
XEND {
X	if (!any) {
X		printf("No usage statistics\n")
X		exit
X	}
X	for (n in u) {
X		name=substr(n, 2, length(n)-3)
X		printf("%-10.10s%8d.%02d\n", name, u[n]/60, u[n]%60);
X	}
X}' |
X
Xsort $SORTMODE
END_OF_FILE
  if test 674 -ne `wc -c <'nnusage.sh'`; then
    echo shar: \"'nnusage.sh'\" unpacked with wrong size!
  fi
  # end of 'nnusage.sh'
fi
if test -f 'upgrade_rc.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'upgrade_rc.sh'\"
else
  echo shar: Extracting \"'upgrade_rc.sh'\" \(776 characters\)
  sed "s/^X//" >'upgrade_rc.sh' <<'END_OF_FILE'
X# Upgrade from release 6.3
X#
X# Convert old rc file to .newsrc
X
Xcd
X
Xif [ ! -d .nn ]
Xthen
X	echo "No .nn directory"
X	exit 1
Xfi
X
Xif [ ! -f .nn/rc ]
Xthen
X	echo "No rc file -- upgrade not possible"
X	exit 2
Xfi
X
Xif [ x"$1" = "xn" ]
Xthen
X	echo "Using existing .newsrc"
Xelse
X
X	if [ -f .newsrc ]
X	then
X		rm -f .newsrc.old
X		mv .newsrc .newsrc.old
X		echo "Old .newsrc saved in .newsrc.old"
X	fi
X	echo "Creating .newsrc"
X
X	${AWK} '
X	NF != 3 {
X		next
X	}
X
X	$1 == "+" || $1 == "!" {
X		if ($1 == "+")
X			printf("%s:", $3)
X		else
X			printf("%s!", $3)
X		if ($2+0 > 1)
X			printf(" 1-%d\n", $2+0)
X		else
X		if ($2 == 1)
X			printf(" 1\n")
X		else
X			printf("\n")
X	}' < .nn/rc > .newsrc
X
Xfi
X
Xcd .nn
Xrm -f rc-6.3 S.[0-9]*
Xmv rc rc-6.3
Xecho "Old rc file saved in rc-6.3"
X
Xecho "Upgrade completed"
Xexit 0
END_OF_FILE
  if test 776 -ne `wc -c <'upgrade_rc.sh'`; then
    echo shar: \"'upgrade_rc.sh'\" unpacked with wrong size!
  fi
  # end of 'upgrade_rc.sh'
fi
if test -f 'usercheck.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'usercheck.c'\"
else
  echo shar: Extracting \"'usercheck.c'\" \(198 characters\)
  sed "s/^X//" >'usercheck.c' <<'END_OF_FILE'
X/* check for whether caller is a specific uid (numeric) */
X
Xmain(argc, argv)
Xint argc;
Xchar *argv[];
X{
X    int uid = 0;
X
X    if (argc > 1) uid = atoi(argv[1]);
X
X    exit(getuid() == uid ? 0 : 1);
X}
END_OF_FILE
  if test 198 -ne `wc -c <'usercheck.c'`; then
    echo shar: \"'usercheck.c'\" unpacked with wrong size!
  fi
  # end of 'usercheck.c'
fi
echo shar: End of archive 22 \(of 22\).
cp /dev/null ark22isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 22 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still must unpack the following archives:
    echo "        " ${MISSING}
fi
exit 0
