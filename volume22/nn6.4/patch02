Subject:  v22i058:  NN newsreader, release 6.4, Patch2
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET
X-Checksum-Snefru: ab5cc78b aeeb262b e087ae2f a4893924

Submitted-by: storm@texas.dk (Kim F. Storm)
Posting-number: Volume 22, Issue 58
Archive-name: nn6.4/patch2


	     This is an official patch to nn release 6.4
	     -------------------------------------------

			       PATCH #2

			    Priority: HIGH


These patches fixes a number of bugs in the initial 6.4 release of nn
as well as a problem introduced in patch #1 which caused 6.4.1 to dump
core in some situations on some systems.  The changes are described in
the updated RELEASE_NOTES file (read that for details about this patch).
Thanks to all who reported bugs and provided fixes.

To apply this patch, use nn's :patch command, or run this command from
the shell in the root of the nn source tree:
	patch -p0 < this-article


++Kim Storm

*** ./LAST/Makefile	Wed May  2 19:14:00 1990
--- Makefile	Tue May 15 16:58:37 1990
***************
*** 66,72 ****
  	sed -e '1,/MAKE WILL CUT HERE/d' \
  	    -e '/^#/d' \
  	    -e '/^[ \f	]$$/d' \
! 	    -e '/^[ /]*[*]/d' | \
  	sed -n -e '/^..*$$/p' > ymakefile
  	rm -f MF.c
  
--- 66,72 ----
  	sed -e '1,/MAKE WILL CUT HERE/d' \
  	    -e '/^#/d' \
  	    -e '/^[ \f	]$$/d' \
! 	    -e '/^[ \/]*[*]/d' | \
  	sed -n -e '/^..*$$/p' > ymakefile
  	rm -f MF.c
  
*** ./LAST/answer.c	Tue May 15 13:31:00 1990
--- answer.c	Mon May 14 15:32:46 1990
***************
*** 730,736 ****
      if (post_source_file) {
  	src = open_file(post_source_file, OPEN_READ);
  	if (src == NULL) {
! 	    printf("File %s not found\n");
  	    nn_exit(1);
  	}
      }
--- 730,736 ----
      if (post_source_file) {
  	src = open_file(post_source_file, OPEN_READ);
  	if (src == NULL) {
! 	    printf("File %s not found\n", post_source_file);
  	    nn_exit(1);
  	}
      }
*** ./LAST/aux.sh	Tue May 15 13:31:01 1990
--- aux.sh	Mon May 14 17:13:59 1990
***************
*** 169,192 ****
    esac
  done
  
! case "$OPERATION" in
! 
!   reply|forward|mail)
!     if [ ${APPEND_SIG} = "true" -a -f $HOME/.signature ] ; then
!       if ${QUERY_SIG} ; then
!           ${AWK} 'END{printf "Append .signature? (y) "}' < /dev/null
!           read ans
!       else
!           ans=y
!       fi
!       case $ans in
!       ''|y*|Y*)
!         echo "--" >> $WORK
!         cat $HOME/.signature >> $WORK
!         ;;
!       esac
!     fi
      ;;
    follow|post)
      if ${NOVICE} ; then
        echo "Be patient! Your new article will not show up immediately."
--- 169,190 ----
    esac
  done
  
! if [ ${APPEND_SIG} = "true" -a -f $HOME/.signature ] ; then
!   if ${QUERY_SIG} ; then
!     ${AWK} 'END{printf "Append .signature? (y) "}' < /dev/null
!     read ans
!   else
!     ans=y
!   fi
!   case $ans in
!   ''|y*|Y*)
!     echo "--" >> $WORK
!     cat $HOME/.signature >> $WORK
      ;;
+   esac
+ fi
+ 
+ case "$OPERATION" in
    follow|post)
      if ${NOVICE} ; then
        echo "Be patient! Your new article will not show up immediately."
*** ./LAST/conf/s-dynix3-0.h	Sat Mar 31 23:13:01 1990
--- conf/s-dynix3-0.h	Mon May 14 15:32:47 1990
***************
*** 2,7 ****
--- 2,9 ----
   *	This version is for Dynix 3.0 systems
   */
  
+ #define USE_STRINGS_H
  #include "s-bsd4-2.h"
  
  #undef HAVE_MULTIGROUP
+ FILE *popen ();
*** ./LAST/conf/s-sgi4D.h	Mon Apr 23 18:32:48 1990
--- conf/s-sgi4D.h	Mon May 14 17:21:39 1990
***************
*** 31,37 ****
   */
  
  #undef	MAILX
! #define	MAILX		"/usr/bsd/Mail"
  
  /*
   *	Define standard compiler flags here:
--- 31,37 ----
   */
  
  #undef	MAILX
! #define	MAILX		"/usr/sbin/Mail"
  
  /*
   *	Define standard compiler flags here:
*** ./LAST/config.h-dist	Sat May  5 18:48:13 1990
--- config.h-dist	Mon May 14 17:13:57 1990
***************
*** 61,66 ****
--- 61,67 ----
   *
   *	If the file name does not start with a slash, it is relative to
   *	LIB_DIRECTORY defined below.
+  *	NOTE: If you plan to use the included inews, it MUST be a full pathname
   */
  
  #define NNTP_SERVER	"/usr/lib/nntp_server"
*** ./LAST/doc/RELEASE_NOTES	Tue May 15 13:31:02 1990
--- doc/RELEASE_NOTES	Tue May 15 18:44:43 1990
***************
*** 252,254 ****
--- 252,465 ----
  	server, the incomplete active file is believed to be the complete
  	active file.  This causes nnmaster to remove the groups which didn't
  	get written to the active file.
+ 
+ Prog:	xmakefile
+ Title:	BSD make chokes on || form
+ From:	Paul Pomes <paul@uxc.cso.uiuc.edu>
+ 	pete@eleazar.dartmouth.edu (Pete Schmitt)
+ Fixed:	Patch #2 [xmakefile]
+ 
+ 	If man/nn.1 exists, then the [ ! -f man/nn.1 ] test exits non-zero.
+ 	To prevent BSD make from choking on this, the test command should be
+ 	prefixed with a '-' to have make ignore the non-zero status.
+ 
+ Prog:	inst
+ Title:	test -w cannot test directories
+ From:	Paul Pomes <paul@uxc.cso.uiuc.edu>
+ 	Mark Nagel <nagel@wintermute.ICS.UCI.EDU>
+ Fixed:	Patch #2 [inst.sh -- omitted the check]
+ 
+ 	In the inst.sh script, a check is made whether a directory is write-
+ 	able by using test -w man/.  On BSD systems, this test applies only
+ 	to files and not directories so it always fails.
+ 
+ Prog:	nnmaster
+ Title:	TERM signal not handled properly
+ From:	Paul Pomes <paul@uxc.cso.uiuc.edu>
+ Status:	I cannot reproduce this problem!
+ 	
+ 	When nnmaster is sent a TERM signal, it does not remove the MPID
+ 	file.  The next invocation of nnmaster complains that nnmaster is
+ 	already running, removes the MPID file, and then exits.  The next
+ 	invocation will then succeed.
+ 
+ Prog:	nn
+ Title:	G to unknown group dumps core.
+ From:	dean@coplex.UUCP (Dean Brooks)
+ Fixed:	Patch #2 [group.c]
+ 
+ 	NN 6.4.1 will dump core on our machine if you use the "G"
+ 	command to go to a group that doesn't exist.
+ 
+ Prog:	nn
+ Title:	Start-up error messages disappears (xterm)
+ From:	jaap@sequent.uucp (Jaap Vermeulen)
+ 
+ 	Error messages at startup time of 'nn' are unreadable (no time to
+ 	read them :-) and in an xterm written in the alternate screen.
+ 
+ Prog:	nn - xterm
+ Title:	Mail command does not work well with xterm
+ From:	Jaap Vermeulen <jaap@sequent.uucp>
+ 
+ 	I'm in menu mode, I 'M'ail an article, I do not edit it.
+ 	When it mails nn reverts to the alternate screen (xterm) when done I
+ 	lost the menu information, the only thing that gets redrawn is the
+ 	status line (i.e. I end up with an emptry screen except for the
+ 	status line). A ^L will fix this, of course.
+ 
+ Prog:	nn
+ Title:	Interrupt char doesn't work (CBREAK/DYNIX)
+ From:	Jaap Vermeulen <jaap@sequent.uucp>
+ 
+ 	Interrupt (^C) does not work. ^G does work.
+ 	'stty' tells me I'm really using interrupt (^C).
+ 	(Problem is that SV_INTERRUPT is not defined on DYNIX, ++Kim)
+ 
+ Prog:	nn
+ Title:	y=YES n=NO is displayed to late
+ From:	Jaap Vermeulen <jaap@sequent.uucp>
+ Fixed:	Patch #2 [term.c]
+ 
+ 	"y=YES n=NO" help is displayed too late on some systems (no flush).
+ 
+ Prog:	config.h
+ Title:	CLIENT_DIRECTORY overrides LIB_DIRECTORY
+ From:	Jaap Vermeulen <jaap@sequent.uucp>
+ Fixed:	Patch #2 [global.c]
+ 	
+ 	When I change CLIENT_DIRECTORY, LIB_DIRECTORY is also changed to
+ 	CLIENT_DIRECTORY, which is, I assume, not the correct behavior.
+ 
+ Prog:	nn
+ Title:	G folder ... N dumps core
+ From:	Robert.Stockton@ELROND.GANDALF.CS.CMU.EDU + fix
+ 	"Jason Molenda" <molenda@s1.msi.umn.edu>
+ 	dean@coplex.uucp (Dean Brooks)
+ 	olson%anchor.esd@sgi.com (Dave Olson)
+ Fixed:	Patch #2 [group.c]
+ 
+ 	After installing patch 1 for 6.4 I get core dumps after reading
+ 	folders.
+ 
+ Prog:	nn
+ Title:	First 'B' after startup will crash nn
+ From:	Jaap Vermeulen <jaap%sequent@relay.EU.net>
+ Fixed:	Patch #2 [group.c]
+ 
+ 	Start nn, hit 'B', segmentation violation....
+ 
+ Prog:	nnmaster - expire
+ Title:	Expire may dump core if first group in active is empty. + fix
+ From:	olson%anchor.esd@sgi.com (Dave Olson)
+ Fixed:	Patch #2 [nntp.c]
+ 
+ 	When using nntp, if the first group checked contains no articles, then
+ 	art is still a null pointer, so the attempt to set *art = 0; causes a
+ 	core dump on systems that don't allow de-referencing a null pointer.
+ 
+ Prog:	config.h
+ Title:	NNTP_SERVER must be full path is mini-inews is built + fix
+ From:	olson%anchor.esd@sgi.com (Dave Olson)
+ Fixed:	Patch #2 [config.h-dist]
+ 
+ 	For config.h, when inews is going to built, one MUST use a full path
+ 	for NNTP_SERVER define, or inews will not be able to find the file.
+ 
+ Prog:	nnmaster
+ Title:	Database gets corrupted
+ From:	olson%anchor.esd@sgi.com (Dave Olson)
+ 
+ 	First, the database seems to be getting corrupted quite often.  I get
+ 	errors like this in the Log.  (nntp is used)
+ 	  E: May 11 14:57 (olson): sgi.bugs.aspen: data inconsistency
+ 	I am running nnmaster -r15 -C -e -E1 (and with -l on patch #1).
+ 
+ Prog:	nn
+ Title:	Group is marked read if database is corrupted
+ From:	olson%anchor.esd@sgi.com (Dave Olson)
+ Fixed:	Patch #2 [group.c]
+ 
+ 	... when this happens, nn marks the group as read, which would seem
+ 	to me to be the wrong thing to do.
+ 
+ Prog:	nn
+ Title:	Missing printf args.
+ From:	olson%anchor.esd@sgi.com (Dave Olson) + fix
+ Fixed:	Patch #2 [answer.c newsrc.c]
+ 
+ Title:	new-group-action 4 dumps core
+ From:	Doug Walker <uunet!fdls!dougw>
+ 	Peter Andersen <datpete@daimi.dk> + fix
+ Fixed:	Patch #2 [newsrc.c]
+ 	
+ Prog:	nncheck
+ Title:	nncheck sometimes ignores the -Q option
+ From:	Jaap Vermeulen <jaap@sequent.uucp>
+ 	Peter Andersen <datpete@daimi.dk> + fix
+ 	Torben Lange <torbenl@aau.dk> + fix
+ Fixed:	Patch #2 [nn.c]
+ 
+ 	'nncheck -Q' always says: Release 6.4.1 #8,  Kim F. Storm, 1990
+ 
+ Prog:	s-dynix3-0.h
+ Title:	Compiler warnings on dynix 3.0.17
+ From:	Jaap Vermeulen <jaap@sequent.uucp> + fix
+ Fixed:	Patch #2 [s-dynix3-0.h]
+ 
+ Prog:	manuals
+ Title:	Inconsistencies in manuals
+ From:	Peter Andersen <datpete@daimi.dk>
+ Fixed:	Patch #2 [man/*]
+ 
+ 	nncheck manual still mentions .nn/rc
+ 	nnquery is still mentioned in many manuals
+ 	nnpost & nngrab is missing in most See Also sections
+ 
+ Prog:	aux
+ Title:	posting via Cnews' inews; output considered an error
+ From:	Mark Nagel <nagel@wintermute.ICS.UCI.EDU>
+ 
+ 	Sometimes inews may produce valid output, e.g. when postings to a
+ 	moderated group is converted to mail.  However, output from inews
+ 	is always considered to imply failure to post.
+ 
+ Prog:	nn
+ Title:	append-signature-post not honoured
+ From:	leo@aai.uucp
+ Fixed:	Patch #2 [aux.sh]
+ 
+ 	I have noticed some inconsistencies about when I am asked whether to
+ 	include my .sig or not depending on whether I'm posting, following
+ 	up, or mailing.
+ 
+ Prog:	manuals
+ Title:	Spelling mistakes
+ From:	olson%anchor.esd@sgi.com (Dave Olson)
+ Fixed:	Patch #2 [man/*]
+ 
+ 	Dave provided a lot of corrections to the spelling.
+ 
+ Prog:	Makefile
+ Title:	The '/^[ /]*[*]/d' expression breaks on HPUX.
+ From:	Bill Gaines <bill%iccdev@relay.EU.net> + fix
+ Fixed:	Patch #2 [Makefile]
+ 
+ 
+ New features since initial 6.4.0 release
+ ----------------------------------------
+ 
+ Prog:	nn
+ Title:	New auto-select-subject variable
+ From:	Jeffrey (J.D.) Sparkes <JSPARKES@BNR.CA>
+ Added:	Patch #2 [menu.c variable.c nn.1]
+ 
+ Prog:	nn
+ Title:	New default-kill-select variable
+ From:	KFS (on request from Bill Petro)
+ Added:	Patch #2 [kill.c variable.c nn.1]
+ 
+ Prog:	mini-inews (nntp)
+ Title:	updated to nntp release 1.5.8 (very minor changes!)
+ From:	KFS (with patches provided by Stan Barber)
+ Added:	Patch #2 [inews/*]
*** ./LAST/global.c	Sat May  5 16:18:41 1990
--- global.c	Mon May 14 17:14:07 1990
***************
*** 194,200 ****
  #ifdef MASTER_DIRECTORY
      master_directory = MASTER_DIRECTORY;
  #else
!     master_directory = lib_directory;
  #endif
  
  #ifdef HELP_DIRECTORY
--- 194,200 ----
  #ifdef MASTER_DIRECTORY
      master_directory = MASTER_DIRECTORY;
  #else
!     master_directory = LIB_DIRECTORY;
  #endif
  
  #ifdef HELP_DIRECTORY
***************
*** 206,212 ****
  #ifdef LOG_FILE
      log_file = LOG_FILE;
  #else
!     log_file = mk_file_name(lib_directory, "Log");
  #endif
  
      if (who_am_i == I_AM_MASTER || who_am_i == I_AM_SPEW)
--- 206,212 ----
  #ifdef LOG_FILE
      log_file = LOG_FILE;
  #else
!     log_file = mk_file_name(LIB_DIRECTORY, "Log");
  #endif
  
      if (who_am_i == I_AM_MASTER || who_am_i == I_AM_SPEW)
*** ./LAST/group.c	Tue May 15 13:31:03 1990
--- group.c	Tue May 15 14:00:26 1990
***************
*** 294,299 ****
--- 294,300 ----
  #endif
  		user_delay(5);
  	    }
+ 	    gh->master_flag |= M_BLOCKED;
  	    if (mg_head != NULL) continue;
  	    menu_return( ME_NEXT );
  	}
***************
*** 332,337 ****
--- 333,339 ----
  
      do {
  	gh->current_first = 0;
+ 	if (gh->master_flag & M_BLOCKED) continue;
  	if (mask != NULL) continue;
  	if (access_mode & ACC_ALSO_READ_ARTICLES || first_art >= 0) continue;
  	if (menu_cmd != ME_NO_ARTICLES) gh->group_flag &= ~G_NEW;
***************
*** 684,690 ****
   get_folder:
      m_endinput();
      if (strcmp(answer, "+") == 0)
! 	answer = (gh->save_file != NULL) ? gh->save_file : default_save_file;
      if (!expand_file_name(buffer, answer, 1)) goto_return (ME_NO_REDRAW);
      menu_cmd = folder_menu(buffer);
      gh = NULL;
--- 686,692 ----
   get_folder:
      m_endinput();
      if (strcmp(answer, "+") == 0)
! 	answer = (gh && gh->save_file != NULL) ? gh->save_file : default_save_file;
      if (!expand_file_name(buffer, answer, 1)) goto_return (ME_NO_REDRAW);
      menu_cmd = folder_menu(buffer);
      gh = NULL;
***************
*** 739,747 ****
      menu_cmd = group_menu(gh, first, access_mode, mask, menu);
      release_memory(&mem_marker);
  
! goto_exit:
      if (gh != orig_group) {
! 	gh->current_first = 0;
  	if (orig_group) init_group(orig_group);
      }
  
--- 741,749 ----
      menu_cmd = group_menu(gh, first, access_mode, mask, menu);
      release_memory(&mem_marker);
  
!  goto_exit:
      if (gh != orig_group) {
! 	if (gh != NULL) gh->current_first = 0;
  	if (orig_group) init_group(orig_group);
      }
  
*** ./LAST/inews/clientlib.c	Tue May  1 22:31:35 1990
--- inews/clientlib.c	Tue May 15 15:54:00 1990
***************
*** 31,36 ****
--- 31,38 ----
  #ifndef FOR_NN
  #ifdef USG
  # define	index	strchr
+ # define        bcopy(a,b,c)   memcpy(b,a,c)
+ # define        bzero(a,b)     memset(a,'\0',b)
  #endif USG
  #endif
  
***************
*** 525,536 ****
  	(void) fclose(ser_rd_fp);
  }
  
- #ifdef USG
- bzero(p, l)
- 	register char	*p;
- 	register int	l;
- {
- 	while (l-- > 0)
- 		*p++ = 0;
- }
- #endif USG
--- 527,529 ----
*** ./LAST/inews/version.c	Sun Apr  1 00:34:21 1990
--- inews/version.c	Tue May 15 15:54:00 1990
***************
*** 2,5 ****
   * Provide the version number of this release.
   */
  
! char	nntp_version[] = "1.5.7 (10 November 89)";
--- 2,5 ----
   * Provide the version number of this release.
   */
  
! char	nntp_version[] = "1.5.8 (11 March 90)";
*** ./LAST/inst.sh	Sat May  5 16:05:04 1990
--- inst.sh	Mon May 14 17:14:06 1990
***************
*** 310,317 ****
  	} |
  	while read DIR SECT SRC
  	do
! 
! 		if [ -d "$DIR"/. -a -w "$DIR"/. ]
  		then
  			for i in man/*$SRC
  			do
--- 310,316 ----
  	} |
  	while read DIR SECT SRC
  	do
! 		if [ -d "$DIR"/. ]
  		then
  			for i in man/*$SRC
  			do
*** ./LAST/kill.c	Thu Apr 26 16:16:39 1990
--- kill.c	Tue May 15 11:56:43 1990
***************
*** 9,14 ****
--- 9,15 ----
  #include "regexp.h"
  
  export int killed_articles;
+ export int dflt_kill_select = 30;
  
  char KILL_FILE[] = 	"kill";
  char COMPILED_KILL[] =	"KILL.COMP";
***************
*** 381,387 ****
      extern article_header *get_menu_article();
      group_header *gh;
  
!     prompt("\1AUTO\1 (k)ill or (s)elect (CR => Kill subject 1 month) ");
      switch (get_c()) {
       case CR:
       case NL:
--- 382,392 ----
      extern article_header *get_menu_article();
      group_header *gh;
  
!     days = dflt_kill_select % 100;
!     flag = (dflt_kill_select / 100) ? AUTO_SELECT : AUTO_KILL;
!     prompt("\1AUTO\1 (k)ill or (s)elect (CR => %s subject %d days) ",
! 	   flag == AUTO_KILL ? "Kill" : "Select", days);
! 
      switch (get_c()) {
       case CR:
       case NL:
***************
*** 392,398 ****
  
  	strcpy(buffer, ah->subject);
  	enter_kill_file(current_group, buffer,
! 			AUTO_KILL | ON_SUBJECT | KILL_CASE_MATCH, 30);
  	msg("DONE");
  	return 1;
  
--- 397,403 ----
  
  	strcpy(buffer, ah->subject);
  	enter_kill_file(current_group, buffer,
! 			flag | ON_SUBJECT | KILL_CASE_MATCH, days);
  	msg("DONE");
  	return 1;
  
*** ./LAST/man/nn.1.A	Tue May 15 13:31:06 1990
--- man/nn.1.A	Tue May 15 20:19:32 1990
***************
*** 106,112 ****
  \-\fBs\fP option!
  .TP
  \-\fBi\fP
! Normally searches with \-\fBn\fP and \-\fBs\fP are case indenpendent.
  Using this option, the case becomes significant.
  .TP
  \-\fBm\fP
--- 106,112 ----
  \-\fBs\fP option!
  .TP
  \-\fBi\fP
! Normally searches with \-\fBn\fP and \-\fBs\fP are case independent.
  Using this option, the case becomes significant.
  .TP
  \-\fBm\fP
***************
*** 317,323 ****
  .PP
  Layout 4 is a hybrid between layout 1 and 3.  It will normally use
  layout 1, but it will use layout 3 (with a little indentation) for
! menu lines where the subject is longer than the space avaiable with
  layout 1.
  .LP
  Layout 1 is the default layout, and an alternative menu line layout is
--- 317,323 ----
  .PP
  Layout 4 is a hybrid between layout 1 and 3.  It will normally use
  layout 1, but it will use layout 3 (with a little indentation) for
! menu lines where the subject is longer than the space available with
  layout 1.
  .LP
  Layout 1 is the default layout, and an alternative menu line layout is
***************
*** 341,347 ****
  and replaced by a single \&`>' character (see the \fBre-layout\fP
  variable).
  .PP
! Since articles are sorted accoring to the subject, two or more
  adjacent articles may share the same subject (ignoring any `>'s).  In
  this case, only the first article will show the subject of the
  article; the rest will only show the `>' character in the subject
--- 341,347 ----
  and replaced by a single \&`>' character (see the \fBre-layout\fP
  variable).
  .PP
! Since articles are sorted according to the subject, two or more
  adjacent articles may share the same subject (ignoring any `>'s).  In
  this case, only the first article will show the subject of the
  article; the rest will only show the `>' character in the subject
***************
*** 359,365 ****
  an \fIattribute\fP with each
  article on your system.  These attributes are used to differentiate
  between read and unread articles, selected articles, articles marked
! for later treatment, etc.  Depending on how \fInn\fP is configurated,
  these attributes can be saved between invocations of \fInn\fP, or some
  of them may only be used while \fInn\fP is running.
  .LP
--- 359,365 ----
  an \fIattribute\fP with each
  article on your system.  These attributes are used to differentiate
  between read and unread articles, selected articles, articles marked
! for later treatment, etc.  Depending on how \fInn\fP is configured,
  these attributes can be saved between invocations of \fInn\fP, or some
  of them may only be used while \fInn\fP is running.
  .LP
***************
*** 378,384 ****
  attributes will only mention the most important commands that may set
  (or preserve) the attribute.
  .LP
! The following attributes may be assoicated with an article:
  .TP
  .B read
  Menu attribute "." - indicates that the article has been read or saved.
--- 378,384 ----
  attributes will only mention the most important commands that may set
  (or preserve) the attribute.
  .LP
! The following attributes may be associated with an article:
  .TP
  .B read
  Menu attribute "." - indicates that the article has been read or saved.
***************
*** 414,420 ****
  \fIread\fP.
  .TP
  .B auto-selected
! These articles have the same appearence as \fIselected\fP articles on
  the menu, and the only difference is that these articles have been
  selected automatically via the auto-selection facility rather than
  manually by you.  Very few commands differentiate between these
--- 414,420 ----
  \fIread\fP.
  .TP
  .B auto-selected
! These articles have the same appearance as \fIselected\fP articles on
  the menu, and the only difference is that these articles have been
  selected automatically via the auto-selection facility rather than
  manually by you.  Very few commands differentiate between these
***************
*** 422,428 ****
  The main difference is that these articles are only marked as
  \fIunread\fP when you leave the group (supposing they will also be
  auto-selected the next the group is entered).  This simplifies the
! house-keeping between invokations of \fInn\fP.
  .TP
  .B leave
  Menu attribute "+" - indicates that the article is marked for later
--- 422,428 ----
  The main difference is that these articles are only marked as
  \fIunread\fP when you leave the group (supposing they will also be
  auto-selected the next the group is entered).  This simplifies the
! house-keeping between invocations of \fInn\fP.
  .TP
  .B leave
  Menu attribute "+" - indicates that the article is marked for later
***************
*** 491,497 ****
  \&\fBabc...z 01..9\fP  {\fIarticle N\fP}
  The article with the given identification letter or digit is
  selected or deselected.  The following article becomes the current
! article.
  .TP
  \&\fB.\fP	{\fBselect\fP}
  Select or deselect the current article and move the cursor to the next
--- 491,498 ----
  \&\fBabc...z 01..9\fP  {\fIarticle N\fP}
  The article with the given identification letter or digit is
  selected or deselected.  The following article becomes the current
! article.  If the variable \fBauto-select-subject\fP is set, all
! articles with the same subject as the given article are selected.
  .TP
  \&\fB.\fP	{\fBselect\fP}
  Select or deselect the current article and move the cursor to the next
***************
*** 546,552 ****
  sorts of attribute changes, either on individual articles, all
  articles on the current menu page, all articles with a specific
  attribute, or all available articles.  To access all the functions of
! this command, the \fBJ\fP key may have to be hit upto four times,
  to loop through different one-line menus.  The full functionality of
  the \fBjunk-articles\fP command is described in a separate section
  below.
--- 547,553 ----
  sorts of attribute changes, either on individual articles, all
  articles on the current menu page, all articles with a specific
  attribute, or all available articles.  To access all the functions of
! this command, the \fBJ\fP key may have to be hit up to four times,
  to loop through different one-line menus.  The full functionality of
  the \fBjunk-articles\fP command is described in a separate section
  below.
***************
*** 652,658 ****
  command.
  .LP
  \fBRelated variables\fP:
! auto-preview-mode, case-fold-search, confirm-auto-quit, confirm-entry,
  auto-junk-seen, confirm-junk-seen, retain-seen-status, select-on-sender.
  .SH THE JUNK-ARTICLES AND LEAVE-NEXT COMMANDS
  The \fBJ\fP {\fBjunk-articles\fP} command is a very flexible command
--- 653,660 ----
  command.
  .LP
  \fBRelated variables\fP:
! auto-preview-mode, auto-select-subject, case-fold-search,
! confirm-auto-quit, confirm-entry,
  auto-junk-seen, confirm-junk-seen, retain-seen-status, select-on-sender.
  .SH THE JUNK-ARTICLES AND LEAVE-NEXT COMMANDS
  The \fBJ\fP {\fBjunk-articles\fP} command is a very flexible command
***************
*** 661,667 ****
  specific attribute, or all available articles.
  .LP
  To access all the functions of this command, the \fBJ\fP key may have
! to be hit upto four times, to loop through different one-line menus:
  .TP
  \fBMark Read\fP
  This submenu allows you to mark articles \fIread\fP.
--- 663,669 ----
  specific attribute, or all available articles.
  .LP
  To access all the functions of this command, the \fBJ\fP key may have
! to be hit up to four times, to loop through different one-line menus:
  .TP
  \fBMark Read\fP
  This submenu allows you to mark articles \fIread\fP.
***************
*** 685,691 ****
  you explicitly change the attribute (e.g. by reading it) or it is
  expired.
  .LP
! For each of these submenues, \fInn\fP will list the most plausible
  choices you may use, but all of the following answers can be used at
  all submenus.  When you have entered a choice, \fInn\fP will afterward
  ask whether the change should be made to all menu pages or only the
--- 687,693 ----
  you explicitly change the attribute (e.g. by reading it) or it is
  expired.
  .LP
! For each of these submenus, \fInn\fP will list the most plausible
  choices you may use, but all of the following answers can be used at
  all submenus.  When you have entered a choice, \fInn\fP will afterward
  ask whether the change should be made to all menu pages or only the
***************
*** 814,820 ****
  \&\fBl\fP	{\fBleave-article\fP}
  Mark the current article with the \fIleave\fP attribute and continue
  with the next selected article.  When all the selected articles
! in the cuurent group have been read, these \fIleft over\fP articles
  can be automatically selected and shown once more, or the treatment
  can be postponed to the next time you enter the group.
    This is particularly useful if you see an article
--- 816,822 ----
  \&\fBl\fP	{\fBleave-article\fP}
  Mark the current article with the \fIleave\fP attribute and continue
  with the next selected article.  When all the selected articles
! in the current group have been read, these \fIleft over\fP articles
  can be automatically selected and shown once more, or the treatment
  can be postponed to the next time you enter the group.
    This is particularly useful if you see an article
***************
*** 863,869 ****
  .TP
  \&\fB=\fP	{\fBgoto-menu\fP}
  Return to selection mode in the current group (think of = as the
! \&"icon" of the selection menu).  The articles read sofar will be
  marked \fIread\fP.
  .TP
  \&\fBN\fP	{\fBnext-group\fP}
--- 865,871 ----
  .TP
  \&\fB=\fP	{\fBgoto-menu\fP}
  Return to selection mode in the current group (think of = as the
! \&"icon" of the selection menu).  The articles read so far will be
  marked \fIread\fP.
  .TP
  \&\fBN\fP	{\fBnext-group\fP}
***************
*** 1009,1015 ****
  in the file specified in \fBdecode-header-file\fP (default
  "Decode.Headers") in the same directory as the decoded files.
    If \fBdecode-skip-prefix\fP is non-null, \fB:decode\fP will attempt
! to ignore upto that many characters on each line to find the encoded data.
  This is particularly useful in some binaries groups where files are
  both uuencoded and packed with shar; \fInn\fP will ignore the prefix
  added to each line by shar, and thus be able to unshar, concatenate,
--- 1011,1017 ----
  in the file specified in \fBdecode-header-file\fP (default
  "Decode.Headers") in the same directory as the decoded files.
    If \fBdecode-skip-prefix\fP is non-null, \fB:decode\fP will attempt
! to ignore up to that many characters on each line to find the encoded data.
  This is particularly useful in some binaries groups where files are
  both uuencoded and packed with shar; \fInn\fP will ignore the prefix
  added to each line by shar, and thus be able to unshar, concatenate,
*** ./LAST/man/nn.1.B	Sat May  5 14:19:09 1990
--- man/nn.1.B	Tue May 15 20:19:32 1990
***************
*** 147,153 ****
  also available in reading mode):
  .TP
  \&\fBR\fP	{\fBreply\fP}
! Reply through mail to the author of the article.  This is the prefered
  way to respond to an article unless you think your reply is of general
  interest.
  .TP
--- 147,153 ----
  also available in reading mode):
  .TP
  \&\fBR\fP	{\fBreply\fP}
! Reply through mail to the author of the article.  This is the preferred
  way to respond to an article unless you think your reply is of general
  interest.
  .TP
***************
*** 290,296 ****
  \fB=\fP and \fInumber\fP
  These answers are equivalent to the same answers described below
  applied to the current group (e.g. \fBG return =\fP and \fBG =\fP are
! quivalent).
  .LP
  Specifying a folder, a file, or an article (with \fB%\fP) will cause
  \fInn\fP to treat the file like a digest and split it into separate
--- 290,296 ----
  \fB=\fP and \fInumber\fP
  These answers are equivalent to the same answers described below
  applied to the current group (e.g. \fBG return =\fP and \fBG =\fP are
! equivalent).
  .LP
  Specifying a folder, a file, or an article (with \fB%\fP) will cause
  \fInn\fP to treat the file like a digest and split it into separate
***************
*** 448,454 ****
  .LP
  The following dialog is used to build the kill file entry:
  .TP
! \fIAUTO (k)ill or (s)elect (CR => Kill subject 1 month)\fP
  If you simply want \fInn\fP to kill all articles with the subject of
  the current article (in reading mode) or a specific article (which
  \fInn\fP will prompt for in selection mode), just hit \fBreturn\fP.
--- 448,454 ----
  .LP
  The following dialog is used to build the kill file entry:
  .TP
! \fIAUTO (k)ill or (s)elect (CR => Kill subject 30 days)\fP
  If you simply want \fInn\fP to kill all articles with the subject of
  the current article (in reading mode) or a specific article (which
  \fInn\fP will prompt for in selection mode), just hit \fBreturn\fP.
***************
*** 456,461 ****
--- 456,464 ----
  the current (or specified) subject in the current group for a period
  of 30 days (which should be enough for the discussion to die out).
  .sp 0.5v
+ You can control the default kill period, or change it into a "select"
+ period via the \fBdefault-kill-select\fP variable.
+ .sp 0.5v
  If this "default behaviour" is not what you want, just answer either
  \fIk\fP or \fIs\fP to kill or select articles, respectively, which
  will bring you on to the rest of the questions.
***************
*** 503,509 ****
  specify whether an exact match applies for the entry.
  .LP
  \fBRelated variables\fP:
! kill.
  .SH THE FORMAT OF THE KILL FILE
  The kill file consists of one line for each entry.  Empty lines and
  lines starting with a # character are ignored.  \fInn\fP automatically
--- 506,512 ----
  specify whether an exact match applies for the entry.
  .LP
  \fBRelated variables\fP:
! default-kill-select, kill.
  .SH THE FORMAT OF THE KILL FILE
  The kill file consists of one line for each entry.  Empty lines and
  lines starting with a # character are ignored.  \fInn\fP automatically
***************
*** 537,543 ****
  The \fIflags\fP field consists of a list of characters which
  identifies the type of entry, and the interpretation of each
  \fIstring\fP field.  When used, the flag characters must be used in
! the order in which they are desctibed below:
  .TP
  \fB~\fP	(optional)
  .br
--- 540,546 ----
  The \fIflags\fP field consists of a list of characters which
  identifies the type of entry, and the interpretation of each
  \fIstring\fP field.  When used, the flag characters must be used in
! the order in which they are described below:
  .TP
  \fB~\fP	(optional)
  .br
***************
*** 623,629 ****
  following substitutions have been performed on the command:
  .TP
  \fIFile name expansion\fP
! The ealier described file name expansions will be performed on all
  arguments.
  .TP
  .B $G
--- 626,632 ----
  following substitutions have been performed on the command:
  .TP
  \fIFile name expansion\fP
! The earlier described file name expansions will be performed on all
  arguments.
  .TP
  .B $G
***************
*** 665,671 ****
  .TP
  \&\fBU\fP	{\fBunsub\fP}
  Unsubscribe to the current group.  You will not see this group
! anymore unless you explicitly request it.  If the variable
  \fBunsubscribe-mark-read\fP is set, all articles in the group will be
  marked read when you unsubscribe.
    If the variable \fBkeep-unsubscribed\fP is not set, the group will
--- 668,674 ----
  .TP
  \&\fBU\fP	{\fBunsub\fP}
  Unsubscribe to the current group.  You will not see this group
! any more unless you explicitly request it.  If the variable
  \fBunsubscribe-mark-read\fP is set, all articles in the group will be
  marked read when you unsubscribe.
    If the variable \fBkeep-unsubscribed\fP is not set, the group will
***************
*** 787,793 ****
  \fB:rmail\fP
  Open your mailbox (see the \fBmail\fP variable) as a folder to
  read the incoming messages.  This is \fInot\fP a full mail interface
! (you cannot delete messages, no cc: on replies, etc), but it can give
  you a quick glance at new mail without leaving \fInn\fP.
  .TP
  \fB:set\fP \fIvariable\fP [ \fIvalue\fP ]
--- 790,797 ----
  \fB:rmail\fP
  Open your mailbox (see the \fBmail\fP variable) as a folder to
  read the incoming messages.  This is \fInot\fP a full mail interface
! (depending on the nn configuration, you may not be able to delete
! messages, add cc: on replies, etc), but it can give
  you a quick glance at new mail without leaving \fInn\fP.
  .TP
  \fB:set\fP \fIvariable\fP [ \fIvalue\fP ]
***************
*** 831,837 ****
  (articles ordered after posting date only), and \fBsender\fP (articles
  ordered after sender's name).
  .TP
! \fB:unset\fP \fIvariable\fP
  Toggle a boolean variable.
  .TP
  \fB:unread\fP [ \fIgroup\fP ] [ \fIarticles\fP ]
--- 835,841 ----
  (articles ordered after posting date only), and \fBsender\fP (articles
  ordered after sender's name).
  .TP
! \fB:toggle\fP \fIvariable\fP
  Toggle a boolean variable.
  .TP
  \fB:unread\fP [ \fIgroup\fP ] [ \fIarticles\fP ]
*** ./LAST/man/nn.1.C	Tue May 15 13:31:07 1990
--- man/nn.1.C	Tue May 15 20:19:32 1990
***************
*** 185,190 ****
--- 185,195 ----
  command at the end of the article and the `=' {\fBgoto-menu\fP}
  returns to the menu immediately as usual.
  .TP
+ \fBauto-select-subject\fP	(boolean, default false)
+ When set, selecting an article from the menu using the article id
+ (a-z), all articles on the menu with the same subject will
+ automatically be selected as well.
+ .TP
  \fBbackup\fP	(boolean, default true)
  When set, a copy of the initial .newsrc and select files will save be
  the first time they are changed.  \fInn\fP remembers the initial
***************
*** 241,247 ****
  having read the last group.  If not confirmed, \fInn\fP will recycle
  the presentation sequence looking for groups that were skipped with
  the `N' {\fBnext-group\fP} command.  But it will not look for new
! articles arrived since the invokation of \fInn\fP.
  .TP
  \fBconfirm-create\fP		(boolean, default true)
  When set, \fInn\fP will ask for confirmation before creating a new
--- 246,252 ----
  having read the last group.  If not confirmed, \fInn\fP will recycle
  the presentation sequence looking for groups that were skipped with
  the `N' {\fBnext-group\fP} command.  But it will not look for new
! articles arrived since the invocation of \fInn\fP.
  .TP
  \fBconfirm-create\fP		(boolean, default true)
  When set, \fInn\fP will ask for confirmation before creating a new
***************
*** 328,333 ****
--- 333,346 ----
  first component of the group name is used as the suggested
  distribution, e.g. `comp' when posting to comp.whatever.
  .TP
+ \fBdefault-kill-select\fP \fI[1]days\fP	(number, default 30)
+ Specifies the default action for the \fBK\fP {\fBkill-select\fP}
+ command if the first prompt is answered by \fBreturn\fP.  It contains
+ the number of days to keep the kill or select entry in the kill file
+ (1-99 days).  If it has the value \fIdays\fP+100 (e.g. 130), it
+ denotes that the default action is to \fIselect\fP rather than kill on
+ the subject for the specified period.
+ .TP
  \fBdefault-save-file\fP \fIfile\fP	(string, default +$F)
  The default save file used in quick save mode.  It can also be
  specified using the abbreviation "+" as the file name in normal save
***************
*** 481,488 ****
  as read.  This is useful to get up-to-date quickly if you have not
  read news for a longer period.
  .TP
! \fBlines\fP \fIlin\fP	(integer, default screen hight)
! This variable contains the screen hight i.e. number of lines.
  .TP
  \fBlong-menu\fP		(boolean, default false)
  If set \fInn\fP will not put an empty line after the header line and
--- 494,501 ----
  as read.  This is useful to get up-to-date quickly if you have not
  read news for a longer period.
  .TP
! \fBlines\fP \fIlin\fP	(integer, default screen height)
! This variable contains the screen height i.e. number of lines.
  .TP
  \fBlong-menu\fP		(boolean, default false)
  If set \fInn\fP will not put an empty line after the header line and
***************
*** 560,566 ****
  an integer variable, and the following values can be used.  Some of
  these actions (marked with an *) will only work when
  \fBkeep-unsubscribed\fP is set, since the presence of a group in
! \&.newsrc is the only way to recongnize it as an old group:
  .sp 0.5v
  \fB0\fP)  Ignore groups which are not in \&.newsrc.  This will obviously
  include new groups.
--- 573,579 ----
  an integer variable, and the following values can be used.  Some of
  these actions (marked with an *) will only work when
  \fBkeep-unsubscribed\fP is set, since the presence of a group in
! \&.newsrc is the only way to recognize it as an old group:
  .sp 0.5v
  \fB0\fP)  Ignore groups which are not in \&.newsrc.  This will obviously
  include new groups.
***************
*** 759,765 ****
  \fBretry-on-error\fP \fItimes\fP	(integer, default 0)
  When set, \fInn\fP will try the specified number of \fItimes\fP to
  open an article before reporting that the article does not exist
! anymore.  This may be necessary in some network environments.
  .TP
  \fBsave-counter\fP \fIformat\fP	(string, default "%d")
  This is the printf-format which \fInn\fP uses to create substitution
--- 772,778 ----
  \fBretry-on-error\fP \fItimes\fP	(integer, default 0)
  When set, \fInn\fP will try the specified number of \fItimes\fP to
  open an article before reporting that the article does not exist
! any more.  This may be necessary in some network environments.
  .TP
  \fBsave-counter\fP \fIformat\fP	(string, default "%d")
  This is the printf-format which \fInn\fP uses to create substitution
***************
*** 817,823 ****
  redrawing the screen in the following cases:  After a \fBgoto-group\fP
  command an empty menu is shown (hit \fBspace\fP to make it appear),
  and after responding to an article, only the prompt line is shown (use
! ^L to redraw the screen).  To avoid redrawing the screen aftern an
  extended command, set the \fBdelay-redraw\fP variable as well.
  .TP
  \fBslow-speed\fP \fIspeed\fP	(integer, default 1200)
--- 830,836 ----
  redrawing the screen in the following cases:  After a \fBgoto-group\fP
  command an empty menu is shown (hit \fBspace\fP to make it appear),
  and after responding to an article, only the prompt line is shown (use
! ^L to redraw the screen).  To avoid redrawing the screen after an
  extended command, set the \fBdelay-redraw\fP variable as well.
  .TP
  \fBslow-speed\fP \fIspeed\fP	(integer, default 1200)
***************
*** 886,892 ****
  .TP
  \fBsubject-match-parts\fP	(boolean, default false)
  When set, two subjects will be considered equal if they are identical
! upto the first (differing) digit.  Together with the
  \fBsubject-match-offset\fP variable, this can be used in source groups
  where the subject often has a format like:
  .sp 0.5v
--- 899,905 ----
  .TP
  \fBsubject-match-parts\fP	(boolean, default false)
  When set, two subjects will be considered equal if they are identical
! up to the first (differing) digit.  Together with the
  \fBsubject-match-offset\fP variable, this can be used in source groups
  where the subject often has a format like:
  .sp 0.5v
***************
*** 956,962 ****
  \fBupdate-frequency\fP		(integer, default 1)
  Specifies how many changes need to be done to the .newsrc or select
  files before they are written back to disk.  The default setting
! causese .newsrc to be updated every time a group has been read.
  .TP
  \fBuse-selections\fP		(boolean, default true)
  When set, \fInn\fP uses the selections and other article attributes
--- 969,975 ----
  \fBupdate-frequency\fP		(integer, default 1)
  Specifies how many changes need to be done to the .newsrc or select
  files before they are written back to disk.  The default setting
! causes .newsrc to be updated every time a group has been read.
  .TP
  \fBuse-selections\fP		(boolean, default true)
  When set, \fInn\fP uses the selections and other article attributes
***************
*** 964,970 ****
  select file.
  .TP
  \fBvisible-bell\fP	(boolean, default true)
! When set, \fInn\fP will flash the screeen instead of "ringing the
  bell" if the visible bell (flash) capability is defined in the
  termcap/terminfo database.
  .TP
--- 977,983 ----
  select file.
  .TP
  \fBvisible-bell\fP	(boolean, default true)
! When set, \fInn\fP will flash the screen instead of "ringing the
  bell" if the visible bell (flash) capability is defined in the
  termcap/terminfo database.
  .TP
*** ./LAST/man/nn.1.D	Tue May 15 13:31:08 1990
--- man/nn.1.D	Tue May 15 20:19:32 1990
***************
*** 120,126 ****
  Prompt for the name of a news group or folder to be entered
  .TP
  \-\fBi\fP	{\fBtoggle case-fold-search\fP}
! Normally searches with \-\fBn\fP and \-\fBs\fP are case indenpendent.
  Using this option, the case becomes significant.
  .TP
  \-\fBI\fP
--- 120,126 ----
  Prompt for the name of a news group or folder to be entered
  .TP
  \-\fBi\fP	{\fBtoggle case-fold-search\fP}
! Normally searches with \-\fBn\fP and \-\fBs\fP are case independent.
  Using this option, the case becomes significant.
  .TP
  \-\fBI\fP
***************
*** 227,233 ****
  command, macro definitions are normally placed in the
  .I init
  file.  Macros are numbered from 0 to 100, i.e. it is possible to define
! a total of 101 different macros (inplicit macros defined with the
  \fBmap\fP command uses internal numbers from 101 to 200).
  .LP
  To define macro number \fIM\fP, the following construction is used
--- 227,233 ----
  command, macro definitions are normally placed in the
  .I init
  file.  Macros are numbered from 0 to 100, i.e. it is possible to define
! a total of 101 different macros (implicit macros defined with the
  \fBmap\fP command uses internal numbers from 101 to 200).
  .LP
  To define macro number \fIM\fP, the following construction is used
***************
*** 270,276 ****
  .TP
  .I Shell Commands
  External commands can be invoked as part of a macro execution.  There
! are two forms of shell command invokations available depending on
  whether a command \fImay\fP produce output or require user input, or
  it is \fIguaranteed\fP to complete without input or output to the
  terminal.  The difference is that in the latter case, \fInn\fP does
--- 270,276 ----
  .TP
  .I Shell Commands
  External commands can be invoked as part of a macro execution.  There
! are two forms of shell command invocations available depending on
  whether a command \fImay\fP produce output or require user input, or
  it is \fIguaranteed\fP to complete without input or output to the
  terminal.  The difference is that in the latter case, \fInn\fP does
***************
*** 360,366 ****
  	\fBprompt\fP "Enter recipient name"
  .br
  When the macro terminates, the original prompt shown on entry to the
! macro will automatically be redrawn.  If this is not desireable (e.g.
  if the macro goes from selection to reading mode), the redrawing of
  the prompt can be disabled by using a \fBprompt\fP command with an
  empty \fIstring\fP ("").  Example:
--- 360,366 ----
  	\fBprompt\fP "Enter recipient name"
  .br
  When the macro terminates, the original prompt shown on entry to the
! macro will automatically be redrawn.  If this is not desirable (e.g.
  if the macro goes from selection to reading mode), the redrawing of
  the prompt can be disabled by using a \fBprompt\fP command with an
  empty \fIstring\fP ("").  Example:
***************
*** 765,771 ****
  in the
  .I file
  will be replaced by the terminal type defined in the TERM environment
! variable.  \fInn\fP silently ingores the
  .B load
  command if the file does not exist (so you don't have to have a
  specific init file for terminals which does not require remapping).
--- 765,771 ----
  in the
  .I file
  will be replaced by the terminal type defined in the TERM environment
! variable.  \fInn\fP silently ignores the
  .B load
  command if the file does not exist (so you don't have to have a
  specific init file for terminals which does not require remapping).
***************
*** 1064,1070 ****
  lines of the .newsrc file.  Example: RC:10 (use 10 lines of .newsrc).
  .TP
  \fBRC:\fP\fIstring\fP
! Similar to the \fBRC\fP entry, but limited to the lines upto (and
  including) the first line (i.e. group) starting with the given
  \fIstring\fP.  For example:  RC:alt.sources
  .TP
--- 1064,1070 ----
  lines of the .newsrc file.  Example: RC:10 (use 10 lines of .newsrc).
  .TP
  \fBRC:\fP\fIstring\fP
! Similar to the \fBRC\fP entry, but limited to the lines up to (and
  including) the first line (i.e. group) starting with the given
  \fIstring\fP.  For example:  RC:alt.sources
  .TP
***************
*** 1265,1273 ****
  .SH SEE ALSO
  Other netnews documentation.
  .br
! nncheck(1), nngoback(1), nngrep(1), nntidy(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
--- 1265,1273 ----
  .SH SEE ALSO
  Other netnews documentation.
  .br
! nncheck(1), nngoback(1), nngrab(1), nngrep(1), nnpost(1), nntidy(1)
  .br
! nnadmin(1M), nnusage(1M), nnmaster(8), nnspew(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
*** ./LAST/man/nncheck.1	Wed May  2 20:50:44 1990
--- man/nncheck.1	Tue May 15 13:29:12 1990
***************
*** 88,101 ****
  .DT
  .ta \w'$db/MASTER'u+6m
  .\"ta 0 12
! ~/.nn/rc	The record of read articles
  .br
  $db/MASTER	The database master index
  .DT
  .SH SEE ALSO
! nn(1), nngoback(1), nngrep(1), nntidy(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(1M)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
--- 88,101 ----
  .DT
  .ta \w'$db/MASTER'u+6m
  .\"ta 0 12
! ~/.newsrc	The record of read articles
  .br
  $db/MASTER	The database master index
  .DT
  .SH SEE ALSO
! nn(1), nngoback(1), nngrab(1), nngrep(1), nnpost(1), nntidy(1)
  .br
! nnadmin(1M), nnusage(1M), nnmaster(1M)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
*** ./LAST/man/nngoback.1	Thu Apr 26 14:57:00 1990
--- man/nngoback.1	Tue May 15 13:29:16 1990
***************
*** 81,89 ****
  .br
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngrep(1), nntidy(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(8)
  .SH NOTES
  \fBnngoback\fP does not check the age of the `old' active files; it
  will blindly believe that active.0 was created today, and that
--- 81,89 ----
  .br
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngrab(1), nngrep(1), nnpost(1), nntidy(1)
  .br
! nnadmin(1M), nnusage(1M), nnmaster(8)
  .SH NOTES
  \fBnngoback\fP does not check the age of the `old' active files; it
  will blindly believe that active.0 was created today, and that
*** ./LAST/man/nngrab.1	Sun Apr 29 15:32:05 1990
--- man/nngrab.1	Tue May 15 13:19:30 1990
***************
*** 36,42 ****
  .SH SEE ALSO
  nn(1), nnspew(8), egrep(1)
  .SH NOTES
! \fInngrap\fP \fIcan be\fP much faster than the equivalent command
  shown above, if the tertiary news subject
  database generated by the \fInnspew\fP(8) daemon exists.  To enable
  the faster operation, \fInnspew\fP must be executed regularly by cron.
--- 36,42 ----
  .SH SEE ALSO
  nn(1), nnspew(8), egrep(1)
  .SH NOTES
! \fInngrab\fP \fIcan be\fP much faster than the equivalent command
  shown above, if the tertiary news subject
  database generated by the \fInnspew\fP(8) daemon exists.  To enable
  the faster operation, \fInnspew\fP must be executed regularly by cron.
*** ./LAST/man/nngrep.1	Mon Apr 23 18:32:11 1990
--- man/nngrep.1	Tue May 15 13:29:16 1990
***************
*** 87,95 ****
  ~/.nn/init	The presentation sequence
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngoback(1), nngrep(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
--- 87,95 ----
  ~/.nn/init	The presentation sequence
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngoback(1), nngrab(1), nnpost(1), nntidy(1)
  .br
! nnadmin(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
*** ./LAST/man/nnmaster.8	Tue May 15 13:31:09 1990
--- man/nnmaster.8	Tue May 15 13:29:15 1990
***************
*** 62,68 ****
  be collected.  Individual groups, e.g. news.software.nn, can also be
  specified
  .sp 0.5v
! A group name preceeded by an exclamation mark, e.g. !talk.politics,
  will cause the group and all its subgroups to be ignored.
  .sp 0.5v
  An empty argument, i.e. "", will cause all groups that are not ignored
--- 62,68 ----
  be collected.  Individual groups, e.g. news.software.nn, can also be
  specified
  .sp 0.5v
! A group name preceded by an exclamation mark, e.g. !talk.politics,
  will cause the group and all its subgroups to be ignored.
  .sp 0.5v
  An empty argument, i.e. "", will cause all groups that are not ignored
***************
*** 73,79 ****
  .br
  If the empty argument had been omitted, nothing would be collected,
  since the presence of any \fIgroups\fP arguments causes \fInnmaster\fP
! to ignore all groups which are not explicitly mentionned.
  .sp 0.5v
  Example 1: The following commands can be executed by cron to collect
  different sets of groups at different intervals or under different
--- 73,79 ----
  .br
  If the empty argument had been omitted, nothing would be collected,
  since the presence of any \fIgroups\fP arguments causes \fInnmaster\fP
! to ignore all groups which are not explicitly mentioned.
  .sp 0.5v
  Example 1: The following commands can be executed by cron to collect
  different sets of groups at different intervals or under different
***************
*** 295,301 ****
  collection of articles following the database initialization.  This is
  useful on systems where the 'min' field in the active file is
  unreliable or not maintained (Cnews doesn't) to limit the work done to
! do the initial collection of news after the initalization of the
  database.  If news is accessed remotely from an NNTP server, this is
  even more important!  If \fIlimit\fP is omitted, or is zero,
  \fInnmaster\fP will trust the min field and collect all articles in
--- 295,301 ----
  collection of articles following the database initialization.  This is
  useful on systems where the 'min' field in the active file is
  unreliable or not maintained (Cnews doesn't) to limit the work done to
! do the initial collection of news after the initialization of the
  database.  If news is accessed remotely from an NNTP server, this is
  even more important!  If \fIlimit\fP is omitted, or is zero,
  \fInnmaster\fP will trust the min field and collect all articles in
***************
*** 424,430 ****
  Comments (starting with `#' and continuing to the end of line) and
  empty lines are allow in the GROUPS file, but it is strongly
  recommended to keep the changes to the GROUPS file as small as
! possible, because of the implicit correspondance with the binary
  MASTER file.
  .LP
  It is not recommended to edit the GROUPS file while \fInnmaster\fP is
--- 424,430 ----
  Comments (starting with `#' and continuing to the end of line) and
  empty lines are allow in the GROUPS file, but it is strongly
  recommended to keep the changes to the GROUPS file as small as
! possible, because of the implicit correspondence with the binary
  MASTER file.
  .LP
  It is not recommended to edit the GROUPS file while \fInnmaster\fP is
***************
*** 510,516 ****
  .SH SEE ALSO
  nn(1), nncheck(1), nngrep(1), nntidy(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
--- 510,516 ----
  .SH SEE ALSO
  nn(1), nncheck(1), nngrep(1), nntidy(1)
  .br
! nnadmin(1M), nnspew(8), nnusage(1M)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
*** ./LAST/man/nnspew.8	Sun Apr  1 21:36:05 1990
--- man/nnspew.8	Tue May 15 13:19:31 1990
***************
*** 24,30 ****
  $db/subjects	subject database
  .DT
  .SH SEE ALSO
! nn(1), nnspew(8), egrep(1)
  .SH NOTES
  \fInngrap\fP will use the subject database generated by \fInnspew\fP
  independent of its age.  Thus, if you stop running \fInnspew\fP,
--- 24,30 ----
  $db/subjects	subject database
  .DT
  .SH SEE ALSO
! nn(1), nngrab(1), egrep(1)
  .SH NOTES
  \fInngrap\fP will use the subject database generated by \fInnspew\fP
  independent of its age.  Thus, if you stop running \fInnspew\fP,
*** ./LAST/man/nntidy.1	Mon Apr 23 18:32:10 1990
--- man/nntidy.1	Tue May 15 13:29:14 1990
***************
*** 70,78 ****
  ~/.newsrc.tidy	The original rc file before tidy
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngoback(1), nngrep(1)
  .br
! nnadmin(1M), nnquery(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
--- 70,78 ----
  ~/.newsrc.tidy	The original rc file before tidy
  .DT
  .SH SEE ALSO
! nn(1), nncheck(1), nngoback(1), nngrab(1), nngrep(1), nnpost(1)
  .br
! nnadmin(1M), nnusage(1M), nnmaster(8)
  .SH AUTHOR
  Kim F. Storm, Texas Instruments A/S, Denmark
  .br
*** ./LAST/menu.c	Sun Apr 29 23:41:29 1990
--- menu.c	Tue May 15 12:05:24 1990
***************
*** 28,34 ****
  export int  auto_preview_mode = 0; /* preview rather than select */
  export int  preview_continuation = 12; /* what to do after preview */
  export int  preview_mark_read = 1; /* previewed articles are A_READ */
! export int  select_on_sender = 0; /* + command selects on sender */
  
  export char delayed_msg[100] = "";	/* give to msg() after redraw */
  
--- 28,35 ----
  export int  auto_preview_mode = 0; /* preview rather than select */
  export int  preview_continuation = 12; /* what to do after preview */
  export int  preview_mark_read = 1; /* previewed articles are A_READ */
! export int  select_on_sender = 0; /* find command selects on sender */
! export int  auto_select_subject = 0; /* auto select articles with same subj. */
  
  export char delayed_msg[100] = "";	/* give to msg() after redraw */
  
***************
*** 1210,1215 ****
--- 1211,1217 ----
  
  	 cura = article_id;
  	 toggle();
+ 	 if (auto_select_subject) goto select_subject;
  	 mark();
  	 cura++;
  
***************
*** 1269,1274 ****
--- 1271,1277 ----
  	 if (last_k_cmd != K_ARTICLE_ID && last_k_cmd != K_SELECT)
  	     toggle();
  
+       select_subject:
  	 while (firsta+cura > 0 &&
  		(articles[firsta+cura]->flag & (A_SAME | A_ALMOST_SAME)))
  	     cura--;
*** ./LAST/newsrc.c	Fri Apr 27 20:54:55 1990
--- newsrc.c	Mon May 14 15:32:46 1990
***************
*** 413,419 ****
  		    last_new_gh = gh;
  
  		if (new_group_action != RCX_TIME) {
! 		    printf("\nNew group: %s -- append to .newsrc? (y)");
  		    if (yes(0) <= 0) continue;
  		}
  		sprintf(buf, "%s:\n", gh->group_name);
--- 413,420 ----
  		    last_new_gh = gh;
  
  		if (new_group_action != RCX_TIME) {
! 		    printf("\nNew group: %s -- append to .newsrc? (y)",
! 			   gh->group_name);
  		    if (yes(0) <= 0) continue;
  		}
  		sprintf(buf, "%s:\n", gh->group_name);
*** ./LAST/nn.c	Fri Apr 27 20:23:00 1990
--- nn.c	Mon May 14 17:14:00 1990
***************
*** 726,732 ****
  	nn_exit(cmd);
      }
  
!     if (!silent || who_am_i == I_AM_CHECK)
  	printf("Release %s,  Kim F. Storm, 1990\n\n", version_id);
  
      if (nn_locked()) nn_exit(2);
--- 726,732 ----
  	nn_exit(cmd);
      }
  
!     if (!silent && who_am_i != I_AM_CHECK)
  	printf("Release %s,  Kim F. Storm, 1990\n\n", version_id);
  
      if (nn_locked()) nn_exit(2);
*** ./LAST/nntp.c	Tue May 15 13:31:12 1990
--- nntp.c	Mon May 14 17:13:53 1990
***************
*** 816,826 ****
  	*art++ = atol(cp);
  	count++;
      }
-     *art = 0;
  
!     if (try_listgroup)
! 	quicksort(article_list, count, article_number, sort_art_list);
!     *art = 0;
      return article_list;
  }
  
--- 816,827 ----
  	*art++ = atol(cp);
  	count++;
      }
  
!     if (article_list != NULL) {
! 	*art = 0;
! 	if (try_listgroup && count > 1)
! 	    quicksort(article_list, count, article_number, sort_art_list);
!     }
      return article_list;
  }
  
*** ./LAST/patchlevel.h	Tue May 15 13:31:12 1990
--- patchlevel.h	Tue May 15 17:31:39 1990
***************
*** 12,18 ****
   *	1990-05-07: Release 6.4		(comp.sources.unix)
   *
   *	1990-05-10: Patch #1 (6.4.1)
   */
  
! #define PATCHLEVEL 1
  
--- 12,19 ----
   *	1990-05-07: Release 6.4		(comp.sources.unix)
   *
   *	1990-05-10: Patch #1 (6.4.1)
+  *	1990-05-15: Patch #2 (6.4.2)
   */
  
! #define PATCHLEVEL 2
  
*** ./LAST/term.c	Tue May 15 13:31:15 1990
--- term.c	Mon May 14 15:32:44 1990
***************
*** 1206,1212 ****
  	    break;
  	}
  	if (help) {
! 	    fputs(" y=YES n=NO", stdout);
  	    prompt_length += 11;
  	    help = 0;
  	}
--- 1206,1212 ----
  	    break;
  	}
  	if (help) {
! 	    fputs(" y=YES n=NO", stdout); fl;
  	    prompt_length += 11;
  	    help = 0;
  	}
*** ./LAST/variable.c	Tue May 15 13:31:16 1990
--- variable.c	Tue May 15 12:06:28 1990
***************
*** 46,51 ****
--- 46,52 ----
      append_sig_mail,
      append_sig_post,
      auto_junk_seen,
+     auto_select_subject,
      auto_preview_mode,
      case_fold_search,
      compress_mode,
***************
*** 56,61 ****
--- 57,63 ----
      conf_group_entry,
      conf_junk_seen,
      delay_redraw,
+     dflt_kill_select,
      do_kill_handling,
      dont_sort_articles,
      dont_sort_folders,
***************
*** 187,192 ****
--- 189,195 ----
      "attributes",		STR 1,		(char **)attributes,
      "auto-junk-seen",		BOOL 0,		(char **)&auto_junk_seen,
      "auto-preview-mode",	BOOL 0,		(char **)&auto_preview_mode,
+     "auto-select-subject",	BOOL 0,		(char **)&auto_select_subject,
      "backup",			BOOL 0,		(char **)&keep_rc_backup,
      "backup-suffix",		STR 0,		(char **)&bak_suffix,
      "bug-report-address", 	STR 0,		(char **)&bug_address,
***************
*** 211,216 ****
--- 214,220 ----
      "decode-header-file",	STR 0,		(char **)&decode_header_file,
      "decode-skip-prefix",	INT 0,		(char **)&decode_skip_prefix,
      "default-distribution",	STR 0,		(char **)&default_distribution,
+     "default-kill-select",	INT 0,		(char **)&dflt_kill_select,
      "default-save-file",	STR 3,		(char **)&default_save_file,
      "delay-redraw",		BOOL 0,		(char **)&delay_redraw,
      "edit-patch-command", 	BOOL 0,		(char **)&edit_patch_command,
*** ./LAST/xmakefile	Wed May  2 20:50:41 1990
--- xmakefile	Fri May 11 00:48:41 1990
***************
*** 152,158 ****
  * merge nn.1
  
  man/nn.1:	man/nn.1.A man/nn.1.B man/nn.1.C man/nn.1.D
! 	[ ! -f man/nn.1 ] || mv man/nn.1 man/nn.1~
  	cat man/nn.1.? > man/nn.1
  
  *
--- 152,158 ----
  * merge nn.1
  
  man/nn.1:	man/nn.1.A man/nn.1.B man/nn.1.C man/nn.1.D
! 	-[ ! -f man/nn.1 ] || mv man/nn.1 man/nn.1~
  	cat man/nn.1.? > man/nn.1
  
  *
-- 
Kim F. Storm        storm@texas.dk        Tel +45 429 174 00
Texas Instruments, Marielundvej 46E, DK-2730 Herlev, Denmark
	  No news is good news, but nn is better!
