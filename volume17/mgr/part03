Path: bbn.com!rsalz
From: rsalz@uunet.uu.net (Rich Salz)
Newsgroups: comp.sources.unix
Subject: REPOST v17i004:  MGR, Bellcore window manager, Part03/61
Date: 18 Jan 89 15:48:13 GMT
Approved: rsalz@uunet.UU.NET

Submitted-by: Stephen A. Uhler <sau@bellcore.com>
Posting-number: Volume 17, Issue 4
Archive-name: mgr/part03

[  This version has some packing problems -- mkdir order and uudecode
   usage -- fixed.  --r$  ]

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 3 (of 61)."
# Contents:  demo/icon/README demo/msg/do_file demo/msg/do_ls
#   demo/msg/do_more demo/msg/do_vi demo/plot/README demo/sh/bury
#   demo/sh/font demo/sh/more demo/sh/vi doc/bury.1 doc/color.1
#   doc/invert_colormap.1 doc/set_console.1 doc/usrman/croff/README
#   font-16/.mgrc font-16/README font-32/.mgrc font-32/README
#   icon/README2 icon/Ucherries icon/Ucloudy icon/Ueasel
#   icon/Ueye_bld1 icon/Ueye_bld2 icon/Ueye_bld3 icon/Ufile-cabinet
#   icon/Ufourarrows icon/Uhammer icon/Umbox1 icon/Umbox2
#   icon/Umbox_closed icon/Umbox_full icon/Umbox_open icon/Umbox_zip
#   icon/Umickface icon/Umovie icon/Umovie1 icon/Umovie2
#   icon/Umsg_board icon/Umsg_none icon/Umsg_read icon/Upartlysunny
#   icon/Urainy icon/Usmallspiff1 icon/Usphere icon/Ustormy
#   icon/Usunny icon/Utty icon/Uverysunny icon/Uzip icon/eye/README2
#   icon/grey/Makefile icon/grey/README2 icon/mouse/README2
#   icon/mouse/Uhhand1 icon/mouse/Uhhand2 icon/mouse/Uhhand3
#   icon/mouse/Uhhand4 misc/mgr.ti src/oblit/README
# Wrapped by rsalz@papaya.bbn.com on Thu Nov 17 21:04:51 1988
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'demo/icon/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/icon/README'\"
else
echo shar: Extracting \"'demo/icon/README'\" \(714 characters\)
sed "s/^X//" >'demo/icon/README' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 4.1 88/06/21 13:15:13 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/icon/RCS/README,v $
X
XNotice:
X
Xzoom, which uses the same bit-blit routines as MGR, probably won't work
Xon anything but sun's.  This is due to kludgy code in bitmap.c which the
XSUN c-compilers do OK on, but most others choke.
END_OF_FILE
if test 714 -ne `wc -c <'demo/icon/README'`; then
    echo shar: \"'demo/icon/README'\" unpacked with wrong size!
fi
# end of 'demo/icon/README'
fi
if test -f 'demo/msg/do_file' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/do_file'\"
else
echo shar: Extracting \"'demo/msg/do_file'\" \(524 characters\)
sed "s/^X//" >'demo/msg/do_file' <<'END_OF_FILE'
X#	$Header$
X#	$Source$
X
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       This document contains proprietary information that shall
X#       be distributed or routed only within Bellcore and its
X#       authorized clients, except with written permission of Bellcore.
X
X#! /bin/sh
X# list all file types in current directory
X#
Xdir=`echo $* | sed 's./[^/]*$..'`
X(  echo "             ---> $dir <---";
X   cd $dir;
X   file *;
X   echo "Hit RETURN to continue"
X   ) | more
X
END_OF_FILE
if test 524 -ne `wc -c <'demo/msg/do_file'`; then
    echo shar: \"'demo/msg/do_file'\" unpacked with wrong size!
fi
chmod +x 'demo/msg/do_file'
# end of 'demo/msg/do_file'
fi
if test -f 'demo/msg/do_ls' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/do_ls'\"
else
echo shar: Extracting \"'demo/msg/do_ls'\" \(498 characters\)
sed "s/^X//" >'demo/msg/do_ls' <<'END_OF_FILE'
X#	$Header$
X#	$Source$
X
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       This document contains proprietary information that shall
X#       be distributed or routed only within Bellcore and its
X#       authorized clients, except with written permission of Bellcore.
X
X#! /bin/sh
X# do an ls in a window
X#
Xdir=`echo $* | sed 's./[^/]*$./.'`
X(  echo "             ---> $dir <---";
X   ls -CF $dir;
X   echo "Hit RETURN to continue"
X   ) | more
X
END_OF_FILE
if test 498 -ne `wc -c <'demo/msg/do_ls'`; then
    echo shar: \"'demo/msg/do_ls'\" unpacked with wrong size!
fi
chmod +x 'demo/msg/do_ls'
# end of 'demo/msg/do_ls'
fi
if test -f 'demo/msg/do_more' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/do_more'\"
else
echo shar: Extracting \"'demo/msg/do_more'\" \(509 characters\)
sed "s/^X//" >'demo/msg/do_more' <<'END_OF_FILE'
X#	$Header$
X#	$Source$
X
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       This document contains proprietary information that shall
X#       be distributed or routed only within Bellcore and its
X#       authorized clients, except with written permission of Bellcore.
X
X#! /bin/sh
X# do more in a window
X#
Xcat /usr/sau/mgr/menu/more_menu.out
Xeval "`set_termcap -b`" 
X/usr/ucb/more $*
Xecho "^[imore^[n of $* ^[icomplete^[n, hit RETURN to exit"
Xread dummy
END_OF_FILE
if test 509 -ne `wc -c <'demo/msg/do_more'`; then
    echo shar: \"'demo/msg/do_more'\" unpacked with wrong size!
fi
chmod +x 'demo/msg/do_more'
# end of 'demo/msg/do_more'
fi
if test -f 'demo/msg/do_vi' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/do_vi'\"
else
echo shar: Extracting \"'demo/msg/do_vi'\" \(482 characters\)
sed "s/^X//" >'demo/msg/do_vi' <<'END_OF_FILE'
X#	$Header$
X#	$Source$
X
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       This document contains proprietary information that shall
X#       be distributed or routed only within Bellcore and its
X#       authorized clients, except with written permission of Bellcore.
X
X#! /bin/sh
X# do vi in a window
X#
Xdir=`echo $* | sed 's./[^/]*$./.'`
Xcd $dir;
Xcat /usr/sau/mgr/menu/vi_menu.out
Xeval "`set_termcap -b`" 
Xexec /usr/ucb/vi $*
END_OF_FILE
if test 482 -ne `wc -c <'demo/msg/do_vi'`; then
    echo shar: \"'demo/msg/do_vi'\" unpacked with wrong size!
fi
chmod +x 'demo/msg/do_vi'
# end of 'demo/msg/do_vi'
fi
if test -f 'demo/plot/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/plot/README'\"
else
echo shar: Extracting \"'demo/plot/README'\" \(644 characters\)
sed "s/^X//" >'demo/plot/README' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 4.1 88/06/21 14:03:08 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/plot/RCS/README,v $
X
Xmgrplot:	mgr plot filter
Xlibmgrplot.a	mgr plot library
Xmgrplot.1g	new manual page
Xplot.ex		example plot file (try < plot.ex mgrplot)
END_OF_FILE
if test 644 -ne `wc -c <'demo/plot/README'`; then
    echo shar: \"'demo/plot/README'\" unpacked with wrong size!
fi
# end of 'demo/plot/README'
fi
if test -f 'demo/sh/bury' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/bury'\"
else
echo shar: Extracting \"'demo/sh/bury'\" \(662 characters\)
sed "s/^X//" >'demo/sh/bury' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: bury,v 4.1 88/06/21 14:01:28 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/bury,v $
X
X#	bury the window
X
XBURY="8s"
XESC="^["
X
Xif /bin/test $TERM != mgr
Xthen
X   echo "$0 only works on mgr terminals"
X   exit 1
Xfi
X
Xecho -n "$ESC$BURY" &
END_OF_FILE
if test 662 -ne `wc -c <'demo/sh/bury'`; then
    echo shar: \"'demo/sh/bury'\" unpacked with wrong size!
fi
chmod +x 'demo/sh/bury'
# end of 'demo/sh/bury'
fi
if test -f 'demo/sh/font' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/font'\"
else
echo shar: Extracting \"'demo/sh/font'\" \(666 characters\)
sed "s/^X//" >'demo/sh/font' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: font,v 4.1 88/06/21 14:01:30 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/font,v $
X
X#	change to a new font
X
XFONT="F"
XESC="^["
X
Xif /bin/test $TERM != mgr
Xthen
X   echo "$0 only works on mgr terminals"
X   exit 1
Xfi
X
Xecho -n "$ESC$1$FONT"
END_OF_FILE
if test 666 -ne `wc -c <'demo/sh/font'`; then
    echo shar: \"'demo/sh/font'\" unpacked with wrong size!
fi
chmod +x 'demo/sh/font'
# end of 'demo/sh/font'
fi
if test -f 'demo/sh/more' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/more'\"
else
echo shar: Extracting \"'demo/sh/more'\" \(590 characters\)
sed "s/^X//" >'demo/sh/more' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: more,v 4.1 88/06/21 14:01:35 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/more,v $
X
Xif [ $TERM = mgr ]
Xthen
X	eval "`set_termcap -b`" 
Xfi
Xexec /usr/ucb/more $*
END_OF_FILE
if test 590 -ne `wc -c <'demo/sh/more'`; then
    echo shar: \"'demo/sh/more'\" unpacked with wrong size!
fi
chmod +x 'demo/sh/more'
# end of 'demo/sh/more'
fi
if test -f 'demo/sh/vi' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/vi'\"
else
echo shar: Extracting \"'demo/sh/vi'\" \(584 characters\)
sed "s/^X//" >'demo/sh/vi' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: vi,v 4.1 88/06/21 14:03:54 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/vi,v $
X
Xif [ $TERM = mgr ]
Xthen
X	eval "`set_termcap -b`" 
Xfi
Xexec /usr/ucb/vi $*
END_OF_FILE
if test 584 -ne `wc -c <'demo/sh/vi'`; then
    echo shar: \"'demo/sh/vi'\" unpacked with wrong size!
fi
chmod +x 'demo/sh/vi'
# end of 'demo/sh/vi'
fi
if test -f 'doc/bury.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/bury.1'\"
else
echo shar: Extracting \"'doc/bury.1'\" \(730 characters\)
sed "s/^X//" >'doc/bury.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: bury.1,v 4.1 88/06/21 13:51:22 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/bury.1,v $
X.TH bury 1L "April 30, 1985"
X.SH NAME
Xbury \- Bury a
X.I mgr
Xwindow.
X.SH SYNOPSIS
X.B bury
X.SH DESCRIPTION
X.B Bury
Xpushes the window to the
X.I bottom
Xof the screen.
X.SH SEE ALSO
Xmgr(1L)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
if test 730 -ne `wc -c <'doc/bury.1'`; then
    echo shar: \"'doc/bury.1'\" unpacked with wrong size!
fi
# end of 'doc/bury.1'
fi
if test -f 'doc/color.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/color.1'\"
else
echo shar: Extracting \"'doc/color.1'\" \(634 characters\)
sed "s/^X//" >'doc/color.1' <<'END_OF_FILE'
X.TH color 1L "November 15, 1987"
X.SH NAME
XColor \- set the forground and background color for text in an
X.B Mgr 
Xwindow.
X.B MGR .
X.SH SYNOPSIS
Xcolor [dark|light] \fIcolor\fP on [dark|light] \fIcolor\fP
X.SH DESCRIPTION
X.B color
Xsets the current foreground and background text color for an 
X.B Mgr
Xwindow.
X.I Color
Xis one of
Xblack, white, red, green, blue, yellow, cyan or magenta.
XAlternately,
X.I color
Xmay be specified as an index in the color lookup table.
X.B Color
Xcalls
X.I set_colormap(1L)
Xto initialize the color map.
X.SH SEE ALSO
Xmgr(1L)
Xset_colormap(1L)
X.SH BUGS
X.B Color
Xonly works with
X.I "color Mgr" .
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
if test 634 -ne `wc -c <'doc/color.1'`; then
    echo shar: \"'doc/color.1'\" unpacked with wrong size!
fi
# end of 'doc/color.1'
fi
if test -f 'doc/invert_colormap.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/invert_colormap.1'\"
else
echo shar: Extracting \"'doc/invert_colormap.1'\" \(321 characters\)
sed "s/^X//" >'doc/invert_colormap.1' <<'END_OF_FILE'
X.TH invert_colormap 1L "November 15, 1987"
X.SH NAME
Xinvert_colormap \- inverts the colormap on a SUN color display
X.B MGR .
X.SH SYNOPSIS
Xinvert_colormap
X.SH DESCRIPTION
X.B Set_colormap
Xinverts the current color map in the sense of a photographic negative.
X.SH SEE ALSO
Xset_colormap(1L)
Xoverlay(1L)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
if test 321 -ne `wc -c <'doc/invert_colormap.1'`; then
    echo shar: \"'doc/invert_colormap.1'\" unpacked with wrong size!
fi
# end of 'doc/invert_colormap.1'
fi
if test -f 'doc/set_console.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/set_console.1'\"
else
echo shar: Extracting \"'doc/set_console.1'\" \(624 characters\)
sed "s/^X//" >'doc/set_console.1' <<'END_OF_FILE'
X.TH set_console 1L "January 4, 1988"
X.SH NAME
Xset_console \- redirect console messages to a
X.I MGR
Xwindow.
X.SH SYNOPSIS
X.B set_console
X.SH DESCRIPTION
X.B Set_console ,
Xwhen run in a
X.I MGR
Xwindow,
Xredirects console messages to that window.
X.SH SEE ALSO
Xmgr(1L)
X.SH BUGS
X.IP *
XRedirecting console messages raises havoc if the keyboard is not
Xin direct mode.  
XSet_console prints a warning message and fails if the keyboard is not
Xin direct mode.
X.IP *
XConsole messages automatically get reset to the console
Xwhen 
X.I MGR
Xis suspended.
XSet_console should be reissued after resuming a suspended
X.I MGR .
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
if test 624 -ne `wc -c <'doc/set_console.1'`; then
    echo shar: \"'doc/set_console.1'\" unpacked with wrong size!
fi
# end of 'doc/set_console.1'
fi
if test -f 'doc/usrman/croff/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/usrman/croff/README'\"
else
echo shar: Extracting \"'doc/usrman/croff/README'\" \(559 characters\)
sed "s/^X//" >'doc/usrman/croff/README' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 1.1 88/07/07 10:11:51 sau Exp $
X#	$Source: /tmp/mgrsrc/doc/usrman/croff/RCS/README,v $
X
Xtroff c-source pre-processor   (S. A. Uhler)
END_OF_FILE
if test 559 -ne `wc -c <'doc/usrman/croff/README'`; then
    echo shar: \"'doc/usrman/croff/README'\" unpacked with wrong size!
fi
# end of 'doc/usrman/croff/README'
fi
if test -f 'font-16/.mgrc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/.mgrc'\"
else
echo shar: Extracting \"'font-16/.mgrc'\" \(340 characters\)
sed "s/^X//" >'font-16/.mgrc' <<'END_OF_FILE'
Xfont 1   sail6x8r.fnt
Xfont 2   gal7x11r.fnt
Xfont 3   ser7x12r.fnt
Xfont 4   cour7x12b.fnt
Xfont 5   cour7x14r.fnt
Xfont 6   ser8x16r.fnt
Xfont 7   ser9x18r.fnt
Xfont 8   cour9x16b.fnt
Xfont 9   cmr9x16r.fnt
Xfont 10  cmr10x16b.fnt
Xfont 11  gal12x20r.fnt
Xfont 12  cmr14x25r.fnt
Xfont 13  cmr15x25r.fnt
Xfont 14  shadow38x40b.fnt
Xfont 15  dot1x1r.fnt
END_OF_FILE
if test 340 -ne `wc -c <'font-16/.mgrc'`; then
    echo shar: \"'font-16/.mgrc'\" unpacked with wrong size!
fi
# end of 'font-16/.mgrc'
fi
if test -f 'font-16/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/README'\"
else
echo shar: Extracting \"'font-16/README'\" \(398 characters\)
sed "s/^X//" >'font-16/README' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xfonts in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'font-16/README'`; then
    echo shar: \"'font-16/README'\" unpacked with wrong size!
fi
# end of 'font-16/README'
fi
if test -f 'font-32/.mgrc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/.mgrc'\"
else
echo shar: Extracting \"'font-32/.mgrc'\" \(340 characters\)
sed "s/^X//" >'font-32/.mgrc' <<'END_OF_FILE'
Xfont 1   sail6x8r.fnt
Xfont 2   gal7x11r.fnt
Xfont 3   ser7x12r.fnt
Xfont 4   cour7x12b.fnt
Xfont 5   cour7x14r.fnt
Xfont 6   ser8x16r.fnt
Xfont 7   ser9x18r.fnt
Xfont 8   cour9x16b.fnt
Xfont 9   cmr9x16r.fnt
Xfont 10  cmr10x16b.fnt
Xfont 11  gal12x20r.fnt
Xfont 12  cmr14x25r.fnt
Xfont 13  cmr15x25r.fnt
Xfont 14  shadow38x40b.fnt
Xfont 15  dot1x1r.fnt
END_OF_FILE
if test 340 -ne `wc -c <'font-32/.mgrc'`; then
    echo shar: \"'font-32/.mgrc'\" unpacked with wrong size!
fi
# end of 'font-32/.mgrc'
fi
if test -f 'font-32/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/README'\"
else
echo shar: Extracting \"'font-32/README'\" \(398 characters\)
sed "s/^X//" >'font-32/README' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xfonts in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'font-32/README'`; then
    echo shar: \"'font-32/README'\" unpacked with wrong size!
fi
# end of 'font-32/README'
fi
if test -f 'icon/README2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/README2'\"
else
echo shar: Extracting \"'icon/README2'\" \(398 characters\)
sed "s/^X//" >'icon/README2' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xicons in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'icon/README2'`; then
    echo shar: \"'icon/README2'\" unpacked with wrong size!
fi
# end of 'icon/README2'
fi
if test -f 'icon/Ucherries' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ucherries'\"
else
echo shar: Extracting \"'icon/Ucherries'\" \(349 characters\)
sed "s/^X//" >'icon/Ucherries' <<'END_OF_FILE'
Xbegin 644 cherries
XM>GH@0B!&  JH     5554   "JJJJD  55555<  "JJJJD   %554,    JJ
XM@,       4       D      !$      "$      $$      8$      @$  
XM   # (     $ (     8 (     @ (    #  0  !X,  0  '^P  0  ,_  
XM @  8_@  @  1_@ !   S_P'A   __P?Z   __PS\   _^QC^   ?^A'^   
XM?]C/_   /S#__   '^#__   !X#_[     !_Z     !_V      _,      ?
X)X      '@   
X 
Xend
END_OF_FILE
if test 349 -ne `wc -c <'icon/Ucherries'`; then
    echo shar: \"'icon/Ucherries'\" unpacked with wrong size!
fi
# end of 'icon/Ucherries'
fi
if test -f 'icon/Ucloudy' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ucloudy'\"
else
echo shar: Extracting \"'icon/Ucloudy'\" \(739 characters\)
sed "s/^X//" >'icon/Ucloudy' <<'END_OF_FILE'
Xbegin 644 cloudy
XM>GHA("$@5%145%145%2JJJJJJJJJJE5555555555JJJJJJJJJJI%1?U%145%
XM1:JK!JJJJJJJ558#=555556JJ@&*JJJJJE34 0145%14JSP !JJJJJI4#  '
XM55555:@(  "JJJJJ2 @  $55146P    *JJJJE     UY1]5L   ""X:X.I@
XM   (6 6 -*   !^P P :8$" %5 ! !6Q@( JH ( "EZ P%5    -JH"CK\  
XM  I505U80   !:JBJJ!    &15U%0"    2JJJK     !E55?\     %JJK 
XM0     945( @    -:JK !     *558       6JJ@      !D?V       "
XMK \       )P ,       Z         "8         /          D      
XM   #P         *          H         "@         .          D  
XM      "%P        (9D        C;@       !:6        '2H        
XM:E@ 0     !5K !    " &I$ $    ( 1:H 0 $ # !J58'@ X T -6JXJ .
XM\>L JE1\6!1>5(%4JJJOZJJJ_JI5555555555:JJJJJJJJJJ145%145%146J
X7JJJJJJJJJE5555555555JJJJJJJJJJI5
X 
Xend
END_OF_FILE
if test 739 -ne `wc -c <'icon/Ucloudy'`; then
    echo shar: \"'icon/Ucloudy'\" unpacked with wrong size!
fi
# end of 'icon/Ucloudy'
fi
if test -f 'icon/Ueasel' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ueasel'\"
else
echo shar: Extracting \"'icon/Ueasel'\" \(738 characters\)
sed "s/^X//" >'icon/Ueasel' <<'END_OF_FILE'
Xbegin 644 easel
XM>GHA("$@G_________C__________G_________^\         _@        
XM!^    &    'X    \    ?@   'X   !^    ^P   'X   #;@   ?@   9
XMF   !^!_______X'X$  /_P  @?@0      "!^!       ('X$'_  8" @?@
XM00$ &88"!^!! 0 @1@('X$$! 4 J @?@00$"P"H"!^!! 01 $@('X$$!"(82
XM @?@00$1@"("!^!! 2) (@('X$$!1$!" @?@0?^(($("!^!  1 9@@('X$ "
XM( :" @?@0 1  0("!^! "( ! @('X$ 1  (" @?@0 H  @("!^! !  #_@('
XMX$       @?@0      "!^!       ('X$       @?@?______^!^!     
XM  ('X$       @?@?______^!^ #  #  & 'X ,  ,  8 ?@!P  P !P!^ &
XM  #  # 'X X  ,  . ?@#      8!^ <     !P'X!@     # ?@.      .
XM!^ P      X'X'      !P?@8      '!^#@      .'X,       X?AP   
XM   !A^&       ''XX       ,?C        Q^         '\         __
X7_________G_________^/_________X 
X 
Xend
END_OF_FILE
if test 738 -ne `wc -c <'icon/Ueasel'`; then
    echo shar: \"'icon/Ueasel'\" unpacked with wrong size!
fi
# end of 'icon/Ueasel'
fi
if test -f 'icon/Ueye_bld1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ueye_bld1'\"
else
echo shar: Extracting \"'icon/Ueye_bld1'\" \(423 characters\)
sed "s/^X//" >'icon/Ueye_bld1' <<'END_OF_FILE'
Xbegin 644 eye_bld1
XM>GH@6"!#   :3)        HHD      BRBF2     #9)*11(    $DDM+.@ 
XM  $236E,J   %,UM[TRM   2/___WKH  (G?____<8  5O^"NJ'G( "_^@_7
XM#GR@ )^,&JH(K]0 ?!&??!B3J !8ECKX+(WT /_T/?C<VO@ ,P@[_[Q0<  J
XM!C7_W&%X !'S._^M'W@ 'X U_]S$>  )3#^__'?X  UZ-?]<&G@ !IF>_KAP
XM\  #1QU5^95P  .&#^JQ&N   ..'7>\1P   4(/_V'<    <P/\0#@    ? 
XM  #X     /X #X      #__\                                    
X0                     /_\
X 
Xend
END_OF_FILE
if test 423 -ne `wc -c <'icon/Ueye_bld1'`; then
    echo shar: \"'icon/Ueye_bld1'\" unpacked with wrong size!
fi
# end of 'icon/Ueye_bld1'
fi
if test -f 'icon/Ueye_bld2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ueye_bld2'\"
else
echo shar: Extracting \"'icon/Ueye_bld2'\" \(423 characters\)
sed "s/^X//" >'icon/Ueye_bld2' <<'END_OF_FILE'
Xbegin 644 eye_bld2
XM>GH@6"!#                                                    
XM                          ZWH      #>W;Z     !?FR77    "F)))
XM1K    %K4TU$[@  &KM___^/   /F__^+?7  &___?C<'^  /^R[_[Q3\ !N
XMUC7_W&'X #7S._^M'_P /X U_]S$>  ;3#^__'?\ !UZ-?]<&G@ #IF>_KAP
XM\  '1QU5^95P  .&#^JQ&N   ..'7>\1P   4(/_V'<    <P/\0#@    ? 
XM  #X     /X #X      #__\                                    
X0                     /_\
X 
Xend
END_OF_FILE
if test 423 -ne `wc -c <'icon/Ueye_bld2'`; then
    echo shar: \"'icon/Ueye_bld2'\" unpacked with wrong size!
fi
# end of 'icon/Ueye_bld2'
fi
if test -f 'icon/Ueye_bld3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ueye_bld3'\"
else
echo shar: Extracting \"'icon/Ueye_bld3'\" \(423 characters\)
sed "s/^X//" >'icon/Ueye_bld3' <<'END_OF_FILE'
Xbegin 644 eye_bld3
XM>GH@6"!#                                                    
XM                          ZWH      !?W;Z      /@017     #H)(
XM +    ![$ "(+    ;@D" !G   %Q    @'   ^      N  /4B    (4 !Z
XM      #X '4      &P JA      6 "NP     #\ "YZ  @&/_P 5_______
XM>  U__]=_ZOP  6B;^JRJN  #>9/7?*SP  "5]O_VO<   #=UO\9#@    ? 
XM+@#X     /X #X      #__\                                    
X0                     /_\
X 
Xend
END_OF_FILE
if test 423 -ne `wc -c <'icon/Ueye_bld3'`; then
    echo shar: \"'icon/Ueye_bld3'\" unpacked with wrong size!
fi
# end of 'icon/Ueye_bld3'
fi
if test -f 'icon/Ufile-cabinet' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ufile-cabinet'\"
else
echo shar: Extracting \"'icon/Ufile-cabinet'\" \(567 characters\)
sed "s/^X//" >'icon/Ufile-cabinet' <<'END_OF_FILE'
Xbegin 644 file-cabinet
XM>GH@4"$@        ?___    8  !@   8T0 P   4 "(8   >   $   ;   
XM"   1@" !@  6@   0  1P " 8  4(0 0&  0L$ !#  9V   1@ 4"!  00 
XM0+ 1@ ( 35@ 0 $ 3 P ( " 3,8   ! 4\O____ 52/____ 2A,   # 0A\ 
XM  # 2,,   # 50\   # 40L   # 6Y<   # >,, P8# 7&\ P8# 10, P8# 
XM;&< _X# 1A< _X# 5Z<   # 1 L   # 7?<   # 5 \   # 1A,   # 0$L 
XM  # 4ML   # 2"/____ 3@O____ 1@_____ 8)L   # )-,   # ,1L   # 
XM$ <   # &R<   # "$<   # #5,   # ! , P8#  A, P8#  U, P8#  3, 
XM_X#  ;L _X#  (L   #  -,   #  $L   #  "<   #  #,   #  !,   # 
X> !L   #   L   #   ?____   ?____         
X 
Xend
END_OF_FILE
if test 567 -ne `wc -c <'icon/Ufile-cabinet'`; then
    echo shar: \"'icon/Ufile-cabinet'\" unpacked with wrong size!
fi
# end of 'icon/Ufile-cabinet'
fi
if test -f 'icon/Ufourarrows' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ufourarrows'\"
else
echo shar: Extracting \"'icon/Ufourarrows'\" \(425 characters\)
sed "s/^X//" >'icon/Ufourarrows' <<'END_OF_FILE'
Xbegin 644 fourarrows
XM>GH@3R!/   #       $@      (0      0(      @$     ! "     " 
XM!     $  @    '@'P    #@'X    !@'X     @'      @'      @'   
XM   @'    < __ 8  L ?_ 4 !, /_ 2 "/\  _Q $ &  @ @( '  @ 00 ' 
XM @ (@ '  @ $@ '  @ &0 '  @ .( '  @ >$ '  @ \"/_  _QX!/_  ?SP
XM O_  /W@ > _\ ?  . @& >  & @' <    @' 8    @'      @'      @
XM'     '@'\    $  \    " !X    ! #P     @'@     0/      (>   
X2   $\      #X      !P   
X 
Xend
END_OF_FILE
if test 425 -ne `wc -c <'icon/Ufourarrows'`; then
    echo shar: \"'icon/Ufourarrows'\" unpacked with wrong size!
fi
# end of 'icon/Ufourarrows'
fi
if test -f 'icon/Uhammer' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Uhammer'\"
else
echo shar: Extracting \"'icon/Uhammer'\" \(395 characters\)
sed "s/^X//" >'icon/Uhammer' <<'END_OF_FILE'
Xbegin 644 hammer
XM>GH@3R!,   _\     /__@    __@    !_X     #_@     '_@     /_ 
XM     ?_      ?_      ?_      ?_      ?_@    $__P    /__X    
XM?__\    _\/R    ?X'A    /X# @   '\! 0   #X @(   !P 0$    @ (
XM"      $!      " @     ! 0      @(      0$      ("      $!  
XM    " @     ! 0      @(      0$      ("      $!      " @    
XM ! 0      @(      0$      ("      $$      "(      !0       @
X 
Xend
END_OF_FILE
if test 395 -ne `wc -c <'icon/Uhammer'`; then
    echo shar: \"'icon/Uhammer'\" unpacked with wrong size!
fi
# end of 'icon/Uhammer'
fi
if test -f 'icon/Umbox1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox1'\"
else
echo shar: Extracting \"'icon/Umbox1'\" \(738 characters\)
sed "s/^X//" >'icon/Umbox1' <<'END_OF_FILE'
Xbegin 644 mbox1
XM>GHA("$@                                                    
XM                                                            
XM                                        #_____X    0     P  
XM "<    !    +8    "    ZCC@  (   #5&,$  P   .L50HY!    U1)$1
XM$$   #K$D1$00   -401\1!    ZQ!$1$D   #5$$1$<0   .L01$X!    U
XM1!$X <   #K$$X /    -40X '     :S@ '@    $U  '@     YL /P   
XM  "S0'A      9G!Q$     !#(8D0     ,&>"1      @, )$     & 8 D
XM0     0!@"1     # & )$     ( 0 D0     @# "1     # (II$     $
XM!ADD0     8,+21      SAW)$     !X \D0P      !:1>       ^Y&S 
XM     #AD\$      (&30        )>         E@        #5         
XM'D         ,                                                
X7                                
X 
Xend
END_OF_FILE
if test 738 -ne `wc -c <'icon/Umbox1'`; then
    echo shar: \"'icon/Umbox1'\" unpacked with wrong size!
fi
# end of 'icon/Umbox1'
fi
if test -f 'icon/Umbox2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox2'\"
else
echo shar: Extracting \"'icon/Umbox2'\" \(738 characters\)
sed "s/^X//" >'icon/Umbox2' <<'END_OF_FILE'
Xbegin 644 mbox2
XM>GHA("$@                        #@         +@         I@    
XM    "A@        *!         H8        "F         +@         H 
XM        "@         *          H         #_____X    8     P  
XM #<    !    +X    "   !_CC@  (  /__&,$  P  @ $50HY!  "9!Q)$1
XM$$  (*M$D1$00  0',01\1!  !/@Q!$1$D  ? %$$1$<0 !@ D01$X!  '_\
XM1!$X <  0 !$$X /  !@ $0X '   " #S@ '@   ( Y  '@    @]D /P   
XM ">#0'A     . '!Q$       ,8D0       >"1         )$         D
XM0        "1         )$         D0        "1        II$      
XM !DD0       +21       !W)$        \D0P      !:1>       ^Y&S 
XM     #AD\$      (&30        )>         E@        #5         
XM'D         ,                                                
X7                                
X 
Xend
END_OF_FILE
if test 738 -ne `wc -c <'icon/Umbox2'`; then
    echo shar: \"'icon/Umbox2'\" unpacked with wrong size!
fi
# end of 'icon/Umbox2'
fi
if test -f 'icon/Umbox_closed' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox_closed'\"
else
echo shar: Extracting \"'icon/Umbox_closed'\" \(744 characters\)
sed "s/^X//" >'icon/Umbox_closed' <<'END_OF_FILE'
Xbegin 644 mbox_closed
XM>GHA("$@                                                    
XM                                                            
XM                                        #_____X    0     P  
XM "<    !    *(    "    P3C@  (   "!&,$  P   ($50HY!    \1)$1
XM$$   #Q$D1$00   Y$01\1!   #D1!$1$D   "1$$1$<0   )$01$X!    D
XM1!$X <   "1$$X /    ,$0X '     83@ '@     Q  '@     !D /P   
XM   #0'A       '!Q$       (8D0       >"1         )$         D
XM0        "1         )$         D0        "1        II$      
XM !DD0       +21       !W)$        \D0P      !:1>       ^Y&S 
XM     #AD\$      (&30        )>         E@        #5         
XM'D         ,                                                
X7                                
X 
Xend
END_OF_FILE
if test 744 -ne `wc -c <'icon/Umbox_closed'`; then
    echo shar: \"'icon/Umbox_closed'\" unpacked with wrong size!
fi
# end of 'icon/Umbox_closed'
fi
if test -f 'icon/Umbox_full' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox_full'\"
else
echo shar: Extracting \"'icon/Umbox_full'\" \(742 characters\)
sed "s/^X//" >'icon/Umbox_full' <<'END_OF_FILE'
Xbegin 644 mbox_full
XM>GHA("$@                                                    
XM                                                            
XM                                        #_____X    8     P  
XM #<    !    +X    "   !_CC@  (  /__&,$  P  @ $50HY!  "9!Q)$1
XM$$  (*M$D1$00  0',01\1!  !/@Q!$1$D  ? %$$1$<0 !@ D01$X!  '_\
XM1!$X <  0 !$$X /  !@ $0X '   " #S@ '@   ( Y  '@    @]D /P   
XM ">#0'A     . '!Q$       ,8D0       >"1         )$         D
XM0        "1         )$         D0        "1        II$      
XM !DD0       +21       !W)$        \D0P      !:1>       ^Y&S 
XM     #AD\$      (&30        )>         E@        #5         
XM'D         ,                                                
X7                                
X 
Xend
END_OF_FILE
if test 742 -ne `wc -c <'icon/Umbox_full'`; then
    echo shar: \"'icon/Umbox_full'\" unpacked with wrong size!
fi
# end of 'icon/Umbox_full'
fi
if test -f 'icon/Umbox_open' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox_open'\"
else
echo shar: Extracting \"'icon/Umbox_open'\" \(742 characters\)
sed "s/^X//" >'icon/Umbox_open' <<'END_OF_FILE'
Xbegin 644 mbox_open
XM>GHA("$@                                                    
XM                                                            
XM                                        #_____X    0     P  
XM "<    !    +8    "    ZCC@  (   #5&,$  P   .L50HY!    U1)$1
XM$$   #K$D1$00   -401\1!    ZQ!$1$D   #5$$1$<0   .L01$X!    U
XM1!$X <   #K$$X /    -40X '     :S@ '@    $U  '@     YL /P   
XM  "S0'A      9G!Q$     !#(8D0     ,&>"1      @, )$     & 8 D
XM0     0!@"1     # & )$     ( 0 D0     @# "1     # (II$     $
XM!ADD0     8,+21      SAW)$     !X \D0P      !:1>       ^Y&S 
XM     #AD\$      (&30        )>         E@        #5         
XM'D         ,                                                
X7                                
X 
Xend
END_OF_FILE
if test 742 -ne `wc -c <'icon/Umbox_open'`; then
    echo shar: \"'icon/Umbox_open'\" unpacked with wrong size!
fi
# end of 'icon/Umbox_open'
fi
if test -f 'icon/Umbox_zip' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umbox_zip'\"
else
echo shar: Extracting \"'icon/Umbox_zip'\" \(465 characters\)
sed "s/^X//" >'icon/Umbox_zip' <<'END_OF_FILE'
Xbegin 644 mbox_zip
XM>GH@4"!4    /\     #__@    /__P    ?__X   !___X   #___X   /_
XM__X   ?___P   ____@  !____   #___^   '_____@ /____ > ?____ A
XM _^'__@&!_@'__AX!X '__V #@ '__X &  '__P    #__     !_^     #
XM_\     '_X     /_P     ?_P     __P    !_WP    #_G@    '_'@  
XM  /^&@    ?\ ^      !_       !           '_____  '_____  '__
XM___          & P09@ ('!PX9@$('CPX9@$^'WQL9@?<&^QL9@.4&<S^9@*
XMB&(S^9@1 & W#9_  & V#9_                  '_____  '_____  '__
X#___ 
X 
Xend
END_OF_FILE
if test 465 -ne `wc -c <'icon/Umbox_zip'`; then
    echo shar: \"'icon/Umbox_zip'\" unpacked with wrong size!
fi
# end of 'icon/Umbox_zip'
fi
if test -f 'icon/Umickface' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umickface'\"
else
echo shar: Extracting \"'icon/Umickface'\" \(741 characters\)
sed "s/^X//" >'icon/Umickface' <<'END_OF_FILE'
Xbegin 644 mickface
XM>GHA("$@    /_P       '  X      #@)P<      P!I@,     , .& , 
XM   !  8P (    :$!F "8   "8P.R 80   3G!]X#@@  "&,/X &!   08P_
XM@ 8"  "!CC^ !@$  0/?'P / ( " #^_@   0 ( /__@  ! !  ___   " )
XM'!_PD  '$ LF#N9H  F0%R8!Z9@  8@3)@'KN  #"",F >N\  8$(R8!YF< 
XM#(0GG #1!P /A$   ,('   "0   10(   )    AS    H ! !GP   !@ " 
XM#^    &  ( =4    9P! #_X   YI@( /_@  $VF @!__   #9X$ '_\   Y
XMA@0 ?_P   VF! !__   39P& +_Z   Y@ .#AX(   &  ?^ $@   4  ?H$J
XM   "0   @JH   )   !*E    B#@ %T$  "$(9  /!@  80AT  ?^  #A!#@
XM !PX  6($7  '#@ "8@),  <.  /T C@ !PX  &0!   '#^  " "   _ND  
XM0 (!\%U4+X!  0&P2B L (  @#! ("\!  ! 8" P08(  "# $$^!A   $, /
XMP F(   (P ,@!Q    8  P  8    0 #P "     P -@ P     P V ,    
X7  X!P'       < #@       /_P    #
X 
Xend
END_OF_FILE
if test 741 -ne `wc -c <'icon/Umickface'`; then
    echo shar: \"'icon/Umickface'\" unpacked with wrong size!
fi
# end of 'icon/Umickface'
fi
if test -f 'icon/Umovie' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umovie'\"
else
echo shar: Extracting \"'icon/Umovie'\" \(362 characters\)
sed "s/^X//" >'icon/Umovie' <<'END_OF_FILE'
Xbegin 644 movie
XM>GH@12!( / '@    _P?X   !_X_\   #_]_^   #_]_^   #_]_^   #_]_
XM^   #_]_^   C_]_^   A_X_\   P_P?X   ^/ '@   ____X   _JJJL   
XMQ5554!@ AJJJL#@ A5557_@ !JJJO_@ !5557_@ !JJJO_@ !5554#@ !JJJ
XML!@ !5554   !JJJL   !___\     '       /@      8P      P8    
XM !@,     # &     & #     , !@    8  P    P  8   !@  ,   #   
X5&   &   #   <   !P  8    P  
X 
Xend
END_OF_FILE
if test 362 -ne `wc -c <'icon/Umovie'`; then
    echo shar: \"'icon/Umovie'\" unpacked with wrong size!
fi
# end of 'icon/Umovie'
fi
if test -f 'icon/Umovie1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umovie1'\"
else
echo shar: Extracting \"'icon/Umovie1'\" \(363 characters\)
sed "s/^X//" >'icon/Umovie1' <<'END_OF_FILE'
Xbegin 644 movie1
XM>GH@12!( / '@    _P<X   !O8\\   #&-_^   #O=_^   #_]/R   #_]/
XMR   #O=_^   C&-_^   AO8\\   P_P<X   ^/ '@   ____X   _JJJL   
XMQ5554!@ AJJJL#@ A5?57_@ !OJ^O_@ !5=57_@ !NJ^O_@ !5?54#@ !OJZ
XML!@ !5574   !JJJL   !___\     '       /@      8P      P8    
XM !@,     # &     & #     , !@    8  P    P  8   !@  ,   #   
X5&   &   #   <   !P  8    P  
X 
Xend
END_OF_FILE
if test 363 -ne `wc -c <'icon/Umovie1'`; then
    echo shar: \"'icon/Umovie1'\" unpacked with wrong size!
fi
# end of 'icon/Umovie1'
fi
if test -f 'icon/Umovie2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umovie2'\"
else
echo shar: Extracting \"'icon/Umovie2'\" \(363 characters\)
sed "s/^X//" >'icon/Umovie2' <<'END_OF_FILE'
Xbegin 644 movie2
XM>GH@12!( / '@    YP?X   !YXWL   #_]C&   #_]WN   "?E_^   "?E_
XM^   #_]WN   C_]C&   AYXWL   PYP?X   ^/ '@   ____X   _JJJL   
XMQ5554!@ AJJJL#@ A5?57_@ !OJ^O_@ !5=57_@ !NJ^O_@ !5?54#@ !OJZ
XML!@ !5574   !JJJL   !___\     '       /@      8P      P8    
XM !@,     # &     & #     , !@    8  P    P  8   !@  ,   #   
X5&   &   #   <   !P  8    P  
X 
Xend
END_OF_FILE
if test 363 -ne `wc -c <'icon/Umovie2'`; then
    echo shar: \"'icon/Umovie2'\" unpacked with wrong size!
fi
# end of 'icon/Umovie2'
fi
if test -f 'icon/Umsg_board' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umsg_board'\"
else
echo shar: Extracting \"'icon/Umsg_board'\" \(742 characters\)
sed "s/^X//" >'icon/Umsg_board' <<'END_OF_FILE'
Xbegin 644 msg_board
XM>GHA("$@                       B][SCWO   #:$(110@   *H0A%!" 
XM   BY[WTW/   "* A110$   (H"%%% 0   B][T3GO                  
XM                ?_________Y__________F         &8         9@
XM        !F         &8         9@        !F         &8       
XM  9@        !F         &8         9@        !F         &8   
XM      9@        !F         &8         9@        !F         &
XM8         9@        !F         &8         9@        !F      
XM   &8         9@        !F         &8         9@        !F  
XM       &8         9@        !F         &8         9@        
XM!F         &8         9@        !F         &8         9@    
XM    !F         &8         9@        !F         &8         9_
X7_________G_________^            
X 
Xend
END_OF_FILE
if test 742 -ne `wc -c <'icon/Umsg_board'`; then
    echo shar: \"'icon/Umsg_board'\" unpacked with wrong size!
fi
# end of 'icon/Umsg_board'
fi
if test -f 'icon/Umsg_none' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umsg_none'\"
else
echo shar: Extracting \"'icon/Umsg_none'\" \(741 characters\)
sed "s/^X//" >'icon/Umsg_none' <<'END_OF_FILE'
Xbegin 644 msg_none
XM>GHA("$@                       B][SCWO   #:$(110@   *H0A%!" 
XM   BY[WTW/   "* A110$   (H"%%% 0   B][T3GO                  
XM                ?_________Y__________F         &8   (     9@
XM'G @    !F!AG!     &8(!F      9@ !$8    !F  &(@    &8  $2   
XM  9@  )(    !F   T@    &8  !2     9@  '_    !F  !X'    &8  (
XM &    9@ #  $   !F  0  (   &8 " #P0   9AP8P1A@  !F(A'A#"'X &
XM9#,3%D$@0 9H$R$602 @!F@*)PA H# &: XFB$# $ 9H#A"F@$ 0!F@$&:. 
XM3! &:/0/,  J$ 9IF  0 !,0!FF,(!  "1 &:&P0" @9$ 9L'A ,& L0!F0"
XM" 00!! &9 (,!! 0$ 9D!@0X,! P!F(%!@ @$" &8@T# & H8 9C$(& P"? 
XM!F'@P.. 0  &8 !@/@"   9@ #   0  !F  #  &   &8  # !@   9@  # 
XMX   !F   +]@   &8   @"    9@  " (   !F   0 0   &8  ! !@   9_
X7_________G_________^          " 
X 
Xend
END_OF_FILE
if test 741 -ne `wc -c <'icon/Umsg_none'`; then
    echo shar: \"'icon/Umsg_none'\" unpacked with wrong size!
fi
# end of 'icon/Umsg_none'
fi
if test -f 'icon/Umsg_read' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Umsg_read'\"
else
echo shar: Extracting \"'icon/Umsg_read'\" \(745 characters\)
sed "s/^X//" >'icon/Umsg_read' <<'END_OF_FILE'
Xbegin 644 msg_read
XM>7HA("$@(2                       "+WO./>\   -H0A%%"    JA"$4
XM$(   "+GO?3<\   (H"%%% 0   B@(444!   "+WO1.>\               
XM                  !__________G_________^8         9@   "    
XM!F    ('   &8   !!P\  9@    ,,_X!F    Q#"0@&8   "(0(R 9@   )
XM# C(!F    D0" @&8 '_"2 (" 9@ 0$)0 @(!F !&?] $! &8 $?D< ?\ 9@
XM 1@"8   !F !,  0   &8 %   @   9@ H  !   !F'#@  6   &8B$   8?
XM@ 9D,P   2! !F@3@  !(" &: H   "@$ 9H!@   , 0!F@&    0! &: 0 
XM  % $ 9H!    * 0!F@$    8! &: 0   !@$ 9H!    " 0!FP&    (! &
XM9 (    @$ 9D @   ! 0!F0&    ,! &8@4    P( 9B#0   "@@!F,0@   
XM)\ &8>#   !   9@ &   +_ !F  ,  !0$ &8  ,  9&0 9@  , &$9 !F  
XM ,#@0$ &8   OV! 0 9@  " ($! !F   ( @@( &8  ! !#_@ 9@  $ &   
X9!G_________^?_________X          ( @
X 
Xend
END_OF_FILE
if test 745 -ne `wc -c <'icon/Umsg_read'`; then
    echo shar: \"'icon/Umsg_read'\" unpacked with wrong size!
fi
# end of 'icon/Umsg_read'
fi
if test -f 'icon/Upartlysunny' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Upartlysunny'\"
else
echo shar: Extracting \"'icon/Upartlysunny'\" \(744 characters\)
sed "s/^X//" >'icon/Upartlysunny' <<'END_OF_FILE'
Xbegin 644 partlysunny
XM>GHA("$@                                                    
XM                           ?^        >JO@      ' 0%@     !JJ
XMJK@     9$1$1@    "JJJJK     0$! 0&    "JJJJJL    1$1$1$8   
XM"JJJJJJP   1 0$! 0@  !JJJJJJJ   )$1$1$1$   JJJJJJJP  $$! 0$!
XM @  :JJJJJJJ  #$1$1$1$4  *JJJJJJJP  @0$! 0$!  "JJJJJJJL  41$
XM1$1$1( !JJJJJJJJ@ $! 0$! 0&  :JJJJJJJH !1$1$1$1$@ &JJJJJJJJ 
XM/X$! 0$! 8! ZJJJJJJJ@( D1$1$1$2  !*JJJJJJP  "\$! 0$!   ,.JJJ
XMJJL   @,1$1$10    .JJJJK     ($! 0(     :JJJJ@     D1$1$    
XM "JJJJP     $0$!"      :JJJH     !1$1%      /JJJH     !!@0% 
XM      #JJH       &1%        *JX        1&         K@        
XM!X         "          (          \         "(         00    
X7     !          $          0    
X 
Xend
END_OF_FILE
if test 744 -ne `wc -c <'icon/Upartlysunny'`; then
    echo shar: \"'icon/Upartlysunny'\" unpacked with wrong size!
fi
# end of 'icon/Upartlysunny'
fi
if test -f 'icon/Urainy' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Urainy'\"
else
echo shar: Extracting \"'icon/Urainy'\" \(738 characters\)
sed "s/^X//" >'icon/Urainy' <<'END_OF_FILE'
Xbegin 644 rainy
XM>GHA("$@5U=75U=75U>JJJJJJJJJJE5555555555JJJJJJJJJJIU=?UU=75U
XM=:JK!JJJJJJJ558#=555556JJ@&*JJJJJE?4 0=75U=7JSP !JJJJJI4#  '
XM55555:@(  "JJJJJ> @  '55=76P    *JJJJE     U]5]5L   ""X:X.I@
XM   (6 6 -Z   !^P P :8$" %5 ! !6Q@( JH(( "EZ P%U @  -JH"CK\" 
XM  I505U804  !:JBJJ!!0  &=5UU0"(@  >JJJK  B  !E55?\ $$  %JJK 
XM0 10  975X @!%  -:JK ! $D  *558   (@$ 6JJ@   < 0!G?V     ! #
XMK \ @   * )P ,"    H Z   (   $@"8  !0   1 /   %   !$ D   D  
XM *(#P  $0 ( H@*   1  @"2 X  "" " $0"@  *( 4 . .  !(0!0   D  
XM%! )  "%P  4$ B  (9D !,0"(  C;@ "" 10 !:6  'P!%  '>H    $D  
XM:E@ 0  (@ !5K !   <" &IT $    ( =:H 0 $ # !J58'@ X T -6JXJ .
XM\>L JE=_6!=?5X%7JJJOZJJJ_JI5555555555:JJJJJJJJJJ=75U=75U=76J
X7JJJJJJJJJE5555555555JJJJJJJJJJI5
X 
Xend
END_OF_FILE
if test 738 -ne `wc -c <'icon/Urainy'`; then
    echo shar: \"'icon/Urainy'\" unpacked with wrong size!
fi
# end of 'icon/Urainy'
fi
if test -f 'icon/Usmallspiff1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Usmallspiff1'\"
else
echo shar: Extracting \"'icon/Usmallspiff1'\" \(534 characters\)
sed "s/^X//" >'icon/Usmallspiff1' <<'END_OF_FILE'
Xbegin 644 smallspiff1
XM>GHA*B!$            .            !8     '^     )     . <    
XM.     ,A@P         ,4D3    V    $%28(        "%(H!   #8   ! 
XMJ X(   :    @U (!   (    0&O_ (       (!__P!   I   " RS, 0  
XM    ! $/_ "  "(   0!+YP @      ( , 0 $  )   "  @: !  "H   @/
XMY @ 0  !   0$3/0P"      $!!?X< @ !(  ! DL!. (      0(,@O "  
XM    $#&G[H @ #(?@! @D ' (   "'@0)+^&X"  , 0'_______@   $/@  
XM    'P B!<  @^(   #@)08  #8T (  &  8   #X     8"/___________
XM+ :JJJJJJJJJN!4!]55555555^ W  _ZJJJJJ_P "@  #_____P  #\     
X&       X
X 
Xend
END_OF_FILE
if test 534 -ne `wc -c <'icon/Usmallspiff1'`; then
    echo shar: \"'icon/Usmallspiff1'\" unpacked with wrong size!
fi
# end of 'icon/Usmallspiff1'
fi
if test -f 'icon/Usphere' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Usphere'\"
else
echo shar: Extracting \"'icon/Usphere'\" \(673 characters\)
sed "s/^X//" >'icon/Usphere' <<'END_OF_FILE'
Xbegin 644 sphere
XM>GH@6B!:___U55___\#___[N[___P/_]U555___ ____JJO__\#_]55555?_
XMP/_^ZHB*[__ _]555555_\#__JH  "O_P/]5555557_ _^Z(   *_\#]5554
XM1%5?P/_ZH    K_ ]U5540%55\#_ZH    "OP/U55$1 15? _[H     +\#U
XM554   55P/[H@     _ _5540  $5<#_Z@     +P/5550   57 _^B     
XM"L#]541   15P/^J      / ]555   "JL#^Z(     5P/U55$  "*K _^H 
XM    !<#U555   *JP/_J@    !7 _5551  (JL#_^J@    %P/]555   JK 
XM_^Z(    %<#]U55$B(JJP/_Z     !? _U5544 JJL#__LB   $?P/_5555$
XMJJO __^J(   5<#_]5555*JKP/_^[HB B2? _]U555555<#___JB"(K_P/_W
XM555555? ___NZHB*[\#__=55555?P/___ZJJJ__ __]555557\#____N[N__
XMP/__W5555=_ _________\#___=555?_P/_________ ____W=W?_\#_____
X4____P/____]____ _________\!5
X 
Xend
END_OF_FILE
if test 673 -ne `wc -c <'icon/Usphere'`; then
    echo shar: \"'icon/Usphere'\" unpacked with wrong size!
fi
# end of 'icon/Usphere'
fi
if test -f 'icon/Ustormy' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Ustormy'\"
else
echo shar: Extracting \"'icon/Ustormy'\" \(739 characters\)
sed "s/^X//" >'icon/Ustormy' <<'END_OF_FILE'
Xbegin 644 stormy
XM>GHA("$@5U=75U=75U>JJJJJJJJJJE5555555555JJJJJJJJJJIU=?UU=75U
XM=:JK!JJJJJJJ558#=555556JJ@&*JJJJJE?4 0=75U=7JSP !JJJJJI4#  '
XM55555:@(  "JJJJJ> @  '55=76P    *JJJJE     U]5]5L   ""X:X.I@
XM   (6 6 -Z   !^P P :8$" %5 ! !6Q@( JH ( "EZ P%U    -JH"CK\  
XM  I505U80   !:JBJJ!    &=5UU0"    >JJJK     !E55?\     %JJK 
XM0     975X @  " -:JK !   ( *558    !@ 6JJ@    , !G?V   " P #
XMK \   &/ ")P ,   7, (Z   ! " 8 B8   ##P!@$/    #X & @D     P
XM ,,#P    !@ W *     # #  X     . & "@   '#, 8 .    #P8!@ D  
XM    P# %P     !@, 9D     # P#;@     &!@:6     ?\&!>H     P 9
XMZE@ 0  !@ S5K !   # #:IT $   &'_5:H 0 $ ,,JJ58'@ X,8U56JXJ .
XMQHQJJE=_6!=]_F=7JJJOZJO@.JI5555557 U5:JJJJJJN?JJ=75U=75\U76J
X7JJJJJJ[JJE5555555]55JJJJJJJKZJI5
X 
Xend
END_OF_FILE
if test 739 -ne `wc -c <'icon/Ustormy'`; then
    echo shar: \"'icon/Ustormy'\" unpacked with wrong size!
fi
# end of 'icon/Ustormy'
fi
if test -f 'icon/Usunny' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Usunny'\"
else
echo shar: Extracting \"'icon/Usunny'\" \(738 characters\)
sed "s/^X//" >'icon/Usunny' <<'END_OF_FILE'
Xbegin 644 sunny
XM>GHA("$@                                                    
XM                           ?^        >JO@      ' 0%@     !JJ
XMJK@     9$1$1@    "JJJJK     0$! 0&    "JJJJJL    1$1$1$8   
XM"JJJJJJP   1 0$! 0@  !JJJJJJJ   )$1$1$1$   JJJJJJJP  $$! 0$!
XM @  :JJJJJJJ  #$1$1$1$4  *JJJJJJJP  @0$! 0$!  "JJJJJJJL  41$
XM1$1$1( !JJJJJJJJ@ $! 0$! 0&  :JJJJJJJH !1$1$1$1$@ &JJJJJJJJ 
XM 0$! 0$! 8 !JJJJJJJJ@ %$1$1$1$2  :JJJJJJJP !@0$! 0$!  "JJJJJ
XMJJL  ,1$1$1$10  JJJJJJJK  #! 0$! 0(  &JJJJJJJ@  9$1$1$1$   J
XMJJJJJJP  #$! 0$!"   &JJJJJJH   ,1$1$1%    :JJJJJH    P$! 0% 
XM   !JJJJJH    #$1$1%     &JJJJX     .0$!&      .JJK@      /D
XM1X       /_X                                                
X7                                
X 
Xend
END_OF_FILE
if test 738 -ne `wc -c <'icon/Usunny'`; then
    echo shar: \"'icon/Usunny'\" unpacked with wrong size!
fi
# end of 'icon/Usunny'
fi
if test -f 'icon/Utty' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Utty'\"
else
echo shar: Extracting \"'icon/Utty'\" \(736 characters\)
sed "s/^X//" >'icon/Utty' <<'END_OF_FILE'
Xbegin 644 tty
XM>GHA("$@ /______   !      "   %______H   O______0  "______] 
XM  +      T   L     #0  "R)W   -   7-I2   Z  !8VE*  !H  %BJ'@
XM  &@  6*K<   :  !8BE2  !H  +B*5@  '0  L(O2   -  "P      T  +
XM      #0  L      -  "P      T  +      #0  L      -  "P      
XMT  +      #0  L      -  "P      T  +@     '0  6      :  !8  
XM   !H  %@     &@  7      :  !<     #H/ "P     -#& +      TP(
XM L     #4 @"______]0" +______V ( 7_____^@ @!      " $ '_____
XM_X 0 #@    < "  .    !P ( '______X @ @      0" "     /Y 0 29
XMF9F8JB! !     )5(( ),S,S-E4?  @     *I  $SF9F9@_B  0       (
XM !________@ (       !  @       $ !________@                 
XM                                                            
X7                                
X 
Xend
END_OF_FILE
if test 736 -ne `wc -c <'icon/Utty'`; then
    echo shar: \"'icon/Utty'\" unpacked with wrong size!
fi
# end of 'icon/Utty'
fi
if test -f 'icon/Uverysunny' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Uverysunny'\"
else
echo shar: Extracting \"'icon/Uverysunny'\" \(742 characters\)
sed "s/^X//" >'icon/Uverysunny' <<'END_OF_FILE'
Xbegin 644 verysunny
XM>GHA("$@     @         %          J         %4         JH   
XM     '_P                   ?^     "J@>JO@    -4' 0%AJ@  JAJJ
XMJKC4  #49$1$1FH  *BJJJJK-   T0$! 0&:  "BJJJJJLP  ,1$1$1$9@  
XMBJJJJJJR   1 0$! 0@  !JJJJJJJ   )$1$1$1$   JJJJJJJP  $$! 0$!
XM @  :JJJJJJJ  #$1$1$1$4  *JJJJJJJP  @0$! 0$!  "JJJJJJJLP!41$
XM1$1$1*@)JJJJJJJJM!4! 0$! 0&J*:JJJJJJJK751$1$1$1$JVFJJJJJJJJV
XM-0$! 0$! :P9JJJJJJJJN U$1$1$1$2P!:JJJJJJJP !@0$! 0$!  "JJJJJ
XMJJL  ,1$1$1$10  JJJJJJJK  #! 0$! 0(  &JJJJJJJ@  9$1$1$1$   J
XMJJJJJJP  #$! 0$!"   &JJJJJJH  ",1$1$1%   4:JJJJJH  !HP$! 0%$
XM  %1JJJJJH@  :C$1$1%%  !5&JJJJXH  &J.0$!&%0  54.JJK@J  !JH/D
XM1X-4  '_ /_X!_P               !JH        #5         &H      
X7   -          8               !J
X 
Xend
END_OF_FILE
if test 742 -ne `wc -c <'icon/Uverysunny'`; then
    echo shar: \"'icon/Uverysunny'\" unpacked with wrong size!
fi
# end of 'icon/Uverysunny'
fi
if test -f 'icon/Uzip' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/Uzip'\"
else
echo shar: Extracting \"'icon/Uzip'\" \(460 characters\)
sed "s/^X//" >'icon/Uzip' <<'END_OF_FILE'
Xbegin 644 zip
XM>GH@4"!4    /\     #__@    /__P    ?__X   !___X   #___X   /_
XM__X   ?___P   ____@  !____   #___^   '_____@ /____ > ?____ A
XM _^'__@&!_@'__AX!X '__V #@ '__X &  '__P $  #__     !_^     #
XM_\     '_X     /_P     ?_P     __P    !_WP    #_G@    '_'@  
XM  /^&@    ?\ ^      !_       !           '_____  '_____  '__
XM___          & P09@  '!PX9@  'CPX9@  'WQL9@  &^QL9@  &<S^9@ 
XM &(S^9@  & W#9_  & V#9_                  '_____  '_____  '__
X#___ 
X 
Xend
END_OF_FILE
if test 460 -ne `wc -c <'icon/Uzip'`; then
    echo shar: \"'icon/Uzip'\" unpacked with wrong size!
fi
# end of 'icon/Uzip'
fi
if test -f 'icon/eye/README2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/eye/README2'\"
else
echo shar: Extracting \"'icon/eye/README2'\" \(398 characters\)
sed "s/^X//" >'icon/eye/README2' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xicons in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'icon/eye/README2'`; then
    echo shar: \"'icon/eye/README2'\" unpacked with wrong size!
fi
# end of 'icon/eye/README2'
fi
if test -f 'icon/grey/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/grey/Makefile'\"
else
echo shar: Extracting \"'icon/grey/Makefile'\" \(689 characters\)
sed "s/^X//" >'icon/grey/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 1.3 88/07/21 14:07:38 sau Exp $
X#	$Source: /tmp/mgrsrc/icon/grey/RCS/Makefile,v $
X
X#	grey icons for mgr
XSTART=.
XICONS= \
X	0 100 15 20 25 33 50 67 75 80 85
X
Xall clean clobber cpio:
X
Xlist:
X	@for i in README Makefile $(ICONS); do \
X		echo "$(START)/$$i"; \
X	 done
END_OF_FILE
if test 689 -ne `wc -c <'icon/grey/Makefile'`; then
    echo shar: \"'icon/grey/Makefile'\" unpacked with wrong size!
fi
# end of 'icon/grey/Makefile'
fi
if test -f 'icon/grey/README2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/grey/README2'\"
else
echo shar: Extracting \"'icon/grey/README2'\" \(398 characters\)
sed "s/^X//" >'icon/grey/README2' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xicons in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'icon/grey/README2'`; then
    echo shar: \"'icon/grey/README2'\" unpacked with wrong size!
fi
# end of 'icon/grey/README2'
fi
if test -f 'icon/mouse/README2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/mouse/README2'\"
else
echo shar: Extracting \"'icon/mouse/README2'\" \(398 characters\)
sed "s/^X//" >'icon/mouse/README2' <<'END_OF_FILE'
XAs distributed on comp.sources.unix (unix-sources), the
Xicons in this directory are uuencode'd.  To unpack them,
Xexecute a script like this:
X
X    /bin/sh, /bin/ksh, etc.
X	for I in U* ; do
X	    uudecode $I
X	    rm $I
X	done
X
X    /bin/csh, /bin/tcsh, etc.
X	foreach I (*.uu)
X	    uudecode $I
X	    rm $I
X	end
X
XYou might want to do the "rm" step in a separate pass after you've
Xdone all the uudecode's.
X
END_OF_FILE
if test 398 -ne `wc -c <'icon/mouse/README2'`; then
    echo shar: \"'icon/mouse/README2'\" unpacked with wrong size!
fi
# end of 'icon/mouse/README2'
fi
if test -f 'icon/mouse/Uhhand1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/mouse/Uhhand1'\"
else
echo shar: Extracting \"'icon/mouse/Uhhand1'\" \(745 characters\)
sed "s/^X//" >'icon/mouse/Uhhand1' <<'END_OF_FILE'
Xbegin 644 hhand1
XM>GHA("$@                                                    
XM                                                            
XM                                            8         "0    
XM     1         "(        '1         B*        " (        & @
XM        )%        !*$        "00        ,"         XP       
XM &<         8         #          ,         !@         &     
XM                                                            
XM                                                            
XM                                                            
XM                                                            
XM                                                            
X7                                
X 
Xend
END_OF_FILE
if test 745 -ne `wc -c <'icon/mouse/Uhhand1'`; then
    echo shar: \"'icon/mouse/Uhhand1'\" unpacked with wrong size!
fi
# end of 'icon/mouse/Uhhand1'
fi
if test -f 'icon/mouse/Uhhand2' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/mouse/Uhhand2'\"
else
echo shar: Extracting \"'icon/mouse/Uhhand2'\" \(745 characters\)
sed "s/^X//" >'icon/mouse/Uhhand2' <<'END_OF_FILE'
Xbegin 644 hhand2
XM>GHA("$@                                                    
XM                                                            
XM                                                            
XM                                                            
XM8        <&0       ")A        (88        8&         @D      
XM  $P0       !P&        ?,$       'F 0      !X$&       & /@  
XM                                                            
XM                                                            
XM                                                            
XM                                                            
XM                                                            
X7                                
X 
Xend
END_OF_FILE
if test 745 -ne `wc -c <'icon/mouse/Uhhand2'`; then
    echo shar: \"'icon/mouse/Uhhand2'\" unpacked with wrong size!
fi
# end of 'icon/mouse/Uhhand2'
fi
if test -f 'icon/mouse/Uhhand3' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/mouse/Uhhand3'\"
else
echo shar: Extracting \"'icon/mouse/Uhhand3'\" \(745 characters\)
sed "s/^X//" >'icon/mouse/Uhhand3' <<'END_OF_FILE'
Xbegin 644 hhand3
XM>GHA("$@                                                    
XM                                                            
XM                                                            
XM                                                            
XM                                         !@         )       
XM   B         !(         8?@       " !      !_[ $      '_@?@ 
XM      "P@        $4         (@         <                    
XM                                                            
XM                                                            
XM                                                            
XM                                                            
X7                                
X 
Xend
END_OF_FILE
if test 745 -ne `wc -c <'icon/mouse/Uhhand3'`; then
    echo shar: \"'icon/mouse/Uhhand3'\" unpacked with wrong size!
fi
# end of 'icon/mouse/Uhhand3'
fi
if test -f 'icon/mouse/Uhhand4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'icon/mouse/Uhhand4'\"
else
echo shar: Extracting \"'icon/mouse/Uhhand4'\" \(745 characters\)
sed "s/^X//" >'icon/mouse/Uhhand4' <<'END_OF_FILE'
Xbegin 644 hhand4
XM>GHA("$@                                                    
XM                                                            
XM                                                            
XM                                                            
XM                                                            
XM                                           !@         '@&   
XM     'BD        'V0        &!         2(        "40        (
XM@@        @!        ! B        $1$        (Z0        <&     
XM                                                            
XM                                                            
XM                                                            
X7                                
X 
Xend
END_OF_FILE
if test 745 -ne `wc -c <'icon/mouse/Uhhand4'`; then
    echo shar: \"'icon/mouse/Uhhand4'\" unpacked with wrong size!
fi
# end of 'icon/mouse/Uhhand4'
fi
if test -f 'misc/mgr.ti' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'misc/mgr.ti'\"
else
echo shar: Extracting \"'misc/mgr.ti'\" \(347 characters\)
sed "s/^X//" >'misc/mgr.ti' <<'END_OF_FILE'
XPx|mgr|SAU mgr teminal emulator,
X	cols#80, lines#24,
X	am, msgr,
X	clear=^L, cr=^M, bel=^G, 
X	cub1=^H, cud1=\Ef, cuf1=\Er, cuu1=\Eu,
X	ind=^J,
X	cup=\E%p2%d;%p1%dM,
X	csr=\E%p1%d;%p2%dt,
X	wind=\E%p2%d;%p2%p4%+%d;%p1;%p1%p3%+%d;t,
X	el=\Ec, ed=\EC,
X	il1=\Ea, dl1=\Ed,
X	il=\E%p1%da, dl=\E%p1%dd,
X	smso=\Ei, rmso=\En,
X	ht=^I,
X	smcup=\E1664P, rmcup=\Et\Ep,
END_OF_FILE
if test 347 -ne `wc -c <'misc/mgr.ti'`; then
    echo shar: \"'misc/mgr.ti'\" unpacked with wrong size!
fi
# end of 'misc/mgr.ti'
fi
if test -f 'src/oblit/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/oblit/README'\"
else
echo shar: Extracting \"'src/oblit/README'\" \(722 characters\)
sed "s/^X//" >'src/oblit/README' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 4.1 88/06/21 13:07:53 bianchi Exp $
X#	$Source: /tmp/mgrsrc/src/oblit/RCS/README,v $
X
Xold 16 bit (i.e. worksd on 680[012]0's) bitblit code
X
X* mem_rop(dst,x_dst,y_dst,w,h,op,src,x_src,y_src) /* bit-blt */
X* bit_line(dst,x,y,op)	/* lines (clipped) */
X* bit_point(dst,x,y,op) /* a point (clipped) */
END_OF_FILE
if test 722 -ne `wc -c <'src/oblit/README'`; then
    echo shar: \"'src/oblit/README'\" unpacked with wrong size!
fi
# end of 'src/oblit/README'
fi
echo shar: End of archive 3 \(of 61\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \
	21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \
	38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \
	55 56 57 58 59 60 61 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 61 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
