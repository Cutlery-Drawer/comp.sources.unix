Subject:  v17i008:  MGR, Bellcore window manager, Part07/61
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET

Submitted-by: Stephen A. Uhler <sau@bellcore.com>
Posting-number: Volume 17, Issue 8
Archive-name: mgr/part07




#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 7 (of 61)."
# Contents:  demo/misc/oclose.c demo/misc/set_emacs.c
#   demo/misc/set_termcap.c demo/msg/do.h demo/plot/Makefile
#   demo/tests/Makefile demo/tests/many.c doc/c_menu.1 doc/ether.1
#   doc/mgrmsgs.1 doc/usrman/abstract font-16/Ucour6x12r
#   font-16/Ucour6x12rI font-16/Ucour6x12ru font-16/Uupside8x12
#   font-32/Ucour6x12r font-32/Ucour6x12rI font-32/Ucour6x12ru
#   font-32/Uupside8x12 misc/Makefile src/blit/README src/border.c
#   src/compile_font.c src/debug_flags.c src/erase_win.c src/font.h
# Wrapped by rsalz@papaya.bbn.com on Thu Nov 17 21:05:02 1988
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'demo/misc/oclose.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/misc/oclose.c'\"
else
echo shar: Extracting \"'demo/misc/oclose.c'\" \(1683 characters\)
sed "s/^X//" >'demo/misc/oclose.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: oclose.c,v 4.2 88/06/22 14:37:55 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/misc/RCS/oclose.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/misc/RCS/oclose.c,v $$Revision: 4.2 $";
X
X/* close a window */
X
X#include <signal.h>
X#include "term.h"
X
X#define POS(x)		800+(x)/18		/* where to put window */
X#define Max(x,y)	((x)>(y)?(x):(y))
X
Xmain(argc,argv)
Xint argc;
Xchar **argv;
X   {
X   char host[16];
X   char *text;
X   char line[2];
X   int x,y,wide,high;
X   int clean();
X   int font;
X
X   /* get icon text */
X
X   if (argc>1) 
X      text = argv[1];
X   else {
X      gethostname(host,sizeof(host));
X      text = host;
X      }
X
X   m_setup(0);
X   m_push(P_ALL);	
X   signal(SIGINT,clean);
X   signal(SIGTERM,clean);
X   m_setevent(ACTIVATED,"A\\n");
X   m_setevent(REDRAW,"R\\n"); 
X
X   get_size(&x,&y,&wide,&high);
X   if (argc>2 && (font=atoi(argv[2])) > 0)
X      m_font(font);
X   m_sizeall(x,POS(y+high/2),Max(strlen(text),5),1);
X   m_setmode(M_NOWRAP);
X   m_setmode(M_BACKGROUND);
X   m_clear();
X   m_printstr(text);
X   m_clearmode(M_ACTIVATE);
X   m_flush();
X
X   while(1) {
X      read(0,line,sizeof(line));
X      m_clear();
X      m_printstr(text);
X      m_flush();
X      if (*line == 'A')
X         clean();
X      }
X   }
Xclean()
X   {
X   m_pop(0);
X   exit(1);
X   }
END_OF_FILE
# end of 'demo/misc/oclose.c'
fi
if test -f 'demo/misc/set_emacs.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/misc/set_emacs.c'\"
else
echo shar: Extracting \"'demo/misc/set_emacs.c'\" \(1780 characters\)
sed "s/^X//" >'demo/misc/set_emacs.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: set_emacs.c,v 4.3 88/06/23 09:40:47 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/misc/RCS/set_emacs.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/misc/RCS/set_emacs.c,v $$Revision: 4.3 $";
X
X/* print the current termcap entry on stdout (for EMACS) */
X
X#include <stdio.h>
X#include "window.h"
X
X#define ENTRY	"\'px|mgr|mgr teminal emulator:am:li#%d:co#%d:bs:cl=^L:ce=\\Ec:cd=\\EC:cm=\\E%%r%%d,%%dM:cs=\\E%%d,%%d%t:ve=\\Et:al=\\Ea:AL=\\E%%da:DL=\\E%%dd:dl=\\Ed:ic=\\EA:dc=\\EE:ta=^I:up=\\Eu:do=\\Ef:nd=\\Er:ku=\\E[A:kd=\\E[B:kr=\\E[C:kl=\\E[D:so=\\Ei:se=\\En:\'"
X
Xmain(argc,argv)
Xint argc;
Xchar **argv;
X   {
X   int b_flag=1;
X   int cols, rows;
X   char *rindex(), *getenv(), *getpass();
X   char *shell = getenv("SHELL");
X   char get[5];
X
X   ckmgrterm( *argv );
X
X   if (argc>1 && strcmp("-b",argv[1])==0)
X      b_flag=0;
X
X   if (shell && rindex(shell,'/'))
X      shell = rindex(shell,'/')+1;
X
X   sprintf(get,"%c%d%c",ESC,G_WINSIZE,E_GETINFO);
X   sscanf(getpass(get),"%d %d\n",&cols,&rows);
X   
X   if (b_flag && shell && strcmp(shell,"csh")==0) {		/* csh */
X      printf("set noglob;");
X      printf("setenv TERMCAP ");
X      printf(ENTRY,rows,cols);
X      printf(";unset noglob\n");
X      }
X   else							/* /bin/sh */
X     {
X      printf("export TERMCAP\n");
X      printf("TERMCAP=");
X      printf(ENTRY,rows,cols);
X      putchar('\n');
X     }
X   } 
END_OF_FILE
# end of 'demo/misc/set_emacs.c'
fi
if test -f 'demo/misc/set_termcap.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/misc/set_termcap.c'\"
else
echo shar: Extracting \"'demo/misc/set_termcap.c'\" \(1744 characters\)
sed "s/^X//" >'demo/misc/set_termcap.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: set_termcap.c,v 4.3 88/06/23 09:10:41 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/misc/RCS/set_termcap.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/misc/RCS/set_termcap.c,v $$Revision: 4.3 $";
X
X/* print the current termcap entry on stdout */
X
X#include <stdio.h>
X#include "window.h"
X
X#define ENTRY	"\'px|mgr|mgr teminal emulator:am:li#%d:co#%d:bs:cl=^L:ce=\\Ec:cd=\\EC:cm=\\E%%r%%d,%%dM:al=\\Ea:dl=\\Ed:ic=\\EA:dc=\\EE:ta=^I:up=\\Eu:do=\\Ef:nd=\\Er:ku=\\E[A:kd=\\E[B:kr=\\E[C:kl=\\E[D:so=\\Ei:se=\\En:vs=\\EV:ve=\\Ev:\'"
X
Xmain(argc,argv)
Xint argc;
Xchar **argv;
X   {
X   int b_flag=1;
X   int cols, rows;
X   char *rindex(), *getenv(), *getpass();
X   char *shell = getenv("SHELL");
X   char get[5];
X
X   ckmgrterm( *argv );
X
X   if (argc>1 && strcmp("-b",argv[1])==0)
X      b_flag=0;
X
X   if (shell && rindex(shell,'/'))
X      shell = rindex(shell,'/')+1;
X
X   sprintf(get,"%c%d%c",ESC,G_WINSIZE,E_GETINFO);
X   sscanf(getpass(get),"%d %d\n",&cols,&rows);
X   
X   if (b_flag && shell && strcmp(shell,"csh")==0) {		/* csh */
X      printf("set noglob;");
X      printf("setenv TERMCAP ");
X      printf(ENTRY,rows,cols);
X      printf(";unset noglob\n");
X      }
X   else							/* /bin/sh */
X     {
X      printf("export TERMCAP\n");
X      printf("TERMCAP=");
X      printf(ENTRY,rows,cols);
X      putchar('\n');
X     }
X   } 
END_OF_FILE
# end of 'demo/misc/set_termcap.c'
fi
if test -f 'demo/msg/do.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/do.h'\"
else
echo shar: Extracting \"'demo/msg/do.h'\" \(1523 characters\)
sed "s/^X//" >'demo/msg/do.h' <<'END_OF_FILE'
X/*	$Header: do.h,v 4.1 88/06/21 14:02:42 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/msg/RCS/do.h,v $
X*/
Xstatic char	h_do_[] = "$Source: /tmp/mgrsrc/demo/msg/RCS/do.h,v $$Revision: 4.1 $";
X
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/* simple server-client message protocol */
X
X/* server messages */
X
X#define S_HI	'H'		/* announce existence  (broadcast)*/
X#define S_BYE	'B'		/* announce demise     (broadcast)*/
X#define S_REPLY	'R'		/* reply to message    (point-to-point) */
X
X/* types of server replies */
X
X#define R_WHO	'?'		/* server identification */
X#define R_RCVD	'r'		/* received command */
X#define R_DO	'.'		/* working on command */
X#define R_DONE	'd'		/* command completed */
X#define R_HOST	'h'		/* rejected, no remote requests accepted */
X#define R_NET	'n'		/* Can't get file for remote request */
X#define R_BAD	'x'		/* command rejected */
X#define R_UNKWN	'u'		/* unknown command */
X
X/* client messages */
X
X#define C_WHO	'?'		/* who is out there  (broadcast) */
X#define C_DO	'F'		/* do 'file' command (next arg is file name) */
X
X#define C_SNARF	'$'		/* use snarf buffer for file name */
X#define HOST	':'		/* file name prefixed with hostname */
END_OF_FILE
# end of 'demo/msg/do.h'
fi
if test -f 'demo/plot/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/plot/Makefile'\"
else
echo shar: Extracting \"'demo/plot/Makefile'\" \(1539 characters\)
sed "s/^X//" >'demo/plot/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 4.1 88/06/21 14:03:05 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/plot/RCS/Makefile,v $
X
XINSROOT=/usr/mgr
XSTART=.
XMGR=../..
XMGRLIB=$(MGR)/lib/libmgr.a
XMGRINCL=$(MGR)/lib
X#
XBIN=$(INSROOT)/bin
XMAN=$(INSROOT)/man
XLIB=$(INSROOT)/lib
XCPIO=plot.cpio
XCFLAGS=	-O -I$(MGRINCL)
XALL=	libmgrplot.a mgrplot 
X
XCFILES= subs.c mgrplot.c
XDOCS= mgrplot.1g
XOTHER= Makefile README plot.ex
X
Xall small:	$(ALL)
X
Xfast:		$(CFILES)
X		cc -c $(CFLAGS) $(CFILES)
X		make all
X
Xlibmgrplot.a:	subs.o $(MGRLIB)
X		ar r libmgrplot.a subs.o
X		ranlib libmgrplot.a
X
Xmgrplot:	mgrplot.o libmgrplot.a $(MGRLIB)
X		cc -o mgrplot  mgrplot.o libmgrplot.a $(MGRLIB) -lm
X
Xinstall smallinstall:	all $(BIN) $(LIB) $(MAN) $(MAN)/man1
X		chmod 755 mgrplot
X		rm -f $(BIN)/mgrplot
X		cp mgrplot $(BIN)
X		rm -f $(LIB)/libmgrplot.a
X		cp libmgrplot.a $(LIB)
X		ranlib $(LIB)/libmgrplot.a
X		cd $(MAN)/man1;  rm -f $(DOCS)
X		cp $(DOCS) $(MAN)/man1
X
X$(BIN) $(LIB) $(MAN) $(MAN)/man1:
X		mkdir $@
X
Xclean:
X		rm -f *.o
X
Xclobber:
X		rm -f $(ALL)
X
Xlist:
X	@for i in $(CFILES) $(HFILES) $(DOCS) $(OTHER); do \
X		echo "$(START)/$$i"; \
X	done	
X
Xcpio:
X	make -s list | cpio -ocv > $(CPIO)
END_OF_FILE
# end of 'demo/plot/Makefile'
fi
if test -f 'demo/tests/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/tests/Makefile'\"
else
echo shar: Extracting \"'demo/tests/Makefile'\" \(1637 characters\)
sed "s/^X//" >'demo/tests/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 4.1 88/06/21 14:02:01 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/tests/RCS/Makefile,v $
X
X# makefile for demo test routines
X
XLIB= ../../lib/libmgr.a
XINCL= -I../../lib
XCPIO=test.cpio
XCFLAGS=-g $(INCL)
XSTART=.
X
XCFILES= test_rop.c test_text.c test_menu.c half.c many.c
X
XALL =	test_rop test_text test_menu half many
X
Xall small:	$(ALL)
X
Xfast:		$(CFILES)
X		cc -c $(CFLAGS) $(CFILES)
X		make all
X
Xtest_menu:	test_menu.o $(LIB)
X		cc $(CFLAGS) -o test_menu test_menu.o $(LIB)
X
Xscale:	scale.o $(LIB)
X		cc $(CFLAGS) -o scale scale.o $(LIB)
X
Xblank:	blank.o $(LIB)
X		cc $(CFLAGS) -o blank blank.o $(LIB)
X
Xcut:	cut.o $(LIB)
X		cc $(CFLAGS) -o cut cut.o $(LIB)
X
Xsnap:	snap.o $(LIB)
X		cc $(CFLAGS) -o snap snap.o $(LIB)
X
Xmany:	many.o $(LIB)
X		cc $(CFLAGS) -o many many.o $(LIB)
X
Xcal:		cal.o $(LIB)
X		cc $(CFLAGS) -o cal cal.o $(LIB)
X
Xhalf:		half.o $(LIB)
X		cc $(CFLAGS) -o half half.o $(LIB)
X
Xtest_rop:	test_rop.o $(LIB)
X		cc $(CFLAGS) -o test_rop test_rop.o $(LIB)
X
Xtest_text:	test_text.o $(LIB)
X		cc $(CFLAGS) -o test_text test_text.o $(LIB)
X
Xclean:
X		rm -f *.o
X
Xclobber:
X		rm -f $(ALL)
X
Xinstall smallinstall:
X
Xlist:
X	@for i in $(CFILES) Makefile; do \
X		echo "$(START)/$$i"; \
X	done
X
Xcpio:
X	make -s list | cpio -ocv > $(CPIO)
END_OF_FILE
# end of 'demo/tests/Makefile'
fi
if test -f 'demo/tests/many.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/tests/many.c'\"
else
echo shar: Extracting \"'demo/tests/many.c'\" \(1627 characters\)
sed "s/^X//" >'demo/tests/many.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: many.c,v 4.1 88/06/21 14:02:06 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/tests/RCS/many.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/tests/RCS/many.c,v $$Revision: 4.1 $";
X
X/* test many windows */
X
X#include <stdio.h>
X#include "term.h"
X
X#define GAP	10
X
Xmain(argc,argv)
Xint argc;
Xchar **argv;
X
X   {
X   int num;
X   int count;
X   int x,y,w,h;
X   int lastx=0, lasty=0;
X   char buff[100];
X   char *sprintf();
X   int offset, foo;
X   register int i;
X   
X   if (argc < 2 || (count=atoi(argv[1])) <=0)
X      count = 5;
X
X   srandom(getpid());
X   m_setup(M_FLUSH);
X   get_size(&x,&y,&w,&h);
X   foo = (w + h)/2;
X
X   for(i=0;i<=count;i++) {
X      offset = random()%foo;
X      x += random()&1 ? offset+GAP : - (offset+GAP);
X      offset = random()%foo;
X      y += random()&1 ? offset+GAP : - (offset+GAP);
X      if (x<8) x=8;
X      if (y<80) y=80;
X      if (x+w > 1140) x = 1140-w;
X      if (y+h > 890) y = 890-w;
X      if (lastx == x || lasty == y) {
X         i--; continue;
X         }
X      lastx = x, lasty = y;
X      num = m_makewindow(x,y,w,h);
X      m_selectwin(num);
X      printf("Window %d\n",num);
X      } 
X   m_selectwin(0);
X   m_setmode(M_ACTIVATE);
X   printf("back to window zero\n");
X   }
END_OF_FILE
# end of 'demo/tests/many.c'
fi
if test -f 'doc/c_menu.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/c_menu.1'\"
else
echo shar: Extracting \"'doc/c_menu.1'\" \(1698 characters\)
sed "s/^X//" >'doc/c_menu.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: c_menu.1,v 1.1 88/07/08 13:43:27 sau Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/c_menu.1,v $
X.TH c_menu 1L "November 15, 1987"
X.SH NAME
XC_MENU \- Turn 
X.B C
Xerror messages into 
X.B vi
Xmenus.
X.SH SYNOPSIS
Xmake -k | c_menu; vi
X.SH DESCRIPTION
XC_menu
Xreads its standard input and looks for lines of the form:
X.RS
X"foo.c", line 19: word undefined.
X.RE
XAll such lines are gathered into a set of menus, one for each 
X.B C
Xfile, that are useful for locating the errors in the source files using
Xthe
X.I vi
Xedittor.
X.LP
XThe main menu contains the names of the 
X.B C
Xfiles with errors, selecting a file causes that file to be editted.
XSliding off to the right of the
X.I "file name"
Xmenu
Xpops up a list of error messages.
XSelecting an error message while in 
X.I vi
Xcauses 
X.I vi
Xto move its cursor to the line containing the error.
X.LP
XThe most common way to use 
X.I c_menu
Xis with the
X.B MGR
X.I cut
Xand
X.I paste
Xfacility.
XAfter running a
X.I make
Xor
X.I cc
Xthat produces 
X.B C
Xerror messages,
Xsimply 
X.I cut
Xthe error messages, type
X.B c_menu;vi ,
X.I paste
Xthe errors into
X.I c_menu ,
Xthen key
X.I CNTL d.
X.SH SEE ALSO
Xmgr(1L)
Xmenu(1L)
X.SH BUGS
XAfter adding or deleting lines from the file,
X.I c_menu 's
Xnotion of which line contains the error is incorrect.
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/c_menu.1'
fi
if test -f 'doc/ether.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/ether.1'\"
else
echo shar: Extracting \"'doc/ether.1'\" \(1612 characters\)
sed "s/^X//" >'doc/ether.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: ether.1,v 4.1 88/06/21 13:51:30 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/ether.1,v $
X.TH ether 1L "April 30, 1985"
X.SH NAME
Xether \- Display a strip chart of network traffic.
X.SH SYNOPSIS
X.B ether
X[ \fB\-f<freq>\fP ]
X[ \fB\-m<max>\fP ]
X.SH DESCRIPTION
X.B Ether
Xis a graphical version of
X.I netstat
Xthat runs on
X.I mgr
Xterminals.
X.B Ether,
Xdisplays the number of input packet, 
Xoutput packets, and collisions on the first network interface reported by
X.I netstat.
X.LP
XThe following options are recognized on the command line:
X.TP
X.B \-f<freq>
XThe display is updated every
X.I freq
Xseconds, instead of the default 3 seconds.
X.TP
X.B -m<max>
Xspecifies the maximum number of packets counted per update.
XThe default is 15.
X.SH "SEE ALSO"
Xmgr(1L)
Xnetstat(1)
X.SH DIAGNOSTICS
X.TP
XWindow is not wide enough
XMake the window wider and the graph will continue.
X.TP
XWindow is not high enough
XMake the window taller and the graph will continue.
X.SH BUGS
XIf the window is reshaped,
X.I ether
Xrequires up to
X.B freq
X(usually 3)
Xseconds to learn about the new window size.
X.LP
X.I Ether
Xcalls
X.I netstat(1) and assumes a particular output format from it
X(i.e. 4.2 BSD).
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/ether.1'
fi
if test -f 'doc/mgrmsgs.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/mgrmsgs.1'\"
else
echo shar: Extracting \"'doc/mgrmsgs.1'\" \(1782 characters\)
sed "s/^X//" >'doc/mgrmsgs.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: mgrmsgs.1,v 4.1 88/06/21 13:51:54 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/mgrmsgs.1,v $
X.TH mgrmsgs 1L "April 30, 1985"
X.SH NAME
Xmgrmsgs \- message arrival notification
X.SH SYNOPSIS
X.B mgrmsgs
X[ \fB\-s\fP ]
X[ \fB\-x\fP<pos> ]
X[ \fB\-y\fP<pos> ]
X[ \fB\-f\fP<font> ]
X[ \fB\-p\fP<poll> ]
X.SH DESCRIPTION
X.I Mgrmsgs
Xlooks for, and announces the arrival of new
X.B msgs.
XWhen initially invoked,
X.I mgrmsgs
Xshrinks its window to the single line
Xdisplaying the number of pending messages.
XWhen new messages arrive,
X.B mgrmsgs
Xrings the bell, and updates the current message count.
XIf the 
X.I mgrmsgs
Xwindow is activated when messages are pending,
Xusually by clicking on it with the mouse,
XIt changes to a larger window with 
X.I msgs
Xrunning in it.
X.LP
XWhile in the 
X.I msgs
Xwindow, the middle mouse button activates a menu of commonly
Xused msgs commands.
X.LP
X.B Mgrmsgs
Xrecognizes the following command line flags:
X.TP 
X-s
XDon't reshape the window upon 
X.B mgrmsgs
Xinvocation.
X.TP 
X-x<pos>
XStarting x-coordinate of 
X.I msgs
Xwindow.
X.TP 
X-y<pos>
XStarting y-coordinate of 
X.I msgs
Xwindow.
X.TP 
X-f<font_number>
XFont to use for
X.I msgs
Xwindow.
X.TP 
X-p<poll interval>
XLook for new messages every
X.I poll interval
Xseconds (defaults to 60).
X.SH FILES
X.TP 
X.B /usr/spool/msgs/bounds
X.TP 
X.B $HOME/.msgsrc
X.SH SEE ALSO
Xmsgs(1)
Xmgr(1L)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/mgrmsgs.1'
fi
if test -f 'doc/usrman/abstract' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/usrman/abstract'\"
else
echo shar: Extracting \"'doc/usrman/abstract'\" \(1635 characters\)
sed "s/^X//" >'doc/usrman/abstract' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: abstract,v 4.1 88/06/29 17:04:37 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/usrman/RCS/abstract,v $
X.RP
X.TL
X\*M - C Language Application Interface
X.AU
XStephen A. Uhler
X.AI
XBell Communications Research
X.AB
X\*M 
X(\fBm\fPana\fBg\fPe\fBr\fP)
Xis a window system for Unix that currently runs on Sun Workstations.
X\*M manages asynchronous updates of overlapping windows
Xand provides application support for a heterogeneous network
Xenvironment, i.e.,
Xmany different types of computers connected by various 
Xcommunications media.
XThe application interface enables applications (called client programs) to be
Xwritten in a variety of programming languages, and run on different
Xoperating systems.
XThe client program can take full 
Xadvantage of the windowing capabilities 
Xregardless of the
Xtype of connection to the workstation running \*M.
XThis document describes the
XC interface library for \*M
Xwhich provides a set of macros and functions that
Ximplement the stream protocol.
XThis library provides client programs written in
X.B C
Xwith a function call interface to \*M.
XThe library provides the lowest level access to \*M functions
Xand represents a one to one mapping to the underlying stream protocol.
X.AE
X.LP
END_OF_FILE
# end of 'doc/usrman/abstract'
fi
if test -f 'font-16/Ucour6x12r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ucour6x12r'\"
else
echo shar: Extracting \"'font-16/Ucour6x12r'\" \(1726 characters\)
sed "s/^X//" >'font-16/Ucour6x12r' <<'END_OF_FILE'
Xbegin 644 cour6x12r.fnt
XM%@8,!(8          __..                           "0     !    
XM                                       .0<                  
XM           &$8           .....   ?_..           ...... ? $**
XM$(&"$(     !,$,,">&>,,     ,&,>/>??/[?/;<QS.>.>/?[[[;[?(0$  
XM( P & & P$$8<       (      ($$ X         .....   __..       
XM    ...... _ $**/4("$($    "2,22&0(222  " 02)$)1)))12$"*(199
XM)9)15211*11(($$ ( 0 " ( 0  ($       (      ($$)D         ...
XM..   ?_..           ...... ? $*?15($($5$   "2$2"*00"22,,$ ("
XM3,)0)((02$",(;91)1)0$211**"(($* $,<,.,(-<<<)$JL,L-;.>V;[;[>(
XM$$5X         .....   __..           ...... _ $ *0*$ ($.$   $
XM2$",*<<$,2,,(>$$5*.0)..0>$",(;51)1),$2*5$*$($$1  "2222>22$$*
XM$52222-2(2*1*22($$2H         .....   ?_..           ...... ?
XM $ *.$+ ($5? ? $2$$"2"2$2.  0 "(5*)0)((32$"*(551.1."$2*5$$((
XM$$   .202>(22$$,$52222(((2*5$*$0 " D         .....   __..   
XM        ...... _   ?!*2 ($$$   (2$(2?"2(2"  (>$(2>)0)((12$2*
XM(531(1*!$2***$0("$   22020(22$$*$52222($(2*5$,(($$ &        
XM .....   ?_..           ...... ?   *152 ($ $, ,(2$22"22(2$,,
XM$ ( (2)1))(12$2))133(1)1$2$**$1("$   22222(22$$*$52222(2(2$*
XM*$2($$ )         .....   __..           ...... _ $ *>%- $(  
XM, ,0,.>,',,(,8,," 0('S>.>?<.[?,;?QQ.<.9>.,$*;.?(!$   -L,-,>.
XM[?$9?5[,<.<<&-$*;(>($$ )         .....   ?_..           ....
XM.. ?    $"  $(  $  0           $                     $      
XM   (!$         "  $     0"       ( ($$ )         .....   __.
XM.           ...... _        "0  (              (            
XM         +         . < ?       <  8     X'       < &$8 &    
XM     .....   ?_..           ...... ?                        
XM                                                            
X/                    
X 
Xend
END_OF_FILE
# end of 'font-16/Ucour6x12r'
fi
if test -f 'font-16/Ucour6x12rI' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ucour6x12rI'\"
else
echo shar: Extracting \"'font-16/Ucour6x12rI'\" \(1727 characters\)
sed "s/^X//" >'font-16/Ucour6x12rI' <<'END_OF_FILE'
Xbegin 644 cour6x12rI.fnt
XM%@8,!(8 _________  QQ__________________  _______]O_____^____
XM_______________________________________QOC__________________
XM___________Y[G________  _QQQQQ___@ QQ___________QQQQQQ_? [UU
XM[WY][W_____^S[SS]AYASS_____SYSAPA@@P$@PDC.,QAQAP@$$$D$@WO[__
XMW_/_Y_Y_/[[GC_______W______W[[_'______  _QQQQQ___  QQ_______
XM____QQQQQQ__ [UUPKW][W[____]MSMMYOWMMM__]_OMV[VNVVVNM[]UWNFF
XMVFVNJMNNUNNWW[[_W_O_]_W_O__W[_______W______W[[V;______  _QQQ
XMQQ___@ QQ___________QQQQQQ_? [U@NJW[W[J[___]M[M]UOO]MMSS[_W]
XMLSVOVWWOM[]SWDFNVNVO[MNNUU]WW[U_[SCSQSWRCCCV[53S3RDQA)D$D$AW
XM[[J'______  _QQQQQ___  QQ___________QQQQQQ__ [_UOU[_W[Q[___[
XMM[]SUCC[SMSSWA[[JUQOVQQOA[]SWDJNVNVS[MUJ[U[W[[N__]MMMMAMM[[U
XM[JMMMMRMWMUNUMMW[[M7______  _QQQQQ___@ QQ___________QQQQQQ_?
XM [_UQ[T_W[J@_@_[M[[]M]M[MQ__O_]WJUVOVWWLM[]UWJJNQNQ][MUJ[[WW
XM[[___QMOMAWMM[[S[JMMMMWWWMUJ[U[O_]_;______  _QQQQQ___  QQ___
XM________QQQQQQ__ __@^UM_W[[[___WM[WM@]MWM]__WA[WMAVOVWWNM[MU
XMWJLNWNU^[MUUU[OW][___MMOMOWMM[[U[JMMMMW[WMUJ[SWW[[_Y______  
XM_QQQQQ___@ QQ___________QQQQQQ_? __UNJM_W[_[S_SWM[MM]MMWM[SS
XM[_W_WMVNVVWNM[MVVNLLWNVN[M[UU[NW][___MMMMMWMM[[U[JMMMMWMWM[U
XMU[MW[[_V______  _QQQQQ___  QQ___________QQQQQQ__ [_UAZR_[W__
XMS_SOSQASXSSWSGSS]_OWX,AQA@CQ$@SD@..QCQFAQS[UDQ@W^[___R3SRSAQ
XM$@[F@J$SCQCCYR[UDWAW[[_V______  _QQQQQ___@ QQ___________QQQQ
XMQQ_? ___[]__[W__[__O___________[_____________________[______
XM___W^[_________]__[_____O]_______W_W[[_V______  _QQQQQ___  Q
XMQ___________QQQQQQ__ _______]O__W______________W____________
XM_________T_________Q_C_@_______C__G_____'X_______C_Y[G_Y____
XM__  _QQQQQ___@ QQ___________QQQQQQ_? _______________________
XM____________________________________________________________
X/__________________  
X 
Xend
END_OF_FILE
# end of 'font-16/Ucour6x12rI'
fi
if test -f 'font-16/Ucour6x12ru' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ucour6x12ru'\"
else
echo shar: Extracting \"'font-16/Ucour6x12ru'\" \(1727 characters\)
sed "s/^X//" >'font-16/Ucour6x12ru' <<'END_OF_FILE'
Xbegin 644 cour6x12ru.fnt
XM%@8,!(8          __..                           "0     !    
XM                                       .0<                  
XM           &$8           .....   ?_..           ...... ? $**
XM$(&"$(     !,$,,">&>,,     ,&,>/>??/[?/;<QS.>.>/?[[[;[?(0$  
XM( P & & P$$8<       (      ($$ X         .....   __..       
XM    ...... _ $**/4("$($    "2,22&0(222  " 02)$)1)))12$"*(199
XM)9)15211*11(($$ ( 0 " ( 0  ($       (      ($$)D         ...
XM..   ?_..           ...... ? $*?15($($5$   "2$2"*00"22,,$ ("
XM3,)0)((02$",(;91)1)0$211**"(($* $,<,.,(-<<<)$JL,L-;.>V;[;[>(
XM$$5X         .....   __..           ...... _ $ *0*$ ($.$   $
XM2$",*<<$,2,,(>$$5*.0)..0>$",(;51)1),$2*5$*$($$1  "2222>22$$*
XM$52222-2(2*1*22($$2H         .....   ?_..           ...... ?
XM $ *.$+ ($5? ? $2$$"2"2$2.  0 "(5*)0)((32$"*(551.1."$2*5$$((
XM$$   .202>(22$$,$52222(((2*5$*$0 " D         .....   __..   
XM        ...... _   ?!*2 ($$$   (2$(2?"2(2"  (>$(2>)0)((12$2*
XM(531(1*!$2***$0("$   22020(22$$*$52222($(2*5$,(($$ &        
XM .....   ?_..           ...... ?   *152 ($ $, ,(2$22"22(2$,,
XM$ ( (2)1))(12$2))133(1)1$2$**$1("$   22222(22$$*$52222(2(2$*
XM*$2($$ )         .....   __..           ...... _ $ *>%- $(  
XM, ,0,.>,',,(,8,," 0('S>.>?<.[?,;?QQ.<.9>.,$*;.?(!$   -L,-,>.
XM[?$9?5[,<.<<&-$*;(>($$ )         .....   ?_..           ....
XM.. ?    $"  $(  $  0           $                     $      
XM   (!$         "  $     0"       ( ($$ )        ?????????__?
XM???????????????????_ ???????????????????????????????????????
XM????????????????????????????????????????_???????????????????
XM??   .....   ?_..           ...... ?                        
XM                                                            
X/                    
X 
Xend
END_OF_FILE
# end of 'font-16/Ucour6x12ru'
fi
if test -f 'font-16/Uupside8x12' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Uupside8x12'\"
else
echo shar: Extracting \"'font-16/Uupside8x12'\" \(1627 characters\)
sed "s/^X//" >'font-16/Uupside8x12' <<'END_OF_FILE'
Xbegin 644 upside8x12.fnt
XM%@@, & @                                                    
XM                                                            
XM                      0         "                   !       
XM                     $                  ?P        0>   ,    
XM   !( $        #          @ * XR;@ ("   $  ( AX^/QX0'AX('AX 
XM"!  ! 0\01\<#S\!+"$^'B$_02$> 2XA'@ >""(A"#\>(!X    N'1XN'@0A
XM(1 2(0A!(1X!( $>&"X,-B($/A@(#     @ *!52$0 $$   $  ( B$( 2$0
XM(2$((2$(" @ " !"02$B$0$!,B$((2$!03$A 1$A(00A""HA" $"(!     1
XM(R$Q(00!(1 0$0A!(2$=+@$A)#$,22((( 0($       %!54$0 $$  (&   
XM!"$( B$_(2$((0$(# 0 $ 0!02$A(0$!(2$((1$!23$A 2D1(00A%#X2" ("
XM$!     1(0$A 00=(1 0"0A)(2$C,0$@!"$22104$ 0($     @ /A1D*0 "
XM( @(    !",(!" 1("$$(1\   (_( 0M/B$!(0$!(2$( 1$!22DA 241( 0A
XM%"H2" 0"$!     >(0$A/P0C(1 0!0A)(2$A(0$>!"$220@2" 0($     @ 
XM%!0(2@ "("H^ #X ""4("" 2("$$(2$   $ 0 A5(B$!(0$!.2$( 0D!22DA
XM'R$)$ 0A%"H,% 0""!!!   0(0$A(00A(Q 0"PA)(2$A(0$!!"$2210B! 0(
XM$     @ "@X(!  "(!P(    ""D($!P2(2$"'B$(" (_(!!5(A\!(1\? 3\(
XM 0<!524A(2$?# 0A(BH,% @""! B   1(R$Q(00A'1P<$0A)(R$C,1,A!"$A
XM02(A @(((     @ 'P43#  "("H(    $#$((" 4'Q\"(2$(" 0 $"!9%!$!
XM(0$! 2$( 04!524A(2$A @0A(DD2(@@"!! 4 ! .'1XN'A\C 0  (0AW'1X=
XM+@T>'R$A02(A/@0($!D9  @4"A45$@@$$ @     $"$*(2$4 @$!(2$   @ 
XM""%!%!$A(0$!(2$( 0D!52,A(2$A(00A(DD2(A "!! (  @  0 @  0= 1 0
XM 0@         !         0($"TM  @4!14E$@@$$       ("$,(2$8 B$!
XM(2$  !  !"$B"!$B$0$!(B$( 1$!8R,A(2$A(00A04$A02 " A    0  0 @
XM "0  1 0 0@         !         0($"8F  @4!0X^# @("       (!X(
XM'AX8/AX_'AX      !X<" \<#S\_'"$^#R$!8R$>'QX?'C\A04$A03\> AX 
XA  (  0 @ !@  0   0X         !        !@(#   
X 
Xend
END_OF_FILE
# end of 'font-16/Uupside8x12'
fi
if test -f 'font-32/Ucour6x12r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ucour6x12r'\"
else
echo shar: Extracting \"'font-32/Ucour6x12r'\" \(1758 characters\)
sed "s/^X//" >'font-32/Ucour6x12r' <<'END_OF_FILE'
Xbegin 644 cour6x12r.fnt
XM& 8,!(8          __..                           "0     !    
XM                                       .0<                  
XM           &$8              XXXXX  !_\XX           XXXXXX!\ 
XM0HH0@8(0@     $P0PP)X9XPP     P8QX]Y]\_M\]MS',YXYX]_OOMOM\A 
XM0  @#  8 8# 01AP       @      @00#@           #CCCC@  /_SC@ 
XM         #CCCCC@/P!"BCU" A"!     DC$DAD"$DD@  @$$B1"422244A 
XMBB$66262454D42D42"!! " $  @" $  "!       "      "!!"9       
XM     .....   ?_..           ...... ? $*?15($($5$   "2$2"*00"
XM22,,$ ("3,)0)((02$",(;91)1)0$211**"(($* $,<,.,(-<<<)$JL,L-;.
XM>V;[;[>($$5X            XXXXX  #_\XX           XXXXXX#\ 0 I 
XMH0 @0X0   1(0(PIQP0Q(PPAX014HY DXY!X0(PAM5$E$DP1(I40H0@01$  
XM)))))Y)(00H15)))(U(A(I$I)(@01*@           #CCCC@  '_SC@     
XM     #CCCCC@'P! "CA"P"!%7P'P!$A! D@DA$C@ $  B%2B4"2"$TA BB%5
XM43D3@A$BE1!""!!   #DD$GB$DA!#!%4DDDB""$BE1"A$  @)           
XM .....   __..           ...... _   ?!*2 ($$$   (2$(2?"2(2"  
XM(>$(2>)0)((12$2*(531(1*!$2***$0("$   22020(22$$*$52222($(2*5
XM$,(($$ &            XXXXX  !_\XX           XXXXXX!\   I%5( @
XM0 0P PA(1)())(A(0PP0 @ A(E$DDA%(1(DE%-,A$E$1(0HH1$@(0  !))))
XM(A)(00H15)))(A(A(0HH1(@00 D           #CCCC@  /_SC@         
XM #CCCCC@/P! "GA30!"  # #$##GC!S#"#&## @$"!\WCGGW#NWS&W\<3G#F
XM7CC!"FSGR 1   #;##3'CNWQ&7U>S'#G'!C1"FR'B!! "0           ...
XM..   ?_..           ...... ?    $"  $(  $  0           $    
XM                 $         (!$         "  $     0"       ( (
XM$$ )            XXXXX  #_\XX           XXXXXX#\        )   @
XM              @                     L         X!P!\      !P 
XM!@    #@<      !P 81@ 8           #CCCC@  '_SC@          #CC
XMCCC@'P                                                      
XG                                                    
X 
Xend
END_OF_FILE
# end of 'font-32/Ucour6x12r'
fi
if test -f 'font-32/Ucour6x12rI' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ucour6x12rI'\"
else
echo shar: Extracting \"'font-32/Ucour6x12rI'\" \(1759 characters\)
sed "s/^X//" >'font-32/Ucour6x12rI' <<'END_OF_FILE'
Xbegin 644 cour6x12rI.fnt
XM& 8,!(8 _________  QQ__________________  _______]O_____^____
XM_______________________________________QOC__________________
XM___________Y[G________    #_'''''__^ #''___________'''''']\#
XMO77O?GWO?_____[/O//V'F'//_____/G.'"&"# 2#"2,XS&'&'" 00202#>_
XMO__?\__G_G\_ON>/_______?______?OO\?_____\    /\<<<<?__P ,<?_
XM_________\<<<<<?_P.]=<*]_>]^_____;<[;>;][;;?__?[[=N]KMMMKK>_
XM==[IIMIMKJK;KM;KM]^^_]_[__?]_[__]^_______]______]^^]F______P
XM    _QQQQQ___@ QQ___________QQQQQQ_? [U@NJW[W[J[___]M[M]UOO]
XMMMSS[_W]LSVOVWWOM[]SWDFNVNVO[MNNUU]WW[U_[SCSQSWRCCCV[53S3RDQ
XMA)D$D$AW[[J'______    #_'''''__\ #''___________''''''_\#O_6_
XM7O_?O'O___NWOW/6./O.W//>'ONK7&_;'&^'OW/>2J[:[;/NW6KO7O?ON[__
XMVVVVV&VWOO7NJVVVW*W>W6[6VW?ONU?_____\    /\<<<<?__X ,<?_____
XM_____\<<<<<?WP._]<>]/]^ZH/X/^[>^_;?;>[<?_[__=ZM=K]M][+>_==ZJ
XMKL;L?>[=:N^]]^^___\;;[8=[;>^\^ZK;;;=]][=:N]>[__?V______P    
XM_QQQQQ___  QQ___________QQQQQQ__ __@^UM_W[[[___WM[WM@]MWM]__
XMWA[WMAVOVWWNM[MUWJLNWNU^[MUUU[OW][___MMOMOWMM[[U[JMMMMW[WMUJ
XM[SWW[[_Y______    #_'''''__^ #''___________'''''']\#__6ZJW_?
XMO_O/_/>WNVWVVW>WO//O_?_>W:[;;>ZWNW;:ZRS>[:[NWO77N[?WO__^VVVV
XMW>VWOO7NJVVVW>W>WO77NW?OO_;_____\    /\<<<<?__P ,<?_________
XM_\<<<<<?_P._]8>LO^]__\_\[\\8<^,\]\Y\\_?[]^#(<88(\1(,Y(#CL8\9
XMH<<^]9,8-_N___\D\\LX<1(.YH*A,X\8X^<N]9-X=^^_]O_____P    _QQQ
XMQQ___@ QQ___________QQQQQQ_? ___[]__[W__[__O___________[____
XM_________________[_________W^[_________]__[_____O]_______W_W
XM[[_V______    #_'''''__\ #''___________''''''_\#_______V___?
XM______________?_____________________3_________'^/^#______^/_
XM^?____\?C______^/_GN?_G_____\    /\<<<<?__X ,<?__________\<<
XM<<<?WP/_____________________________________________________
XG_______________________________________________P    
X 
Xend
END_OF_FILE
# end of 'font-32/Ucour6x12rI'
fi
if test -f 'font-32/Ucour6x12ru' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ucour6x12ru'\"
else
echo shar: Extracting \"'font-32/Ucour6x12ru'\" \(1759 characters\)
sed "s/^X//" >'font-32/Ucour6x12ru' <<'END_OF_FILE'
Xbegin 644 cour6x12ru.fnt
XM& 8,!(8          __..                           "0     !    
XM                                       .0<                  
XM           &$8              XXXXX  !_\XX           XXXXXX!\ 
XM0HH0@8(0@     $P0PP)X9XPP     P8QX]Y]\_M\]MS',YXYX]_OOMOM\A 
XM0  @#  8 8# 01AP       @      @00#@           #CCCC@  /_SC@ 
XM         #CCCCC@/P!"BCU" A"!     DC$DAD"$DD@  @$$B1"422244A 
XMBB$66262454D42D42"!! " $  @" $  "!       "      "!!"9       
XM     .....   ?_..           ...... ? $*?15($($5$   "2$2"*00"
XM22,,$ ("3,)0)((02$",(;91)1)0$211**"(($* $,<,.,(-<<<)$JL,L-;.
XM>V;[;[>($$5X            XXXXX  #_\XX           XXXXXX#\ 0 I 
XMH0 @0X0   1(0(PIQP0Q(PPAX014HY DXY!X0(PAM5$E$DP1(I40H0@01$  
XM)))))Y)(00H15)))(U(A(I$I)(@01*@           #CCCC@  '_SC@     
XM     #CCCCC@'P! "CA"P"!%7P'P!$A! D@DA$C@ $  B%2B4"2"$TA BB%5
XM43D3@A$BE1!""!!   #DD$GB$DA!#!%4DDDB""$BE1"A$  @)           
XM .....   __..           ...... _   ?!*2 ($$$   (2$(2?"2(2"  
XM(>$(2>)0)((12$2*(531(1*!$2***$0("$   22020(22$$*$52222($(2*5
XM$,(($$ &            XXXXX  !_\XX           XXXXXX!\   I%5( @
XM0 0P PA(1)())(A(0PP0 @ A(E$DDA%(1(DE%-,A$E$1(0HH1$@(0  !))))
XM(A)(00H15)))(A(A(0HH1(@00 D           #CCCC@  /_SC@         
XM #CCCCC@/P! "GA30!"  # #$##GC!S#"#&## @$"!\WCGGW#NWS&W\<3G#F
XM7CC!"FSGR 1   #;##3'CNWQ&7U>S'#G'!C1"FR'B!! "0           ...
XM..   ?_..           ...... ?    $"  $(  $  0           $    
XM                 $         (!$         "  $     0"       ( (
XM$$ )          !]]]]]]]]__]]]]]]]]]]]]]]]]]]]]_\!]]]]]]]]]]]]
XM]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
XM]]]]]]_]]]]]]]]]]]]]]]]]]]]]\     #CCCC@  '_SC@          #CC
XMCCC@'P                                                      
XG                                                    
X 
Xend
END_OF_FILE
# end of 'font-32/Ucour6x12ru'
fi
if test -f 'font-32/Uupside8x12' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Uupside8x12'\"
else
echo shar: Extracting \"'font-32/Uupside8x12'\" \(1627 characters\)
sed "s/^X//" >'font-32/Uupside8x12' <<'END_OF_FILE'
Xbegin 644 upside8x12.fnt
XM& @, & @                                                    
XM                                                            
XM                      0         "                   !       
XM                     $                  ?P        0>   ,    
XM   !( $        #          @ * XR;@ ("   $  ( AX^/QX0'AX('AX 
XM"!  ! 0\01\<#S\!+"$^'B$_02$> 2XA'@ >""(A"#\>(!X    N'1XN'@0A
XM(1 2(0A!(1X!( $>&"X,-B($/A@(#     @ *!52$0 $$   $  ( B$( 2$0
XM(2$((2$(" @ " !"02$B$0$!,B$((2$!03$A 1$A(00A""HA" $"(!     1
XM(R$Q(00!(1 0$0A!(2$=+@$A)#$,22((( 0($       %!54$0 $$  (&   
XM!"$( B$_(2$((0$(# 0 $ 0!02$A(0$!(2$((1$!23$A 2D1(00A%#X2" ("
XM$!     1(0$A 00=(1 0"0A)(2$C,0$@!"$22104$ 0($     @ /A1D*0 "
XM( @(    !",(!" 1("$$(1\   (_( 0M/B$!(0$!(2$( 1$!22DA 241( 0A
XM%"H2" 0"$!     >(0$A/P0C(1 0!0A)(2$A(0$>!"$220@2" 0($     @ 
XM%!0(2@ "("H^ #X ""4("" 2("$$(2$   $ 0 A5(B$!(0$!.2$( 0D!22DA
XM'R$)$ 0A%"H,% 0""!!!   0(0$A(00A(Q 0"PA)(2$A(0$!!"$2210B! 0(
XM$     @ "@X(!  "(!P(    ""D($!P2(2$"'B$(" (_(!!5(A\!(1\? 3\(
XM 0<!524A(2$?# 0A(BH,% @""! B   1(R$Q(00A'1P<$0A)(R$C,1,A!"$A
XM02(A @(((     @ 'P43#  "("H(    $#$((" 4'Q\"(2$(" 0 $"!9%!$!
XM(0$! 2$( 04!524A(2$A @0A(DD2(@@"!! 4 ! .'1XN'A\C 0  (0AW'1X=
XM+@T>'R$A02(A/@0($!D9  @4"A45$@@$$ @     $"$*(2$4 @$!(2$   @ 
XM""%!%!$A(0$!(2$( 0D!52,A(2$A(00A(DD2(A "!! (  @  0 @  0= 1 0
XM 0@         !         0($"TM  @4!14E$@@$$       ("$,(2$8 B$!
XM(2$  !  !"$B"!$B$0$!(B$( 1$!8R,A(2$A(00A04$A02 " A    0  0 @
XM "0  1 0 0@         !         0($"8F  @4!0X^# @("       (!X(
XM'AX8/AX_'AX      !X<" \<#S\_'"$^#R$!8R$>'QX?'C\A04$A03\> AX 
XA  (  0 @ !@  0   0X         !        !@(#   
X 
Xend
END_OF_FILE
# end of 'font-32/Uupside8x12'
fi
if test -f 'misc/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'misc/Makefile'\"
else
echo shar: Extracting \"'misc/Makefile'\" \(1598 characters\)
sed "s/^X//" >'misc/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 4.1 88/08/24 15:53:38 bianchi Exp $
X#	$Source: /tmp/mgrsrc/misc/RCS/Makefile,v $
X
X# utilities stuff for mgr
X
XINCL = ../lib
XOTHER = Makefile README cshrc login map mgr.ti mgrc plot termcap tree.out mgrc
XSTART=.
XCPIO=util.cpio
XCFLAGS = -O -I$(INCL)
XUTIL_BIN = /usr/local/bin
XMANDIR = $(UTIL_BIN)/../man
XMGR=../src
X
XCFILES = lasergrafix.c tjfilter.c getscreen.c rotate.c hp_raster.c
XALL = lasergrafix tjfilter getscreen rotate hp_raster
XOTHER = README Makefile mgr.ti termcap map plot tree.out
X
Xall:	$(ALL)
X
X
Xgetscreen:	getscreen.o 
X		cc $(CFLAGS) -o getscreen getscreen.o
X
Xlasergrafix:	lasergrafix.o $(MGR)/bitmaphead.o
X		cc $(CFLAGS) -o lasergrafix lasergrafix.o $(MGR)/bitmaphead.o
X
Xrotate:		rotate.o $(MGR)/bitmaphead.o
X		cc $(CFLAGS) -o rotate rotate.o $(MGR)/bitmaphead.o
X
Xtjfilter:	tjfilter.o $(MGR)/bitmaphead.o
X		cc $(CFLAGS) -o tjfilter tjfilter.o $(MGR)/bitmaphead.o
X
Xhp_raster:	hp_raster.o 
X		cc $(CFLAGS) -o hp_raster hp_raster.o
X
Xinstall:
X
Xclean:	
X		-rm -f *.o core
Xclobber:
X		-rm -f $(ALL)
X
Xlist:
X	@for i in ${HFILES} ${CFILES} ${OTHER}; do \
X	 echo "${START}/$$i"; \
X	done	
X
Xcpio:
X	make -s list | cpio -ov > ${CPIO}
X
X.PHONY:	install clean clobber list cpio
END_OF_FILE
# end of 'misc/Makefile'
fi
if test -f 'src/blit/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/blit/README'\"
else
echo shar: Extracting \"'src/blit/README'\" \(1678 characters\)
sed "s/^X//" >'src/blit/README' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 4.1 88/06/21 13:14:24 bianchi Exp $
X#	$Source: /tmp/mgrsrc/src/blit/RCS/README,v $
X
XThis is the 68020 bit-blit code using bit field instructions.  The 3
Xsource files are:
X
X* blit.C		for bit-blts
X* line.C		for lines
X* pixel.C	for bliting 'points'
X
XStrategy:
XThis is an attempt to build *fast* 68020 specific bit-blit code in an
Xoperating environment independent fashion. Although the bit-blit code is
Xwritten in a combination of C and assembler, the compiler and assembler
Xspecific parts are parameterized.
X
X* The files m4.h and asm.h contain the assembler specific syntax for the 
X  required asms.  It would be nice to do this all with cpp, but cpp won't
X  do the substitutions inside quoted strings.
X
X* sym - The SYMbolic asm processor permits the reference to C register
X  variables from within asm statements.  Thus the C compiler is free to
X  assign registers as it wishes.  Sym filters the "cc -S -g" output
X  replacing the symbolic names from the asm's with the proper register
X  names by interpreting the symbol table entries grenerated by -g.
X  Sym is symbol table entry specific.
X
X* The result asm file is run through the optimizer, which doesn't
X  do much, especially as it things all memory references have side-effects.
X
X
XStephen A. Uhler
X
END_OF_FILE
# end of 'src/blit/README'
fi
if test -f 'src/border.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/border.c'\"
else
echo shar: Extracting \"'src/border.c'\" \(1598 characters\)
sed "s/^X//" >'src/border.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: border.c,v 4.1 88/06/21 13:21:16 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/border.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/border.c,v $$Revision: 4.1 $";
X/* draw a border around a window  */
X
X#include "bitmap.h"
X#include "defs.h"
X
Xborder(win,b,w)
XWINDOW  *win;			/* window */
Xint b, w;			/* black width, white width */
X   {
X	register int clr,set;
X	register BITMAP *bdr;
X
X#ifdef COLOR
X	clr = BIT_SRC | (W(background)&~NOCOLOR);
X	set = BIT_SRC ^ BIT_DST | (W(background)^W(style))&~NOCOLOR;
X#else
X   clr = BIT_CLR;
X   set = BIT_SET;
X#endif
X
X	if (W(flags)&W_ACTIVE)
X		bdr = W(border);
X	else
X		bdr = W(save);
X
X   bit_blit(bdr,0,0,BIT_WIDE(bdr),(b+w),clr,NULL_DATA,0,0);
X   bit_blit(bdr,BIT_WIDE(bdr)-(b+w),0,(b+w),BIT_HIGH(bdr),clr,NULL_DATA,0,0);
X   bit_blit(bdr,0,BIT_HIGH(bdr)-(b+w),BIT_WIDE(bdr),(b+w),clr,NULL_DATA,0,0);
X   bit_blit(bdr,0,0,(b+w),BIT_HIGH(bdr),clr,NULL_DATA,0,0);
X
X   bit_blit(bdr,b,0,BIT_WIDE(bdr)-2*b,b,set,NULL_DATA,0,0);
X   bit_blit(bdr,BIT_WIDE(bdr)-b,0,b,BIT_HIGH(bdr),set,NULL_DATA,0,0);
X   bit_blit(bdr,b,BIT_HIGH(bdr)-b,BIT_WIDE(bdr)-2*b,b,set,NULL_DATA,0,0);
X   bit_blit(bdr,0,0,b,BIT_HIGH(bdr),set,NULL_DATA,0,0);
X   }
END_OF_FILE
# end of 'src/border.c'
fi
if test -f 'src/compile_font.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/compile_font.c'\"
else
echo shar: Extracting \"'src/compile_font.c'\" \(1783 characters\)
sed "s/^X//" >'src/compile_font.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: compile_font.c,v 4.1 88/06/21 13:21:20 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/compile_font.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/compile_font.c,v $$Revision: 4.1 $";
X
X
X/* font routines */
X
X#include <stdio.h>
X#include "bitmap.h"
X#include "font.h"
X
X/**************************************************************************
X *
X *	compile a font file 
X */
X
Xmain(argc,argv)
Xint argc;
Xchar **argv;
X   {
X   struct font_header head;
X   int sum=0;
X   int size;
X   unsigned short buff;
X
X   if (read(0,&head,HEADER_SIZE) != HEADER_SIZE) {
X      exit(1);
X      }
X
X   if (head.type != FONT_A) {
X      exit(2);
X      }
X                               
X   printf("/* static font file */\n\n");
X
X   printf("struct font_header %s_head = {\n",argv[1]);
X   printf("\t(char) %d, (char) %d, (char) %d,\n",
X          head.type, head.wide, head.high);
X   printf("\t(char) %d, (char) %d, (char) %d\n",
X          head.baseline, head.count, head.start);
X   printf("\t};\n\n");
X
X   printf("short %s_image[] = {\n\t",argv[1]);
X
X   size = (((head.count*head.wide)+15l)&~0xf)*head.high/8;
X   while(sum<size) {
X      sum += read(0,&buff,2);
X      printf("0x%04x,%s",buff,sum%16?" ":"\n\t");
X      }
X   printf("\n\t};\n\n");
X   printf("bit_static(%s,%d,%d,%s_image,1);\n",
X           argv[1],head.wide*head.count,head.high,argv[1]);
X
X      
X   exit(0);
X   }
END_OF_FILE
# end of 'src/compile_font.c'
fi
if test -f 'src/debug_flags.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/debug_flags.c'\"
else
echo shar: Extracting \"'src/debug_flags.c'\" \(1553 characters\)
sed "s/^X//" >'src/debug_flags.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: debug_flags.c,v 4.1 88/06/21 13:21:30 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/debug_flags.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/debug_flags.c,v $$Revision: 4.1 $";
X
X/* Debug flags	(the duplicates are unfortunate) */
X
Xchar *debug_flags[] = {
X	"*	fetching and saving bitmaps",
X	"A	Window alignment",
X	"B	creating and destroying bitmaps",
X	"B	setting bit-blit functions",
X	"B	button transitions",
X	"C	Cut/paste info",
X	"E	setting and clearing window modes",
X	"F	Calls to fastscroll",
X	"M	menu downloads",
X	"N	creating/destroying client windows",
X	"P	Pushing/popping environments",
X	"l	Select polling",
X	"S	Startup file operation",
X	"U	obscured window updates",
X	"b	keyboard meta-key operation",
X	"c	message events",
X	"d	window destruction",
X	"e	event handling",
X	"f	font management",
X	"i	requests for info",
X	"m	menu calling",
X	"n	new window creation",
X	"o	spacial window ordering/covering",
X	"p	data read from program destined for a window",
X	"s	shell creation",
X	"u	window space de-allocation",
X	"w	calls to put_window",
X	"y	yank/put buffer operation",
X	"y	saving bitmaps to files",
X	(char *) 0
X	};
END_OF_FILE
# end of 'src/debug_flags.c'
fi
if test -f 'src/erase_win.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/erase_win.c'\"
else
echo shar: Extracting \"'src/erase_win.c'\" \(1755 characters\)
sed "s/^X//" >'src/erase_win.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: erase_win.c,v 4.1 88/06/21 13:21:56 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/erase_win.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/erase_win.c,v $$Revision: 4.1 $";
X/* erase a pixrect to background pattern */
X
X#include "bitmap.h"
X#include "defs.h"
X#include <stdio.h>		/* temp */
X
Xerase_win(map)
XBITMAP *map;			/* bit map to erase */
X   {
X   Bit_pattern(map,0,0,BIT_WIDE(map),BIT_HIGH(map),
X              BIT_SRC|GETCOLOR(12),&pattern);
X   }
X
X/* fill DST bitmap with SRC, preserving alignment */
X
XBit_pattern(dst,dx,dy,wide,high,func,src,d1,d2)
Xregister BITMAP *dst,*src;
Xregister int dx,dy;
Xint wide,high;
Xint func;
Xint d1,d2;		/* unused */
X   {
X   register int incr;
X   register int sw = BIT_WIDE(src);
X   register int sh = BIT_HIGH(src);
X   int x = BIT_X(dst) + dx;
X   int y = BIT_Y(dst) + dy;
X   int xdel = x % sw;
X   int ydel = y % sh;
X   int de;
X
X   dx -= xdel, wide += xdel;
X   de=dx+wide;
X
X   /* get partial strip */
X
X   if (ydel) {
X      for(incr=dx;incr<de;incr+=sw)
X         bit_blit(dst,incr,dy-ydel,sw,sh,func,src,0,0);
X      dy += sh-ydel;
X      }
X
X   /* get 1st strip */
X
X   for(incr=dx;incr<de;incr+=sw)
X      bit_blit(dst,incr,dy,sw,sh,func,src,0,0);
X
X   /* get the rest */
X
X   de = dy+high;
X   for(incr=dy+sh;incr<de;incr+=sh,sh<<1)
X      bit_blit(dst,dx,incr,wide,sh,func,dst,dx,dy);
X   }
END_OF_FILE
# end of 'src/erase_win.c'
fi
if test -f 'src/font.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/font.h'\"
else
echo shar: Extracting \"'src/font.h'\" \(1743 characters\)
sed "s/^X//" >'src/font.h' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: font.h,v 4.1 88/06/21 13:22:03 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/font.h,v $
X*/
Xstatic char	h_font_[] = "$Source: /tmp/mgrsrc/src/RCS/font.h,v $$Revision: 4.1 $";
X
X/* Constant spaced font format */
X
X#ifdef ALIGN32
X#define FONT_A			'\030'	/* fixed width fonts 32 bit alignment*/
X#else
X#define FONT_A			'\026'	/* fixed width fonts 16 bit alignment*/
X#endif
X#define FONT_S			'\027'	/* proportional fonts (not used yet) */
X
Xstruct font_header {
X   unsigned char type;		/* font type */
X   unsigned char wide;		/* character width */
X   unsigned char high;		/* char height */
X   unsigned char baseline;	/* pixels from bottom */
X   unsigned char count;		/* number of chars in font */
X   char          start;		/* starting char in font */
X   };
X
X#define H_SIZE	499		/* size of hash table for cut/paste */
X
Xstruct entry {
X   unsigned char value;		/* character at this location */
X   struct entry *next;		/* pntr to next char */
X   };
X
X#define	MAXGLYPHS	256
X
Xstruct font {
X   struct font_header head;	/* font header */
X   BITMAP *data;		/* all the glyphs strung together */
X   BITMAP *glyph[MAXGLYPHS];	/* pointers to individual glyphs */
X   short ident;			/* font id */
X   struct entry **table;	/* pointer to hash table for cut/paste */
X   };
X
X#define HEADER_SIZE	sizeof(struct font_header)
X
Xstruct font *open_font();
END_OF_FILE
# end of 'src/font.h'
fi
echo shar: End of archive 7 \(of 61\).
cp /dev/null ark7isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \
	21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \
	38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \
	55 56 57 58 59 60 61 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 61 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
