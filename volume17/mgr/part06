Subject:  v17i007:  MGR, Bellcore window manager, Part06/61
Newsgroups: comp.sources.unix
Approved: rsalz@uunet.UU.NET

Submitted-by: Stephen A. Uhler <sau@bellcore.com>
Posting-number: Volume 17, Issue 7
Archive-name: mgr/part06




#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 6 (of 61)."
# Contents:  demo/Makefile demo/misc/grid.c demo/msg/Makefile
#   demo/plot/mgrplot.1g demo/sh/c_menu demo/sh/loadfont
#   demo/tests/test_text.c doc/cut.1 doc/font.5 doc/rotate.1
#   doc/set_colormap.1 doc/set_termcap.1 doc/show.1 doc/tjfilter.1
#   doc/usrman/README doc/usrman/croff/hash.h font-16/Ugal7x11r
#   font-16/Ugal7x11rI font-16/Ugal7x11ru font-32/Ugal7x11r
#   font-32/Ugal7x11rI font-32/Ugal7x11ru lib/ckmgrterm.c
#   lib/restart.h src/Write.c src/blit/hash.h src/blit/pixel.C
#   src/move.c src/move_box.c src/oblit/Makefile src/oblit/pixel.c
# Wrapped by rsalz@papaya.bbn.com on Thu Nov 17 21:04:59 1988
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'demo/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/Makefile'\"
else
echo shar: Extracting \"'demo/Makefile'\" \(1359 characters\)
sed "s/^X//" >'demo/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 4.6 88/08/22 10:20:28 sau Exp $
X#	$Source: /tmp/mgrsrc/demo/RCS/Makefile,v $
X
XSUBDIR= icon mac misc msg plot sh tests 
XINSROOT=/usr/mgr
XINSDIR = $(INSROOT)/bin
XSTART=.
XMAKE=make
XCPIO=demo.cpio
X
Xall small fast:
X	for i in ${SUBDIR}; do \
X	(cd $$i; echo "	making demo/$$i";\
X 	 $(MAKE)  OTHERLIB=$(OTHERLIB) INSROOT=${INSROOT} INSDIR=${INSDIR} $@;\
X	 cd ..);\
X	done	
X
Xinstall smallinstall:
X	for i in ${SUBDIR}; do \
X	(cd $$i; echo "	$@ing demo/$$i";\
X 	 $(MAKE)  OTHERLIB=$(OTHERLIB) INSROOT=${INSROOT} INSDIR=${INSDIR} $@;\
X	 cd ..);\
X	done	
X
Xclean clobber:
X	-for i in ${SUBDIR}; do \
X	(cd $$i; echo "	$@ing demo/$$i";\
X 	 $(MAKE)  INSROOT=${INSROOT} INSDIR=${INSDIR} $@;\
X	 cd ..);\
X	done	
X
Xlist:
X	@echo ${START}/Makefile
X	@echo ${START}/README
X	@for i in ${SUBDIR}; do \
X		echo "${START}/$$i";\
X		if [ -d $$i ]; then \
X	 		(cd $$i; $(MAKE) START=${START}/$$i list; cd ..);\
X		fi \
X	done	
X
Xcpio:
X	make -s list | cpio -ocv > ${CPIO}
END_OF_FILE
# end of 'demo/Makefile'
fi
if test -f 'demo/misc/grid.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/misc/grid.c'\"
else
echo shar: Extracting \"'demo/misc/grid.c'\" \(1270 characters\)
sed "s/^X//" >'demo/misc/grid.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: grid.c,v 4.2 88/05/31 13:22:40 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/misc/RCS/grid.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/misc/RCS/grid.c,v $$Revision: 4.2 $";
X
X/*	grid.c  - draw a grid of lines */
X
X#include "term.h"
X#include <signal.h>
X
Xstatic
Xclean( i )
Xint	i;
X{
X	m_pop(0);
X	exit(i);
X}
X
X
Xmain(argc,argv)
X	int argc;
X	char *argv[];
X{
X	int x,y,i,j;
X	int xmax,ymax,dummy;
X
X	ckmgrterm( *argv );
X
X	if (argc >= 2) {
X		x = atoi(argv[1]);
X		y = atoi(argv[2]);
X		}
X	else {
X		x = 10;
X		y = 10;
X		}
X
X	if (x<2)
X		x = 10;
X
X	if (y<2)
X		y = 10;
X
X	m_setup(0);
X	get_size(&dummy,&dummy,&xmax,&ymax);
X	signal(SIGTERM,clean);
X	signal(SIGINT,clean);
X	signal(SIGHUP,clean);
X	m_clear();
X	m_push(P_FLAGS);
X	m_setmode(M_ABS);
X
X	m_func(B_SET);
X	for(i=0;i<xmax;i+=x)
X		m_line(i,0,i,ymax);
X	for(i=0;i<ymax;i+=y)
X		m_line(0,i,xmax,i);
X	clean(0);
X}
END_OF_FILE
chmod +x 'demo/misc/grid.c'
# end of 'demo/misc/grid.c'
fi
if test -f 'demo/msg/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/msg/Makefile'\"
else
echo shar: Extracting \"'demo/msg/Makefile'\" \(1488 characters\)
sed "s/^X//" >'demo/msg/Makefile' <<'END_OF_FILE'
X#	$Header: Makefile,v 4.2 88/08/29 07:47:35 sau Exp $
X#	$Source: /tmp/mgrsrc/demo/msg/RCS/Makefile,v $
X
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X# makefile for message passing demo test routines
X
XSTART= .
XLIB= ../../lib/libmgr.a
XINCL= ../../lib
XCFLAGS=-g -I$(INCL)
X
XCFILES= do.c client.c send.c menus.c
XHFILES=	do.h
XOTHER=  Makefile README start do_file do_ls do_more do_vi 
X
XALL =	do client menus send alias
X
Xall small:	$(ALL)
X
Xfast:		$(CFILES)
X		cc -c $(CFLAGS) $(CFILES)
X		make all
X
Xclient.o do.o:	do.h $(INCL)/term.h
X
Xclient:		client.o $(LIB)
X		cc $(CFLAGS) -o client client.o $(LIB)
X
Xdo:		do.o $(LIB)
X		cc $(CFLAGS) -o do do.o $(LIB)
X
Xmenus:		menus.o $(LIB)
X		cc $(CFLAGS) -o menus menus.o $(LIB)
X
Xsend:		send.o $(LIB)
X		cc $(CFLAGS) -o send send.o $(LIB)
X
Xalias:
X		echo "alias cd 'chdir \!*;menus \`pwd\`'" >  alias
X		echo "echo '^[1,9esend %w\r'"		     >> alias
X		echo "set path=(`pwd` \$$path)"		     >> alias
X
Xclean:		
X		rm -f *.o
X
Xclobber:		
X		rm -f $(ALL)
X
Xinstall smallinstall:
X
Xlist:
X		@for i in ${CFILES} ${HFILES} ${OTHER}; do \
X	 		echo "${START}/$$i"; \
X		done	
X
Xcpio:
X		make -s list | cpio -ocv > ${CPIO}
END_OF_FILE
# end of 'demo/msg/Makefile'
fi
if test -f 'demo/plot/mgrplot.1g' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/plot/mgrplot.1g'\"
else
echo shar: Extracting \"'demo/plot/mgrplot.1g'\" \(1408 characters\)
sed "s/^X//" >'demo/plot/mgrplot.1g' <<'END_OF_FILE'
X#                        Copyright (c) 1987 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: mgrplot.1g,v 4.1 88/06/21 14:03:10 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/plot/RCS/mgrplot.1g,v $
X
X.TH MGRPLOT 1G "August 21, 1987"
X.AT 3
X.SH NAME
Xmgrplot \- \fBplot\fP graphics filter for an 
X.I MGR
Xterminal.
X.SH SYNOPSIS
X.B mgrplot < 
X.I plot_file
X.SH DESCRIPTION
XThis command reads plotting instructions (see
X.IR  plot (5))
Xfrom the standard input and
Xproduces plotting instructions suitable for an 
X.I MGR
Xwindow
Xon its standard output.
XSeveral options may be passed to 
X.B mgrplot
Xthrough the environment variables:
X.TP
XMAX_X"
XThe maximum 
X.I X
Xvalue will not exeed
X.I MAX_X,
Xwhich defaults to 999.
X.TP
XMAX_Y"
XThe maximum 
X.I Y
Xvalue will not exeed
X.I MAX_Y,
Xwhich defaults to 999.
X.TP
XWINDOW_ID"
XSwitch to alternate window
X.I
Xwindow_id
Xbefore starting plot, then switch back to the primary window upon
Xcompletion.
X.TP
XPAUSE"
XWait for the user to key
X.I RETURN
Xafter each plot.
X.TP
XDEBUG"
XPrint debugging information on
X.I stderr.
X.SH "SEE ALSO"
Xplot(3X), plot(3F), plot(5), mgr(1L)
END_OF_FILE
# end of 'demo/plot/mgrplot.1g'
fi
if test -f 'demo/sh/c_menu' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/c_menu'\"
else
echo shar: Extracting \"'demo/sh/c_menu'\" \(1463 characters\)
sed "s/^X//" >'demo/sh/c_menu' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: c_menu,v 1.1 88/07/07 14:34:11 sau Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/c_menu,v $
X
X
X#	filter cc error messages into mgr menus
X
X#	look for error messages of the form:
X#	"foo.c", line 19: word undefined
X
Xsed -n -e 's/^"\([^"]*\)", line \([0-9]*\): \(.*\)/\1@\2@\3/p' | \
X
X#	turn the error message into menus
X
Xawk -F@ '
XBEGIN	{	SEP="^E"	# menu field seperator
X		ESC="^["	# mgr escape char
X		MAX=15		# max errors per file
X		}
X
X	{ if (file == $1 && i++ <= MAX) {	# at error to current file name
X		item[menu] = item[menu] SEP $3 
X		action[menu] = action[menu] SEP $2 "G"
X		}
X	else if (file != $1) {			# get new file name
X		menu++;  i=0;  file=$1
X		main_item=main_item $1 SEP
X		main_action=main_action ":n " $1 "\\r" SEP
X		}
X	}
X
XEND	{	text = SEP main_item main_action
X		printf "%s%d,%dm%s",ESC,1,length(text),text	# main menu
X		for(i=1;i<=menu;i++) {
X			text=item[i] action[i] SEP
X			printf "%s%d,%dm%s",ESC,i+1,length(text),text # errors
X			printf "%s%d,%d,%d,15m",ESC,1,i-1,i+1	# menu links
X			}
X		printf "%s1m",ESC		# select menu
X	}
X'
END_OF_FILE
chmod +x 'demo/sh/c_menu'
# end of 'demo/sh/c_menu'
fi
if test -f 'demo/sh/loadfont' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/sh/loadfont'\"
else
echo shar: Extracting \"'demo/sh/loadfont'\" \(1457 characters\)
sed "s/^X//" >'demo/sh/loadfont' <<'END_OF_FILE'
X#!/bin/sh
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: loadfont,v 4.1 88/06/21 14:01:31 bianchi Exp $
X#	$Source: /tmp/mgrsrc/demo/sh/RCS/loadfont,v $
X
X#	load a font by name into a give position
X
Xusage="Usage:  `basename $0` [ -c ] font-name font-number
XLoad the given font-name into the given font number
X-c	Make the given font the current font.
X"
X
XESC=^[
X
Xif /bin/test $TERM != mgr
Xthen
X	echo "$0 only works on mgr terminals"
X	exit 1
Xfi
X
Xtrap 'exit' 1 2 15
Xtrap 'stty echo' 0
X
Xstty -echo
X
Xcurrent=
Xwhile [ -n "$1" ]
Xdo
X	case $1 in
X	-c )
X		current=yes
X		;;
X	-* )
X		echo >&2 "$0:  Illegal option argument.  '$1'"
X		echo >&2 "${usage}"
X		exit 255
X		;;
X	* )
X		break
X	esac
X	shift
Xdone
X
Xif [ $# -lt 2 ]
Xthen
X	echo >&2 "${usage}"
X	exit 255
Xfi
X
Xfontname=$1
Xshift
X
Xfontnumber=$1
X
Xcase "${fontnumber}" in
X[1-9] | [1-9][0-9] )
X	;;
X* )
X	echo >&2 "$0:  font number '${fontnumber}' invalid.  Must be between
X	1 through 99."
X	echo >&2 "${usage}"
X	exit 1
Xesac
X
Xlen=`expr length ${fontname}`
Xecho "${ESC}${fontnumber},${len}F${fontname}"
Xif [ "${current}" = yes ]
Xthen
X	echo "${ESC}${fontnumber}F"
Xfi
END_OF_FILE
chmod +x 'demo/sh/loadfont'
# end of 'demo/sh/loadfont'
fi
if test -f 'demo/tests/test_text.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'demo/tests/test_text.c'\"
else
echo shar: Extracting \"'demo/tests/test_text.c'\" \(1305 characters\)
sed "s/^X//" >'demo/tests/test_text.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: test_text.c,v 4.1 88/06/21 14:02:11 bianchi Exp $
X	$Source: /tmp/mgrsrc/demo/tests/RCS/test_text.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/demo/tests/RCS/test_text.c,v $$Revision: 4.1 $";
X
X/* test vector drawn text routines */
X
X#include "term.h"
X
X#define SIZE	500
X#define FONTS	5
X
Xmain(argc,argv)
Xchar **argv;
X   {
X   register int font;
X   register int angle;
X
X   char buff[256];
X
X   if (argc<2) {
X      fprintf(stderr,"usage: %s <text>\n",*argv);
X      exit(1);   
X      }
X
X   if (*argv[1] != ' ') {
X      strcpy(buff,"  ");
X      strcat(buff,argv[1]);
X      }
X   else
X      strcpy(buff,argv[1]);
X
X   m_setup(M_DEBUG);
X   m_func(B_SET);
X   for(font=0;font<FONTS;font++) {
X      m_clear();
X      for(angle = 0;angle<360;angle +=30)
X         text(buff,500,500,font,angle,SIZE/strlen(buff),SIZE/strlen(buff));
X      m_flush();
X      sleep(3);
X      }
X   exit(0);
X   }
END_OF_FILE
# end of 'demo/tests/test_text.c'
fi
if test -f 'doc/cut.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/cut.1'\"
else
echo shar: Extracting \"'doc/cut.1'\" \(1512 characters\)
sed "s/^X//" >'doc/cut.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: cut.1,v 1.1 88/07/08 13:37:10 sau Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/cut.1,v $
X.TH cut 1L "January 30, 1988"
X.SH NAME
Xcut \- cut text from a
X.I MGR
Xwindow and send it to a program.
X.SH SYNOPSIS
X.B cut 
X[ \fB-s\fP ]
X[ \fBcommand\fP ]
X.SH DESCRIPTION
XCut watches the global 
X.I MGR
Xcut buffer and when activated, reads the buffer and starts
X.B <command>
Xwith the contents of the buffer as
X.B <command>'s
Xstandard input.
X.LP
XInitially,
X.I cut
Xprompts the user for a spot on the display, moves there and becomes
Xa closed file cabinet icon.
XAny time text is cut to to
X.I MGR 's
Xglobal buffer, 
X.I cut
Xhighlights the file cabinet to indicate it has seen the cut text.
X.I Cut
Xprepends the current date, time and message size to the text sent to 
X.B <command>.
X.LP
XIf 
X.B \-s
Xis specified, 
X.B cut
Xdoes not prompt the user for a spot, but uses the window as is.
XThis is useful for starting cut from the 
X.I MGR
Xstartup file.
XIf no
X.B command
Xis given, 
X.B cut 
Xlooks for the command in the environment variable
X.B CUT .
X.SH BUGS
X.SH SEE ALSO
Xmgr(1L)
Xsnap(1L)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/cut.1'
fi
if test -f 'doc/font.5' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/font.5'\"
else
echo shar: Extracting \"'doc/font.5'\" \(1343 characters\)
sed "s/^X//" >'doc/font.5' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: font.5,v 4.1 88/06/21 13:51:34 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/font.5,v $
X.TH bitmap 5L "April 30, 1986"
X.SH NAME
XFont \- font file format for 
X.I mgr
Xbitmaps.
X.SH SYNOPSIS
X#include "font.h"
X.SH DESCRIPTION
X.B MGR
Xfont files consist of a font header followed by the bitmap data for each character.
XThe header format is:
X.RS
X.nf
X
Xstruct font_header {
X	unsigned char type;		/* font type (magic number) '^v' */
X	unsigned char wide;		/* character width (pixels) */
X	unsigned char high;		/* char height (pixels) */
X	unsigned char baseline;	/* pixels from bottom of glyph */
X	unsigned char count;	/* number of chars in font */
X	char start;			/* starting char in font */
X   };
X
X.fi
X.RE
XAll of the characters in the font are are stored in a single bitmap,
X.I wide
Xx
X.I count
Xpixels wide,
Xand
X.I high
Xpixels high.
X.SH BUGS
XOnly fixes width fonts are currently supported.
X.SH SEE ALSO
Xmgr(1L)
Xbitmap(5L)
END_OF_FILE
# end of 'doc/font.5'
fi
if test -f 'doc/rotate.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/rotate.1'\"
else
echo shar: Extracting \"'doc/rotate.1'\" \(1327 characters\)
sed "s/^X//" >'doc/rotate.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: rotate.1,v 4.1 88/06/21 13:52:01 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/rotate.1,v $
X.TH rotate 1L "June 30, 1986"
X.SH NAME
Xrotate \- Rotate a bitmap 90 degrees.
X.SH SYNOPSIS
X.B Rotate
X[ \fB\-w wide \-h high\fP ]
X[ \fB\-x\fP ]
X[ \fB\-v\fP ]
X.SH DESCRIPTION
X.B Rotate
Xis a filter that rotates a 1 bit deep bitmap clockwise by 90 degrees.
XNormally
X.B rotate
Xexpects a bitmap in 
X.I mgr
Xformat which uses a bitmap header to specify the width and height.
XAlternately, the
X.B -w
Xand
X.B -h
Xflags may be used to indicate the bitmap 
X.I width
Xand
X.I height
Xif no bitmap header is present.
XIf 
X.B -x
Xis specified, no bitmap header will be produced for the resultant
Xbitmap.
XThe 
X.B -v
Xflags prints 
X.B <'s
Xand
X.B >'s
Xto help stave off boredom while
X.B rotate
Xis running.
X.SH BUGS
X.B Rotate
Xcan't currently rotate bitmaps with more than 1200 rows.
X.SH SEE ALSO
Xbitmap(5L)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/rotate.1'
fi
if test -f 'doc/set_colormap.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/set_colormap.1'\"
else
echo shar: Extracting \"'doc/set_colormap.1'\" \(1247 characters\)
sed "s/^X//" >'doc/set_colormap.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: set_colormap.1,v 4.1 88/06/29 14:06:19 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/set_colormap.1,v $
X.TH set_colormap 1L "November 15, 1987"
X.SH NAME
Xset_colormap \- initialize colormap entries suitable for 
X.B MGR .
X.SH SYNOPSIS
Xset_colormap
X.SH DESCRIPTION
X.B Set_colormap
Xinitializes the first and last 24 colormap entries suitably for color 
X.B MGR .
XThe first 8 colors are set to
Xwhite, black, red, green, blue, yellow, cyan, and magenta.
XThe second 8 colors are 
X.I dark
Xversions of the first 8 colors, whereas the third 8 colors are
X.I bright
Xversions of the first 8 colors.
XThe last 24 colors are set to the inverse of the first 24 colors.
X.SH SEE ALSO
Xmgr(1L)
Xoverlay(1L)
X.SH BUGS
X.B Set_colormap
Xis Sun specific, and no provision is made to set the remainder of the
Xcolormap.
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/set_colormap.1'
fi
if test -f 'doc/set_termcap.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/set_termcap.1'\"
else
echo shar: Extracting \"'doc/set_termcap.1'\" \(1458 characters\)
sed "s/^X//" >'doc/set_termcap.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: set_termcap.1,v 4.1 88/06/21 13:52:03 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/set_termcap.1,v $
X.TH Set_termcap 1L "April 30, 1985"
X.SH NAME
Xset_termcap, set_emacs \- set an appropriate
X.B TERMCAP
Xentry for
X.B MGR.
X.SH SYNOPSIS
Xeval `\fBset_termcap \fP[\fB -b \fP]`
X.SH DESCRIPTION
X.B Set_termcap
XPrints on 
X.I stdout
Xthe
X.I shell
Xcommands required to set the
X.B TERMCAP
Xenvironment variable appropriately for the current window size on a
X.I mgr
Xterminal.
X.I Set_termcap
Xlooks at the
X.B SHELL
Xenvironment variable to decide what shell commands are appropriate.
Xthe command
X.B eval `set_termcap`
Xsets the TERM and TERMCAP environment variables appropriately.
X.LP
X.I Set_emacs
Xoptimizes the termcap entry for
X.B GNU-emacs,
Xwhich knows how to 
Xdeal with scrolling regions and multiple line inserts and deletes,
Xwhereas
X.I set_termcap
Xkeeps 
X.B vi
Xhappy.
X.SH BUGS
X.B csh
Xusrs need to use:
X.B set noglob; eval `set_termcap`
Xto keep the shell from getting confused.
X.SH SEE ALSO
Xcsh(1)
Xmgr(1L)
Xsh(1)
X.SH AUTHOR
XS. A. Uhler
END_OF_FILE
# end of 'doc/set_termcap.1'
fi
if test -f 'doc/show.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/show.1'\"
else
echo shar: Extracting \"'doc/show.1'\" \(1411 characters\)
sed "s/^X//" >'doc/show.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: show.1,v 4.1 88/06/21 13:52:07 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/show.1,v $
X.TH show 1L "April 30, 1985"
X.SH NAME
Xshow \- displays a bit-mapped image on a
X.I mgr
Xwindow.
X.SH SYNOPSIS
X.B show
X[\fB\-r\fP]
X[ \fB<x coord>\fP ]
X[ \fB<y coord>\fP ]
X[\fB<bits wide>\fP]
X.SH DESCRIPTION
X.B Show
Xcopies its standard input, which is assumed to be in
X.I MGR bitmap format
Xto the
Xwindow as a bit mapped image.
XThe starting position of the bit map relative to the top left
Xcorner of the window may be given as
X.I x coord
Xand
X.I y coord
Xrespectively.
XIf
X.I bits wide
Xis specified on the command line,
X.B show
Xassumes no bitmap header is present.
XSpecifying
X.B \-r
Xchanges the sense of black and white.
X.LP
XBit maps too big to fit on the window are clipped.
XThe incoming data for each row should be rounded up to an
Xeven number of bytes.  The bits are displayed left to right,
Xthen top to bottom.
X.SH BUGS
XLarge bit maps take too long to display.
X.SH SEE ALSO
Xmgr(1L)
Xbitmap(5L)
END_OF_FILE
# end of 'doc/show.1'
fi
if test -f 'doc/tjfilter.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/tjfilter.1'\"
else
echo shar: Extracting \"'doc/tjfilter.1'\" \(1378 characters\)
sed "s/^X//" >'doc/tjfilter.1' <<'END_OF_FILE'
X'\"                        Copyright (c) 1988 Bellcore
X'\"                            All Rights Reserved
X'\"       Permission is granted to copy or use this program, EXCEPT that it
X'\"       may not be sold for profit, the copyright notice must be reproduced
X'\"       on copies, and credit should be given to Bellcore where it is due.
X'\"       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X'\"
X'\"	$Header: tjfilter.1,v 4.1 88/06/21 13:52:17 bianchi Exp $
X'\"	$Source: /tmp/mgrsrc/doc/RCS/tjfilter.1,v $
X.TH tjfilter 1L "June 30, 1986"
X.SH NAME
XTjfilter \- Bitmap 
X.I lpr
Xfilter for the
X.B HP ThinkJet
Xprinter.
X.SH SYNOPSIS
X.B tjfilter
X[ \fB-r\fP ]
X.SH DESCRIPTION
X.B Tjfilter
Xreads its
X.I standard input
Xwhich is expected to be a one bit deep
X.I bitmap
Ximage in
X.B mgr
Xformat and transforms it for printing on an
X.B HP ThinkJet
Xprinter.
XIf 
X.B -r
Xis specified, the bitmap is reversed (ala a photographic negative).
XFor bitmaps which are wider than 640 dots, but less than 640 dots
Xhigh,
X.B tjfilter
Xcalls
X.B rotate(1L)
Xin order to fit the bitmap on the printer.
X.LP
X.B Tjfilter
Xis normally used as the
X.B vf
Xfilter in the
X.B HP ThinkJet
Xprintcap entry: ...:vf=/usr/local/bin/tjfilter:...
X.SH BUGS
XThe 
X.B HP Thinkjet
Xprinter can print a maximum of 640 dots per line.  
XBitmaps that don't fit get truncated.
X.SH SEE ALSO
Xbitmap(5L)
Xrotate(1L)
Xlpr(1L)
END_OF_FILE
# end of 'doc/tjfilter.1'
fi
if test -f 'doc/usrman/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/usrman/README'\"
else
echo shar: Extracting \"'doc/usrman/README'\" \(1237 characters\)
sed "s/^X//" >'doc/usrman/README' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: README,v 4.2 88/06/30 12:44:50 bianchi Exp $
X#	$Source: /tmp/mgrsrc/doc/usrman/RCS/README,v $
X
XThis directory contains the MGR programmers manual.
X
XThe manual is made in two passes.  The first pass calculates the
Xfunction index and category sections, then the second pass prints the
Xdocument.
X
X"make ver"	increments a version number to keep the copies straight
X"make print"	prints the manual on a photocomposer
X"make nroff"	prints the manual via nroff onto the stdout
X"make"		runs ver, index, and print
X
XINDEX				extracts the index from temp.index
X
X
Xcontents:
Xdoc.0				troff macros
Xdoc.1				introduction
Xdoc.2				macros
Xdoc.3				macros
Xdoc.4				macros
Xdoc.5				functions
Xdoc.6				programming example
Xdoc.7				function/macro listing by category
Xdoc.8				function/macro index
Xdoc.9				code to print the table of contents
X
END_OF_FILE
# end of 'doc/usrman/README'
fi
if test -f 'doc/usrman/croff/hash.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/usrman/croff/hash.h'\"
else
echo shar: Extracting \"'doc/usrman/croff/hash.h'\" \(1272 characters\)
sed "s/^X//" >'doc/usrman/croff/hash.h' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: hash.h,v 1.1 88/07/07 10:12:10 sau Exp $
X	$Source: /tmp/mgrsrc/doc/usrman/croff/RCS/hash.h,v $
X*/
Xstatic char	h_hash_[] = "$Source: /tmp/mgrsrc/doc/usrman/croff/RCS/hash.h,v $$Revision: 1.1 $";
X
X/* hash table item */
X
Xstruct table_entry {
X	char *name;		/* item name */
X	char *value;		/* current value */
X	int  count;		/* # of references to this entry */
X	int  flags;		/* entry flags */
X	struct table_entry
X	     *next;		/* address of next table entry */
X	};
X
Xstruct table_data {
X	char *name;		/* item name */
X	char *value;		/* current value */
X	int  count;		/* # of references to this entry */
X	};
X
Xtypedef struct table_entry  TABLE;
X
X#define HASH_STATIC		0x001	/* static entry */
X
X#ifndef Same
X#   define Same(x,y)		(strcmp(x,y) ? 0 : 1)
X#else
X    extern int Same();
X#endif
X#ifndef HASH
X#   define HASH	hash			/* name of hash routine */
X#endif
END_OF_FILE
# end of 'doc/usrman/croff/hash.h'
fi
if test -f 'font-16/Ugal7x11r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ugal7x11r'\"
else
echo shar: Extracting \"'font-16/Ugal7x11r'\" \(1311 characters\)
sed "s/^X//" >'font-16/Ugal7x11r' <<'END_OF_FILE'
Xbegin 644 gal7x11r.fnt
XM%@<+ V @ $"@H0P," A       )X(.'$#XX^.'   $ 0' !QP<>/GQQ$^/1$
XM"+$<>.'AQ\B1(D2)X^0/A !  0  0 < 0" B X                #A' !G
XM $"@HY12"! @      *$81(DB!$"1(@  ( ((AB)(B1($")$("2$#;$B11$2
XM(0B1(D2((@0 B@ @ 0  0 @ 0  B (        (       $! @!4 $"A1524
XM"! @0(    2,H! DB! $1(D! 0 $(B2)(@1($"!$("4$"JDB11$2 0B1*BA0
XM0@( B@ 086'#1QX:6. "0(V6'%AI8<>(D2)$B>$! AE6 $"CY1D(B" 14(  
XM  24("'$CQX$.(D! @^"!$R)X@1/'BY\("<$"JDB11'AP0B**A!00@( D0 (
XMD9(DR(@F9"#B@(J9(F29DB((D2(HB"$! BUD $ !0X(5"" 0X^ /@ BD($ G
XMP)$(1'@ !  !"%3Y$@1($")$("4$"*4B>1% (0B**A @@@$ D0  <1($3P@B
XM1" C (J1(D2) 8((BBH0B$$! B8'   "@43B " 14(    C$(( @@)$(1 @ 
XM @^""%2)$@1($")$("2$"*4B01$@(0B*/B@@@@$ @   D1($2 @B1" B@(J1
XM(D2) $((BBHHB(8! 8 @ $ 'Q4EC " 00(8 "!"$(0(@D)$01 D# 0 $ $R)
XM$B1($"9$(22$"*,B0=$2(0B$%$0A @" @   D9(DR(@F1" B0(J1(F29 B))
XMA"I$F0$! @ @ $ "@Y%<@! @  ( "!!X^?' CPX0.'$! ( (""")X<>/D!I$
XM^,1'R*,<0.$1P0<$%$0AX@" @   :6'#1P@:1" B((J1'%AI <&&A!1$:>$!
XM @ @   % 0&  ! @  (  "             ! $ 0"!P                 
XM "           ^!/@          "   @     $ (        " $! @ @   %
XM 0    A   0  "             "                         !      
XM      !  '\        B  $@     $ (        B $! @ @            
XM                                                            
X>           <  #      $ (        < #A'  \
X 
Xend
END_OF_FILE
# end of 'font-16/Ugal7x11r'
fi
if test -f 'font-16/Ugal7x11rI' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ugal7x11rI'\"
else
echo shar: Extracting \"'font-16/Ugal7x11rI'\" \(1312 characters\)
sed "s/^X//" >'font-16/Ugal7x11rI' <<'END_OF_FILE'
Xbegin 644 gal7x11rI.fnt
XM%@<+ V @ ;]?7O/S]_>_______V'WQX[\''!QX___[_OG/^./CAP8..[!PN[
XM]T[CAQX>.#=NW;MV'!OP>_^__O__O_C_O]_=_'________________\>X_^8
XM ;]?7&NM]^_?______U[GNW;=^[]NW?__W_WHN=VW=NW[]V[W]M[\D[=NN[M
XMWO=NW;MWW?O_=?_?_O__O_?_O__=_W________W_______[^_?^K ;]>NJMK
XM]^_?OW____MS7^_;=^_[NW;^_O_[HMMVW?NW[]^[W]K[]5;=NN[M_O=NU=>O
XMO?W_=?_OGIX\N.'EIQ_]OW)IXZ>6GCAW;MV[=A[^_>:I ;]<&N;W=]_NKW__
XM__MKW]X[<.'[QW;^_?!]A+-V'?NPX=&#W]C[]5;=NNX>/O=UU>^OO?W_;O_W
XM;FW;-W?9F]\=?W5FW9MF;=WW;MW7=][^_=*; ;_^O'WJ]]_O'!_P?_=;W[_8
XM/V[WNX?_^__^B*L&[?NW[]V[W]K[]UK=ANZ_WO=UU>_???[_;O__CNW[L/?=
XMN]_<_W5NW;MV_GWW==7O=[[^_=GX ?_]?KL=_]_NKW____<[WW_??V[WN_?_
XM_?!]B*MV[?NW[]V[W]M[]UK=ON[?WO=UP=????[_?___;NW[M_?=N]_=?W5N
XMW;MV_[WW==77=WG^_G_? ;_X.K:<_]_OOWG_]^][WOW?;V[ON_;\_O_[@+-V
XM[=NW[]F[WMM[]US=OB[MWO=[Z[O>_?]_?___;FW;-W?9N]_=OW5NW9MF_=VV
XM>]6[9O[^_?_? ;_]?&ZC?^_?__W_]^^'!@X_</'OQX[^_W_WB-]V'CAP;^6[
XM!SNX-USCOQ[N/OC[Z[O>'?]_?___EIX\N/?EN]_=WW5NXZ>6_CYY>^N[EA[^
XM_?_? ?_Z_OY__^_?__W__]_____________^_[_OB./_________________
XM_]___________!^P?__________]___?_____[_W________]_[^_?_? ?_Z
XM_O____>___O__]_____________]____@/___________________^______
XM______^__X#________=__[?_____[_W________=_[^_?_? ?__________
XM________________________@/__________________________________
X>___________C__\______[_W________C_\>X__#
X 
Xend
END_OF_FILE
# end of 'font-16/Ugal7x11rI'
fi
if test -f 'font-16/Ugal7x11ru' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-16/Ugal7x11ru'\"
else
echo shar: Extracting \"'font-16/Ugal7x11ru'\" \(1312 characters\)
sed "s/^X//" >'font-16/Ugal7x11ru' <<'END_OF_FILE'
Xbegin 644 gal7x11ru.fnt
XM%@<+ V @ $"@H0P," A       )X(.'$#XX^.'   $ 0' !QP<>/GQQ$^/1$
XM"+$<>.'AQ\B1(D2)X^0/A !  0  0 < 0" B X                #A' !G
XM $"@HY12"! @      *$81(DB!$"1(@  ( ((AB)(B1($")$("2$#;$B11$2
XM(0B1(D2((@0 B@ @ 0  0 @ 0  B (        (       $! @!4 $"A1524
XM"! @0(    2,H! DB! $1(D! 0 $(B2)(@1($"!$("4$"JDB11$2 0B1*BA0
XM0@( B@ 086'#1QX:6. "0(V6'%AI8<>(D2)$B>$! AE6 $"CY1D(B" 14(  
XM  24("'$CQX$.(D! @^"!$R)X@1/'BY\("<$"JDB11'AP0B**A!00@( D0 (
XMD9(DR(@F9"#B@(J9(F29DB((D2(HB"$! BUD $ !0X(5"" 0X^ /@ BD($ G
XMP)$(1'@ !  !"%3Y$@1($")$("4$"*4B>1% (0B**A @@@$ D0  <1($3P@B
XM1" C (J1(D2) 8((BBH0B$$! B8'   "@43B " 14(    C$(( @@)$(1 @ 
XM @^""%2)$@1($")$("2$"*4B01$@(0B*/B@@@@$ @   D1($2 @B1" B@(J1
XM(D2) $((BBHHB(8! 8 @ $ 'Q4EC " 00(8 "!"$(0(@D)$01 D# 0 $ $R)
XM$B1($"9$(22$"*,B0=$2(0B$%$0A @" @   D9(DR(@F1" B0(J1(F29 B))
XMA"I$F0$! @ @ $ "@Y%<@! @  ( "!!X^?' CPX0.'$! ( (""")X<>/D!I$
XM^,1'R*,<0.$1P0<$%$0AX@" @   :6'#1P@:1" B((J1'%AI <&&A!1$:>$!
XM @ @   % 0&  ! @  (  "             ! $ 0"!P                 
XM "           ^!/@          "   @     $ (        " $! @ @ ?__
XM____________________________________________________________
XM________________________________________________            
XM                                                            
X>           <  #      $ (        < #A'  \
X 
Xend
END_OF_FILE
# end of 'font-16/Ugal7x11ru'
fi
if test -f 'font-32/Ugal7x11r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ugal7x11r'\"
else
echo shar: Extracting \"'font-32/Ugal7x11r'\" \(1311 characters\)
sed "s/^X//" >'font-32/Ugal7x11r' <<'END_OF_FILE'
Xbegin 644 gal7x11r.fnt
XM& <+ V @ $"@H0P," A       )X(.'$#XX^.'   $ 0' !QP<>/GQQ$^/1$
XM"+$<>.'AQ\B1(D2)X^0/A !  0  0 < 0" B X                #A' !G
XM $"@HY12"! @      *$81(DB!$"1(@  ( ((AB)(B1($")$("2$#;$B11$2
XM(0B1(D2((@0 B@ @ 0  0 @ 0  B (        (       $! @!4 $"A1524
XM"! @0(    2,H! DB! $1(D! 0 $(B2)(@1($"!$("4$"JDB11$2 0B1*BA0
XM0@( B@ 086'#1QX:6. "0(V6'%AI8<>(D2)$B>$! AE6 $"CY1D(B" 14(  
XM  24("'$CQX$.(D! @^"!$R)X@1/'BY\("<$"JDB11'AP0B**A!00@( D0 (
XMD9(DR(@F9"#B@(J9(F29DB((D2(HB"$! BUD $ !0X(5"" 0X^ /@ BD($ G
XMP)$(1'@ !  !"%3Y$@1($")$("4$"*4B>1% (0B**A @@@$ D0  <1($3P@B
XM1" C (J1(D2) 8((BBH0B$$! B8'   "@43B " 14(    C$(( @@)$(1 @ 
XM @^""%2)$@1($")$("2$"*4B01$@(0B*/B@@@@$ @   D1($2 @B1" B@(J1
XM(D2) $((BBHHB(8! 8 @ $ 'Q4EC " 00(8 "!"$(0(@D)$01 D# 0 $ $R)
XM$B1($"9$(22$"*,B0=$2(0B$%$0A @" @   D9(DR(@F1" B0(J1(F29 B))
XMA"I$F0$! @ @ $ "@Y%<@! @  ( "!!X^?' CPX0.'$! ( (""")X<>/D!I$
XM^,1'R*,<0.$1P0<$%$0AX@" @   :6'#1P@:1" B((J1'%AI <&&A!1$:>$!
XM @ @   % 0&  ! @  (  "             ! $ 0"!P                 
XM "           ^!/@          "   @     $ (        " $! @ @   %
XM 0    A   0  "             "                         !      
XM      !  '\        B  $@     $ (        B $! @ @            
XM                                                            
X>           <  #      $ (        < #A'  \
X 
Xend
END_OF_FILE
# end of 'font-32/Ugal7x11r'
fi
if test -f 'font-32/Ugal7x11rI' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ugal7x11rI'\"
else
echo shar: Extracting \"'font-32/Ugal7x11rI'\" \(1312 characters\)
sed "s/^X//" >'font-32/Ugal7x11rI' <<'END_OF_FILE'
Xbegin 644 gal7x11rI.fnt
XM& <+ V @ ;]?7O/S]_>_______V'WQX[\''!QX___[_OG/^./CAP8..[!PN[
XM]T[CAQX>.#=NW;MV'!OP>_^__O__O_C_O]_=_'________________\>X_^8
XM ;]?7&NM]^_?______U[GNW;=^[]NW?__W_WHN=VW=NW[]V[W]M[\D[=NN[M
XMWO=NW;MWW?O_=?_?_O__O_?_O__=_W________W_______[^_?^K ;]>NJMK
XM]^_?OW____MS7^_;=^_[NW;^_O_[HMMVW?NW[]^[W]K[]5;=NN[M_O=NU=>O
XMO?W_=?_OGIX\N.'EIQ_]OW)IXZ>6GCAW;MV[=A[^_>:I ;]<&N;W=]_NKW__
XM__MKW]X[<.'[QW;^_?!]A+-V'?NPX=&#W]C[]5;=NNX>/O=UU>^OO?W_;O_W
XM;FW;-W?9F]\=?W5FW9MF;=WW;MW7=][^_=*; ;_^O'WJ]]_O'!_P?_=;W[_8
XM/V[WNX?_^__^B*L&[?NW[]V[W]K[]UK=ANZ_WO=UU>_???[_;O__CNW[L/?=
XMN]_<_W5NW;MV_GWW==7O=[[^_=GX ?_]?KL=_]_NKW____<[WW_??V[WN_?_
XM_?!]B*MV[?NW[]V[W]M[]UK=ON[?WO=UP=????[_?___;NW[M_?=N]_=?W5N
XMW;MV_[WW==77=WG^_G_? ;_X.K:<_]_OOWG_]^][WOW?;V[ON_;\_O_[@+-V
XM[=NW[]F[WMM[]US=OB[MWO=[Z[O>_?]_?___;FW;-W?9N]_=OW5NW9MF_=VV
XM>]6[9O[^_?_? ;_]?&ZC?^_?__W_]^^'!@X_</'OQX[^_W_WB-]V'CAP;^6[
XM!SNX-USCOQ[N/OC[Z[O>'?]_?___EIX\N/?EN]_=WW5NXZ>6_CYY>^N[EA[^
XM_?_? ?_Z_OY__^_?__W__]_____________^_[_OB./_________________
XM_]___________!^P?__________]___?_____[_W________]_[^_?_? ?_Z
XM_O____>___O__]_____________]____@/___________________^______
XM______^__X#________=__[?_____[_W________=_[^_?_? ?__________
XM________________________@/__________________________________
X>___________C__\______[_W________C_\>X__#
X 
Xend
END_OF_FILE
# end of 'font-32/Ugal7x11rI'
fi
if test -f 'font-32/Ugal7x11ru' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'font-32/Ugal7x11ru'\"
else
echo shar: Extracting \"'font-32/Ugal7x11ru'\" \(1312 characters\)
sed "s/^X//" >'font-32/Ugal7x11ru' <<'END_OF_FILE'
Xbegin 644 gal7x11ru.fnt
XM& <+ V @ $"@H0P," A       )X(.'$#XX^.'   $ 0' !QP<>/GQQ$^/1$
XM"+$<>.'AQ\B1(D2)X^0/A !  0  0 < 0" B X                #A' !G
XM $"@HY12"! @      *$81(DB!$"1(@  ( ((AB)(B1($")$("2$#;$B11$2
XM(0B1(D2((@0 B@ @ 0  0 @ 0  B (        (       $! @!4 $"A1524
XM"! @0(    2,H! DB! $1(D! 0 $(B2)(@1($"!$("4$"JDB11$2 0B1*BA0
XM0@( B@ 086'#1QX:6. "0(V6'%AI8<>(D2)$B>$! AE6 $"CY1D(B" 14(  
XM  24("'$CQX$.(D! @^"!$R)X@1/'BY\("<$"JDB11'AP0B**A!00@( D0 (
XMD9(DR(@F9"#B@(J9(F29DB((D2(HB"$! BUD $ !0X(5"" 0X^ /@ BD($ G
XMP)$(1'@ !  !"%3Y$@1($")$("4$"*4B>1% (0B**A @@@$ D0  <1($3P@B
XM1" C (J1(D2) 8((BBH0B$$! B8'   "@43B " 14(    C$(( @@)$(1 @ 
XM @^""%2)$@1($")$("2$"*4B01$@(0B*/B@@@@$ @   D1($2 @B1" B@(J1
XM(D2) $((BBHHB(8! 8 @ $ 'Q4EC " 00(8 "!"$(0(@D)$01 D# 0 $ $R)
XM$B1($"9$(22$"*,B0=$2(0B$%$0A @" @   D9(DR(@F1" B0(J1(F29 B))
XMA"I$F0$! @ @ $ "@Y%<@! @  ( "!!X^?' CPX0.'$! ( (""")X<>/D!I$
XM^,1'R*,<0.$1P0<$%$0AX@" @   :6'#1P@:1" B((J1'%AI <&&A!1$:>$!
XM @ @   % 0&  ! @  (  "             ! $ 0"!P                 
XM "           ^!/@          "   @     $ (        " $! @ @ ?__
XM____________________________________________________________
XM________________________________________________            
XM                                                            
X>           <  #      $ (        < #A'  \
X 
Xend
END_OF_FILE
# end of 'font-32/Ugal7x11ru'
fi
if test -f 'lib/ckmgrterm.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/ckmgrterm.c'\"
else
echo shar: Extracting \"'lib/ckmgrterm.c'\" \(1341 characters\)
sed "s/^X//" >'lib/ckmgrterm.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: ckmgrterm.c,v 4.1 88/06/21 13:40:34 bianchi Exp $
X	$Source: /tmp/mgrsrc/lib/RCS/ckmgrterm.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/lib/RCS/ckmgrterm.c,v $$Revision: 4.1 $";
X
X#include	<stdio.h>
X
X
X/*	Check to see if the TERM environment variable says this is an "mgr"
X	terminal.
X	If it is not, print a message, optionally preceed by the given text,
X	and exit with exit code 1.
X	Otherwise, return.
X	Absence of a TERM environment variable is considered OK, so that
X	these commands can be run within a remote shell.
X*/
X
Xvoid
Xckmgrterm( text )
Xchar	*text;
X{
X	char	*getenv();
X	char	*term;
X
X	term = getenv( "TERM" );
X	/*	If TERM is defined, has a non-null value,
X		and TERM != mgr, complain and exit.
X	*/
X	if( term  &&  *term  &&  strcmp( term, "mgr" ) ) {
X		if( text  &&  *text ) {
X			fputs( text, stderr );
X			fputs( ":  ", stderr );
X		}
X		fputs( "only runs on mgr terminals\n", stderr );
X		exit( 1 );
X	}
X}
END_OF_FILE
# end of 'lib/ckmgrterm.c'
fi
if test -f 'lib/restart.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/restart.h'\"
else
echo shar: Extracting \"'lib/restart.h'\" \(1235 characters\)
sed "s/^X//" >'lib/restart.h' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: restart.h,v 4.1 88/06/21 13:40:38 bianchi Exp $
X	$Source: /tmp/mgrsrc/lib/RCS/restart.h,v $
X*/
Xstatic char	h_restart_[] = "$Source: /tmp/mgrsrc/lib/RCS/restart.h,v $$Revision: 4.1 $";
X
X/* stuff for restarting upon reshape/ redraw */
X
X#ifndef ECHO
X#include <sgtty.h>
X#endif
X
X#include <setjmp.h>
X
X#ifndef SIGQUIT
X#include <signal.h>
X#endif
X
Xextern int _Catch(), _Clean();
Xextern jmp_buf _env;
X
X#ifdef QUIT_CHAR
Xstatic char *_quit = QUIT_CHAR;
X#else
Xstatic char *_quit = "\034";
X#endif
X
X#define Ignore()	signal(SIGQUIT,SIG_IGN)
X
X#define Restart()	signal(SIGINT,_Clean), \
X			 signal(SIGTERM,_Clean), \
X			 signal(SIGQUIT,_Catch), \
X			 m_saveenvcount = m_envcount, \
X			 m_pushsave(P_EVENT), \
X			 m_setevent(RESHAPE,_quit), \
X			 m_setevent(REDRAW,_quit), \
X			 m_setevent(UNCOVERED,_quit), \
X			 setjmp(_env)
END_OF_FILE
# end of 'lib/restart.h'
fi
if test -f 'src/Write.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/Write.c'\"
else
echo shar: Extracting \"'src/Write.c'\" \(1300 characters\)
sed "s/^X//" >'src/Write.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: Write.c,v 4.1 88/06/21 13:21:10 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/Write.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/Write.c,v $$Revision: 4.1 $";
X
X/* Long writes to ptty's don't always work */
X
X#include <errno.h>
X
X#define MAX_RETRY	3		/* max retries after EWOULDBLOCK */
X#define TTYMAX		100		/* max chunk size in write */
X#define Min(x,y)	((x)<(y)?(x):(y))
X
Xextern errno;
X
Xint
XWrite(fd,buff,len)
Xregister int fd, len;
Xregister char *buff;
X   {
X   register int count = 0;
X   register int code;
X   register int retry=0;
X
X   while (count < len) {
X      code = write(fd,buff+count,Min(TTYMAX,len-count));
X      if (code > 0)
X         count += code;
X      else if (errno == EWOULDBLOCK) {
X         if (retry++ > MAX_RETRY)
X            break;
X         sleep(1);
X         continue;
X         }
X      else 
X         break;
X      }
X   return(count);
X   }
END_OF_FILE
# end of 'src/Write.c'
fi
if test -f 'src/blit/hash.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/blit/hash.h'\"
else
echo shar: Extracting \"'src/blit/hash.h'\" \(1260 characters\)
sed "s/^X//" >'src/blit/hash.h' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: hash.h,v 4.1 88/06/21 13:19:08 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/blit/RCS/hash.h,v $
X*/
Xstatic char	h_hash_[] = "$Source: /tmp/mgrsrc/src/blit/RCS/hash.h,v $$Revision: 4.1 $";
X
X/* hash table item */
X
Xstruct table_entry {
X	char *name;		/* item name */
X	char *value;		/* current value */
X	int  count;		/* # of references to this entry */
X	int  flags;		/* entry flags */
X	struct table_entry
X	     *next;		/* address of next table entry */
X	};
X
Xstruct table_data {
X	char *name;		/* item name */
X	char *value;		/* current value */
X	int  count;		/* # of references to this entry */
X	};
X
Xtypedef struct table_entry  TABLE;
X
X#define HASH_STATIC		0x001	/* static entry */
X
X#ifndef Same
X#   define Same(x,y)		(strcmp(x,y) ? 0 : 1)
X#else
X    extern int Same();
X#endif
X#ifndef HASH
X#   define HASH	hash			/* name of hash routine */
X#endif
END_OF_FILE
# end of 'src/blit/hash.h'
fi
if test -f 'src/blit/pixel.C' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/blit/pixel.C'\"
else
echo shar: Extracting \"'src/blit/pixel.C'\" \(1436 characters\)
sed "s/^X//" >'src/blit/pixel.C' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: pixel.C,v 4.2 88/06/30 11:39:58 sau Exp $
X	$Source: /tmp/mgrsrc/src/blit/RCS/pixel.C,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/blit/RCS/pixel.C,v $$Revision: 4.2 $";
X
X/* set/clear/ or invert a pixel */
X
X#include "bitmap.h"
X#include "asm.h"
X
Xbit_point(map,x,y,op)
XBITMAP *map;
Xregister int x,y,op;
X   {
X   register int offset;
X	register int *base = BIT_DATA(map);
X
X   /* clipping */
X
X   if (x<0 || x>BIT_WIDE(map) || y<0 || y>BIT_HIGH(map))
X      return(-1);
X
X   offset = (y+map->y0)*BIT_LINE(map)+map->x0+x;
X  
X   switch(OPCODE(op)) {
X		case OPCODE(SRC):
X		case OPCODE(SRC | DST):
X		case OPCODE(SRC | ~DST):
X		case OPCODE(~0):
X			BF_SET($base,$offset,IMM(1));
X         break;
X		case OPCODE(~SRC):
X		case OPCODE(~(SRC|DST)):
X		case OPCODE(DST & ~SRC):
X		case OPCODE(0):
X			BF_CLR($base,$offset,IMM(1));
X         break;
X		case OPCODE(SRC ^ DST):
X		case OPCODE(~DST):
X		case OPCODE(SRC & ~DST):
X		case OPCODE(~(SRC&DST)):
X			BF_INV($base,$offset,IMM(1));
X         break;
X      }
X   return(0);
X   }
END_OF_FILE
# end of 'src/blit/pixel.C'
fi
if test -f 'src/move.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/move.c'\"
else
echo shar: Extracting \"'src/move.c'\" \(1364 characters\)
sed "s/^X//" >'src/move.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: move.c,v 4.1 88/06/21 13:34:18 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/move.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/move.c,v $$Revision: 4.1 $";
X
X/* move a window */
X
X#include "bitmap.h"
X#include <stdio.h> 	/* temporary */
X#include "defs.h"
X#include "event.h"
X
Xint move_window()
X   {
X   int button;
X   int dx = BIT_WIDE(ACTIVE(border));
X   int dy = BIT_HIGH(ACTIVE(border));
X   int sx = ACTIVE(x0);
X   int sy = ACTIVE(y0);
X   register WINDOW *win;
X
X   move_box(screen,mouse,&sx,&sy,dx,dy,0);
X
X   /* adjust window state */
X
X   mousex += sx-ACTIVE(x0);
X   mousey += sy-ACTIVE(y0);
X
X   shape(sx,sy,dx,dy);
X#ifdef ALIGN
X   if (dx != BIT_WIDE(ACTIVE(border)) || dy != BIT_HIGH(ACTIVE(border)))
X      do_event(EVENT_SHAPE,active,E_MAIN);
X   else
X#endif
X      do_event(EVENT_MOVE,active,E_MAIN);
X
X   /* wait till button is released */
X
X   do {
X      button=mouse_get(mouse,&sx,&sy);
X      }
X   while (button!=0);
X   }
END_OF_FILE
# end of 'src/move.c'
fi
if test -f 'src/move_box.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/move_box.c'\"
else
echo shar: Extracting \"'src/move_box.c'\" \(1452 characters\)
sed "s/^X//" >'src/move_box.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1987 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: move_box.c,v 4.1 88/06/21 13:34:20 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/RCS/move_box.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/RCS/move_box.c,v $$Revision: 4.1 $";
X
X/* drag a box around the screen */
X
X#include "bitmap.h"
X#include "defs.h"
X
Xmove_box(screen,mouse,x,y,dx,dy,how)
XBITMAP *screen;			/* where to sweep out the box */
Xint mouse;			/* file to get mouse coords from */
Xregister int *x,*y;		/* starting position */
Xregister int dx,dy;             /* box size */
Xint how;					/* termination condition */
X   {
X   int x_mouse, y_mouse;
X   register int button, skip=1;
X
X   box(screen,*x,*y,dx,dy);
X   do {
X      button=mouse_get(mouse,&x_mouse,&y_mouse);
X      if (skip)
X         box(screen,*x,*y,dx,dy);
X      *x += x_mouse;
X      *y -= y_mouse;
X      *x = BETWEEN(0,*x,BIT_WIDE(screen)-dx);
X      *y = BETWEEN(0,*y,BIT_HIGH(screen)-dy);
X      if (skip = !mouse_count())
X         box(screen,*x,*y,dx,dy);
X      }
X	while (how ? button!=0 : button==0); 
X
X   if (skip)
X      box(screen,*x,*y,dx,dy);
X   }
END_OF_FILE
# end of 'src/move_box.c'
fi
if test -f 'src/oblit/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/oblit/Makefile'\"
else
echo shar: Extracting \"'src/oblit/Makefile'\" \(1324 characters\)
sed "s/^X//" >'src/oblit/Makefile' <<'END_OF_FILE'
X#                        Copyright (c) 1988 Bellcore
X#                            All Rights Reserved
X#       Permission is granted to copy or use this program, EXCEPT that it
X#       may not be sold for profit, the copyright notice must be reproduced
X#       on copies, and credit should be given to Bellcore where it is due.
X#       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X
X#	$Header: Makefile,v 4.4 88/07/19 14:34:19 sau Exp $
X#	$Source: /tmp/mgrsrc/src/oblit/RCS/Makefile,v $
X
X#	makefile for old (16 bit) bitblit code
X
XCFLAGS=-O  -I..
X
XCFILES= blit.c line.c pixel.c bitmap.c bit_on.c
XOBJS= blit.o line.o pixel.o bit_on.o
XHFILES= bitmap.h
XOTHER=Makefile README
XLIB=blitlib.a
XSTART=.
X
Xall:		$(LIB)
X
X# bitmap library
X
X$(LIB): $(LIB)(blit.o) \
X           $(LIB)(pixel.o) \
X           $(LIB)(line.o) \
X           $(LIB)(bit_on.o) \
X           $(LIB)(bitmap.o)
X			ranlib $(LIB)
X
X$(LIB)(blit.o): blit.o
X			ar rv $(LIB) blit.o
X
X$(LIB)(pixel.o): pixel.o
X			ar rv $(LIB) pixel.o
X
X$(LIB)(bit_on.o): bit_on.o
X			ar rv $(LIB) bit_on.o
X
X$(LIB)(line.o): line.o
X			ar rv $(LIB) line.o
X
X$(LIB)(bitmap.o): bitmap.o
X			ar rv $(LIB) bitmap.o
X
X##########################
X
X$(OBJS):	bitmap.h
X
Xlist:
X	@for i in $(CFILES) $(HFILES) $(OTHER); do \
X		echo "$(START)/$$i"; \
X	done	
X
Xclean:
X	rm -f *.o $(LIB)
X
Xclobber:
END_OF_FILE
# end of 'src/oblit/Makefile'
fi
if test -f 'src/oblit/pixel.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'src/oblit/pixel.c'\"
else
echo shar: Extracting \"'src/oblit/pixel.c'\" \(1372 characters\)
sed "s/^X//" >'src/oblit/pixel.c' <<'END_OF_FILE'
X/*                        Copyright (c) 1988 Bellcore
X *                            All Rights Reserved
X *       Permission is granted to copy or use this program, EXCEPT that it
X *       may not be sold for profit, the copyright notice must be reproduced
X *       on copies, and credit should be given to Bellcore where it is due.
X *       BELLCORE MAKES NO WARRANTY AND ACCEPTS NO LIABILITY FOR THIS PROGRAM.
X */
X/*	$Header: pixel.c,v 4.1 88/06/21 13:08:06 bianchi Exp $
X	$Source: /tmp/mgrsrc/src/oblit/RCS/pixel.c,v $
X*/
Xstatic char	RCSid_[] = "$Source: /tmp/mgrsrc/src/oblit/RCS/pixel.c,v $$Revision: 4.1 $";
X
X/* draw a point  16 bit version */
X
X#include "bitmap.h"
X
Xint
Xbit_point(map, dx, dy, func)
XBITMAP *map;
Xregister int dx, dy;
Xint func;
X{
X   register int x = BIT_X(map) + dx;
X   register int y = BIT_Y(map) + dy;
X   register unsigned short *word =
X   BIT_DATA(map) + (y * BIT_LINE(map) + (x >> 4));
X   register unsigned short bit = 0x8000 >> (x & 0xf);
X
X   if (dx < 0 || dy < 0 || dx >= BIT_WIDE(map) || dy >= BIT_HIGH(map))
X      return (0);
X
X   switch (OPCODE(func)) {
X      case OPCODE(0):
X      case OPCODE(SRC):
X	 *word &= ~bit;
X	 break;
X      case OPCODE(~SRC):
X      case OPCODE(~SRC | DST):
X      case OPCODE(~0):
X	 *word |= bit;
X	 break;
X      case OPCODE(~SRC ^ DST):
X      case OPCODE(~DST):
X	 *word ^= bit;
X	 break;
X   }
X
X   return (*word & bit);
X}
END_OF_FILE
# end of 'src/oblit/pixel.c'
fi
echo shar: End of archive 6 \(of 61\).
cp /dev/null ark6isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \
	21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \
	38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \
	55 56 57 58 59 60 61 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 61 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
