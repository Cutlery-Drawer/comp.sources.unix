Newsgroups: comp.sources.unix
From: ejb@ERA.COM (Jay Berkenbilt)
Subject: v28i001: bcs-2.0 - A Baseline Configuration System, Part00/25
Message-id: <1.764985670.1461@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: ejb@ERA.COM (Jay Berkenbilt)
Posting-Number: Volume 28, Issue 1
Archive-Name: bcs-2.0/part00

This posting contains the sources and documentation for BCS, a
Baseline Configuration System.  This is BCS version 2.0.

BCS helps groups of developers manage an RCS- or SCCS-controlled
group of files being shared by multiple developers.  It tries to
solve some of the same problems that CVS does (i.e., adding
concurrency to an inherently non-concurrent configuration
management system), but it takes a different approach.  BCS acts
as a front end to the standard commands of the underlying
configuration management system; it does not replace the
underlying system.  Also, BCS does what it does by managing
symbolic link farms that implement shared RCS/SCCS logs.  BCS
also provides tools that help you keep your farm synchronized
with the "baseline" and allow you to keep only the required
parts of the main source area in your private work area at a
time.

BCS has undergone quite a bit of testing prior to this 2.0
release.  The initial beta release was made to alt.sources in
December, 1993, and followup beta releases were made in January
and February, 1994.  Prior to the beta releases, there were
several months of alpha testing at our site.  No serious bugs
were found during the beta test period, so I believe the
software to be quite stable.  In addition, BCS has its own
automated test suite.

BCS currently has a user's manual written in texinfo.
Postscript and info documentation are included in the release.
Each command accepts the --help and --version flags as well.
There are minimal manual pages based on something written by one
of the beta testers.

If you use this package, I would like to be told so that I can
sort of keep track of how wide this distribution is.  If you
successfully compile and test BCS on a given with a given
compiler, I'd like to know that too so that I can update the
"README" file with a list of platforms on which BCS is known to
work.  I am also willing to accept mail with questions,
comments, or bug reports.  If you are interested in being kept
up-to-date on BCS-related announcements send me mail
(ejb@ERA.COM) and I will add you to the bcs-users mailing list.
There is currently no automated listserver maintaining
membership of the list.

For more information about BCS, please see the README file and
the documentation included.

BCS is distributed under the terms of the General Public License
and/or the Artistic license.  The text of both licenses are
included in this distribution.

USING THE SAMPLE BASELINE
=========================

The sample baseline is pretty much untested and unsupported as
indicated by its path in the source.  However, I am certainly
willing to add enhancements or correct problems with it.  It
should be noticed that this sample baseline's makefiles require
an architecture-specific file for each platform that tells what
the name of the compiler is along with some other information.
Included are IRIX.mki, Linux.mki, HP-UX.mki, and sparc.mki
(which is a misnomer, but is there for hysterical reasons at our
site).  You can run tools/archtype to find out what the system
thinks your architecture is.  No guarantee that this will give
reasonable output.  Then you can make your own .mki file by
copying and modifying one of those.  Otherwise, follow the
directions in the README file that is included with the sample
baseline.  The sample baseline is included in hopes that it will
be useful to someone who is trying to figure this stuff out from
scratch.  It is by no means a final solution, but it should be
better than nothing.

-Jay Berkenbilt	     ejb@ERA.COM
