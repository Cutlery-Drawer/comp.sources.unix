Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v28i096: cook - a file construction tool, V1.6, Part03/19
References: <1.775008949.28543@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 28, Issue 96
Archive-Name: cook-1.6/part03

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 3 (of 19)."
# Contents:  aux/new.1.4.so aux/template/man c_incl/os.c
#   common/ac/dirent.h common/word.h cook/builtin/basename.c
#   cook/builtin/split.c cook/builtin/subst.c cook/builtin/suffix.c
#   cook/lex.h cook/match.h doc/function/basename.so
#   doc/function/catenate.so doc/function/collect.so
#   doc/function/execute.so doc/function/exists.so
#   doc/function/find_cmd.so doc/function/fromto.so
#   doc/function/getenv.so doc/function/head.so doc/function/if.so
#   doc/function/in.so doc/function/join.so doc/function/match_mask.so
#   doc/function/matches.so doc/function/patsubst.so
#   doc/function/resolve.so doc/function/shell.so
#   doc/function/sort_newest.so doc/function/split.so
#   doc/function/stringset.so doc/function/unsplit.so find_libs/os.c
#   lib/lex man1/copyright.so test/00/t0001a.sh test/00/t0002a.sh
#   test/00/t0003a.sh test/00/t0004a.sh test/00/t0006a.sh
#   test/00/t0008a.sh test/00/t0010a.sh test/00/t0011a.sh
#   test/00/t0012a.sh test/00/t0013a.sh test/00/t0014a.sh
#   test/00/t0016a.sh test/00/t0017a.sh test/00/t0019a.sh
#   test/00/t0020a.sh test/00/t0021a.sh test/00/t0022a.sh
#   test/00/t0023a.sh test/00/t0025a.sh test/00/t0026a.sh
#   test/00/t0028a.sh test/00/t0029a.sh test/00/t0033a.sh
#   test/00/t0035a.sh test/00/t0036a.sh
# Wrapped by vixie@gw.home.vix.com on Sat Jul 23 17:11:18 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'aux/new.1.4.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/new.1.4.so'\"
else
echo shar: Extracting \"'aux/new.1.4.so'\" \(1455 characters\)
sed "s/^X//" >'aux/new.1.4.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing new 1.4 features
X.\"
X.PP
X.if t \(bu
X.if n *
XThe
X.I cook
Xprogram is now known to work on more systems.
XMost changes were aimed at improving portability,
Xor avoiding problems specific to some systems.
X.PP
X.if t \(bu
X.if n *
XThe GNU long option name convention is now understood.
XOption names for
X.I cook
Xwere always long,
Xso this mostly consists of ignoring the extra leading '-'.
XThe "--foo=bar" convention is also understood for options with arguments.
X.PP
X.if t \(bu
X.if n *
XTests which fail now tell you what it was they were testing for.
XThis will give the user some idea of what is happening.
END_OF_FILE
if test 1455 -ne `wc -c <'aux/new.1.4.so'`; then
    echo shar: \"'aux/new.1.4.so'\" unpacked with wrong size!
fi
# end of 'aux/new.1.4.so'
fi
if test -f 'aux/template/man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/man'\"
else
echo shar: Extracting \"'aux/template/man'\" \(1442 characters\)
sed "s/^X//" >'aux/template/man' <<'END_OF_FILE'
X'\" t
X.\"	cook - file construction tool
X.\"	Copyright (C) ${date %Y} Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: manual entry for the ${basename $fn .1} command
X.\"
X.TH cook 1
X.so z_name.so
X.ds n) cook
X.SH NAME
X\*(n) \- file construction tool
X.SH SYNOPSIS
X.B \*(n)
X[
X.IR option \&...
X]
X.IR filename \&...
X.br
X.B \*(n)
X.B -Help
X.br
X.B \*(n)
X.B -VERSion
X.SH DESCRIPTION
XThe
X.I \*(n)
Xprogram is used to
X.br
X.ne 1i
X.SH OPTIONS
XThe following options are understood:
X.TP 8n
X.B -Help
X.br
XProvide some help with using the
X.I \*(n)
Xprogram.
X.TP 8n
X.B -VERSion
X.br
XPrint the version of the
X.I \*(n)
Xprogram being executed.
X.PP
XAll other options will produce a diagnostic error.
X.so o__rules.so
X.so z_exit.so
X.so copyright.so
END_OF_FILE
if test 1442 -ne `wc -c <'aux/template/man'`; then
    echo shar: \"'aux/template/man'\" unpacked with wrong size!
fi
# end of 'aux/template/man'
fi
if test -f 'c_incl/os.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'c_incl/os.c'\"
else
echo shar: Extracting \"'c_incl/os.c'\" \(1396 characters\)
sed "s/^X//" >'c_incl/os.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to isolate operating system interface
X */
X
X#include <sys/types.h>
X#include <sys/stat.h>
X#include <errno.h>
X
X#include <error.h>
X#include <os.h>
X
X/*
X *  NAME
X *	os_exists - tests for the existence of a file
X *
X *  SYNOPSIS
X *	int os_exists(char *filename);
X *
X *  DESCRIPTION
X *	Os_returns 1 if the file exists, 0 if it does not.
X */
X
Xint
Xos_exists(filename)
X	char	*filename;
X{
X	struct stat	st;
X
X	if (stat(filename, &st))
X	{
X		switch (errno)
X		{
X		case ENOENT:
X		case ENOTDIR:
X			break;
X
X		default:
X			nfatal("%s", filename);
X		}
X		return 0;
X	}
X	return 1;
X}
END_OF_FILE
if test 1396 -ne `wc -c <'c_incl/os.c'`; then
    echo shar: \"'c_incl/os.c'\" unpacked with wrong size!
fi
# end of 'c_incl/os.c'
fi
if test -f 'common/ac/dirent.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/dirent.h'\"
else
echo shar: Extracting \"'common/ac/dirent.h'\" \(1459 characters\)
sed "s/^X//" >'common/ac/dirent.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate dirent.h/ndir.h differences
X */
X
X#ifndef COMMON_AC_DIRENT_H
X#define COMMON_AC_DIRENT_H
X
X#include <ac/unistd.h>
X		
X/* unistd.h defines _POSIX_VERSION on POSIX.1 systems.  */
X#if defined(DIRENT) || defined(_POSIX_VERSION)
X#include <dirent.h>
X#define NLENGTH(dirent) (strlen((dirent)->d_name))
X#else /* not (DIRENT or _POSIX_VERSION) */
X#define dirent direct
X#define NLENGTH(dirent) ((dirent)->d_namlen)
X#ifdef SYSNDIR
X#include <sys/ndir.h>
X#endif /* SYSNDIR */
X#ifdef SYSDIR
X#include <sys/dir.h>
X#endif /* SYSDIR */
X#ifdef NDIR
X#include <ndir.h>
X#endif /* NDIR */
X#endif /* not (DIRENT or _POSIX_VERSION) */
X
X#endif /* COMMON_AC_DIRENT_H */
END_OF_FILE
if test 1459 -ne `wc -c <'common/ac/dirent.h'`; then
    echo shar: \"'common/ac/dirent.h'\" unpacked with wrong size!
fi
# end of 'common/ac/dirent.h'
fi
if test -f 'common/word.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/word.h'\"
else
echo shar: Extracting \"'common/word.h'\" \(1442 characters\)
sed "s/^X//" >'common/word.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/word.c
X */
X
X#ifndef WORD_H
X#define WORD_H
X
X#include <str.h>
X
Xtypedef struct wlist wlist;
Xstruct	wlist
X{
X	size_t		wl_nwords;
X	string_ty	**wl_word;
X};
X
Xint wl_member _((wlist *, string_ty *));
Xstring_ty *wl2str _((wlist *, int, int, char *));
Xvoid str2wl _((wlist *, string_ty *, char *, int));
Xvoid wl_append _((wlist *, string_ty *));
Xvoid wl_prepend _((wlist *, string_ty *));
Xvoid wl_append_unique _((wlist *, string_ty *));
Xvoid wl_copy _((wlist *, wlist *));
Xvoid wl_delete _((wlist *, string_ty *));
Xvoid wl_free _((wlist *));
Xvoid wl_zero _((wlist *));
X
X#endif /* WORD_H */
END_OF_FILE
if test 1442 -ne `wc -c <'common/word.h'`; then
    echo shar: \"'common/word.h'\" unpacked with wrong size!
fi
# end of 'common/word.h'
fi
if test -f 'cook/builtin/basename.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/basename.c'\"
else
echo shar: Extracting \"'cook/builtin/basename.c'\" \(1372 characters\)
sed "s/^X//" >'cook/builtin/basename.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the builtin basename function
X */
X
X#include <ac/string.h>
X
X#include <builtin/basename.h>
X
X
Xint
Xbuiltin_basename(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X	char		*cp;
X	char		*ep;
X
X	for (j = 1; j < arg->wl_nwords; ++j)
X	{
X		s = arg->wl_word[j];
X		cp = strrchr(s->str_text, '/');
X		if (!cp)
X			cp = s->str_text;
X		ep = strrchr(cp, '.');
X		if (!ep || ep == cp)
X			wl_append(result, s);
X		else
X		{
X			s = str_n_from_c(s->str_text, ep - s->str_text);
X			wl_append(result, s);
X			str_free(s);
X		}
X	}
X	return 0;
X}
END_OF_FILE
if test 1372 -ne `wc -c <'cook/builtin/basename.c'`; then
    echo shar: \"'cook/builtin/basename.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/basename.c'
fi
if test -f 'cook/builtin/split.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/split.c'\"
else
echo shar: Extracting \"'cook/builtin/split.c'\" \(1363 characters\)
sed "s/^X//" >'cook/builtin/split.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the split builtin function
X */
X
X#include <builtin/split.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_split(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires one or more arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	for (j = 2; j < arg->wl_nwords; ++j)
X	{
X		wlist		wl;
X		size_t		k;
X
X		str2wl(&wl, arg->wl_word[j], arg->wl_word[1]->str_text, 0);
X		for (k = 0; k < wl.wl_nwords; ++k)
X			wl_append(result, wl.wl_word[k]);
X		wl_free(&wl);
X	}
X	return 0;
X}
END_OF_FILE
if test 1363 -ne `wc -c <'cook/builtin/split.c'`; then
    echo shar: \"'cook/builtin/split.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/split.c'
fi
if test -f 'cook/builtin/subst.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/subst.c'\"
else
echo shar: Extracting \"'cook/builtin/subst.c'\" \(1332 characters\)
sed "s/^X//" >'cook/builtin/subst.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement builtin subst function
X */
X
X#include <builtin/subst.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_subst(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X
X	if (arg->wl_nwords < 3)
X	{
X		expr_error
X		(
X			"%s: requires at least two arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	for (j = 3; j < arg->wl_nwords; ++j)
X	{
X		s =
X			str_substitute
X			(
X				arg->wl_word[1],
X				arg->wl_word[2],
X				arg->wl_word[j]
X			);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1332 -ne `wc -c <'cook/builtin/subst.c'`; then
    echo shar: \"'cook/builtin/subst.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/subst.c'
fi
if test -f 'cook/builtin/suffix.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/suffix.c'\"
else
echo shar: Extracting \"'cook/builtin/suffix.c'\" \(1345 characters\)
sed "s/^X//" >'cook/builtin/suffix.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the builtin suffix function
X */
X
X#include <ac/string.h>
X
X#include <builtin/suffix.h>
X
X
Xint
Xbuiltin_suffix(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X	char		*cp;
X	char		*ep;
X
X	for (j = 1; j < arg->wl_nwords; ++j)
X	{
X		s = arg->wl_word[j];
X		cp = strrchr(s->str_text, '/');
X		if (!cp)
X			cp = s->str_text;
X		ep = strrchr(cp, '.');
X		if (!ep || ep == cp)
X			wl_append(result, str_false);
X		else
X		{
X			s = str_from_c(ep);
X			wl_append(result, s);
X			str_free(s);
X		}
X	}
X	return 0;
X}
END_OF_FILE
if test 1345 -ne `wc -c <'cook/builtin/suffix.c'`; then
    echo shar: \"'cook/builtin/suffix.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/suffix.c'
fi
if test -f 'cook/lex.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/lex.h'\"
else
echo shar: Extracting \"'cook/lex.h'\" \(1476 characters\)
sed "s/^X//" >'cook/lex.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/lex.c
X */
X
X#ifndef LEX_H
X#define LEX_H
X
X#include <main.h>
X#include <str.h>
X
Xint hashline_lex _((void));
Xint lex_cur_line _((void));
Xint lex_mode _((int));
Xint parse_lex _((void));
Xstring_ty *lex_cur_file _((void));
Xvoid lex_close _((void));
Xvoid lex_error _((char*, ...));
Xvoid lex_warning _((char*, ...));
Xvoid lex_initialize _((void));
Xvoid lex_open _((string_ty *));
Xvoid lex_open_include _((string_ty *));
Xvoid lex_passing _((int));
Xvoid lex_trace _((char*, ...));
X
X/*
X *  lex_mode() arguments
X */
X#define LM_NORMAL   0
X#define LM_DATA	    1
X#define LM_SQUOTE   2
X#define LM_DQUOTE   3
X
X#endif /* LEX_H */
END_OF_FILE
if test 1476 -ne `wc -c <'cook/lex.h'`; then
    echo shar: \"'cook/lex.h'\" unpacked with wrong size!
fi
# end of 'cook/lex.h'
fi
if test -f 'cook/match.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/match.h'\"
else
echo shar: Extracting \"'cook/match.h'\" \(1407 characters\)
sed "s/^X//" >'cook/match.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/match.c
X */
X
X#ifndef MATCH_H
X#define MATCH_H
X
X#include <main.h>
X#include <word.h>
X
X#define MATCH_CHAR '%'
X
Xtypedef struct match_ty match_ty;
Xstruct match_ty
X{
X	string_ty	*fill[11];
X	match_ty	*next;
X};
X
Xmatch_ty *match _((string_ty *, string_ty *));
Xstring_ty *reconstruct _((string_ty *, match_ty *));
Xvoid match_push _((match_ty *));
Xmatch_ty *match_pop _((void));
Xmatch_ty *match_top _((void));
Xvoid match_free _((match_ty *));
Xmatch_ty *wl_match _((wlist *, string_ty *));
Xvoid wl_reconstruct _((wlist *, wlist *, match_ty *));
X
X#endif /* MATCH_H */
END_OF_FILE
if test 1407 -ne `wc -c <'cook/match.h'`; then
    echo shar: \"'cook/match.h'\" unpacked with wrong size!
fi
# end of 'cook/match.h'
fi
if test -f 'doc/function/basename.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/basename.so'\"
else
echo shar: Extracting \"'doc/function/basename.so'\" \(1472 characters\)
sed "s/^X//" >'doc/function/basename.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Basename
X.\"
X.H 2 "basename"
XThe
X.I basename
Xtreats each argument as filenames,
Xand extracts all but the suffix of each filename.
XIf the filename contains a period,
Xthe basename is everything up to (but not including) the period.
XOtherwise,
Xthe basename is the entire filename.
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X[basename foo.c];foo
X[basename foo/bar.c];foo/bar
X[basename baz];baz
X.TE
X.H 3 "See Also"
Xdirname, entryname, suffix
X.H 3 "Caveat"
XThis function is almost nothing like the unix command of the same name.
XIt operates in this manner for compatibility with other packages.
END_OF_FILE
if test 1472 -ne `wc -c <'doc/function/basename.so'`; then
    echo shar: \"'doc/function/basename.so'\" unpacked with wrong size!
fi
# end of 'doc/function/basename.so'
fi
if test -f 'doc/function/catenate.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/catenate.so'\"
else
echo shar: Extracting \"'doc/function/catenate.so'\" \(1357 characters\)
sed "s/^X//" >'doc/function/catenate.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Catenate
X.\"
X.H 2 "catenate"
XThis function requires zero or more arguments.
XIf no arguments are supplied,
Xthe result is an empty word list.
XIf one or more arguments are supplied,
Xthe result is a word list of one word
Xbeing the catenation of all of the arguments.
X.H 3 "Example"
X.TS
Xcenter;
Xl l.
XExpression	Result
X_
X[catenate a]	a
X[catenate a b]	ab
X[catenate a " " b]	"a b"
X.TE
XQuotes used in the results for clarity.
X.H 3 "See Also"
Xsplit, unsplit, prepost, join
END_OF_FILE
if test 1357 -ne `wc -c <'doc/function/catenate.so'`; then
    echo shar: \"'doc/function/catenate.so'\" unpacked with wrong size!
fi
# end of 'doc/function/catenate.so'
fi
if test -f 'doc/function/collect.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/collect.so'\"
else
echo shar: Extracting \"'doc/function/collect.so'\" \(1427 characters\)
sed "s/^X//" >'doc/function/collect.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Collect
X.\"
X.H 2 "collect"
XThe arguments are interpreted as a command to be passed to the operating system.
XThe result is one word for
Xeach white-space separated word of the output of the command.
X.P
XThe command will not be echoed unless the -No_Silent option
Xis specified on the command line.
X.H 3 "Example"
XRead the date and time and assign it to a variable:
X.eB
Xnow = [collect date];
X.eE
XDo not use the collect function to expand a filename wildcard,
Xused the [glob] function instead.
X.H 3 "See Also"
Xcollect_lines, execute, glob
END_OF_FILE
if test 1427 -ne `wc -c <'doc/function/collect.so'`; then
    echo shar: \"'doc/function/collect.so'\" unpacked with wrong size!
fi
# end of 'doc/function/collect.so'
fi
if test -f 'doc/function/execute.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/execute.so'\"
else
echo shar: Extracting \"'doc/function/execute.so'\" \(1376 characters\)
sed "s/^X//" >'doc/function/execute.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Execute
X.\"
X.H 2 "execute"
XThis function requires at least one argument, and
Xexecutes the command given by the arguments.
XIf the executed command returns non-zero exit status
Xthe resulting value is "" (false),
Xotherwise it is "1" (true).
X.P
XThe command will not be echoed unless the -No_Silent option
Xis specified on the command line.
X.H 3 "Caveat"
XThis function is not often required as its
Xfunctionality is available in a more useful for as recipe bodies.
X.H 3 "See Also"
Xcollect
END_OF_FILE
if test 1376 -ne `wc -c <'doc/function/execute.so'`; then
    echo shar: \"'doc/function/execute.so'\" unpacked with wrong size!
fi
# end of 'doc/function/execute.so'
fi
if test -f 'doc/function/exists.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/exists.so'\"
else
echo shar: Extracting \"'doc/function/exists.so'\" \(1433 characters\)
sed "s/^X//" >'doc/function/exists.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Exists
X.\"
X.H 2 "exists"
XThis function requires one argument,
Xbeing the name of a file to test for existence.
XThe resulting wordlist is "" (false) if the file does not exist,
Xand "1" (true) if the file does exist.
X.H 3 "Example"
XTo remove the target of a recipe before building it again:
X.eB
X%.a: [%_obj]
X{
X	if [exists [target]] then
X		rm [target]
X			set clearstat;
X	[ar] qc [target] [%_obj];
X}
X.eE
XNote:
Xyou
X.I must
Xuse the clearstat,
Xbecause otherwise cook's "stat cache" will be incorrect.
X.H 3 "See Also"
Xcando, find_command, uptodate
END_OF_FILE
if test 1433 -ne `wc -c <'doc/function/exists.so'`; then
    echo shar: \"'doc/function/exists.so'\" unpacked with wrong size!
fi
# end of 'doc/function/exists.so'
fi
if test -f 'doc/function/find_cmd.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/find_cmd.so'\"
else
echo shar: Extracting \"'doc/function/find_cmd.so'\" \(1477 characters\)
sed "s/^X//" >'doc/function/find_cmd.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Find_command
X.\"
X.H 2 "find_command"
XThis function requires at least one argument,
Xbeing the names of commands to search for in $PATH.
XThe resulting word list contains either "" (false) or a fully qualified
Xpath name for each command given.
X.H 3 "Example"
XSome systems require
X.IR ranlib (1)
Xto be run on archives,
Xand some do not.
XHere is a simple way to test:
X.eB
Xranlib = [find_command ranlib];
X
X%.a: [%_obj]
X{
X	if [exists [target]] then
X		rm [target]
X			set clearstat;
X	ar qc [target] [%_obj];
X	if [ranlib] then
X		[ranlib] [target];
X}
X.eE
X.H 3 "See Also"
Xcando, exists, uptodate
END_OF_FILE
if test 1477 -ne `wc -c <'doc/function/find_cmd.so'`; then
    echo shar: \"'doc/function/find_cmd.so'\" unpacked with wrong size!
fi
# end of 'doc/function/find_cmd.so'
fi
if test -f 'doc/function/fromto.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/fromto.so'\"
else
echo shar: Extracting \"'doc/function/fromto.so'\" \(1354 characters\)
sed "s/^X//" >'doc/function/fromto.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Fromto
X.\"
X.H 2 "fromto"
XThis function requires at least two arguments.
XFromto gives the user access to the wildcard transformations available to
X.BR cook .
XThe first argument is the "from" form,
Xthe second argument is the "to" form.
XAll other arguments are mapped from one to the other.
X.H 3 "Example"
XGiven a list of C sources files,
Xgenerate a list of object files as follows:
X.eB
Xobj = [fromto %.c %.o [src]];
X.eE
X.H 3 "See Also"
Xfilter, filter_out, subst
END_OF_FILE
if test 1354 -ne `wc -c <'doc/function/fromto.so'`; then
    echo shar: \"'doc/function/fromto.so'\" unpacked with wrong size!
fi
# end of 'doc/function/fromto.so'
fi
if test -f 'doc/function/getenv.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/getenv.so'\"
else
echo shar: Extracting \"'doc/function/getenv.so'\" \(1350 characters\)
sed "s/^X//" >'doc/function/getenv.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Getenv
X.\"
X.H 2 "getenv"
XEach argument is treated as the name of an environment variable.
XThe result is the value of each argument variable,
Xor "" if it does not exist.
X.H 3 "Example"
XTo read the value of the HOME environemnt variable:
X.eB
Xhome = [getenv HOME];
X.eE
X.P
XValues of variables are not automagically set from the environment,
Xyou must set each one explicitly:
X.eB
Xcc = [getenv CC];
Xif [not [cc]] then
X	cc = gcc;
X.eE
X.H 3 "See Also"
Xfind_command
END_OF_FILE
if test 1350 -ne `wc -c <'doc/function/getenv.so'`; then
    echo shar: \"'doc/function/getenv.so'\" unpacked with wrong size!
fi
# end of 'doc/function/getenv.so'
fi
if test -f 'doc/function/head.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/head.so'\"
else
echo shar: Extracting \"'doc/function/head.so'\" \(1480 characters\)
sed "s/^X//" >'doc/function/head.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Head
X.\"
X.H 2 "head"
XThis function requires zero or more arguments.
XThe wordlist returned is empty if there were no arguments,
Xor the first argument if there were arguments.
X.H 3 "Example"
XYou can iterate along a list using the
X.I loop
Xstatement combined with the
X.I head
Xand
X.I tail
Xfunctions:
X.eB
Xdirs = a b c d;
Xsrc = ;
X
Xtmp = [dirs];
Xloop
X{
X	tmp_dir = [head [tmp]];
X	if [not [tmp_dir]] then
X		loopstop;
X	tmp = [tail [tmp]];
X	src = [src] [glob [tmp_dir]/*.c];
X}
X.eE
XMore efficient ways exist to do this,
Xthis an example only.
X.H 3 "See Also"
Xcount, glob, fromto, prepost, tail, word
END_OF_FILE
if test 1480 -ne `wc -c <'doc/function/head.so'`; then
    echo shar: \"'doc/function/head.so'\" unpacked with wrong size!
fi
# end of 'doc/function/head.so'
fi
if test -f 'doc/function/if.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/if.so'\"
else
echo shar: Extracting \"'doc/function/if.so'\" \(1340 characters\)
sed "s/^X//" >'doc/function/if.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, If
X.\"
X.H 2 "if"
XThis function requires one or more arguments,
Xthe arguments before the "then" word are used as a condition.
XIf the condition is true the words between the "then" word and the
X"else" word are the result, otherwise the words after the "else" word
Xare the value.
XThe "else" clause is optional.
XThere is no way to escape the "then" and "else" words.
X.H 3 "Caveat"
XIt is often clearer to use the
X.I "if statement"
Xthan this function.
END_OF_FILE
if test 1340 -ne `wc -c <'doc/function/if.so'`; then
    echo shar: \"'doc/function/if.so'\" unpacked with wrong size!
fi
# end of 'doc/function/if.so'
fi
if test -f 'doc/function/in.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/in.so'\"
else
echo shar: Extracting \"'doc/function/in.so'\" \(1376 characters\)
sed "s/^X//" >'doc/function/in.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, In
X.\"
X.H 2 "in"
XThis function requires one or more arguments.
XThe wordlist returned is a single word: "1" (true) if the first argument is
Xequal to any of the later ones; "" (false) if not.
X.P
XThis function can also be used for equality testing,
Xjust use a single element in the set.
X.H 3 "Example"
XFrequently seen in conditional parts of recipes:
X.eB
X%: [%_obj]
X{
X	[cc] -o [target] [%_obj];
X	if [in [target] [private]] then
X		chmod og-rwx [target];
X}
X.eE
X.H 3 "See Also"
Xstringset
END_OF_FILE
if test 1376 -ne `wc -c <'doc/function/in.so'`; then
    echo shar: \"'doc/function/in.so'\" unpacked with wrong size!
fi
# end of 'doc/function/in.so'
fi
if test -f 'doc/function/join.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/join.so'\"
else
echo shar: Extracting \"'doc/function/join.so'\" \(1343 characters\)
sed "s/^X//" >'doc/function/join.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Join
X.\"
X.H 2 "join"
XThe
X.I join
Xfunction is used to join two sets of strings together,
Xelement by element.
XThe argument list must contain an even number of arguments,
Xwith the first have joind pair-wise with the last half.
XThere is no marker of any kind between the lists,
Xso the user needs to ensure they are both the same length.
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[join a b c d];ac db
X[join a b];ab
X.TE
X.H 3 "See Also"
Xcatenate, basename, suffix
END_OF_FILE
if test 1343 -ne `wc -c <'doc/function/join.so'`; then
    echo shar: \"'doc/function/join.so'\" unpacked with wrong size!
fi
# end of 'doc/function/join.so'
fi
if test -f 'doc/function/match_mask.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/match_mask.so'\"
else
echo shar: Extracting \"'doc/function/match_mask.so'\" \(1329 characters\)
sed "s/^X//" >'doc/function/match_mask.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Match_mask
X.\"
X.H 2 "match_mask"
XThis function requires one or more arguments.
XThe first argument is a pattern,
Xthe second and later arguments are strings to match against this pattern.
XThe resulting wordlist contains those arguments which
Xmatched the pattern given as the first argument.
X.H 3 "Example"
X.TS
Xtab(;),center;
Xl l.
XExpression;Result
X_
X[match_mask %.c a.c a.o];a.c
X[match_mask %.cc a.c a.o];
X.TE
X.H 3 "See Also"
Xfilter-out
END_OF_FILE
if test 1329 -ne `wc -c <'doc/function/match_mask.so'`; then
    echo shar: \"'doc/function/match_mask.so'\" unpacked with wrong size!
fi
# end of 'doc/function/match_mask.so'
fi
if test -f 'doc/function/matches.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/matches.so'\"
else
echo shar: Extracting \"'doc/function/matches.so'\" \(1359 characters\)
sed "s/^X//" >'doc/function/matches.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Matches
X.\"
X.H 2 "matches"
XThis function requires one or more arguments.
XThe first argument is a pattern,
Xthe second and later arguments are strings to match against the
Xpattern.
XThe resulting wordlist contains "" (false) if did not
Xmatch and "1" (true) if it did.
X.H 3 "Example"
XThis function may be used to test for 
Xstrings which have a particular form:
X.eB
Xif [matches %1C%2 [version]] then
X	cc_flags = [cc_flags] -DDEBUG
X.eE
X.H 3 "See Also"
Xfilter, filter-out
END_OF_FILE
if test 1359 -ne `wc -c <'doc/function/matches.so'`; then
    echo shar: \"'doc/function/matches.so'\" unpacked with wrong size!
fi
# end of 'doc/function/matches.so'
fi
if test -f 'doc/function/patsubst.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/patsubst.so'\"
else
echo shar: Extracting \"'doc/function/patsubst.so'\" \(1411 characters\)
sed "s/^X//" >'doc/function/patsubst.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Patsubst
X.\"
X.H 2 "patsubst"
XThis function requires at least two arguments.
XPatsubst gives the user access to the wildcard transformations available to
X.BR cook .
XThe first argument is the "from" form,
Xthe second argument is the "to" form.
XAll other arguments are mapped from one to the other.
X.H 3 "Example"
XGiven a list of C sources files,
Xgenerate a list of object files as follows:
X.eB
Xobj = [patsubst %.c %.o [src]];
X.eE
X.H 3 "See Also"
Xfilter, filter_out, subst
X.P
XSee the pattern matching chapter for more information about patterns.
END_OF_FILE
if test 1411 -ne `wc -c <'doc/function/patsubst.so'`; then
    echo shar: \"'doc/function/patsubst.so'\" unpacked with wrong size!
fi
# end of 'doc/function/patsubst.so'
fi
if test -f 'doc/function/resolve.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/resolve.so'\"
else
echo shar: Extracting \"'doc/function/resolve.so'\" \(1449 characters\)
sed "s/^X//" >'doc/function/resolve.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Resolve
X.\"
X.H 2 "resolve"
XThis builtin function is used to resolve file names when using the
X.I search_list
Xvariable to locate files.
XThis builtin function produces resolved file names as output.
XThis is useful when taking partial copies of a source
Xto perform controlled updates.
XThe targets of recipes are always cooked into the current directory.
X.H 3 "Example"
XThis function is used in cookbooks
Xwhich  use the
X.I search_list
Xfunctionality:
X.eB
Xsearch_list = . baseline;
X
X%.o: %.c
X{
X	[cc] [cc_flags] [addprefix -I [search_list]] [resolve %.c];
X}
X.eE
END_OF_FILE
if test 1449 -ne `wc -c <'doc/function/resolve.so'`; then
    echo shar: \"'doc/function/resolve.so'\" unpacked with wrong size!
fi
# end of 'doc/function/resolve.so'
fi
if test -f 'doc/function/shell.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/shell.so'\"
else
echo shar: Extracting \"'doc/function/shell.so'\" \(1403 characters\)
sed "s/^X//" >'doc/function/shell.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Shell
X.\"
X.H 2 "shell"
XThe arguments are interpreted as a command to be passed to the operating system.
XThe result is one word for
Xeach white-space separated word of the output of the command.
X.P
XThe command will not be echoed unless the -No_Silent option
Xis specified on the command line.
X.H 3 "Example"
XRead the date and time and assign it to a variable:
X.eB
Xnow = [shell date];
X.eE
XDo not use the shell function to expand a filename wildcard,
Xused the [wildcard] function instead.
X.H 3 "See Also"
Xcollect_lines, execute, wildcard
END_OF_FILE
if test 1403 -ne `wc -c <'doc/function/shell.so'`; then
    echo shar: \"'doc/function/shell.so'\" unpacked with wrong size!
fi
# end of 'doc/function/shell.so'
fi
if test -f 'doc/function/sort_newest.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/sort_newest.so'\"
else
echo shar: Extracting \"'doc/function/sort_newest.so'\" \(1396 characters\)
sed "s/^X//" >'doc/function/sort_newest.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Sort_newest
X.\"
X.H 2 "sort_newest"
XThe arguments are sorted by file last-modified time,
Xyoungest to oldest.
XFile names are resolved first (see the resolve function, below).
XAbsent files will be sorted to the start of the list.
X.H 3 "Example"
XThis function is often used to "shorten the wait" when building large project,
Xso that the file you edited most recently is recompiled almost immediately:
X.eB
Xsrc = [glob *.c];
Xobj = [sort_newest [fromto %.c %.o [src]]];
X.eE
X.H 3 "See Also"
Xfromto, glob, sort
END_OF_FILE
if test 1396 -ne `wc -c <'doc/function/sort_newest.so'`; then
    echo shar: \"'doc/function/sort_newest.so'\" unpacked with wrong size!
fi
# end of 'doc/function/sort_newest.so'
fi
if test -f 'doc/function/split.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/split.so'\"
else
echo shar: Extracting \"'doc/function/split.so'\" \(1423 characters\)
sed "s/^X//" >'doc/function/split.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Split
X.\"
X.H 2 "Split"
XThe
X.I split
Xfunction is used to split strings into multiple strings,
Xgiven the separator.
XThis function requires at least one argument.
XThe first argument is the separator character,
Xthe second and subsequent arguments are to be separated.
XThe result is the separated strings, each as a separate word.
X.H 3 Example
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[split : foo:bar:baz];foo bar baz
X[split " " "New York"];New York
X.TE
XEach of the words in the result is a separate string.
X.H 3 "See Also"
Xunsplit, join, catenate, strip
END_OF_FILE
if test 1423 -ne `wc -c <'doc/function/split.so'`; then
    echo shar: \"'doc/function/split.so'\" unpacked with wrong size!
fi
# end of 'doc/function/split.so'
fi
if test -f 'doc/function/stringset.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/stringset.so'\"
else
echo shar: Extracting \"'doc/function/stringset.so'\" \(1390 characters\)
sed "s/^X//" >'doc/function/stringset.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Stringset
X.\"
X.H 2 "stringset"
XLogical operations are performed on sets of strings.
XThese include conjunction (implicit),
Xdisjunction
X.RB ( & )
Xand difference
X.RB ( - ).
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[stringset a b a];a b
X[stringset a b c & a];a
X[stringset a b c - a];b c
X.TE
X.P
XThe can be very useful in constructing lists of source files:
X.eB
Xsrc = [stringset [glob "*.[cyl]" ] - y.tab.c lex.yy.c];
X.eE
X.H 3 "See Also"
Xfilter, filter_out, glob, in, patsubst, subst
END_OF_FILE
if test 1390 -ne `wc -c <'doc/function/stringset.so'`; then
    echo shar: \"'doc/function/stringset.so'\" unpacked with wrong size!
fi
# end of 'doc/function/stringset.so'
fi
if test -f 'doc/function/unsplit.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/unsplit.so'\"
else
echo shar: Extracting \"'doc/function/unsplit.so'\" \(1378 characters\)
sed "s/^X//" >'doc/function/unsplit.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Unsplit
X.\"
X.H 2 "Unsplit"
XThe
X.I unsplit
Xfunction is used to glue strings together,
Xusing the specified glue.
XThe first argument is the text to go between
Xeach of the second and subsequent arguments.
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[unsplit ":" one two three];"one:two:three"
X[unsplit " " four five six];"four five six"
X.TE
XThe quotes are necessary to isolate characters such as colon and space
Xwhich cook would normally treat differently.
X.H 3 "See Also"
Xsplit, catenate, prepost
END_OF_FILE
if test 1378 -ne `wc -c <'doc/function/unsplit.so'`; then
    echo shar: \"'doc/function/unsplit.so'\" unpacked with wrong size!
fi
# end of 'doc/function/unsplit.so'
fi
if test -f 'find_libs/os.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'find_libs/os.c'\"
else
echo shar: Extracting \"'find_libs/os.c'\" \(1396 characters\)
sed "s/^X//" >'find_libs/os.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to isolate operating system interface
X */
X
X#include <sys/types.h>
X#include <sys/stat.h>
X#include <errno.h>
X
X#include <error.h>
X#include <os.h>
X
X/*
X *  NAME
X *	os_exists - tests for the existence of a file
X *
X *  SYNOPSIS
X *	int os_exists(char *filename);
X *
X *  DESCRIPTION
X *	Os_returns 1 if the file exists, 0 if it does not.
X */
X
Xint
Xos_exists(filename)
X	char	*filename;
X{
X	struct stat	st;
X
X	if (stat(filename, &st))
X	{
X		switch (errno)
X		{
X		case ENOENT:
X		case ENOTDIR:
X			break;
X
X		default:
X			nfatal("%s", filename);
X		}
X		return 0;
X	}
X	return 1;
X}
END_OF_FILE
if test 1396 -ne `wc -c <'find_libs/os.c'`; then
    echo shar: \"'find_libs/os.c'\" unpacked with wrong size!
fi
# end of 'find_libs/os.c'
fi
if test -f 'lib/lex' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/lex'\"
else
echo shar: Extracting \"'lib/lex'\" \(1524 characters\)
sed "s/^X//" >'lib/lex' <<'END_OF_FILE'
X/*
X * NAME
X *	lex - the lex cookbook
X *
X * DESCRIPTION
X *	This cookbook describes how to work with lex files.
X *
X * RECIPES
X *	%.l: %.c	make C source files from lex source files
X *	
X * VARIABLES
X *	lex		The lex command
X *			Not altered if already defined.
X *	lex_flags	Options to pass to the lex command
X *			Not altered if already defined.
X *			The default is empty.
X *	lex_src		lex source files in the current directory.
X *	dot_src		Source files constructable in the current directory
X *			(unioned with existing setting, if necessary).
X *	dot_obj		Object files constructable in the current directory
X *			(unioned with existing setting, if necessary).
X *	dot_clean	Files which may be removed from the current directory
X *			in a clean target.			
X *	dot_lint_obj	Lint object files constructable in the current directory
X *			(unioned with existing setting, if necessary).
X *
X * MANIFEST: cookbook for using lex
X */
X
X#pragma once
X
X#include "c"
X
Xif [not [defined lex]] then
X    lex = lex;
Xif [not [defined lex_flags]] then
X    lex_flags = ;
Xlex_src = [glob *.l];
Xdot_src =
X    [stringset
X	    [dot_src] [lex_src]
X	-
X	    [fromto %.l %.c [lex_src]]
X	    [fromto %.l %.s [lex_src]]
X    ];
Xdot_obj = [stringset [dot_obj] [fromto %.l %.o [lex_src]]];
Xdot_clean =
X    [stringset
X	[dot_clean]
X	[fromto %.l %.c [lex_src]]
X	[fromto %.l %.ln [lex_src]]
X	[fromto %.l %.s [lex_src]]
X	lex.yy.c
X    ];
Xdot_lint_obj = [stringset [dot_lint_obj] [fromto %.l %.ln [lex_src]]];
X
X%.c: %.l
X    {
X	[lex] [lex_flags] %.l;
X	mv lex.yy.c %.c;
X    }
END_OF_FILE
if test 1524 -ne `wc -c <'lib/lex'`; then
    echo shar: \"'lib/lex'\" unpacked with wrong size!
fi
# end of 'lib/lex'
fi
if test -f 'man1/copyright.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/copyright.so'\"
else
echo shar: Extracting \"'man1/copyright.so'\" \(1447 characters\)
sed "s/^X//" >'man1/copyright.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: copyright notice for manual entries
X.\"
X.br
X.ne 1i
X.SH COPYRIGHT
X.so ../doc/version.so
X.I \*(n)
Xversion \*(v)
X.br
XCopyright
X.if n (C)
X.if t \(co
X1988, 1989, 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.br
XAll rights reserved.
X.PP
XThe
X.I \*(n)
Xprogram is distributed in the hope that it will be useful,
Xbut WITHOUT ANY WARRANTY;
Xwithout even the implied warranty
Xof MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
XSee the GNU General Public License for more details.
X.br
X.ne 1i
X.SH AUTHOR
X.TS
Xcenter,tab(;);
Xl l l.
XPeter Miller;UUCP;uunet!munnari!bmr.gov.au!pmiller
X/\e/\e*;Internet;pmiller@bmr.gov.au
X.TE
END_OF_FILE
if test 1447 -ne `wc -c <'man1/copyright.so'`; then
    echo shar: \"'man1/copyright.so'\" unpacked with wrong size!
fi
# end of 'man1/copyright.so'
fi
if test -f 'test/00/t0001a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0001a.sh'\"
else
echo shar: Extracting \"'test/00/t0001a.sh'\" \(1470 characters\)
sed "s/^X//" >'test/00/t0001a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "and" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "and"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [ and 0 0 ] then fail;
X	if [ and 0 1 ] then fail;
X	if [ and 1 0 ] then fail;
X	if [not [ and 1 1 ]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1470 -ne `wc -c <'test/00/t0001a.sh'`; then
    echo shar: \"'test/00/t0001a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0001a.sh'
fi
if test -f 'test/00/t0002a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0002a.sh'\"
else
echo shar: Extracting \"'test/00/t0002a.sh'\" \(1520 characters\)
sed "s/^X//" >'test/00/t0002a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test "catenate" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "catenate"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [catenate] then fail;
X	if [not [in [catenate x] x]] then fail;
X	if [not [in [catenate x y] xy]] then fail;
X	if [not [in [catenate x y z] xyz]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1520 -ne `wc -c <'test/00/t0002a.sh'`; then
    echo shar: \"'test/00/t0002a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0002a.sh'
fi
if test -f 'test/00/t0003a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0003a.sh'\"
else
echo shar: Extracting \"'test/00/t0003a.sh'\" \(1437 characters\)
sed "s/^X//" >'test/00/t0003a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test "collect" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "collect"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	answer = [collect echo a b c];
X	if [not [in [count [answer]] 3]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1437 -ne `wc -c <'test/00/t0003a.sh'`; then
    echo shar: \"'test/00/t0003a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0003a.sh'
fi
if test -f 'test/00/t0004a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0004a.sh'\"
else
echo shar: Extracting \"'test/00/t0004a.sh'\" \(1459 characters\)
sed "s/^X//" >'test/00/t0004a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test "collect_lines" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the builtin function "collect_lines"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	answer = [collect_lines echo a b c];
X	if [not [in [count [answer]] 1]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1459 -ne `wc -c <'test/00/t0004a.sh'`; then
    echo shar: \"'test/00/t0004a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0004a.sh'
fi
if test -f 'test/00/t0006a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0006a.sh'\"
else
echo shar: Extracting \"'test/00/t0006a.sh'\" \(1448 characters\)
sed "s/^X//" >'test/00/t0006a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "defined" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "defined"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtrythis = snit;
Xtest:
X{
X	if [defined foo] then fail;
X	if [not [defined trythis]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1448 -ne `wc -c <'test/00/t0006a.sh'`; then
    echo shar: \"'test/00/t0006a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0006a.sh'
fi
if test -f 'test/00/t0008a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0008a.sh'\"
else
echo shar: Extracting \"'test/00/t0008a.sh'\" \(1413 characters\)
sed "s/^X//" >'test/00/t0008a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "downcase" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "downcase"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [downcase ABcd] abcd]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1413 -ne `wc -c <'test/00/t0008a.sh'`; then
    echo shar: \"'test/00/t0008a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0008a.sh'
fi
if test -f 'test/00/t0010a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0010a.sh'\"
else
echo shar: Extracting \"'test/00/t0010a.sh'\" \(1471 characters\)
sed "s/^X//" >'test/00/t0010a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "execute" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "execute"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [execute sh -c \'exit 1\'] then fail;
X	if [not [execute sh -c \'exit 0\']] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1471 -ne `wc -c <'test/00/t0010a.sh'`; then
    echo shar: \"'test/00/t0010a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0010a.sh'
fi
if test -f 'test/00/t0011a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0011a.sh'\"
else
echo shar: Extracting \"'test/00/t0011a.sh'\" \(1436 characters\)
sed "s/^X//" >'test/00/t0011a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "exists" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "exists"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [exists bullshit] then fail;
X	if [not [exists Howto.cook]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1436 -ne `wc -c <'test/00/t0011a.sh'`; then
    echo shar: \"'test/00/t0011a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0011a.sh'
fi
if test -f 'test/00/t0012a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0012a.sh'\"
else
echo shar: Extracting \"'test/00/t0012a.sh'\" \(1507 characters\)
sed "s/^X//" >'test/00/t0012a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "find_command" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "find_command"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [find_command really_stupid] then fail;
X	if [not [in [find_command sh] /bin/sh /usr/bin/sh /usr/ucb/sh
X		/sbin/sh ] ] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1507 -ne `wc -c <'test/00/t0012a.sh'`; then
    echo shar: \"'test/00/t0012a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0012a.sh'
fi
if test -f 'test/00/t0013a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0013a.sh'\"
else
echo shar: Extracting \"'test/00/t0013a.sh'\" \(1504 characters\)
sed "s/^X//" >'test/00/t0013a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "fromto" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "fromto"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [fromto %.c %.o foobar.c] foobar.o]] then fail;
X	if [not [in [fromto %1/%2.c %1/%2.o snot/foobar.c] snot/foobar.o]]
X		then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1504 -ne `wc -c <'test/00/t0013a.sh'`; then
    echo shar: \"'test/00/t0013a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0013a.sh'
fi
if test -f 'test/00/t0014a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0014a.sh'\"
else
echo shar: Extracting \"'test/00/t0014a.sh'\" \(1514 characters\)
sed "s/^X//" >'test/00/t0014a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "getenv" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "getenv"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
XLOGNAME=${LOGNAME:-${USER:-`whoami`}}
Xexport LOGNAME
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [getenv HOME] $HOME]] then fail;
X	if [not [in [getenv LOGNAME] $LOGNAME]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1514 -ne `wc -c <'test/00/t0014a.sh'`; then
    echo shar: \"'test/00/t0014a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0014a.sh'
fi
if test -f 'test/00/t0016a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0016a.sh'\"
else
echo shar: Extracting \"'test/00/t0016a.sh'\" \(1512 characters\)
sed "s/^X//" >'test/00/t0016a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "match" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "match"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [match %.a balsup] then fail; 
X	if [not [match %.c foo.c]] then fail;
X	if [matches %.a balsup] then fail; 
X	if [not [matches %.c foo.c]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1512 -ne `wc -c <'test/00/t0016a.sh'`; then
    echo shar: \"'test/00/t0016a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0016a.sh'
fi
if test -f 'test/00/t0017a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0017a.sh'\"
else
echo shar: Extracting \"'test/00/t0017a.sh'\" \(1506 characters\)
sed "s/^X//" >'test/00/t0017a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "head" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "head"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [head ab cd ef] ab]] then fail;
X	if [not [in [head ab cd] ab]] then fail;
X	if [not [in [head ab] ab]] then fail;
X	if [head] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1506 -ne `wc -c <'test/00/t0017a.sh'`; then
    echo shar: \"'test/00/t0017a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0017a.sh'
fi
if test -f 'test/00/t0019a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0019a.sh'\"
else
echo shar: Extracting \"'test/00/t0019a.sh'\" \(1434 characters\)
sed "s/^X//" >'test/00/t0019a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "in" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "in"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [in a b c d] then fail;
X	if [in a] then fail;
X	if [not [in a a]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1434 -ne `wc -c <'test/00/t0019a.sh'`; then
    echo shar: \"'test/00/t0019a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0019a.sh'
fi
if test -f 'test/00/t0020a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0020a.sh'\"
else
echo shar: Extracting \"'test/00/t0020a.sh'\" \(1470 characters\)
sed "s/^X//" >'test/00/t0020a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "match_mask" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "match_mask"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [match_mask %.c foo bar baz] then fail;
X	if [not [match_mask %.c foo.o bar.c baz.y]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1470 -ne `wc -c <'test/00/t0020a.sh'`; then
    echo shar: \"'test/00/t0020a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0020a.sh'
fi
if test -f 'test/00/t0021a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0021a.sh'\"
else
echo shar: Extracting \"'test/00/t0021a.sh'\" \(1433 characters\)
sed "s/^X//" >'test/00/t0021a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "mtime" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "mtime"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [mtime not_there] then fail;
X	if [not [mtime Howto.cook]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1433 -ne `wc -c <'test/00/t0021a.sh'`; then
    echo shar: \"'test/00/t0021a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0021a.sh'
fi
if test -f 'test/00/t0022a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0022a.sh'\"
else
echo shar: Extracting \"'test/00/t0022a.sh'\" \(1437 characters\)
sed "s/^X//" >'test/00/t0022a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "not" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "not"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [not]] then fail;
X	if [not foo] then fail;
X	if [not [not 0]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1437 -ne `wc -c <'test/00/t0022a.sh'`; then
    echo shar: \"'test/00/t0022a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0022a.sh'
fi
if test -f 'test/00/t0023a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0023a.sh'\"
else
echo shar: Extracting \"'test/00/t0023a.sh'\" \(1468 characters\)
sed "s/^X//" >'test/00/t0023a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "or" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "or"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [or 0 0] then fail;
X	if [not [or 0 1]] then fail;
X	if [not [or 1 0]] then fail;
X	if [not [or 1 1]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1468 -ne `wc -c <'test/00/t0023a.sh'`; then
    echo shar: \"'test/00/t0023a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0023a.sh'
fi
if test -f 'test/00/t0025a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0025a.sh'\"
else
echo shar: Extracting \"'test/00/t0025a.sh'\" \(1410 characters\)
sed "s/^X//" >'test/00/t0025a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "prepost" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "prepost"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [prepost a b c] acb]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1410 -ne `wc -c <'test/00/t0025a.sh'`; then
    echo shar: \"'test/00/t0025a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0025a.sh'
fi
if test -f 'test/00/t0026a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0026a.sh'\"
else
echo shar: Extracting \"'test/00/t0026a.sh'\" \(1474 characters\)
sed "s/^X//" >'test/00/t0026a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "quote" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "quote"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [quote snot] '"snot"']] then fail;
X	if [not [in [quote [quote snot]] '"\\\\"snot\\\\""']] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1474 -ne `wc -c <'test/00/t0026a.sh'`; then
    echo shar: \"'test/00/t0026a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0026a.sh'
fi
if test -f 'test/00/t0028a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0028a.sh'\"
else
echo shar: Extracting \"'test/00/t0028a.sh'\" \(1407 characters\)
sed "s/^X//" >'test/00/t0028a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "tail" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "tail"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [count [tail a b c]] 2]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1407 -ne `wc -c <'test/00/t0028a.sh'`; then
    echo shar: \"'test/00/t0028a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0028a.sh'
fi
if test -f 'test/00/t0029a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0029a.sh'\"
else
echo shar: Extracting \"'test/00/t0029a.sh'\" \(1389 characters\)
sed "s/^X//" >'test/00/t0029a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the cook -Book option
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the cook -Book option' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > barf <<foobar
Xtest:
X{
X	echo "Hi, Mom";
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -book barf -nl > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1389 -ne `wc -c <'test/00/t0029a.sh'`; then
    echo shar: \"'test/00/t0029a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0029a.sh'
fi
if test -f 'test/00/t0033a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0033a.sh'\"
else
echo shar: Extracting \"'test/00/t0033a.sh'\" \(1427 characters\)
sed "s/^X//" >'test/00/t0033a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the c_incl program
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the c_incl program' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xif test $? -ne 0 ; then exit 1; fi
X
Xcd $tmp
Xif test $? -ne 0 ; then fail; fi
X
Xfoo='dummy!@#$%file'
X
X$bin/c_incl -nc $foo > /dev/null 2>&1
Xif test $? -ne 1 ; then fail; fi
X
X$bin/c_incl -nc -eia $foo
Xif test $? -ne 0 ; then fail; fi
X
Xpass
END_OF_FILE
if test 1427 -ne `wc -c <'test/00/t0033a.sh'`; then
    echo shar: \"'test/00/t0033a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0033a.sh'
fi
if test -f 'test/00/t0035a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0035a.sh'\"
else
echo shar: Extracting \"'test/00/t0035a.sh'\" \(1468 characters\)
sed "s/^X//" >'test/00/t0035a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the %0 pattern, it must not match absolute paths
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the "%0" pattern' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook << 'foobar'
Xtest:
X{
X	if [match_mask %0%1  /foo/bar] then fail;
X	if [not [match_mask /%0%1 /foo/bar ]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1468 -ne `wc -c <'test/00/t0035a.sh'`; then
    echo shar: \"'test/00/t0035a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0035a.sh'
fi
if test -f 'test/00/t0036a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0036a.sh'\"
else
echo shar: Extracting \"'test/00/t0036a.sh'\" \(1423 characters\)
sed "s/^X//" >'test/00/t0036a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the %1, etc, patterns
X# they may not match the empty string
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of "%n" patterns' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook << 'foobar'
Xtest:
X{
X	if [match_mask %1/%2  /foo] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1423 -ne `wc -c <'test/00/t0036a.sh'`; then
    echo shar: \"'test/00/t0036a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0036a.sh'
fi
echo shar: End of archive 3 \(of 19\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
