Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v28i094: cook - a file construction tool, V1.6, Part01/19
Message-id: <1.775008949.28543@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 28, Issue 94
Archive-Name: cook-1.6/part01

The cook program is a tool for constructing files.  It is given a set of
files to create, and recipes of how to create them.  In any non-trivial
program there will be prerequisites to performing the actions necessary to
creating any file, such as include files.  The cook program provides a
mechanism to define these.

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 19)."
# Contents:  MANIFEST README aux aux/config.h.in aux/new.so
#   aux/template aux/template/c aux/template/generic aux/template/h
#   aux/template/ms aux/template/sh c_incl c_incl/os.h common
#   common/ac common/ac/fcntl.h common/ac/limits.h common/ac/stddef.h
#   common/ac/stdlib.h common/fp common/fp/cksum.h
#   common/fp/combined.h common/fp/crc32.h common/fp/len.h
#   common/fp/md5.h common/fp/snefru.h common/help.h
#   common/patchlevel.h common/version-stmp.c common/version-stmp.h
#   common/version.h cook cook/builtin cook/builtin/basename.h
#   cook/builtin/collect.h cook/builtin/defined.h
#   cook/builtin/execute.h cook/builtin/exists.h cook/builtin/getenv.h
#   cook/builtin/glob.h cook/builtin/home.h cook/builtin/join.h
#   cook/builtin/opsys.h cook/builtin/split.h cook/builtin/stringset.h
#   cook/builtin/strip.h cook/builtin/subst.h cook/builtin/suffix.h
#   cook/builtin/unsplit.h cook/builtin/word.h cook/env.h
#   cook/hashline.h cook/listing.h cook/parse.h cookfp cooktime
#   cooktime/date.h doc doc/function doc/function.sh
#   doc/function/quote.so doc/function/sort.so doc/version.so
#   find_libs find_libs/os.h lib lib/gcc lib/home lib/print lib/rcs
#   lib/sccs lib/usr lib/usr.local make2cook make2cook/gram.h
#   make2cook/stmt make2cook/stmt/blank.h make2cook/vargram.h man1
#   man1/z_exit.so man1/z_name.so roffpp roffpp/preprocess.h test
#   test/00 txt2c txt2c/txt2c.h
# Wrapped by vixie@gw.home.vix.com on Sat Jul 23 17:11:16 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(13485 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X BUILDING                  10	
X LICENSE                   13	
X MANIFEST                   1	This shipping list
X Makefile.in               17	
X Manifest.author           14	
X README                     1	
X aux                        1	
X aux/BUILDING.man          10	
X aux/CHANGES.1.2           12	
X aux/CHANGES.1.3           14	
X aux/CHANGES.1.4           16	
X aux/CHANGES.1.5           19	
X aux/CHANGES.1.6           13	
X aux/CHANGES.sh             2	
X aux/Howto.cook            13	
X aux/MANIFEST.sh            5	
X aux/Makefi.file.sh         6	
X aux/Makefile.awk           2	
X aux/Makefile.head          5	
X aux/Makefile.sh            8	
X aux/README.man             8	
X aux/config.h.in            1	
X aux/configure.in           6	
X aux/new.1.4.so             3	
X aux/new.1.5.so             6	
X aux/new.1.6.so             2	
X aux/new.so                 1	
X aux/patch.file.sh          5	
X aux/patches.sh             2	
X aux/template               1	
X aux/template/c             1	
X aux/template/generic       1	
X aux/template/h             1	
X aux/template/man           3	
X aux/template/ms            1	
X aux/template/sh            1	
X aux/template/test          4	
X c_incl                     1	
X c_incl/cache.c            10	
X c_incl/cache.h             2	
X c_incl/lang_c.c            7	
X c_incl/lang_roff.c         7	
X c_incl/main.c              9	
X c_incl/os.c                3	
X c_incl/os.h                1	
X c_incl/sniff.c            11	
X c_incl/sniff.h             4	
X common                     1	
X common/ac                  1	
X common/ac/ar.h             4	
X common/ac/dirent.h         3	
X common/ac/fcntl.h          1	
X common/ac/limits.h         1	
X common/ac/stddef.h         1	
X common/ac/stdlib.h         1	
X common/ac/string.h         2	
X common/ac/time.h           2	
X common/ac/unistd.h         2	
X common/ansi.c              5	
X common/arglex.c           11	
X common/arglex.h            4	
X common/config.h.in         6	
X common/error.c            10	
X common/error.h             4	
X common/fp                  1	
X common/fp.c                5	
X common/fp.h                5	
X common/fp/README           2	
X common/fp/cksum.c          6	
X common/fp/cksum.h          1	
X common/fp/combined.c       7	
X common/fp/combined.h       1	
X common/fp/crc32.c          8	
X common/fp/crc32.h          1	
X common/fp/len.c            5	
X common/fp/len.h            1	
X common/fp/md5.c           11	
X common/fp/md5.h            1	
X common/fp/snefru.c        18	
X common/fp/snefru.h         1	
X common/help.c             12	
X common/help.h              1	
X common/main.h              2	
X common/mem.c               6	
X common/mem.h               2	
X common/mprintf.c          12	
X common/mprintf.h           2	
X common/patchlevel.h        1	
X common/s-v-arg.h           5	
X common/str.c              12	
X common/str.h               5	
X common/symtab.c            9	
X common/symtab.h            4	
X common/trace.c             9	
X common/trace.h             7	
X common/version-stmp.c      1	
X common/version-stmp.h      1	
X common/version.c          12	
X common/version.h           1	
X common/word.c              8	
X common/word.h              3	
X config                     7	
X configure                 16	
X cook                       1	
X cook/archive.c            15	
X cook/archive.h             2	
X cook/builtin               1	
X cook/builtin.c             8	
X cook/builtin.h             2	
X cook/builtin/addprefix.c   2	
X cook/builtin/addprefix.h   2	
X cook/builtin/addsuffix.c   2	
X cook/builtin/addsuffix.h   2	
X cook/builtin/basename.c    3	
X cook/builtin/basename.h    1	
X cook/builtin/boolean.c     8	
X cook/builtin/boolean.h     2	
X cook/builtin/collect.c     6	
X cook/builtin/collect.h     1	
X cook/builtin/cook.c        9	
X cook/builtin/cook.h        2	
X cook/builtin/defined.c     5	
X cook/builtin/defined.h     1	
X cook/builtin/execute.c     6	
X cook/builtin/execute.h     1	
X cook/builtin/exists.c      5	
X cook/builtin/exists.h      1	
X cook/builtin/filter_out.c  5	
X cook/builtin/filter_out.h  2	
X cook/builtin/find_command.c  7	
X cook/builtin/find_command.h  2	
X cook/builtin/findstring.c  4	
X cook/builtin/findstring.h  2	
X cook/builtin/getenv.c      5	
X cook/builtin/getenv.h      1	
X cook/builtin/glob.c        9	
X cook/builtin/glob.h        1	
X cook/builtin/home.c        4	
X cook/builtin/home.h        1	
X cook/builtin/join.c        2	
X cook/builtin/join.h        1	
X cook/builtin/match.c       8	
X cook/builtin/match.h       2	
X cook/builtin/opsys.c       7	
X cook/builtin/opsys.h       1	
X cook/builtin/pathname.c    7	
X cook/builtin/pathname.h    2	
X cook/builtin/split.c       3	
X cook/builtin/split.h       1	
X cook/builtin/stringset.c   7	
X cook/builtin/stringset.h   1	
X cook/builtin/strip.c       4	
X cook/builtin/strip.h       1	
X cook/builtin/subst.c       3	
X cook/builtin/subst.h       1	
X cook/builtin/suffix.c      3	
X cook/builtin/suffix.h      1	
X cook/builtin/text.c       10	
X cook/builtin/text.h        2	
X cook/builtin/unsplit.c     2	
X cook/builtin/unsplit.h     1	
X cook/builtin/word.c        4	
X cook/builtin/word.h        1	
X cook/cook.c               17	
X cook/cook.h                6	
X cook/env.c                 6	
X cook/env.h                 1	
X cook/expr.c               11	
X cook/expr.h                5	
X cook/fngrprnt.h            2	
X cook/fngrprnt.y            8	
X cook/fngrprnt_lex.c        7	
X cook/fngrprnt_lex.h        2	
X cook/hashline.h            1	
X cook/hashline.y           12	
X cook/id.c                  8	
X cook/id.h                  2	
X cook/lex.c                15	
X cook/lex.h                 3	
X cook/listing.c             8	
X cook/listing.h             1	
X cook/main.c               11	
X cook/match.c              11	
X cook/match.h               3	
X cook/option.c              8	
X cook/option.h              6	
X cook/os.c                 14	
X cook/os.h                  4	
X cook/parse.h               1	
X cook/parse.y              10	
X cook/stat.cache.c          9	
X cook/stat.cache.h          2	
X cook/stmt.c               11	
X cook/stmt.h                6	
X cookfp                     1	
X cookfp/main.c              7	
X cooktime                   1	
X cooktime/date.h            1	
X cooktime/date.y           15	
X cooktime/main.c            7	
X doc                        1	
X doc/builtin.so             2	
X doc/cmdline.so             9	
X doc/conditions.so          4	
X doc/function               1	
X doc/function.sh            1	
X doc/function.so            4	
X doc/function/addprefix.so  2	
X doc/function/addsuffix.so  2	
X doc/function/and.so        4	
X doc/function/basename.so   3	
X doc/function/cando.so      2	
X doc/function/catenate.so   3	
X doc/function/collect.so    3	
X doc/function/collect_ln.so  2	
X doc/function/count.so      2	
X doc/function/defined.so    2	
X doc/function/dir.so        2	
X doc/function/dirname.so    2	
X doc/function/downcase.so   2	
X doc/function/entryname.so  2	
X doc/function/execute.so    3	
X doc/function/exists.so     3	
X doc/function/filter.so     2	
X doc/function/filter_out.so  2	
X doc/function/find_cmd.so   3	
X doc/function/findstring.so  4	
X doc/function/fromto.so     3	
X doc/function/getenv.so     3	
X doc/function/glob.so       2	
X doc/function/head.so       3	
X doc/function/home.so       2	
X doc/function/if.so         3	
X doc/function/in.so         3	
X doc/function/join.so       3	
X doc/function/match_mask.so  3	
X doc/function/matches.so    3	
X doc/function/mtime.so      2	
X doc/function/not.so        4	
X doc/function/opsys.so      6	
X doc/function/or.so         2	
X doc/function/pathname.so   2	
X doc/function/patsubst.so   3	
X doc/function/prepost.so    2	
X doc/function/quote.so      1	
X doc/function/resolve.so    3	
X doc/function/shell.so      3	
X doc/function/sort.so       1	
X doc/function/sort_newest.so  3	
X doc/function/split.so      3	
X doc/function/stringset.so  3	
X doc/function/strip.so      2	
X doc/function/subst.so      4	
X doc/function/suffix.so     4	
X doc/function/tail.so       2	
X doc/function/unsplit.so    3	
X doc/function/upcase.so     5	
X doc/function/uptodate.so   2	
X doc/function/wildcard.so   2	
X doc/function/word.so       4	
X doc/function/words.so      2	
X doc/glossary.so            7	
X doc/history.so             5	
X doc/how.so                 9	
X doc/intro.so               5	
X doc/intro1.so              7	
X doc/intro2.so              8	
X doc/language.so           14	
X doc/match.so               6	
X doc/option.so              5	
X doc/refman.t               5	
X doc/system.so             10	
X doc/variables.so           5	
X doc/version.so             1	
X find_libs                  1	
X find_libs/main.c           7	
X find_libs/os.c             3	
X find_libs/os.h             1	
X lib                        1	
X lib/as                     2	
X lib/bison                  5	
X lib/c                      6	
X lib/gcc                    1	
X lib/home                   1	
X lib/lex                    3	
X lib/library                6	
X lib/print                  1	
X lib/program                5	
X lib/rcs                    1	
X lib/sccs                   1	
X lib/text                   2	
X lib/usr                    1	
X lib/usr.local              1	
X lib/yacc                   5	
X lib/yacc_many              6	
X make2cook                  1	
X make2cook/blob.c           7	
X make2cook/blob.h           4	
X make2cook/emit.c           6	
X make2cook/emit.h           2	
X make2cook/gram.h           1	
X make2cook/gram.y           8	
X make2cook/lex.c           10	
X make2cook/lex.h            2	
X make2cook/main.c           6	
X make2cook/stmt             1	
X make2cook/stmt.c           6	
X make2cook/stmt.h           4	
X make2cook/stmt/assign.c    9	
X make2cook/stmt/assign.h    2	
X make2cook/stmt/blank.c     2	
X make2cook/stmt/blank.h     1	
X make2cook/stmt/comment.c   6	
X make2cook/stmt/comment.h   2	
X make2cook/stmt/compound.c  7	
X make2cook/stmt/compound.h  2	
X make2cook/stmt/define.c    5	
X make2cook/stmt/define.h    2	
X make2cook/stmt/if.c        6	
X make2cook/stmt/if.h        2	
X make2cook/stmt/include.c   6	
X make2cook/stmt/include.h   2	
X make2cook/stmt/rule.c     13	
X make2cook/stmt/rule.h      2	
X make2cook/stmt/vpath.c     5	
X make2cook/stmt/vpath.h     2	
X make2cook/vargram.h        1	
X make2cook/vargram.y        7	
X make2cook/variable.c       9	
X make2cook/variable.h       2	
X man1                       1	
X man1/c_incl.1              7	
X man1/cook.1               10	
X man1/cookfp.1              7	
X man1/cooktime.1            5	
X man1/copyright.so          3	
X man1/find_libs.1           5	
X man1/make2cook.1           8	
X man1/o__rules.so           4	
X man1/roffpp.1              7	
X man1/z_exit.so             1	
X man1/z_name.so             1	
X roffpp                     1	
X roffpp/main.c              6	
X roffpp/preprocess.c        9	
X roffpp/preprocess.h        1	
X test                       1	
X test/00                    1	
X test/00/t0001a.sh          3	
X test/00/t0002a.sh          3	
X test/00/t0003a.sh          3	
X test/00/t0004a.sh          3	
X test/00/t0005a.sh          4	
X test/00/t0006a.sh          3	
X test/00/t0007a.sh          4	
X test/00/t0008a.sh          3	
X test/00/t0009a.sh          4	
X test/00/t0010a.sh          3	
X test/00/t0011a.sh          3	
X test/00/t0012a.sh          3	
X test/00/t0013a.sh          3	
X test/00/t0014a.sh          3	
X test/00/t0015a.sh          4	
X test/00/t0016a.sh          3	
X test/00/t0017a.sh          3	
X test/00/t0018a.sh          4	
X test/00/t0019a.sh          3	
X test/00/t0020a.sh          3	
X test/00/t0021a.sh          3	
X test/00/t0022a.sh          3	
X test/00/t0023a.sh          3	
X test/00/t0024a.sh          4	
X test/00/t0025a.sh          3	
X test/00/t0026a.sh          3	
X test/00/t0027a.sh          4	
X test/00/t0028a.sh          3	
X test/00/t0029a.sh          3	
X test/00/t0030a.sh          5	
X test/00/t0031a.sh          4	
X test/00/t0032a.sh          4	
X test/00/t0033a.sh          3	
X test/00/t0034a.sh          4	
X test/00/t0035a.sh          3	
X test/00/t0036a.sh          3	
X test/00/t0037a.sh          4	
X test/00/t0038a.sh          6	
X test/00/t0039a.sh          4	
X test/00/t0040a.sh          4	
X test/00/t0041a.sh          5	
X test/00/t0042a.sh          5	
X test/00/t0043a.sh          5	
X test/00/t0044a.sh          4	
X test/00/t0045a.sh          4	
X test/00/t0046a.sh          8	
X test/00/t0047a.sh          5	
X test/00/t0048a.sh          6	
X test/00/t0049a.sh          5	
X test/00/t0050a.sh          6	
X test/00/t0051a.sh          5	
X test/00/t0052a.sh          4	
X test/00/t0053a.sh          4	
X test/00/t0054a.sh          5	
X test/00/t0055a.sh          4	
X test/00/t0056a.sh          5	
X test/00/t0057a.sh          4	
X test/00/t0058a.sh          4	
X test/00/t0059a.sh          4	
X test/00/t0060a.sh          4	
X test/00/t0061a.sh          4	
X test/00/t0062a.sh          5	
X test/00/t0063a.sh          4	
X test/00/t0064a.sh          4	
X test/00/t0065a.sh          6	
X test/00/t0066a.sh          7	
X test/00/t0067a.sh          5	
X test/00/t0068a.sh          5	
X test/00/t0069a.sh          5	
X test/00/t0070a.sh          6	
X test/00/t0071a.sh          6	
X test/00/t0072a.sh          4	
X test/00/t0073a.sh          4	
X test/00/t0074a.sh          4	
X test/00/t0075a.sh          4	
X test/00/t0076a.sh          4	
X test/00/t0077a.sh          6	
X test/00/t0078a.sh          5	
X test/00/t0079a.sh          5	
X txt2c                      1	
X txt2c/main.c               6	
X txt2c/txt2c.c              7	
X txt2c/txt2c.h              1	
END_OF_FILE
if test 13485 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(8146 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X
X
X
Xreadme(cook)					     readme(cook)
X
X
XNAME
X       cook - a	file construction tool
X
XDESCRIPTION
X       Put simply, the cook program is yet another make-oid.
X
X       The cook	program	is a tool for constructing files.  It is
X       given a set of files to create, and recipes of how to
X       create them.  In	any non-trivial	program	there will be
X       prerequisites to	performing the actions necessary to
X       creating	any file, such as include files.  The cook
X       program provides	a mechanism to define these.
X
X       When a program is being developed or maintained,	the
X       programmer will typically change	one file of several which
X       comprise	the program.  The cook program examines	the last-
X       modified	times of the files to see when the prerequisites
X       of a file have changed, implying	that the file needs to be
X       recreated as it is logically out	of date.
X
X       The cook	program	also provides a	facility for implicit
X       recipes,	allowing users to specify how to form a	file with
X       a given suffix from a file with a different suffix.  For
X       example,	to create filename.o from filename.c
X
XNEW IN THIS RELEASE
X       A number	of features have been added to cook with this
X       release.	 A few of them are detailed here:
X
X       * Fixed a bug in	the leading-dot	removal	code, and added
X       an option to make it user-settable.  Fixed a bug	in the
X       search_path depth code.
X
X       The following changes were made in the previous release:
X
X       * The c_incl program now	correctly prints the names of
X       absent include files, causing them to be	cooked correctly
X       in a greater number of cases.
X
X       * Recipes with no ingredients are now only applied if the
X       target is absent.  To still use the previous behaviour,
X       use the "set force" clause on the recipe.
X
X       * It is now possible to supplement the last-modified time
X       with a fingerprint, so cook does	even fewer unnecesary
X       recompilations than before.  Put	the statement
X	      set fingerprint;
X       somewhere near the top of your Howto.cook file for this to
X       be the default for your project.
X
X       * There is a new	form of	include	directive:
X	      #include-cooked filename...
X       When files are included in this way, cook will check to
X       make sure they are up-to-date.  If not, they will be
X
X
X
X								1
X
X
X
X
X
Xreadme(cook)					     readme(cook)
X
X
X       cooked, and then	cook will start	again and re-read the
X       cookbook.  This is most often used for maintaining
X       include-dependency files.
X
X       * Cook now configured using a program called configure,
X       distributed with	the package.  The configure program is
X       generated by GNU	Autoconf.  See the BUILDING file for more
X       details.
X
X       * The semantics of search_list have been	improved.  It is
X       now guaranteed that when	ingredients change they	result in
X       targets earlier in the search_list being	updated.
X
X       * There is now a	make2cook translator, to translate
X       Makefile	files into Howto.cook files.  Most of the GNU
X       Make extensions are understood.	There is no exact
X       semantic	mapping	between	make and cook, so manual editing
X       is sometimes required.  See make2cook(1)	for more
X       information.
X
X       * Cook now understands archive member references, in the
X       same format as used by make, et al.  Archive member
X       references benefit from stat caching and	fingerprinting,
X       just as normal files do.
X
X       Plus the	usual crop of bug fixes	and tinkering.	For
X       excruciating detail, and	also acknowlegements of	those who
X       generously sent me feedback, please see the
X       aux/CHANGES.1.6 file included in	this distribution.
X
XHISTORY
X       The cook	program	was originally developed (starting in
X       1988) because I was marooned on an operating system
X       without anything	even vaguely resembling	make(1).  Since	I
X       had to write my own, I added a few improvements.	 When I
X       finally escaped back to UNIX, it	took only two days to
X       port cook to SystemV.  I	have since deleted all code for
X       that original operating system, although	clues to its
X       identity	are still present.  There is no	prize for
X       guessing	what it	was.
X
X       After I had cook	up on UNIX, the	progress the world had
X       made caught up with me.	It was gratifying that many of
X       the features other make-oid authors had thought necessary
X       were either already present, or easily and seamlessly
X       added.
X
XARCHIVE	SITE
X       The latest version of cook is available by anonymous ftp
X       from:
X	   Host:   ftp.cse.nau.edu (134.114.64.70)
X	   Dir:	   /pub/Aegis
X	   File:   README	       # what is in this directory
X
X
X
X
X								2
X
X
X
X
X
Xreadme(cook)					     readme(cook)
X
X
X	   File:   cook.1.6.tar.gz     # the complete source
X	   File:   cook.1.6.patch.gz   # patch to take 1.5 to 1.6
X	   File:   cook.1.6.ps.gz      # PostScript of the Manual
X
X       To use anonymous	ftp, give "anonymous" as the user name
X       (omit the quotes) and your email	address	as the password.
X
X       My grateful thanks to Paul Balyoz <pab@ftp.cse.nau.edu>
X       for his generosity in providing this archive space.
X
X       This directory also contains a few other	pieces of
X       software	written	by me.	Please have a look if you are
X       interested.
X
X       For those of you	without	ftp, I recommend the use of an
X       ftp-by-email server.  Here is a list of a few (there are
X       many more):
X	      ftpmail@decwrl.dec.com
X	      ftpmail@cs.uow.edu.au
X
X       In general, you can get a help message about how	to use
X       each system by sending email with a subject of "help" and
X       a message body containing just the word "help".
X
XMAILING	LIST
X       A mailing list has been created so that users of	cook may
X       exchange	ideas about how	to use the cook	program.
X       Discussion may include, but is not limited to: bugs,
X       enhancements, and applications.	The list is not
X       moderated.
X
X       The address of the mailing list is
X	      cook-users@bmr.gov.au
X
X       To subscribe to this mailing list, send an email	message
X       to majordomo@bmr.gov.au with a message body containing the
X       single line
X	      subscribe	cook-users
X       Please note that	bmr.gov.au is an Internet site,	so if you
X       have an address which is	not readily derived from your
X       mail headers (majordomo is only a Perl program, after all)
X       you will	need to	use a message of the form:
X	      subscribe	cook-users address
X       where address is	an email address which makes sense from
X       an Internet site.
X
X       The software which handles this mailing list CANNOT send
X       you a copy of the cook program.	Please use ftp or ftp-by-
X       email, instead.
X
X
X
X
X
X
X
X
X								3
X
X
X
X
X
Xreadme(cook)					     readme(cook)
X
X
XBUILDING COOK
X       Full instructions for building the cook program may be
X       found in	the BUILDING file included in this distribution.
X
XCOPYRIGHT
X       cook version 1.6
X       Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994
X       Peter Miller.
X       All rights reserved.
X
X       This program is free software; you can redistribute it
X       and/or modify it	under the terms	of the GNU General Public
X       License as published by the Free	Software Foundation;
X       either version 2	of the License,	or (at your option) any
X       later version.
X
X       This program is distributed in the hope that it will be
X       useful, but WITHOUT ANY WARRANTY; without even the implied
X       warranty	of MERCHANTABILITY or FITNESS FOR A PARTICULAR
X       PURPOSE.	 See the GNU General Public License for	more
X       details.
X
X       You should have received	a copy of the GNU General Public
X       License along with this program;	if not,	write to the Free
X       Software	Foundation, Inc., 675 Mass Ave,	Cambridge, MA
X       02139, USA.
X
X       It should be in the LICENSE file	included with this
X       distribution.
X
XAUTHOR
X       Peter Miller   UUCP	 uunet!munnari!bmr.gov.au!pmiller
X       /\/\*	      Internet	 pmiller@bmr.gov.au
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X								4
X
X
END_OF_FILE
if test 8146 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test ! -d 'aux' ; then
    echo shar: Creating directory \"'aux'\"
    mkdir 'aux'
fi
if test -f 'aux/config.h.in' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/config.h.in'\"
else
echo shar: Extracting \"'aux/config.h.in'\" \(475 characters\)
sed "s/^X//" >'aux/config.h.in' <<'END_OF_FILE'
X/*
X * Define this symbol of your system has <stdarg.h> AND it works.
X */
X#undef HAVE_STDARG_H
X
X/*
X * Set this to a suitable argument for the getpgrp function to discover
X * the process group of the current process.
X */
X#define CONF_getpgrp_arg broken
X
X/*
X * Set this to be the absolute path of a Bourne shell
X * which understands functions.
X */
X#define CONF_SHELL "/bin/sh"
X
X/*
X * Define to the name of the SCCS `get' command.
X * (Used only by make2cook)
X */
X#undef SCCS_GET
END_OF_FILE
if test 475 -ne `wc -c <'aux/config.h.in'`; then
    echo shar: \"'aux/config.h.in'\" unpacked with wrong size!
fi
# end of 'aux/config.h.in'
fi
if test -f 'aux/new.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/new.so'\"
else
echo shar: Extracting \"'aux/new.so'\" \(15 characters\)
sed "s/^X//" >'aux/new.so' <<'END_OF_FILE'
X.so new.1.6.so
END_OF_FILE
if test 15 -ne `wc -c <'aux/new.so'`; then
    echo shar: \"'aux/new.so'\" unpacked with wrong size!
fi
# end of 'aux/new.so'
fi
if test ! -d 'aux/template' ; then
    echo shar: Creating directory \"'aux/template'\"
    mkdir 'aux/template'
fi
if test -f 'aux/template/c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/c'\"
else
echo shar: Extracting \"'aux/template/c'\" \(937 characters\)
sed "s/^X//" >'aux/template/c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) ${date %Y} Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to manipulate ${basename $fn .c}s
X */
X
X#include <${basename $fn .c}.h>
X
X
Xvoid
X${id ${basename $fn .c}}()
X{
X}
END_OF_FILE
if test 937 -ne `wc -c <'aux/template/c'`; then
    echo shar: \"'aux/template/c'\" unpacked with wrong size!
fi
# end of 'aux/template/c'
fi
if test -f 'aux/template/generic' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/generic'\"
else
echo shar: Extracting \"'aux/template/generic'\" \(806 characters\)
sed "s/^X//" >'aux/template/generic' <<'END_OF_FILE'
X#
X#	cook - file construction tool
X#	Copyright (C) ${date %Y} Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: ${fn}
X#
END_OF_FILE
if test 806 -ne `wc -c <'aux/template/generic'`; then
    echo shar: \"'aux/template/generic'\" unpacked with wrong size!
fi
# end of 'aux/template/generic'
fi
if test -f 'aux/template/h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/h'\"
else
echo shar: Extracting \"'aux/template/h'\" \(1018 characters\)
sed "s/^X//" >'aux/template/h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) ${date %Y} Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for ${basename $fn .c}
X */
X
X#ifndef ${upcase ${id $fn}}
X#define ${upcase ${id $fn}}
X
X#include <main.h>
X
Xvoid ${id ${basename $fn .c}} _((void));
X
X#endif /* ${upcase ${id $fn}} */
END_OF_FILE
if test 1018 -ne `wc -c <'aux/template/h'`; then
    echo shar: \"'aux/template/h'\" unpacked with wrong size!
fi
# end of 'aux/template/h'
fi
if test -f 'aux/template/ms' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/ms'\"
else
echo shar: Extracting \"'aux/template/ms'\" \(878 characters\)
sed "s/^X//" >'aux/template/ms' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) ${date %Y} Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing ${basename $fn}
X.\"
END_OF_FILE
if test 878 -ne `wc -c <'aux/template/ms'`; then
    echo shar: \"'aux/template/ms'\" unpacked with wrong size!
fi
# end of 'aux/template/ms'
fi
if test -f 'aux/template/sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/sh'\"
else
echo shar: Extracting \"'aux/template/sh'\" \(854 characters\)
sed "s/^X//" >'aux/template/sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) ${date %Y} Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: shell script to ${basename $fn .sh}
X#
X
Xexit 0
END_OF_FILE
if test 854 -ne `wc -c <'aux/template/sh'`; then
    echo shar: \"'aux/template/sh'\" unpacked with wrong size!
fi
# end of 'aux/template/sh'
fi
if test ! -d 'c_incl' ; then
    echo shar: Creating directory \"'c_incl'\"
    mkdir 'c_incl'
fi
if test -f 'c_incl/os.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'c_incl/os.h'\"
else
echo shar: Extracting \"'c_incl/os.h'\" \(964 characters\)
sed "s/^X//" >'c_incl/os.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for c_incl/os.c
X */
X
X#ifndef OS_H
X#define OS_H
X
X#include <main.h>
X
Xint os_exists _((char *));
X
X#endif /* OS_H */
END_OF_FILE
if test 964 -ne `wc -c <'c_incl/os.h'`; then
    echo shar: \"'c_incl/os.h'\" unpacked with wrong size!
fi
# end of 'c_incl/os.h'
fi
if test ! -d 'common' ; then
    echo shar: Creating directory \"'common'\"
    mkdir 'common'
fi
if test ! -d 'common/ac' ; then
    echo shar: Creating directory \"'common/ac'\"
    mkdir 'common/ac'
fi
if test -f 'common/ac/fcntl.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/fcntl.h'\"
else
echo shar: Extracting \"'common/ac/fcntl.h'\" \(1043 characters\)
sed "s/^X//" >'common/ac/fcntl.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate <fcntl.h> vs <sys/file.h> differences
X */
X
X#ifndef COMMON_AC_FCNTL_H
X#define COMMON_AC_FCNTL_H
X
X#include <config.h>
X
X#ifdef HAVE_FCNTL_H
X#include <fcntl.h>
X#else
X#include <sys/file.h>
X#endif
X
X#endif /* COMMON_AC_FCNTL_H */
END_OF_FILE
if test 1043 -ne `wc -c <'common/ac/fcntl.h'`; then
    echo shar: \"'common/ac/fcntl.h'\" unpacked with wrong size!
fi
# end of 'common/ac/fcntl.h'
fi
if test -f 'common/ac/limits.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/limits.h'\"
else
echo shar: Extracting \"'common/ac/limits.h'\" \(1008 characters\)
sed "s/^X//" >'common/ac/limits.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate limits.h presence/absence
X */
X
X#ifndef COMMON_AC_LIMITS_H
X#define COMMON_AC_LIMITS_H
X
X#include <config.h>
X
X#ifdef HAVE_LIMITS_H
X#include <limits.h>
X#endif
X
X#endif /* COMMON_AC_LIMITS_H */
END_OF_FILE
if test 1008 -ne `wc -c <'common/ac/limits.h'`; then
    echo shar: \"'common/ac/limits.h'\" unpacked with wrong size!
fi
# end of 'common/ac/limits.h'
fi
if test -f 'common/ac/stddef.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/stddef.h'\"
else
echo shar: Extracting \"'common/ac/stddef.h'\" \(1008 characters\)
sed "s/^X//" >'common/ac/stddef.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate stddef.h presence/absence
X */
X
X#ifndef COMMON_AC_STDDEF_H
X#define COMMON_AC_STDDEF_H
X
X#include <config.h>
X
X#ifdef HAVE_STDDEF_H
X#include <stddef.h>
X#endif
X
X#endif /* COMMON_AC_STDDEF_H */
END_OF_FILE
if test 1008 -ne `wc -c <'common/ac/stddef.h'`; then
    echo shar: \"'common/ac/stddef.h'\" unpacked with wrong size!
fi
# end of 'common/ac/stddef.h'
fi
if test -f 'common/ac/stdlib.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/stdlib.h'\"
else
echo shar: Extracting \"'common/ac/stdlib.h'\" \(1008 characters\)
sed "s/^X//" >'common/ac/stdlib.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate stdlib.h presence/absence
X */
X
X#ifndef COMMON_AC_STDLIB_H
X#define COMMON_AC_STDLIB_H
X
X#include <config.h>
X
X#ifdef HAVE_STDLIB_H
X#include <stdlib.h>
X#endif
X
X#endif /* COMMON_AC_STDLIB_H */
END_OF_FILE
if test 1008 -ne `wc -c <'common/ac/stdlib.h'`; then
    echo shar: \"'common/ac/stdlib.h'\" unpacked with wrong size!
fi
# end of 'common/ac/stdlib.h'
fi
if test ! -d 'common/fp' ; then
    echo shar: Creating directory \"'common/fp'\"
    mkdir 'common/fp'
fi
if test -f 'common/fp/cksum.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/cksum.h'\"
else
echo shar: Extracting \"'common/fp/cksum.h'\" \(1002 characters\)
sed "s/^X//" >'common/fp/cksum.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/cksum.c
X */
X
X#ifndef COMMON_FP_CKSUM_H
X#define COMMON_FP_CKSUM_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_cksum;
X
X#endif /* COMMON_FP_CKSUM_H */
END_OF_FILE
if test 1002 -ne `wc -c <'common/fp/cksum.h'`; then
    echo shar: \"'common/fp/cksum.h'\" unpacked with wrong size!
fi
# end of 'common/fp/cksum.h'
fi
if test -f 'common/fp/combined.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/combined.h'\"
else
echo shar: Extracting \"'common/fp/combined.h'\" \(1017 characters\)
sed "s/^X//" >'common/fp/combined.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/combined.c
X */
X
X#ifndef COMMON_FP_COMBINED_H
X#define COMMON_FP_COMBINED_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_combined;
X
X#endif /* COMMON_FP_COMBINED_H */
END_OF_FILE
if test 1017 -ne `wc -c <'common/fp/combined.h'`; then
    echo shar: \"'common/fp/combined.h'\" unpacked with wrong size!
fi
# end of 'common/fp/combined.h'
fi
if test -f 'common/fp/crc32.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/crc32.h'\"
else
echo shar: Extracting \"'common/fp/crc32.h'\" \(1002 characters\)
sed "s/^X//" >'common/fp/crc32.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/crc32.c
X */
X
X#ifndef COMMON_FP_CRC32_H
X#define COMMON_FP_CRC32_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_crc32;
X
X#endif /* COMMON_FP_CRC32_H */
END_OF_FILE
if test 1002 -ne `wc -c <'common/fp/crc32.h'`; then
    echo shar: \"'common/fp/crc32.h'\" unpacked with wrong size!
fi
# end of 'common/fp/crc32.h'
fi
if test -f 'common/fp/len.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/len.h'\"
else
echo shar: Extracting \"'common/fp/len.h'\" \(992 characters\)
sed "s/^X//" >'common/fp/len.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/len.c
X */
X
X#ifndef COMMON_FP_LEN_H
X#define COMMON_FP_LEN_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_len;
X
X#endif /* COMMON_FP_LEN_H */
END_OF_FILE
if test 992 -ne `wc -c <'common/fp/len.h'`; then
    echo shar: \"'common/fp/len.h'\" unpacked with wrong size!
fi
# end of 'common/fp/len.h'
fi
if test -f 'common/fp/md5.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/md5.h'\"
else
echo shar: Extracting \"'common/fp/md5.h'\" \(992 characters\)
sed "s/^X//" >'common/fp/md5.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/md5.c
X */
X
X#ifndef COMMON_FP_MD5_H
X#define COMMON_FP_MD5_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_md5;
X
X#endif /* COMMON_FP_MD5_H */
END_OF_FILE
if test 992 -ne `wc -c <'common/fp/md5.h'`; then
    echo shar: \"'common/fp/md5.h'\" unpacked with wrong size!
fi
# end of 'common/fp/md5.h'
fi
if test -f 'common/fp/snefru.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/snefru.h'\"
else
echo shar: Extracting \"'common/fp/snefru.h'\" \(1007 characters\)
sed "s/^X//" >'common/fp/snefru.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/fp/snefru.c
X */
X
X#ifndef COMMON_FP_SNEFRU_H
X#define COMMON_FP_SNEFRU_H
X
X#include <fp.h>
X
Xextern fingerprint_methods_ty fp_snefru;
X
X#endif /* COMMON_FP_SNEFRU_H */
END_OF_FILE
if test 1007 -ne `wc -c <'common/fp/snefru.h'`; then
    echo shar: \"'common/fp/snefru.h'\" unpacked with wrong size!
fi
# end of 'common/fp/snefru.h'
fi
if test -f 'common/help.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/help.h'\"
else
echo shar: Extracting \"'common/help.h'\" \(1012 characters\)
sed "s/^X//" >'common/help.h' <<'END_OF_FILE'
X/*
X *	cook - a program construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for comon/help.c
X */
X
X#ifndef HELP_H
X#define HELP_H
X
X#include <main.h>
X
Xvoid help _((char **text, int text_lem, void (*usage)(void)));
X
X#endif /* HELP_H */
END_OF_FILE
if test 1012 -ne `wc -c <'common/help.h'`; then
    echo shar: \"'common/help.h'\" unpacked with wrong size!
fi
# end of 'common/help.h'
fi
if test -f 'common/patchlevel.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/patchlevel.h'\"
else
echo shar: Extracting \"'common/patchlevel.h'\" \(30 characters\)
sed "s/^X//" >'common/patchlevel.h' <<'END_OF_FILE'
X#define PATCHLEVEL "1.6.D004"
END_OF_FILE
if test 30 -ne `wc -c <'common/patchlevel.h'`; then
    echo shar: \"'common/patchlevel.h'\" unpacked with wrong size!
fi
# end of 'common/patchlevel.h'
fi
if test -f 'common/version-stmp.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/version-stmp.c'\"
else
echo shar: Extracting \"'common/version-stmp.c'\" \(954 characters\)
sed "s/^X//" >'common/version-stmp.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to manipulate version-stmps
X */
X
X#include <patchlevel.h>
X#include <version-stmp.h>
X
X
Xchar *
Xversion_stamp()
X{
X	return PATCHLEVEL;
X}
END_OF_FILE
if test 954 -ne `wc -c <'common/version-stmp.c'`; then
    echo shar: \"'common/version-stmp.c'\" unpacked with wrong size!
fi
# end of 'common/version-stmp.c'
fi
if test -f 'common/version-stmp.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/version-stmp.h'\"
else
echo shar: Extracting \"'common/version-stmp.h'\" \(1011 characters\)
sed "s/^X//" >'common/version-stmp.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/version-stmp.c
X */
X
X#ifndef COMMON_VERSION_STMP_H
X#define COMMON_VERSION_STMP_H
X
X#include <main.h>
X
Xchar *version_stamp _((void));
X
X#endif /* COMMON_VERSION_STMP_H */
END_OF_FILE
if test 1011 -ne `wc -c <'common/version-stmp.h'`; then
    echo shar: \"'common/version-stmp.h'\" unpacked with wrong size!
fi
# end of 'common/version-stmp.h'
fi
if test -f 'common/version.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/version.h'\"
else
echo shar: Extracting \"'common/version.h'\" \(981 characters\)
sed "s/^X//" >'common/version.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/version.c
X */
X
X#ifndef VERSION_H
X#define VERSION_H
X
X#include <main.h>
X
Xvoid version _((void));
X
X#endif /* VERSION_H */
END_OF_FILE
if test 981 -ne `wc -c <'common/version.h'`; then
    echo shar: \"'common/version.h'\" unpacked with wrong size!
fi
# end of 'common/version.h'
fi
if test ! -d 'cook' ; then
    echo shar: Creating directory \"'cook'\"
    mkdir 'cook'
fi
if test ! -d 'cook/builtin' ; then
    echo shar: Creating directory \"'cook/builtin'\"
    mkdir 'cook/builtin'
fi
if test -f 'cook/builtin/basename.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/basename.h'\"
else
echo shar: Extracting \"'cook/builtin/basename.h'\" \(1032 characters\)
sed "s/^X//" >'cook/builtin/basename.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/basename.c
X */
X
X#ifndef COOK_BUILTIN_BASENAME_H
X#define COOK_BUILTIN_BASENAME_H
X
X#include <word.h>
X
Xint builtin_basename _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_BASENAME_H */
END_OF_FILE
if test 1032 -ne `wc -c <'cook/builtin/basename.h'`; then
    echo shar: \"'cook/builtin/basename.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/basename.h'
fi
if test -f 'cook/builtin/collect.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/collect.h'\"
else
echo shar: Extracting \"'cook/builtin/collect.h'\" \(1014 characters\)
sed "s/^X//" >'cook/builtin/collect.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for collect.h
X */
X
X#ifndef COOK_BUILTIN_COLLECT_H
X#define COOK_BUILTIN_COLLECT_H
X
X#include <word.h>
X
Xint builtin_collect _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_COLLECT_H */
END_OF_FILE
if test 1014 -ne `wc -c <'cook/builtin/collect.h'`; then
    echo shar: \"'cook/builtin/collect.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/collect.h'
fi
if test -f 'cook/builtin/defined.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/defined.h'\"
else
echo shar: Extracting \"'cook/builtin/defined.h'\" \(1014 characters\)
sed "s/^X//" >'cook/builtin/defined.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for defined.h
X */
X
X#ifndef COOK_BUILTIN_DEFINED_H
X#define COOK_BUILTIN_DEFINED_H
X
X#include <word.h>
X
Xint builtin_defined _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_DEFINED_H */
END_OF_FILE
if test 1014 -ne `wc -c <'cook/builtin/defined.h'`; then
    echo shar: \"'cook/builtin/defined.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/defined.h'
fi
if test -f 'cook/builtin/execute.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/execute.h'\"
else
echo shar: Extracting \"'cook/builtin/execute.h'\" \(1014 characters\)
sed "s/^X//" >'cook/builtin/execute.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for execute.h
X */
X
X#ifndef COOK_BUILTIN_EXECUTE_H
X#define COOK_BUILTIN_EXECUTE_H
X
X#include <word.h>
X
Xint builtin_execute _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_EXECUTE_H */
END_OF_FILE
if test 1014 -ne `wc -c <'cook/builtin/execute.h'`; then
    echo shar: \"'cook/builtin/execute.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/execute.h'
fi
if test -f 'cook/builtin/exists.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/exists.h'\"
else
echo shar: Extracting \"'cook/builtin/exists.h'\" \(1009 characters\)
sed "s/^X//" >'cook/builtin/exists.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for exists.h
X */
X
X#ifndef COOK_BUILTIN_EXISTS_H
X#define COOK_BUILTIN_EXISTS_H
X
X#include <word.h>
X
Xint builtin_exists _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_EXISTS_H */
END_OF_FILE
if test 1009 -ne `wc -c <'cook/builtin/exists.h'`; then
    echo shar: \"'cook/builtin/exists.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/exists.h'
fi
if test -f 'cook/builtin/getenv.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/getenv.h'\"
else
echo shar: Extracting \"'cook/builtin/getenv.h'\" \(1009 characters\)
sed "s/^X//" >'cook/builtin/getenv.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for getenv.h
X */
X
X#ifndef COOK_BUILTIN_GETENV_H
X#define COOK_BUILTIN_GETENV_H
X
X#include <word.h>
X
Xint builtin_getenv _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_GETENV_H */
END_OF_FILE
if test 1009 -ne `wc -c <'cook/builtin/getenv.h'`; then
    echo shar: \"'cook/builtin/getenv.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/getenv.h'
fi
if test -f 'cook/builtin/glob.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/glob.h'\"
else
echo shar: Extracting \"'cook/builtin/glob.h'\" \(991 characters\)
sed "s/^X//" >'cook/builtin/glob.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/glob.c
X */
X
X#ifndef GLOB_H
X#define GLOB_H
X
X#include <word.h>
X
Xint builtin_glob _((wlist *, wlist *));
X
X#endif /* GLOB_H */
END_OF_FILE
if test 991 -ne `wc -c <'cook/builtin/glob.h'`; then
    echo shar: \"'cook/builtin/glob.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/glob.h'
fi
if test -f 'cook/builtin/home.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/home.h'\"
else
echo shar: Extracting \"'cook/builtin/home.h'\" \(1008 characters\)
sed "s/^X//" >'cook/builtin/home.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for home.h
X */
X
X#ifndef COOK_BUILTIN_HOME_H
X#define COOK_BUILTIN_HOME_H
X
X#include <word.h>
X
Xint builtin_home _((wlist *result, wlist *arg));
X
X#endif /* COOK_BUILTIN_HOME_H */
END_OF_FILE
if test 1008 -ne `wc -c <'cook/builtin/home.h'`; then
    echo shar: \"'cook/builtin/home.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/home.h'
fi
if test -f 'cook/builtin/join.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/join.h'\"
else
echo shar: Extracting \"'cook/builtin/join.h'\" \(1012 characters\)
sed "s/^X//" >'cook/builtin/join.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/join.c
X */
X
X#ifndef COOK_BUILTIN_JOIN_H
X#define COOK_BUILTIN_JOIN_H
X
X#include <word.h>
X
Xint builtin_join _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_JOIN_H */
END_OF_FILE
if test 1012 -ne `wc -c <'cook/builtin/join.h'`; then
    echo shar: \"'cook/builtin/join.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/join.h'
fi
if test -f 'cook/builtin/opsys.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/opsys.h'\"
else
echo shar: Extracting \"'cook/builtin/opsys.h'\" \(1004 characters\)
sed "s/^X//" >'cook/builtin/opsys.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for opsys.h
X */
X
X#ifndef COOK_BUILTIN_OPSYS_H
X#define COOK_BUILTIN_OPSYS_H
X
X#include <word.h>
X
Xint builtin_opsys _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_OPSYS_H */
END_OF_FILE
if test 1004 -ne `wc -c <'cook/builtin/opsys.h'`; then
    echo shar: \"'cook/builtin/opsys.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/opsys.h'
fi
if test -f 'cook/builtin/split.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/split.h'\"
else
echo shar: Extracting \"'cook/builtin/split.h'\" \(1017 characters\)
sed "s/^X//" >'cook/builtin/split.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/split.c
X */
X
X#ifndef COOK_BUILTIN_SPLIT_H
X#define COOK_BUILTIN_SPLIT_H
X
X#include <word.h>
X
Xint builtin_split _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_SPLIT_H */
END_OF_FILE
if test 1017 -ne `wc -c <'cook/builtin/split.h'`; then
    echo shar: \"'cook/builtin/split.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/split.h'
fi
if test -f 'cook/builtin/stringset.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/stringset.h'\"
else
echo shar: Extracting \"'cook/builtin/stringset.h'\" \(1024 characters\)
sed "s/^X//" >'cook/builtin/stringset.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for stringset.h
X */
X
X#ifndef COOK_BUILTIN_STRINGSET_H
X#define COOK_BUILTIN_STRINGSET_H
X
X#include <word.h>
X
Xint builtin_stringset _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_STRINGSET_H */
END_OF_FILE
if test 1024 -ne `wc -c <'cook/builtin/stringset.h'`; then
    echo shar: \"'cook/builtin/stringset.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/stringset.h'
fi
if test -f 'cook/builtin/strip.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/strip.h'\"
else
echo shar: Extracting \"'cook/builtin/strip.h'\" \(1017 characters\)
sed "s/^X//" >'cook/builtin/strip.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/strip.c
X */
X
X#ifndef COOK_BUILTIN_STRIP_H
X#define COOK_BUILTIN_STRIP_H
X
X#include <word.h>
X
Xint builtin_strip _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_STRIP_H */
END_OF_FILE
if test 1017 -ne `wc -c <'cook/builtin/strip.h'`; then
    echo shar: \"'cook/builtin/strip.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/strip.h'
fi
if test -f 'cook/builtin/subst.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/subst.h'\"
else
echo shar: Extracting \"'cook/builtin/subst.h'\" \(1017 characters\)
sed "s/^X//" >'cook/builtin/subst.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/subst.c
X */
X
X#ifndef COOK_BUILTIN_SUBST_H
X#define COOK_BUILTIN_SUBST_H
X
X#include <word.h>
X
Xint builtin_subst _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_SUBST_H */
END_OF_FILE
if test 1017 -ne `wc -c <'cook/builtin/subst.h'`; then
    echo shar: \"'cook/builtin/subst.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/subst.h'
fi
if test -f 'cook/builtin/suffix.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/suffix.h'\"
else
echo shar: Extracting \"'cook/builtin/suffix.h'\" \(1022 characters\)
sed "s/^X//" >'cook/builtin/suffix.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/suffix.c
X */
X
X#ifndef COOK_BUILTIN_SUFFIX_H
X#define COOK_BUILTIN_SUFFIX_H
X
X#include <word.h>
X
Xint builtin_suffix _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_SUFFIX_H */
END_OF_FILE
if test 1022 -ne `wc -c <'cook/builtin/suffix.h'`; then
    echo shar: \"'cook/builtin/suffix.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/suffix.h'
fi
if test -f 'cook/builtin/unsplit.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/unsplit.h'\"
else
echo shar: Extracting \"'cook/builtin/unsplit.h'\" \(1027 characters\)
sed "s/^X//" >'cook/builtin/unsplit.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/unsplit.c
X */
X
X#ifndef COOK_BUILTIN_UNSPLIT_H
X#define COOK_BUILTIN_UNSPLIT_H
X
X#include <word.h>
X
Xint builtin_unsplit _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_UNSPLIT_H */
END_OF_FILE
if test 1027 -ne `wc -c <'cook/builtin/unsplit.h'`; then
    echo shar: \"'cook/builtin/unsplit.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/unsplit.h'
fi
if test -f 'cook/builtin/word.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/word.h'\"
else
echo shar: Extracting \"'cook/builtin/word.h'\" \(1012 characters\)
sed "s/^X//" >'cook/builtin/word.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/word.c
X */
X
X#ifndef COOK_BUILTIN_WORD_H
X#define COOK_BUILTIN_WORD_H
X
X#include <word.h>
X
Xint builtin_word _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_WORD_H */
END_OF_FILE
if test 1012 -ne `wc -c <'cook/builtin/word.h'`; then
    echo shar: \"'cook/builtin/word.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/word.h'
fi
if test -f 'cook/env.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/env.h'\"
else
echo shar: Extracting \"'cook/env.h'\" \(1045 characters\)
sed "s/^X//" >'cook/env.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/env.c
X */
X
X#ifndef ENV_H
X#define ENV_H
X
X#include <main.h>
X
Xvoid env_initialize _((void));
Xvoid env_set _((char *name, char *value));
Xvoid env_unset _((char *name));
X
X#endif /* ENV_H */
END_OF_FILE
if test 1045 -ne `wc -c <'cook/env.h'`; then
    echo shar: \"'cook/env.h'\" unpacked with wrong size!
fi
# end of 'cook/env.h'
fi
if test -f 'cook/hashline.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/hashline.h'\"
else
echo shar: Extracting \"'cook/hashline.h'\" \(1009 characters\)
sed "s/^X//" >'cook/hashline.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/hashline.y
X */
X
X#ifndef HASHLINE_H
X#define HASHLINE_H
X
X#include <main.h>
X
Xvoid hashline _((void));
Xvoid hashline_reset _((void));
X
X#endif /* HASHLINE_H */
END_OF_FILE
if test 1009 -ne `wc -c <'cook/hashline.h'`; then
    echo shar: \"'cook/hashline.h'\" unpacked with wrong size!
fi
# end of 'cook/hashline.h'
fi
if test -f 'cook/listing.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/listing.h'\"
else
echo shar: Extracting \"'cook/listing.h'\" \(964 characters\)
sed "s/^X//" >'cook/listing.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/listing.c
X */
X
X#ifndef LISTING_H
X#define LISTING_H
X
X#include <main.h>
X
Xvoid log_open _((void));
X
X#endif
END_OF_FILE
if test 964 -ne `wc -c <'cook/listing.h'`; then
    echo shar: \"'cook/listing.h'\" unpacked with wrong size!
fi
# end of 'cook/listing.h'
fi
if test -f 'cook/parse.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/parse.h'\"
else
echo shar: Extracting \"'cook/parse.h'\" \(1023 characters\)
sed "s/^X//" >'cook/parse.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/parse.y
X */
X
X#ifndef PARSE_H
X#define PARSE_H
X
X#include <main.h>
X
Xstruct string_ty;
X
Xvoid parse _((struct string_ty *));
Xvoid parse_initialize _((void));
X
X#endif /* PARSE_H */
END_OF_FILE
if test 1023 -ne `wc -c <'cook/parse.h'`; then
    echo shar: \"'cook/parse.h'\" unpacked with wrong size!
fi
# end of 'cook/parse.h'
fi
if test ! -d 'cookfp' ; then
    echo shar: Creating directory \"'cookfp'\"
    mkdir 'cookfp'
fi
if test ! -d 'cooktime' ; then
    echo shar: Creating directory \"'cooktime'\"
    mkdir 'cooktime'
fi
if test -f 'cooktime/date.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cooktime/date.h'\"
else
echo shar: Extracting \"'cooktime/date.h'\" \(1023 characters\)
sed "s/^X//" >'cooktime/date.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cooktime/date.y
X */
X
X#ifndef DATE_H
X#define DATE_H
X
X#include <ac/time.h>
X#include <main.h>
X
Xtime_t date_scan _((char *));
Xchar *date_string _((time_t));
X
X#endif /* DATE_H */
END_OF_FILE
if test 1023 -ne `wc -c <'cooktime/date.h'`; then
    echo shar: \"'cooktime/date.h'\" unpacked with wrong size!
fi
# end of 'cooktime/date.h'
fi
if test ! -d 'doc' ; then
    echo shar: Creating directory \"'doc'\"
    mkdir 'doc'
fi
if test ! -d 'doc/function' ; then
    echo shar: Creating directory \"'doc/function'\"
    mkdir 'doc/function'
fi
if test -f 'doc/function.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function.sh'\"
else
echo shar: Extracting \"'doc/function.sh'\" \(926 characters\)
sed "s/^X//" >'doc/function.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: shell script to generate doc/function.so
X#
Xfor f in $*
Xdo
X	echo ".br"
X	echo ".ne 3i"
X	echo ".so function/$f.so"
Xdone
Xexit 0
END_OF_FILE
if test 926 -ne `wc -c <'doc/function.sh'`; then
    echo shar: \"'doc/function.sh'\" unpacked with wrong size!
fi
# end of 'doc/function.sh'
fi
if test -f 'doc/function/quote.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/quote.so'\"
else
echo shar: Extracting \"'doc/function/quote.so'\" \(1038 characters\)
sed "s/^X//" >'doc/function/quote.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Quote
X.\"
X.H 2 "quote"
XEach argument is quoted by single quotes,
Xwith special characters escaped as necessary.
X.H 3 "See Also"
Xcollect, execute
END_OF_FILE
if test 1038 -ne `wc -c <'doc/function/quote.so'`; then
    echo shar: \"'doc/function/quote.so'\" unpacked with wrong size!
fi
# end of 'doc/function/quote.so'
fi
if test -f 'doc/function/sort.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/sort.so'\"
else
echo shar: Extracting \"'doc/function/sort.so'\" \(1018 characters\)
sed "s/^X//" >'doc/function/sort.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Sort
X.\"
X.H 2 "sort"
XThe arguments are sorted lexicographically.
XDuplicates are
X.I not
Xremoved.
X.H 3 "See Also"
Xsort_newest
END_OF_FILE
if test 1018 -ne `wc -c <'doc/function/sort.so'`; then
    echo shar: \"'doc/function/sort.so'\" unpacked with wrong size!
fi
# end of 'doc/function/sort.so'
fi
if test -f 'doc/version.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/version.so'\"
else
echo shar: Extracting \"'doc/version.so'\" \(38 characters\)
sed "s/^X//" >'doc/version.so' <<'END_OF_FILE'
X.ds V) 1.6.D004
X.ds v) 1.6
X.ds w) 1.5
END_OF_FILE
if test 38 -ne `wc -c <'doc/version.so'`; then
    echo shar: \"'doc/version.so'\" unpacked with wrong size!
fi
# end of 'doc/version.so'
fi
if test ! -d 'find_libs' ; then
    echo shar: Creating directory \"'find_libs'\"
    mkdir 'find_libs'
fi
if test -f 'find_libs/os.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'find_libs/os.h'\"
else
echo shar: Extracting \"'find_libs/os.h'\" \(967 characters\)
sed "s/^X//" >'find_libs/os.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for find_libs/os.c
X */
X
X#ifndef OS_H
X#define OS_H
X
X#include <main.h>
X
Xint os_exists _((char *));
X
X#endif /* OS_H */
END_OF_FILE
if test 967 -ne `wc -c <'find_libs/os.h'`; then
    echo shar: \"'find_libs/os.h'\" unpacked with wrong size!
fi
# end of 'find_libs/os.h'
fi
if test ! -d 'lib' ; then
    echo shar: Creating directory \"'lib'\"
    mkdir 'lib'
fi
if test -f 'lib/gcc' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/gcc'\"
else
echo shar: Extracting \"'lib/gcc'\" \(196 characters\)
sed "s/^X//" >'lib/gcc' <<'END_OF_FILE'
X/*
X * MANIFEST: cookbook for using gcc
X */
X#pragma once
X#include "c"
Xgcc_include_dir = /usr/local/lib/gcc-include;
Xcc = gcc;
Xcc_include_flags = [stringset -I[gcc_include_dir] [cc_include_flags]];
END_OF_FILE
if test 196 -ne `wc -c <'lib/gcc'`; then
    echo shar: \"'lib/gcc'\" unpacked with wrong size!
fi
# end of 'lib/gcc'
fi
if test -f 'lib/home' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/home'\"
else
echo shar: Extracting \"'lib/home'\" \(922 characters\)
sed "s/^X//" >'lib/home' <<'END_OF_FILE'
X/*
X * NAME
X *	home - define installation locations
X *
X * DESCRIPTION
X *	This cookbook defined where certain directoris are,
X *	and some common uses of those directories,
X *	relative to $HOME.
X *
X * VARIABLES
X *	home		users' home directory.
X *	bin		directory to place program binaries into
X *	include		directory to place include files into
X *	lib		directory to place libraries into
X *	cc_include_flags The [include] directory is added to the search args
X *	cc_link_flags	The [lib] directory is added to the search args
X *
X * MANIFEST: cookbook for locations in home directory
X */
X
X#pragma once
X
Xhome = [getenv HOME];
Xbin = [home]/bin;
Xinclude = [home]/include;
Xlib = [home]/lib;
X
Xif [not [defined cc_include_flags]] then
X    cc_include_flags = ;
Xcc_include_flags = [stringset [cc_include_flags] -I[include]];
X
Xif [not [defined cc_link_flags]] then
X    cc_link_flags = ;
Xcc_link_flags = [stringset [cc_link_flags] -L[lib]];
END_OF_FILE
if test 922 -ne `wc -c <'lib/home'`; then
    echo shar: \"'lib/home'\" unpacked with wrong size!
fi
# end of 'lib/home'
fi
if test -f 'lib/print' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/print'\"
else
echo shar: Extracting \"'lib/print'\" \(676 characters\)
sed "s/^X//" >'lib/print' <<'END_OF_FILE'
X/*
X * NAME
X *	print - print files
X *
X * DESCRIPTION
X *	This cookbook is used to print files.
X *	It will almost certainly need to be changed for every site.
X *
X * RECIPES
X *	%.lw: %.ps	print a PostScript file
X *	%.lp: %		print a text file
X *
X * VARIABLES
X *	lp		The print command.
X *			Not altered if already defined.
X *	lp_flags	OPtions passed to the print command.
X *			Not altered if already defined.
X *			Defaults to empty.
X *
X * MANIFEST: cookbook for printing files
X */
X
X#pragma once
X
Xif [not [defined lp]] then
X    lp = lp;
Xif [not [defined lp_flags]] then
X    lp_flags = ;
X
X%.lw: %.ps
X    {
X	[lp] [lp_flags] -dlaser %.ps;
X    }
X
X%.lp: %
X    {
X	[lp] [lp_flags] %;
X    }
END_OF_FILE
if test 676 -ne `wc -c <'lib/print'`; then
    echo shar: \"'lib/print'\" unpacked with wrong size!
fi
# end of 'lib/print'
fi
if test -f 'lib/rcs' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/rcs'\"
else
echo shar: Extracting \"'lib/rcs'\" \(577 characters\)
sed "s/^X//" >'lib/rcs' <<'END_OF_FILE'
X/*
X * NAME
X *	rcs - extract files from RCS
X *
X * DESCRIPTION
X *	This cookbook is used to extract files from RCS
X *
X * RECIPES
X *	%: RCS/%,v	extract files from RCS
X *	%: %,v		extract files from RCS
X *
X * VARIABLES
X *	co		the RCS checkout command
X *	co_flags	flags for the co command, default empty
X *
X * MANIFEST: cookbook for using RCS
X */
X
X#pragma once
X
Xif [not [defined co]] then
X	co = co;
Xif [not [defined co_flags]] then
X	co_flags = ;
X
X%0%: %0RCS/%,v
X	if [exists %0RCS/%,v]
X{
X	[co] [co_flags] %0RCS/%,v %0%;
X}
X
X%0%: %0%,v
X	if [exists %0%,v]
X{
X	[co] [co_flags] %0%,v %0%;
X}
END_OF_FILE
if test 577 -ne `wc -c <'lib/rcs'`; then
    echo shar: \"'lib/rcs'\" unpacked with wrong size!
fi
# end of 'lib/rcs'
fi
if test -f 'lib/sccs' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/sccs'\"
else
echo shar: Extracting \"'lib/sccs'\" \(605 characters\)
sed "s/^X//" >'lib/sccs' <<'END_OF_FILE'
X/*
X * NAME
X *	sccs - extract files from SCCS
X *
X * DESCRIPTION
X *	This cookbook is used to extract files from SCCS
X *
X * RECIPES
X *	%: SCCS/s.%	extract files from SCCS
X *	%: s.%		extract files from SCCS
X *
X * VARIABLES
X *	get		the SCCS get command
X *	get_flags	flags for the get command, default empty
X *
X * MANIFEST: cookbook for using SCCS
X */
X
X#pragma once
X
Xif [not [defined get]] then
X	get = get;
Xif [not [defined get_flags]] then
X	get_flags = ;
X
X%0%: %0SCCS/s.%
X	if [exists %0SCCS/s.%]
X{
X	[get] [get_flags] -p %0SCCS/s.% > %0%;
X}
X
X%0%: %0s.%
X	if [exists %0s.%]
X{
X	[get] [get_flags] -p %0s.% > %0%;
X}
END_OF_FILE
if test 605 -ne `wc -c <'lib/sccs'`; then
    echo shar: \"'lib/sccs'\" unpacked with wrong size!
fi
# end of 'lib/sccs'
fi
if test -f 'lib/usr' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/usr'\"
else
echo shar: Extracting \"'lib/usr'\" \(437 characters\)
sed "s/^X//" >'lib/usr' <<'END_OF_FILE'
X/*
X * NAME
X *	usr - define installation locations
X *
X * DESCRIPTION
X *	This cookbook defined where certain directoris are,
X *	relative to /usr.
X *
X * VARIABLES
X *	bin		directory to place program binaries into
X *	include		directory to place include files into
X *	lib		directory to place libraries into
X *
X * MANIFEST: cookbook for locations in system directories
X */
X
X#pragma once
X
Xbin = /usr/bin;
Xinclude = /usr/include;
Xlib = /usr/lib;
END_OF_FILE
if test 437 -ne `wc -c <'lib/usr'`; then
    echo shar: \"'lib/usr'\" unpacked with wrong size!
fi
# end of 'lib/usr'
fi
if test -f 'lib/usr.local' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/usr.local'\"
else
echo shar: Extracting \"'lib/usr.local'\" \(900 characters\)
sed "s/^X//" >'lib/usr.local' <<'END_OF_FILE'
X/*
X * NAME
X *	usr.local - define installation locations
X *
X * DESCRIPTION
X *	This cookbook defined where certain directoris are,
X *	and some common uses of those directories,
X *	relative to /usr/local.
X *
X * VARIABLES
X *	bin		directory to place program binaries into
X *	include		directory to place include files into
X *	lib		directory to place libraries into
X *	cc_include_flags The [include] directory is added to the search args
X *	cc_link_flags	The [lib] directory is added to the search args
X *
X * MANIFEST: cookbook for locations in local system directories
X */
X
X#pragma once
X
Xbin = /usr/local/bin;
Xinclude = /usr/local/include;
Xlib = /usr/local/lib;
X
Xif [not [defined cc_include_flags]] then
X    cc_include_flags = ;
Xcc_include_flags = [stringset [cc_include_flags] -I[include]];
X
Xif [not [defined cc_link_flags]] then
X    cc_link_flags = ;
Xcc_link_flags = [stringset [cc_link_flags] -L[lib]];
END_OF_FILE
if test 900 -ne `wc -c <'lib/usr.local'`; then
    echo shar: \"'lib/usr.local'\" unpacked with wrong size!
fi
# end of 'lib/usr.local'
fi
if test ! -d 'make2cook' ; then
    echo shar: Creating directory \"'make2cook'\"
    mkdir 'make2cook'
fi
if test -f 'make2cook/gram.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/gram.h'\"
else
echo shar: Extracting \"'make2cook/gram.h'\" \(1004 characters\)
sed "s/^X//" >'make2cook/gram.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/gram.y
X */
X
X#ifndef MAKE2COOK_GRAM_H
X#define MAKE2COOK_GRAM_H
X
X#include <main.h>
X
Xextern int verbose;
X
Xvoid gram _((char *));
X
X#endif /* MAKE2COOK_GRAM_H */
END_OF_FILE
if test 1004 -ne `wc -c <'make2cook/gram.h'`; then
    echo shar: \"'make2cook/gram.h'\" unpacked with wrong size!
fi
# end of 'make2cook/gram.h'
fi
if test ! -d 'make2cook/stmt' ; then
    echo shar: Creating directory \"'make2cook/stmt'\"
    mkdir 'make2cook/stmt'
fi
if test -f 'make2cook/stmt/blank.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/blank.h'\"
else
echo shar: Extracting \"'make2cook/stmt/blank.h'\" \(1021 characters\)
sed "s/^X//" >'make2cook/stmt/blank.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/blank.c
X */
X
X#ifndef MAKE2COOK_STMT_BLANK_H
X#define MAKE2COOK_STMT_BLANK_H
X
X#include <stmt.h>
X
Xstmt_ty *stmt_blank_alloc _((void));
X
X#endif /* MAKE2COOK_STMT_BLANK_H */
END_OF_FILE
if test 1021 -ne `wc -c <'make2cook/stmt/blank.h'`; then
    echo shar: \"'make2cook/stmt/blank.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/blank.h'
fi
if test -f 'make2cook/vargram.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/vargram.h'\"
else
echo shar: Extracting \"'make2cook/vargram.h'\" \(1001 characters\)
sed "s/^X//" >'make2cook/vargram.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/vargram.y
X */
X
X#ifndef MAKE2COOK_VARGRAM_H
X#define MAKE2COOK_VARGRAM_H
X
X#include <main.h>
X
Xint vargram_parse _((void));
X
X#endif /* MAKE2COOK_VARGRAM_H */
END_OF_FILE
if test 1001 -ne `wc -c <'make2cook/vargram.h'`; then
    echo shar: \"'make2cook/vargram.h'\" unpacked with wrong size!
fi
# end of 'make2cook/vargram.h'
fi
if test ! -d 'man1' ; then
    echo shar: Creating directory \"'man1'\"
    mkdir 'man1'
fi
if test -f 'man1/z_exit.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/z_exit.so'\"
else
echo shar: Extracting \"'man1/z_exit.so'\" \(1060 characters\)
sed "s/^X//" >'man1/z_exit.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of exit status for manual entries
X.\"
X.br
X.ne 1i
X.SH EXIT STATUS
XThe 
X.I \*(n)
Xcommand will exit with a status of 1 on any error.
XThe 
X.I \*(n)
Xcommand will only exit with a status of 0 if there are no errors.
END_OF_FILE
if test 1060 -ne `wc -c <'man1/z_exit.so'`; then
    echo shar: \"'man1/z_exit.so'\" unpacked with wrong size!
fi
# end of 'man1/z_exit.so'
fi
if test -f 'man1/z_name.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/z_name.so'\"
else
echo shar: Extracting \"'man1/z_name.so'\" \(962 characters\)
sed "s/^X//" >'man1/z_name.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing z_name.so
X.\"
X.ds n) cook
X.if n .nr )M 8n
X.if n .nr IN 8n
X.if n .nr )I 8n
X.if n .po 0
X.if n .hy 0
X.if n .ad l
END_OF_FILE
if test 962 -ne `wc -c <'man1/z_name.so'`; then
    echo shar: \"'man1/z_name.so'\" unpacked with wrong size!
fi
# end of 'man1/z_name.so'
fi
if test ! -d 'roffpp' ; then
    echo shar: Creating directory \"'roffpp'\"
    mkdir 'roffpp'
fi
if test -f 'roffpp/preprocess.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'roffpp/preprocess.h'\"
else
echo shar: Extracting \"'roffpp/preprocess.h'\" \(1044 characters\)
sed "s/^X//" >'roffpp/preprocess.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for roffpp/preprocess.c
X */
X
X#ifndef PREPROCESS_H
X#define PREPROCESS_H
X
X#include <main.h>
X
Xvoid preprocess_include _((char *));
Xvoid preprocess _((char *infile, char *outfile));
X
X#endif /* PREPROCESS_H */
END_OF_FILE
if test 1044 -ne `wc -c <'roffpp/preprocess.h'`; then
    echo shar: \"'roffpp/preprocess.h'\" unpacked with wrong size!
fi
# end of 'roffpp/preprocess.h'
fi
if test ! -d 'test' ; then
    echo shar: Creating directory \"'test'\"
    mkdir 'test'
fi
if test ! -d 'test/00' ; then
    echo shar: Creating directory \"'test/00'\"
    mkdir 'test/00'
fi
if test ! -d 'txt2c' ; then
    echo shar: Creating directory \"'txt2c'\"
    mkdir 'txt2c'
fi
if test -f 'txt2c/txt2c.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'txt2c/txt2c.h'\"
else
echo shar: Extracting \"'txt2c/txt2c.h'\" \(992 characters\)
sed "s/^X//" >'txt2c/txt2c.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for txt2c/txt2c.c
X */
X
X#ifndef TXT2C_TXT2C_H
X#define TXT2C_TXT2C_H
X
X#include <main.h>
X
Xvoid txt2c _((char *ifn, char *ofn));
X
X#endif /* TXT2C_TXT2C_H */
END_OF_FILE
if test 992 -ne `wc -c <'txt2c/txt2c.h'`; then
    echo shar: \"'txt2c/txt2c.h'\" unpacked with wrong size!
fi
# end of 'txt2c/txt2c.h'
fi
echo shar: End of archive 1 \(of 19\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
