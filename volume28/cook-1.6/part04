Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v28i097: cook - a file construction tool, V1.6, Part04/19
References: <1.775008949.28543@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 28, Issue 97
Archive-Name: cook-1.6/part04

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 4 (of 19)."
# Contents:  aux/template/test c_incl/sniff.h common/ac/ar.h
#   common/arglex.h common/error.h common/symtab.h
#   cook/builtin/findstring.c cook/builtin/home.c cook/builtin/strip.c
#   cook/builtin/word.c cook/os.h doc/conditions.so doc/function.so
#   doc/function/and.so doc/function/findstring.so doc/function/not.so
#   doc/function/subst.so doc/function/suffix.so doc/function/word.so
#   make2cook/blob.h make2cook/stmt.h man1/o__rules.so
#   test/00/t0005a.sh test/00/t0007a.sh test/00/t0009a.sh
#   test/00/t0015a.sh test/00/t0018a.sh test/00/t0024a.sh
#   test/00/t0027a.sh test/00/t0031a.sh test/00/t0032a.sh
#   test/00/t0034a.sh test/00/t0037a.sh test/00/t0039a.sh
#   test/00/t0040a.sh test/00/t0044a.sh test/00/t0045a.sh
#   test/00/t0052a.sh test/00/t0053a.sh test/00/t0055a.sh
#   test/00/t0057a.sh test/00/t0058a.sh test/00/t0059a.sh
#   test/00/t0060a.sh test/00/t0061a.sh test/00/t0063a.sh
#   test/00/t0064a.sh test/00/t0072a.sh test/00/t0073a.sh
#   test/00/t0074a.sh test/00/t0075a.sh test/00/t0076a.sh
# Wrapped by vixie@gw.home.vix.com on Sat Jul 23 17:11:20 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'aux/template/test' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/template/test'\"
else
echo shar: Extracting \"'aux/template/test'\" \(1596 characters\)
sed "s/^X//" >'aux/template/test' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) ${date %Y} Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the ??? functionality
X#
Xwork=/tmp/$$$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $$? -ne 0 ; then exit 1; fi
X
Xif test "$$1" != "" ; then bin="$$here/$$1/bin"; else bin="$$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the ??? functionality' 1>&2
X	cd $$here
X	rm -rf $$work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $$here
X	rm -rf $$work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $$work
Xif test $$? -ne 0 ; then exit 1; fi
Xcd $$work
Xif test $$? -ne 0 ; then fail; fi
X
X#
X# put your test here
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	fail;
X}
Xfubar
Xif test $$? -ne 0 ; then fail; fi
X
X$$bin/cook -nl
Xif test $$? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1596 -ne `wc -c <'aux/template/test'`; then
    echo shar: \"'aux/template/test'\" unpacked with wrong size!
fi
# end of 'aux/template/test'
fi
if test -f 'c_incl/sniff.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'c_incl/sniff.h'\"
else
echo shar: Extracting \"'c_incl/sniff.h'\" \(1601 characters\)
sed "s/^X//" >'c_incl/sniff.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for c_incl/sniff.c
X */
X
X#ifndef SNIFF_H
X#define SNIFF_H
X
X#include <stdio.h>
X#include <main.h>
X
Xenum
X{
X	absent_ignore,
X	absent_mention,
X	absent_error
X};
X
Xtypedef struct option_ty option_ty;
Xstruct option_ty
X{
X	int	o_verbose;
X	int	o_absent_local;
X	int	o_absent_system;
X	int	o_absent_program;
X};
Xextern option_ty option;
X
Xstruct wlist;
X
Xtypedef struct sniff_ty sniff_ty;
Xstruct sniff_ty
X{
X	int (*scan)_((FILE *, struct wlist *, struct wlist *));
X	void (*prepare)_((void));
X};
X
Xextern	sniff_ty	lang_c;
Xextern	sniff_ty	lang_roff;
X
Xextern char *prefix;
Xextern char *suffix;
X
Xvoid sniff _((char *));
Xvoid sniff_include _((char *));
Xlong sniff_include_count _((void));
Xvoid sniff_prepare _((void));
Xvoid sniff_language _((sniff_ty *));
X
X#endif /* SNIFF_H */
END_OF_FILE
if test 1601 -ne `wc -c <'c_incl/sniff.h'`; then
    echo shar: \"'c_incl/sniff.h'\" unpacked with wrong size!
fi
# end of 'c_incl/sniff.h'
fi
if test -f 'common/ac/ar.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/ar.h'\"
else
echo shar: Extracting \"'common/ac/ar.h'\" \(1643 characters\)
sed "s/^X//" >'common/ac/ar.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate <ar.h> differences
X */
X
X#ifndef COMMON_AC_AR_H
X#define COMMON_AC_AR_H
X
X#include <config.h>
X
X/*
X * On many System V release N derivatives, ar.h defines two different
X * archive formats depending upon whether you have defined PORTAR
X * (normal) or PORT5AR (System V Release 1).  There is no default, one
X * or the other must be defined to have a nonzero value.
X */
X#undef PORTAR
X#undef PORT5AR
X
X/*
X * SCO Unix's compiler defines both of these.
X */
X#ifdef M_UNIX
X#undef M_XENIX
X#endif
X
X/*
X * According to Jim Sievert <jas1@rsvl.unisys.com>, for SCO XENIX
X * defining PORTAR to 1 gets the wrong archive format, and defining it
X * to 0 gets the right one.
X */
X#ifdef M_XENIX
X#define PORTAR 0
X#else
X#define PORTAR 1
X#endif
X
X/*
X * include the system's ar.h
X */
X#ifdef HAVE_AR_H
X#include <ar.h>
X#endif
X
X#endif /* COMMON_AC_AR_H */
END_OF_FILE
if test 1643 -ne `wc -c <'common/ac/ar.h'`; then
    echo shar: \"'common/ac/ar.h'\" unpacked with wrong size!
fi
# end of 'common/ac/ar.h'
fi
if test -f 'common/arglex.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/arglex.h'\"
else
echo shar: Extracting \"'common/arglex.h'\" \(1778 characters\)
sed "s/^X//" >'common/arglex.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/arglex.c
X */
X
X#ifndef ARGLEX_H
X#define ARGLEX_H
X
X#include <main.h>
X
Xenum arglex_token_ty
X{
X	arglex_token_eoln = -20,
X	arglex_token_help,
X	arglex_token_number,
X	arglex_token_option,
X	arglex_token_stdio,
X	arglex_token_string,
X	arglex_token_tracing,
X	arglex_token_version
X};
Xtypedef enum arglex_token_ty arglex_token_ty;
X
Xtypedef struct arglex_value_ty arglex_value_ty;
Xstruct arglex_value_ty
X{
X	char	*alv_string;
X	long	alv_number;
X};
X
Xtypedef struct arglex_table_ty arglex_table_ty;
Xstruct arglex_table_ty
X{
X	char	*name;
X	int	token;
X};
X
Xextern arglex_token_ty arglex_token;
Xextern arglex_value_ty arglex_value;
Xextern char *progname;
X
Xvoid arglex_init _((int argc, char **argv, arglex_table_ty *table));
Xarglex_token_ty arglex _((void));
Xint arglex_compare _((char *formal, char *actual));
Xvoid arglex_init_from_env _((char *argv0, arglex_table_ty *table));
Xvoid arglex_set_progname _((char *argv0));
X
X#endif /* ARGLEX_H */
END_OF_FILE
if test 1778 -ne `wc -c <'common/arglex.h'`; then
    echo shar: \"'common/arglex.h'\" unpacked with wrong size!
fi
# end of 'common/arglex.h'
fi
if test -f 'common/error.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/error.h'\"
else
echo shar: Extracting \"'common/error.h'\" \(1548 characters\)
sed "s/^X//" >'common/error.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/error.c
X */
X
X#ifndef ERROR_H
X#define ERROR_H
X
X#include <main.h>
X
Xvoid error _((char *, ...));
Xvoid fatal _((char *, ...));
Xvoid nerror _((char *, ...));
Xvoid nfatal _((char *, ...));
X
X#ifdef DEBUG
X# if defined(__STDC__) || defined(__stdc__)
X#  define assert(c) cook_assert((c) != 0, #c, __FILE__, __LINE__)
X# else
X#  define assert(c) cook_assert((c) != 0, "c", __FILE__, __LINE__)
X# endif
Xvoid cook_assert _((int, char *, char *, int));
X#else
X# define assert(c)
X#endif
X
Xtypedef void (*quit_ty)_((void));
Xvoid quit_handler _((quit_ty));
Xvoid quit _((int));
X
Xvoid star _((void));
Xvoid star_eoln _((void));
Xvoid star_sync _((void));
Xvoid star_enable _((void));
X
X#endif /* ERROR_H */
END_OF_FILE
if test 1548 -ne `wc -c <'common/error.h'`; then
    echo shar: \"'common/error.h'\" unpacked with wrong size!
fi
# end of 'common/error.h'
fi
if test -f 'common/symtab.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/symtab.h'\"
else
echo shar: Extracting \"'common/symtab.h'\" \(1845 characters\)
sed "s/^X//" >'common/symtab.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/symtab.c
X */
X
X#ifndef COMMON_SYMTAB_H
X#define COMMON_SYMTAB_H
X
X#include <str.h>
X
Xtypedef struct symtab_row_ty symtab_row_ty;
Xstruct symtab_row_ty
X{
X	string_ty	*key;
X	void		*data;
X	symtab_row_ty	*overflow;
X};
X
Xtypedef struct symtab_ty symtab_ty;
Xstruct symtab_ty
X{
X	symtab_ty	*chain;
X	void		(*reap)_((void *));
X	symtab_row_ty	**hash_table;
X	str_hash_ty	hash_modulus;
X	str_hash_ty	hash_cutover;
X	str_hash_ty	hash_cutover_mask;
X	str_hash_ty	hash_cutover_split_mask;
X	str_hash_ty	hash_split;
X	str_hash_ty	hash_load;
X};
X
Xsymtab_ty *symtab_alloc _((int));
Xvoid symtab_free _((symtab_ty *));
Xvoid *symtab_query _((symtab_ty *, string_ty *));
Xvoid symtab_assign _((symtab_ty *, string_ty *, void *));
Xvoid symtab_assign_push _((symtab_ty *, string_ty *, void *));
Xvoid symtab_delete _((symtab_ty *, string_ty *));
Xvoid symtab_dump _((symtab_ty *, char *));
Xvoid symtab_walk _((symtab_ty *stp, void (*func)_((symtab_ty *stp,
X	string_ty *key, void *data, void *arg)), void *arg));
X
X#endif /* COMMON_SYMTAB_H */
END_OF_FILE
if test 1845 -ne `wc -c <'common/symtab.h'`; then
    echo shar: \"'common/symtab.h'\" unpacked with wrong size!
fi
# end of 'common/symtab.h'
fi
if test -f 'cook/builtin/findstring.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/findstring.c'\"
else
echo shar: Extracting \"'cook/builtin/findstring.c'\" \(1722 characters\)
sed "s/^X//" >'cook/builtin/findstring.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the findstring builtin function
X */
X
X#include <builtin/findstring.h>
X#include <expr.h>
X
X
Xstatic int contains _((string_ty *, string_ty *));
X
Xstatic int
Xcontains(s1, s2)
X	string_ty	*s1;
X	string_ty	*s2;
X{
X	size_t		len;
X	size_t		j;
X
X	if (s1->str_length == 0)
X		return 1;
X	if (s1->str_length > s2->str_length)
X		return 0;
X	len = s2->str_length - s1->str_length;
X	for (j = 0; j <= len; ++j)
X	{
X		if (!memcmp(s2->str_text + j, s1->str_text, s1->str_length))
X			return 1;
X	}
X	return 0;
X}
X
X
Xint
Xbuiltin_findstring(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires one or more arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	for (j = 2; j < arg->wl_nwords; ++j)
X	{
X		if (contains(arg->wl_word[1], arg->wl_word[j]))
X			wl_append(result, arg->wl_word[1]);
X		else
X			wl_append(result, str_false);
X	}
X	return 0;
X}
END_OF_FILE
if test 1722 -ne `wc -c <'cook/builtin/findstring.c'`; then
    echo shar: \"'cook/builtin/findstring.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/findstring.c'
fi
if test -f 'cook/builtin/home.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/home.c'\"
else
echo shar: Extracting \"'cook/builtin/home.c'\" \(1539 characters\)
sed "s/^X//" >'cook/builtin/home.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the home builtin function
X */
X
X#include <ac/stdlib.h>
X#include <pwd.h>
X
X#include <builtin/home.h>
X#include <error.h>
X
X
Xint
Xbuiltin_home(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	char		*cp;
X	string_ty	*s;
X	size_t		j;
X	struct passwd	*pw;
X
X	if (arg->wl_nwords < 2)
X	{
X		cp = getenv("HOME");
X		if (!cp)
X		{
X			error("the HOME environment variable is not set");
X			return -1;
X		}
X		s = str_from_c(cp);
X		wl_append(result, s);
X		str_free(s);
X		return 0;
X	}
X	for (j = 1; j < arg->wl_nwords; ++j)
X	{
X		s = arg->wl_word[j];
X		pw = getpwnam(s->str_text);
X		if (!pw)
X		{
X			error("user \"%S\" unknown", s);
X			return -1;
X		}
X		s = str_from_c(pw->pw_dir);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1539 -ne `wc -c <'cook/builtin/home.c'`; then
    echo shar: \"'cook/builtin/home.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/home.c'
fi
if test -f 'cook/builtin/strip.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/strip.c'\"
else
echo shar: Extracting \"'cook/builtin/strip.c'\" \(1675 characters\)
sed "s/^X//" >'cook/builtin/strip.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the strip builtin function
X */
X
X#include <ctype.h>
X
X#include <builtin/strip.h>
X#include <mem.h>
X
X
Xstatic string_ty *strip _((string_ty *));
X
Xstatic string_ty *
Xstrip(s)
X	string_ty	*s;
X{
X	static char	*buf;
X	static size_t	bufmax;
X	char		*bp;
X	char		*sp;
X	int		space;
X
X	if (bufmax < s->str_length)
X	{
X		bufmax = s->str_length;
X		buf = mem_change_size(buf, bufmax);
X	}
X	bp = buf;
X	sp = s->str_text;
X	while (*sp && isspace(*sp))
X		++sp;
X	space = 0;
X	while (*sp)
X	{
X		if (isspace(*sp))
X			space = 1;
X		else
X		{
X			if (space)
X				*bp++ = ' ';
X			*bp++ = *sp;
X			space = 0;
X		}
X		++sp;
X	}
X	return str_n_from_c(buf, bp - buf);
X}
X
X
Xint
Xbuiltin_strip(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X
X	for (j = 1; j < arg->wl_nwords; ++j)
X	{
X		s = strip(arg->wl_word[j]);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1675 -ne `wc -c <'cook/builtin/strip.c'`; then
    echo shar: \"'cook/builtin/strip.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/strip.c'
fi
if test -f 'cook/builtin/word.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/word.c'\"
else
echo shar: Extracting \"'cook/builtin/word.c'\" \(1631 characters\)
sed "s/^X//" >'cook/builtin/word.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement builtin word function
X */
X
X#include <ctype.h>
X
X#include <builtin/word.h>
X#include <expr.h>
X
X
Xstatic long number _((char *));
X
Xstatic long
Xnumber(s)
X	char		*s;
X{
X	long		n;
X
X	n = 0;
X	while (isspace(*s))
X		++s;
X	while (isdigit(*s))
X		n = n * 10 + *s++ - '0';
X	while (isspace(*s))
X		++s;
X	if (*s)
X		return 0;
X	return n;
X}
X
X
Xint
Xbuiltin_word(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	long		n;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires at least one argument",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	n = number(arg->wl_word[1]->str_text);
X	if (n <= 0)
X	{
X		expr_error
X		(
X			"%s: first argument must be a positive decimal number",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	if (n + 1 < arg->wl_nwords)
X		wl_append(result, arg->wl_word[n + 1]);
X	return 0;
X}
END_OF_FILE
if test 1631 -ne `wc -c <'cook/builtin/word.c'`; then
    echo shar: \"'cook/builtin/word.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/word.c'
fi
if test -f 'cook/os.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/os.h'\"
else
echo shar: Extracting \"'cook/os.h'\" \(1665 characters\)
sed "s/^X//" >'cook/os.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/os.c
X */
X
X#ifndef OS_H
X#define OS_H
X
X#include <ac/time.h>
X#include <str.h>
X#include <word.h>
X
Xtime_t os_mtime_oldest _((string_ty *));
Xtime_t os_mtime_newest _((string_ty *));
Xint os_mtime_adjust _((string_ty *, time_t));
Xint os_touch _((string_ty *));
Xint os_execute _((wlist *cmd, string_ty *input, int errok));
Xint os_exists _((string_ty *));
Xstring_ty *os_accdir _((void));
Xstring_ty *os_curdir _((void));
Xstring_ty *os_dirname _((string_ty *));
Xstring_ty *os_entryname _((string_ty *));
Xstring_ty *os_pathname _((string_ty *));
Xint os_legal_path _((string_ty *));
Xint os_delete _((string_ty *));
Xvoid os_meter_begin _((void));
Xvoid os_meter_end _((void));
Xchar *signal_name _((int));
Xint os_clear_stat _((string_ty *));
Xint exit_status _((char *cmd, int status, int errok));
X
X#endif /* OS_H */
END_OF_FILE
if test 1665 -ne `wc -c <'cook/os.h'`; then
    echo shar: \"'cook/os.h'\" unpacked with wrong size!
fi
# end of 'cook/os.h'
fi
if test -f 'doc/conditions.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/conditions.so'\"
else
echo shar: Extracting \"'doc/conditions.so'\" \(1720 characters\)
sed "s/^X//" >'doc/conditions.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, License
X.\"	
X.H 1 "License"
X.so version.so
X.B cook
Xversion \*(v)
X.br
XCopyright
X.if n (C)
X.if t \(co
X1988, 1989, 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.br
XAll rights reserved.
X.P
XThis program is free software;
Xyou can redistribute it
Xand/or modify it under the terms of the GNU General Public
XLicense as published by the Free Software Foundation;
Xeither version 2 of the License,
Xor (at your option) any later version.
X.P
XThis program is distributed in the hope that it will be useful,
Xbut WITHOUT ANY WARRANTY;
Xwithout even the implied
Xwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
XSee the GNU General Public License for more details.
X.P
XYou should have received a copy of the GNU General Public
XLicense along with this program; if not, write to the Free
XSoftware Foundation, Inc., 675 Mass Ave, Cambridge, MA
X02139, USA.
END_OF_FILE
if test 1720 -ne `wc -c <'doc/conditions.so'`; then
    echo shar: \"'doc/conditions.so'\" unpacked with wrong size!
fi
# end of 'doc/conditions.so'
fi
if test -f 'doc/function.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function.so'\"
else
echo shar: Extracting \"'doc/function.so'\" \(1848 characters\)
sed "s/^X//" >'doc/function.so' <<'END_OF_FILE'
X.br
X.ne 3i
X.so function/addprefix.so
X.br
X.ne 3i
X.so function/addsuffix.so
X.br
X.ne 3i
X.so function/and.so
X.br
X.ne 3i
X.so function/basename.so
X.br
X.ne 3i
X.so function/cando.so
X.br
X.ne 3i
X.so function/catenate.so
X.br
X.ne 3i
X.so function/collect.so
X.br
X.ne 3i
X.so function/collect_ln.so
X.br
X.ne 3i
X.so function/count.so
X.br
X.ne 3i
X.so function/defined.so
X.br
X.ne 3i
X.so function/dir.so
X.br
X.ne 3i
X.so function/dirname.so
X.br
X.ne 3i
X.so function/downcase.so
X.br
X.ne 3i
X.so function/entryname.so
X.br
X.ne 3i
X.so function/execute.so
X.br
X.ne 3i
X.so function/exists.so
X.br
X.ne 3i
X.so function/filter.so
X.br
X.ne 3i
X.so function/filter_out.so
X.br
X.ne 3i
X.so function/find_cmd.so
X.br
X.ne 3i
X.so function/findstring.so
X.br
X.ne 3i
X.so function/fromto.so
X.br
X.ne 3i
X.so function/getenv.so
X.br
X.ne 3i
X.so function/glob.so
X.br
X.ne 3i
X.so function/head.so
X.br
X.ne 3i
X.so function/home.so
X.br
X.ne 3i
X.so function/if.so
X.br
X.ne 3i
X.so function/in.so
X.br
X.ne 3i
X.so function/join.so
X.br
X.ne 3i
X.so function/match_mask.so
X.br
X.ne 3i
X.so function/matches.so
X.br
X.ne 3i
X.so function/mtime.so
X.br
X.ne 3i
X.so function/not.so
X.br
X.ne 3i
X.so function/opsys.so
X.br
X.ne 3i
X.so function/or.so
X.br
X.ne 3i
X.so function/pathname.so
X.br
X.ne 3i
X.so function/patsubst.so
X.br
X.ne 3i
X.so function/prepost.so
X.br
X.ne 3i
X.so function/quote.so
X.br
X.ne 3i
X.so function/resolve.so
X.br
X.ne 3i
X.so function/shell.so
X.br
X.ne 3i
X.so function/sort.so
X.br
X.ne 3i
X.so function/sort_newest.so
X.br
X.ne 3i
X.so function/split.so
X.br
X.ne 3i
X.so function/stringset.so
X.br
X.ne 3i
X.so function/strip.so
X.br
X.ne 3i
X.so function/subst.so
X.br
X.ne 3i
X.so function/suffix.so
X.br
X.ne 3i
X.so function/tail.so
X.br
X.ne 3i
X.so function/unsplit.so
X.br
X.ne 3i
X.so function/upcase.so
X.br
X.ne 3i
X.so function/uptodate.so
X.br
X.ne 3i
X.so function/wildcard.so
X.br
X.ne 3i
X.so function/word.so
X.br
X.ne 3i
X.so function/words.so
END_OF_FILE
if test 1848 -ne `wc -c <'doc/function.so'`; then
    echo shar: \"'doc/function.so'\" unpacked with wrong size!
fi
# end of 'doc/function.so'
fi
if test -f 'doc/function/and.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/and.so'\"
else
echo shar: Extracting \"'doc/function/and.so'\" \(1617 characters\)
sed "s/^X//" >'doc/function/and.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Refernce Manual, Builtin Functions, And
X.\"
X.H 2 "and"
XThis function requires at least two arguments,
Xupon which it forms a logical conjunction.
XThe value returned is "1" (true) if none of the arguments are "" (false),
Xotherwise "" (false) is returned.
X.H 3 "Example"
XThe following cookbook fragment shows
Xhow to use the [and] function in conditional recipes.
X.eB
X#if [and [defined change] [defined baseline]]
X\fI\&...do something...\fP
X#endif
X.eE
XThis fragment will only
X.I "do something"
Xif both the
X.I change
Xand
X.I baseline
Xvariables are defined.
X.H 3 "Caveat"
XThis function is rather clumsy,
Xand probably needs to be replaced by a better syntax
Xwithin the cokbook grammar itself.
X.P
XThis function does not short-circuit evaluation.
X.H 3 "See Also"
Xor, not
END_OF_FILE
if test 1617 -ne `wc -c <'doc/function/and.so'`; then
    echo shar: \"'doc/function/and.so'\" unpacked with wrong size!
fi
# end of 'doc/function/and.so'
fi
if test -f 'doc/function/findstring.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/findstring.so'\"
else
echo shar: Extracting \"'doc/function/findstring.so'\" \(1678 characters\)
sed "s/^X//" >'doc/function/findstring.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Findstring
X.\"
X.H 2 "findstring"
XThe findstring function is used to match a fixed string against a set
Xof strings.
XThis function takes at least one argument.
XThe first argument is the fixed string,
Xthe second and subsequent arguments are matched against the first.
XThe result contains one word for each of the second and subsequent arguments,
Xeach will either be the empty string (false) or the string to be matched,
Xit a match was found.
X.H 3 Example
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X[findstring a a b c];a "" ""
X[findstring a b c];"" ""
X.TE
XQuotes are for clarity,
Xto emphasize the empty strings.
XBecause the empty string is "false",
Xthis can be used in an
X.I if
Xstatement:
X.eB
Xif [findstring fish [sources]] then
X	sources = [sources] hook.c;
X.eE
X.H 3 "See Also"
Xmatch, match_mask, subst, patsubst
END_OF_FILE
if test 1678 -ne `wc -c <'doc/function/findstring.so'`; then
    echo shar: \"'doc/function/findstring.so'\" unpacked with wrong size!
fi
# end of 'doc/function/findstring.so'
fi
if test -f 'doc/function/not.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/not.so'\"
else
echo shar: Extracting \"'doc/function/not.so'\" \(1589 characters\)
sed "s/^X//" >'doc/function/not.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Not
X.\"
X.H 2 "not"
XThis function requires zero or more arguments,
Xthe value to be logically negated.
XIt returns "1" (true) if all of the arguments are "" (false),
Xor there are no arguments;
Xand returns "" (false) otherwise.
XThis is symmetric with the definition of true and false for
X.BR if .
X.H 3 "Example"
XThis is often seen in recipes:
X.eB
X%1/%0%2.o: %1/%0%2.c
X{
X	if [not [exists [dirname [target]]]] then
X		mkdir -p [dirname [target]]
X			set clearstat;
X	[cc] [cc_flags] -I%1 %1/%0%2.;
X	mv %2.o [target];
X}
X.eE
XNote that "\f(CW%0\fP" matches zero or more whole filename portions,
Xincluding the trailing slash.
XSee the chapter on pattern matching for more information.
X.H 3 "See Also"
Xand, or
END_OF_FILE
if test 1589 -ne `wc -c <'doc/function/not.so'`; then
    echo shar: \"'doc/function/not.so'\" unpacked with wrong size!
fi
# end of 'doc/function/not.so'
fi
if test -f 'doc/function/subst.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/subst.so'\"
else
echo shar: Extracting \"'doc/function/subst.so'\" \(1514 characters\)
sed "s/^X//" >'doc/function/subst.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Referemce Manual, Builtin Functions, Subst
X.\"
X.H 3 "subst"
XThe
X.I subst
Xfunction is used to perform string substitutions on its arguments.
XThis functinm requires at least two arguments.
XThe first argument is the "from" string,
Xthe second argument is the "to" string.
XAll occurreneces of "from" are replaced with "to" in the third
Xand subsequent arguments.
X.H 3 "Example"
XThis is a litteral replacement,
Xnot a pattern replacement:
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[subst buffalo cress water.buffalo];water.cress
X[subst .c .o test.c];test.o
X[subst .c .o stat.cache.c];stat.oache.o
X.TE
XNote that last case: it is not selective.
X.H 3 "See Also"
Xpatsubst, filter, filter_out
END_OF_FILE
if test 1514 -ne `wc -c <'doc/function/subst.so'`; then
    echo shar: \"'doc/function/subst.so'\" unpacked with wrong size!
fi
# end of 'doc/function/subst.so'
fi
if test -f 'doc/function/suffix.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/suffix.so'\"
else
echo shar: Extracting \"'doc/function/suffix.so'\" \(1549 characters\)
sed "s/^X//" >'doc/function/suffix.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Suffix
X.\"
X.H 2 "suffix"
XThe
X.I suffix
Xfunction treats each argument as a filename,
Xand extracts the suffix from each.
XIf the filename contains a period,
Xthe suffix is everything starting with the last period.
XOtherwise,
Xthe suffix is the empty string (as opposed to nothing at all).
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[suffix a.c foo b.y];.c "" .y
X[suffix stat.cache.c];.c
X[suffix .eric];""
X.TE
XQuotes used for clarity.
X.P
XThe
X.I suffix
Xfunctions in this way to allow sensable results when using the
X.I join
Xfunction to re-unite filenames dismembered by the
X.I basename
Xand
X.I sufix
Xfunctions.
X.H 3 "See Also"
Xbasename, dirname, entryname, join, patsubst
END_OF_FILE
if test 1549 -ne `wc -c <'doc/function/suffix.so'`; then
    echo shar: \"'doc/function/suffix.so'\" unpacked with wrong size!
fi
# end of 'doc/function/suffix.so'
fi
if test -f 'doc/function/word.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/word.so'\"
else
echo shar: Extracting \"'doc/function/word.so'\" \(1526 characters\)
sed "s/^X//" >'doc/function/word.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manula, Builtin Functions, Word
X.\"
X.H 2 "word"
XThe
X.I word
Xfunction is used to extract a specific word from a list of words.
XThe function requires at least one argument.
XThe first argument is the number of the word to extract from the wordlist.
XThe wordlist is the second and subsequent arguments.
XAn empty list will be returned if you ask
Xfor an element off the end of the list.
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[word 1 one two three];one
X[word 2 one two three];two
X[word 3 one two three];three
X[word 5 one two three];
X.TE
X.P
XThe last element of a list of words
Xmay be extracted as:
X.eB
Xlast = [word [count [list]] [list]];
X.eE
X.H 3 "See Also"
Xcount, head
END_OF_FILE
if test 1526 -ne `wc -c <'doc/function/word.so'`; then
    echo shar: \"'doc/function/word.so'\" unpacked with wrong size!
fi
# end of 'doc/function/word.so'
fi
if test -f 'make2cook/blob.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/blob.h'\"
else
echo shar: Extracting \"'make2cook/blob.h'\" \(1796 characters\)
sed "s/^X//" >'make2cook/blob.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/blob.c
X */
X
X#ifndef MAKE2COOK_BLOB_H
X#define MAKE2COOK_BLOB_H
X
X#include <str.h>
X
Xtypedef struct blob_ty blob_ty;
Xstruct blob_ty
X{
X	long		reference_count;
X	string_ty	*text;
X	string_ty	*file_name;
X	long		line_number;
X};
X
Xtypedef struct blob_list_ty blob_list_ty;
Xstruct blob_list_ty
X{
X	blob_ty		**list;
X	long		length;
X	long		maximum;
X};
X
Xtypedef void (*blob_efunc)_((void));
X
Xblob_ty *blob_alloc _((string_ty *text, string_ty *fn, long lnum));
Xvoid blob_free _((blob_ty *));
Xblob_ty *blob_copy _((blob_ty *));
X
Xvoid blob_error_notify _((blob_efunc));
Xvoid blob_error _((blob_ty *, char *, ...));
Xvoid blob_warning _((blob_ty *, char *, ...));
X
Xblob_list_ty *blob_list_alloc _((void));
Xvoid blob_list_free _((blob_list_ty *));
Xvoid blob_list_append _((blob_list_ty *, blob_ty *));
Xvoid blob_list_prepend _((blob_list_ty *, blob_ty *));
Xvoid blob_list_delete _((blob_list_ty *, blob_ty *));
Xvoid blob_emit _((blob_ty *));
X
X#endif /* MAKE2COOK_BLOB_H */
END_OF_FILE
if test 1796 -ne `wc -c <'make2cook/blob.h'`; then
    echo shar: \"'make2cook/blob.h'\" unpacked with wrong size!
fi
# end of 'make2cook/blob.h'
fi
if test -f 'make2cook/stmt.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt.h'\"
else
echo shar: Extracting \"'make2cook/stmt.h'\" \(1720 characters\)
sed "s/^X//" >'make2cook/stmt.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt.c
X */
X
X#ifndef MAKE2COOK_STMT_H
X#define MAKE2COOK_STMT_H
X
X#include <ac/stddef.h>
X#include <word.h>
X
Xstruct stmt_ty;
X
Xtypedef struct stmt_method_ty stmt_method_ty;
Xstruct stmt_method_ty
X{
X	size_t		size;
X	char		*name;
X	void (*constructor)_((struct stmt_ty *));
X	void (*destructor)_((struct stmt_ty *));
X	void (*emit)_((struct stmt_ty *));
X	void (*regroup)_((struct stmt_ty *));
X	void (*sort)_((struct stmt_ty *));
X};
X
X#define STMT \
X	stmt_method_ty	*method;	\
X	wlist		mdef;		\
X	wlist		cdef;		\
X	wlist		ref;		\
X	wlist		rref;		\
X	int		white_space;
X
Xtypedef struct stmt_ty stmt_ty;
Xstruct stmt_ty
X{
X	STMT
X};
X
Xstmt_ty *stmt_alloc _((stmt_method_ty *));
Xvoid stmt_free _((stmt_ty *));
Xvoid stmt_emit _((stmt_ty *));
Xvoid stmt_variable_merge _((stmt_ty *parent, stmt_ty *child));
Xvoid stmt_regroup _((stmt_ty *));
Xvoid stmt_sort _((stmt_ty *));
X
X#endif /* MAKE2COOK_STMT_H */
END_OF_FILE
if test 1720 -ne `wc -c <'make2cook/stmt.h'`; then
    echo shar: \"'make2cook/stmt.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt.h'
fi
if test -f 'man1/o__rules.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'man1/o__rules.so'\"
else
echo shar: Extracting \"'man1/o__rules.so'\" \(1736 characters\)
sed "s/^X//" >'man1/o__rules.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1993 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: description of option up/down case convention
X.\"
X.PP
XAll options may be abbreviated;
Xthe abbreviation is documented as the upper case letters,
Xall lower case letters and underscores (_) are optional.
XYou must use consecutive sequences of optional letters.
X.PP
XAll options are case insensitive,
Xyou may type them in upper case or lower case or a combination of both,
Xcase is not important.
X.PP
XFor example:
Xthe arguments "-help", "-HEL" and "-h" are
Xall interpreted to mean the \fB-Help\fP option.
XThe argument "-hlp" will not be understood,
Xbecause consecutive optional characters were not supplied.
X.PP
XOptions and other command line arguments may be
Xmixed arbitrarily on the command line.
X.br
X.ne 4
X.PP
XThe GNU long option names are understood.
XSince all option names for
X.I \*(n)
Xare long,
Xthis means ignoring the extra leading '-'.
XThe "\fB--\fIoption\fB=\fIvalue\fR" convention is also understood.
END_OF_FILE
if test 1736 -ne `wc -c <'man1/o__rules.so'`; then
    echo shar: \"'man1/o__rules.so'\" unpacked with wrong size!
fi
# end of 'man1/o__rules.so'
fi
if test -f 'test/00/t0005a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0005a.sh'\"
else
echo shar: Extracting \"'test/00/t0005a.sh'\" \(1606 characters\)
sed "s/^X//" >'test/00/t0005a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "count" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "count"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [count] 0]] then fail;
X	if [not [in [count 1] 1]] then fail;
X	if [not [in [count 1 2] 2]] then fail;
X	if [not [in [count 1 2 3] 3]] then fail;
X	if [not [in [count 1 2 3 4] 4]] then fail;
X	if [not [in [count 1 2 3 4 5] 5]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1606 -ne `wc -c <'test/00/t0005a.sh'`; then
    echo shar: \"'test/00/t0005a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0005a.sh'
fi
if test -f 'test/00/t0007a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0007a.sh'\"
else
echo shar: Extracting \"'test/00/t0007a.sh'\" \(1802 characters\)
sed "s/^X//" >'test/00/t0007a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "dirname" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "dirname"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [dir x] [pathname $tmp]]] then fail;
X	if [not [in [dir x/y] x]] then fail;
X	if [not [in [dir /] /]] then fail;
X	if [not [in [dir /foo] /]] then fail;
X	if [not [in [dir /foo/bar] /foo]] then fail;
X	if [not [in [dirname x] [pathname $tmp]]] then fail;
X	if [not [in [dirname x/y] x]] then fail;
X	if [not [in [dirname /] /]] then fail;
X	if [not [in [dirname /foo] /]] then fail;
X	if [not [in [dirname /foo/bar] /foo]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1802 -ne `wc -c <'test/00/t0007a.sh'`; then
    echo shar: \"'test/00/t0007a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0007a.sh'
fi
if test -f 'test/00/t0009a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0009a.sh'\"
else
echo shar: Extracting \"'test/00/t0009a.sh'\" \(1581 characters\)
sed "s/^X//" >'test/00/t0009a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "entryname" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "entryname"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [entryname x] x]] then fail;
X	if [not [in [entryname x/y] y]] then fail;
X	if [entryname /] then fail;
X	if [not [in [entryname /foo] foo]] then fail;
X	if [not [in [entryname /foo/bar] bar]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1581 -ne `wc -c <'test/00/t0009a.sh'`; then
    echo shar: \"'test/00/t0009a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0009a.sh'
fi
if test -f 'test/00/t0015a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0015a.sh'\"
else
echo shar: Extracting \"'test/00/t0015a.sh'\" \(1637 characters\)
sed "s/^X//" >'test/00/t0015a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "glob" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "glob"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xfor f in a.c b.c c.c d.c e.c a.o f.o
Xdo
X	cp /dev/null $f
Xdone
X
Xcp /dev/null a.c
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [count [glob "*"]] 8]] then fail;
X	if [not [in [count [glob "*.c"]] 5]] then fail;
X	if [not [in [count [glob "*.o"]] 2]] then fail;
X	if [not [in [count [glob "a.[abc]"]] 1]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1637 -ne `wc -c <'test/00/t0015a.sh'`; then
    echo shar: \"'test/00/t0015a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0015a.sh'
fi
if test -f 'test/00/t0018a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0018a.sh'\"
else
echo shar: Extracting \"'test/00/t0018a.sh'\" \(1545 characters\)
sed "s/^X//" >'test/00/t0018a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "if" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin funrction "if"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in ["if" 1 "then" aa "else" bb] aa]] then fail;
X	if [not ["if" 1 "then" aa]] then fail;
X	if [not [in ["if" 0 "then" aa "else" bb] bb]] then fail;
X	if ["if" 0 "then" aa] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1545 -ne `wc -c <'test/00/t0018a.sh'`; then
    echo shar: \"'test/00/t0018a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0018a.sh'
fi
if test -f 'test/00/t0024a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0024a.sh'\"
else
echo shar: Extracting \"'test/00/t0024a.sh'\" \(1596 characters\)
sed "s/^X//" >'test/00/t0024a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "pathname" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "pathname"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [pathname .] [pathname $tmp]]] then fail;
X	if [not [in [pathname x] [pathname $tmp/x]]] then fail;
X	if [not [in [pathname /] /]] then fail;
X	if [not [in [pathname /////usr/bin//////././//.///] /usr/bin]]
X		then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1596 -ne `wc -c <'test/00/t0024a.sh'`; then
    echo shar: \"'test/00/t0024a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0024a.sh'
fi
if test -f 'test/00/t0027a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0027a.sh'\"
else
echo shar: Extracting \"'test/00/t0027a.sh'\" \(1536 characters\)
sed "s/^X//" >'test/00/t0027a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "stringset" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of builtin function "stringset"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [not [in [count [stringset a a b]] 2]] then fail;
X	if [not [in [count [stringset a - a b]] 0]] then fail;
X	if [not [in [count [stringset a "*" a b]] 1]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1536 -ne `wc -c <'test/00/t0027a.sh'`; then
    echo shar: \"'test/00/t0027a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0027a.sh'
fi
if test -f 'test/00/t0031a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0031a.sh'\"
else
echo shar: Extracting \"'test/00/t0031a.sh'\" \(1789 characters\)
sed "s/^X//" >'test/00/t0031a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the os_stat_cache() function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the os_stat_chache() function of cook' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xmkdir a a/b a/b/c
Xcp /dev/null a/fubar
X
Xcat > Howto.cook <<foobar
Xtest: test1 test2 test3 test4 test5 test6 test7;
Xtest1: { if [not [exists Howto.cook]] then fail; }
Xtest2: { if [exists snot] then fail; }
Xtest3: { if [not [exists a/fubar]] then fail; }
Xtest4: { if [exists a/fubar/b/c] then fail; }
Xtest5: { if [not [exists a]] then fail; }
Xtest6: { if [not [exists a/b]] then fail; }
Xtest7: { if [not [exists a/b/c]] then fail; }
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl -tr > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1789 -ne `wc -c <'test/00/t0031a.sh'`; then
    echo shar: \"'test/00/t0031a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0031a.sh'
fi
if test -f 'test/00/t0032a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0032a.sh'\"
else
echo shar: Extracting \"'test/00/t0032a.sh'\" \(1696 characters\)
sed "s/^X//" >'test/00/t0032a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "sort" builtin function
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the builtin function "sort"' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > Howto.cook <<foobar
Xtest:
X{
X	if [sort] then fail;
X	if [not [in [catenate [sort a]] a]] then fail;
X	if [not [in [catenate [sort a b]] ab]] then fail;
X	if [not [in [catenate [sort b a]] ab]] then fail;
X	if [not [in [catenate [sort a b c]] abc]] then fail;
X	if [not [in [catenate [sort c a b]] abc]] then fail;
X	if [not [in [catenate [sort b c a]] abc]] then fail;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1696 -ne `wc -c <'test/00/t0032a.sh'`; then
    echo shar: \"'test/00/t0032a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0032a.sh'
fi
if test -f 'test/00/t0034a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0034a.sh'\"
else
echo shar: Extracting \"'test/00/t0034a.sh'\" \(1774 characters\)
sed "s/^X//" >'test/00/t0034a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the "%0" pattern replacement - it may be empty
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the "%0" pattern replacement' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xmkdir a a/b a/b/c
Xif test $? -ne 0 ; then fail; fi
X
Xcat > a.c << 'foo'
Xvoid
Xmain()
X{
X	exit(0);
X}
Xfoo
Xif test $? -ne 0 ; then fail; fi
X
Xln a.c a/b.c
Xif test $? -ne 0 ; then fail; fi
X
Xln a.c a/b/c.c
Xif test $? -ne 0 ; then fail; fi
X
Xln a.c a/b/c/d.c
Xif test $? -ne 0 ; then fail; fi
X
Xcat > Howto.cook << 'foobar'
Xtest: a.o a/b.o a/b/c.o a/b/c/d.o;
X
X%0%1.o: %0%1.c
X{
X	cc -c %0%1.c;
X	if %0 then
X		mv %1.o %0%1.o;
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1774 -ne `wc -c <'test/00/t0034a.sh'`; then
    echo shar: \"'test/00/t0034a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0034a.sh'
fi
if test -f 'test/00/t0037a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0037a.sh'\"
else
echo shar: Extracting \"'test/00/t0037a.sh'\" \(1843 characters\)
sed "s/^X//" >'test/00/t0037a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the c_incl -no_cache option
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the c_incl -No_Cache option' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > main.c << 'foobar'
X#include <stdio.h>
X
Xvoid
Xmain()
X{
X	printf("Hello World!\n");
X	exit(0);
X}
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/c_incl main.c > test.tmp
Xif test $? -ne 0 ; then fail; fi
X
Xgrep stdio test.tmp > test.out
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test.ok << 'foobar'
X/usr/include/stdio.h
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
Xcmp test.ok test.out
Xif test $? -ne 0 ; then fail; fi
X
X$bin/c_incl -nc -ns main.c > test.out
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test.ok << 'foobar'
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
Xcmp test.ok test.out
Xif test $? -ne 0 ; then fail; fi
X
X
X# probably OK
Xpass
END_OF_FILE
if test 1843 -ne `wc -c <'test/00/t0037a.sh'`; then
    echo shar: \"'test/00/t0037a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0037a.sh'
fi
if test -f 'test/00/t0039a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0039a.sh'\"
else
echo shar: Extracting \"'test/00/t0039a.sh'\" \(1586 characters\)
sed "s/^X//" >'test/00/t0039a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the c_incl -Roff option
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of c_incl -Roff option' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
Xcat > test.in << 'foobar'
Xone
X.so test2.in
Xthree
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test2.in << 'foobar'
Xtwo
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/c_incl -r test.in > test.out
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test.ok << 'foobar'
Xtest2.in
Xfoobar
Xif test $? -ne 0 ; then fail; fi
X
Xcmp test.ok test.out
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1586 -ne `wc -c <'test/00/t0039a.sh'`; then
    echo shar: \"'test/00/t0039a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0039a.sh'
fi
if test -f 'test/00/t0040a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0040a.sh'\"
else
echo shar: Extracting \"'test/00/t0040a.sh'\" \(1670 characters\)
sed "s/^X//" >'test/00/t0040a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: test the cooktime program
X#
Xtmp=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	echo 'FAILED test of the cooktime program' 1>&2
X	cd $here
X	rm -rf $tmp
X	exit 1
X}
Xpass()
X{
X	cd $here
X	rm -rf $tmp
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $tmp
Xcd $tmp
X
XPAGER=cat
Xexport PAGER
X
Xcp /dev/null victim
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cooktime -help > /dev/null
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cooktime -version > /dev/null
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cooktime victim -r > /dev/null
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cooktime victim -m 2-jan-70 -r > /dev/null
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cooktime victim -a 8-jan-75 -r > /dev/null
Xif test $? -ne 0 ; then fail; fi
X
X# probably OK
Xpass
END_OF_FILE
if test 1670 -ne `wc -c <'test/00/t0040a.sh'`; then
    echo shar: \"'test/00/t0040a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0040a.sh'
fi
if test -f 'test/00/t0044a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0044a.sh'\"
else
echo shar: Extracting \"'test/00/t0044a.sh'\" \(1694 characters\)
sed "s/^X//" >'test/00/t0044a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test c_incl on missing files
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of c_incl on missing files' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test.in << 'fubar'
X#include "nothing"
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
Xcat > test.ok << 'fubar'
Xnothing
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/c_incl test.in > test.out
Xif test $? -ne 0 ; then fail; fi
X
Xdiff test.ok test.out
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1694 -ne `wc -c <'test/00/t0044a.sh'`; then
    echo shar: \"'test/00/t0044a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0044a.sh'
fi
if test -f 'test/00/t0045a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0045a.sh'\"
else
echo shar: Extracting \"'test/00/t0045a.sh'\" \(1753 characters\)
sed "s/^X//" >'test/00/t0045a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test recipes with no ingredients
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of recipes with no ingredients' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap "fail" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# put your test here
X#
Xcat > Howto.cook << 'fubar'
Xall: putz;
X
Xputz: putz.c
X{
X	cc -o putz putz.c;
X}
X
Xputz.c:
X{
X	echo '"/!/!/!/"' > putz.c;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
Xcat > putz.c << 'fubar'
Xmain(){exit(0);}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1753 -ne `wc -c <'test/00/t0045a.sh'`; then
    echo shar: \"'test/00/t0045a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0045a.sh'
fi
if test -f 'test/00/t0052a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0052a.sh'\"
else
echo shar: Extracting \"'test/00/t0052a.sh'\" \(1692 characters\)
sed "s/^X//" >'test/00/t0052a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the cmd line var functionality
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the cmd line var functionality' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# create the input files
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	echo [hello];
X}
X
X#include-cooked fred
X
Xfred:
X{
X	echo "'foo: bar;'" > fred;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl hello=hello > /dev/null 2>&1
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1692 -ne `wc -c <'test/00/t0052a.sh'`; then
    echo shar: \"'test/00/t0052a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0052a.sh'
fi
if test -f 'test/00/t0053a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0053a.sh'\"
else
echo shar: Extracting \"'test/00/t0053a.sh'\" \(1635 characters\)
sed "s/^X//" >'test/00/t0053a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the nodefault recipe flag
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the nodefault recipe flag' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# put your test here
X#
Xcat > Howto.cook << 'fubar'
Xbroken:
X	set nodefault
X{
X	echo broken
X		set silent;
X	fail;
X}
X
Xtest:
X{
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1635 -ne `wc -c <'test/00/t0053a.sh'`; then
    echo shar: \"'test/00/t0053a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0053a.sh'
fi
if test -f 'test/00/t0055a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0055a.sh'\"
else
echo shar: Extracting \"'test/00/t0055a.sh'\" \(1787 characters\)
sed "s/^X//" >'test/00/t0055a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the include-cooked functionality
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the include-cooked functionality' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# generate 100 include files
X#
Xfor x in 0 1 2 3 4 5 6 7 8 9
Xdo
X	for y in 0 1 2 3 4 5 6 7 8 9
X	do
X		echo '/* nothing */' > foo$x$y
X	done
Xdone
X
X#
X# need a cookbook which includes all of them
X#
Xcat > Howto.cook << 'fubar'
X#include-cooked [glob "foo??" ]
Xtest: { }
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1787 -ne `wc -c <'test/00/t0055a.sh'`; then
    echo shar: \"'test/00/t0055a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0055a.sh'
fi
if test -f 'test/00/t0057a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0057a.sh'\"
else
echo shar: Extracting \"'test/00/t0057a.sh'\" \(1640 characters\)
sed "s/^X//" >'test/00/t0057a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the addprefix builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the addprefix builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# addprefix
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in [catenate [addprefix a b c d]] abacad]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1640 -ne `wc -c <'test/00/t0057a.sh'`; then
    echo shar: \"'test/00/t0057a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0057a.sh'
fi
if test -f 'test/00/t0058a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0058a.sh'\"
else
echo shar: Extracting \"'test/00/t0058a.sh'\" \(1657 characters\)
sed "s/^X//" >'test/00/t0058a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the addsuffix builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the addsuffix builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# addsuffix builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in [catenate [addsuffix a b c d]] bacada]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1657 -ne `wc -c <'test/00/t0058a.sh'`; then
    echo shar: \"'test/00/t0058a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0058a.sh'
fi
if test -f 'test/00/t0059a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0059a.sh'\"
else
echo shar: Extracting \"'test/00/t0059a.sh'\" \(1648 characters\)
sed "s/^X//" >'test/00/t0059a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the filter_out builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the filter_out builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# filter_out builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [in foo [filter_out f% foo bar baz]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1648 -ne `wc -c <'test/00/t0059a.sh'`; then
    echo shar: \"'test/00/t0059a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0059a.sh'
fi
if test -f 'test/00/t0060a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0060a.sh'\"
else
echo shar: Extracting \"'test/00/t0060a.sh'\" \(1699 characters\)
sed "s/^X//" >'test/00/t0060a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the subst builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the subst builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# subst builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in [subst foo bar xfooie.foo] xbarie.bar]] then
X		fail;
X	if [not [in [subst foo bar snot] snot]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1699 -ne `wc -c <'test/00/t0060a.sh'`; then
    echo shar: \"'test/00/t0060a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0060a.sh'
fi
if test -f 'test/00/t0061a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0061a.sh'\"
else
echo shar: Extracting \"'test/00/t0061a.sh'\" \(1666 characters\)
sed "s/^X//" >'test/00/t0061a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the word builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the word builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# word builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in [word 1 a b c] a]] then
X		fail;
X	if [not [in [word 2 a b c] b]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1666 -ne `wc -c <'test/00/t0061a.sh'`; then
    echo shar: \"'test/00/t0061a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0061a.sh'
fi
if test -f 'test/00/t0063a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0063a.sh'\"
else
echo shar: Extracting \"'test/00/t0063a.sh'\" \(1770 characters\)
sed "s/^X//" >'test/00/t0063a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the suffix builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the suffix builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# suffix builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in [suffix foo.c] .c]] then
X		fail;
X	if [not [in [suffix stat.cache.c] .c]] then
X		fail;
X	if [not [in [suffix foo] ""]] then
X		fail;
X	if [not [in [suffix .foo] ""]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1770 -ne `wc -c <'test/00/t0063a.sh'`; then
    echo shar: \"'test/00/t0063a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0063a.sh'
fi
if test -f 'test/00/t0064a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0064a.sh'\"
else
echo shar: Extracting \"'test/00/t0064a.sh'\" \(1714 characters\)
sed "s/^X//" >'test/00/t0064a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the join builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the join builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# join builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in ad [join a b c d e f]]] then
X		fail;
X	if [not [in ac [join a b c d]]] then
X		fail;
X	if [not [in ab [join a b]]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1714 -ne `wc -c <'test/00/t0064a.sh'`; then
    echo shar: \"'test/00/t0064a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0064a.sh'
fi
if test -f 'test/00/t0072a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0072a.sh'\"
else
echo shar: Extracting \"'test/00/t0072a.sh'\" \(1618 characters\)
sed "s/^X//" >'test/00/t0072a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the home builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the home builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# test the home builtin function
X#
Xcat > Howto.cook << 'fubar'
Xlibs = [addprefix -L[home]/lib];
Xtest: { }
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1618 -ne `wc -c <'test/00/t0072a.sh'`; then
    echo shar: \"'test/00/t0072a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0072a.sh'
fi
if test -f 'test/00/t0073a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0073a.sh'\"
else
echo shar: Extracting \"'test/00/t0073a.sh'\" \(1703 characters\)
sed "s/^X//" >'test/00/t0073a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the findstring builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the findstring builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# test the findstring builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [findstring a b c] then
X		fail;
X	if [not [in a [findstring a arthur bruce chris]]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1703 -ne `wc -c <'test/00/t0073a.sh'`; then
    echo shar: \"'test/00/t0073a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0073a.sh'
fi
if test -f 'test/00/t0074a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0074a.sh'\"
else
echo shar: Extracting \"'test/00/t0074a.sh'\" \(1672 characters\)
sed "s/^X//" >'test/00/t0074a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the split builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the split builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# test the split builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in b [split "," "a,b,c"]]] then
X		fail;
X}
Xpath = [split ":" [getenv PATH]];
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1672 -ne `wc -c <'test/00/t0074a.sh'`; then
    echo shar: \"'test/00/t0074a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0074a.sh'
fi
if test -f 'test/00/t0075a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0075a.sh'\"
else
echo shar: Extracting \"'test/00/t0075a.sh'\" \(1650 characters\)
sed "s/^X//" >'test/00/t0075a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the unsplit builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the unsplit builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# test the unsplit builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in "a,b,c" [unsplit "," a b c]]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1650 -ne `wc -c <'test/00/t0075a.sh'`; then
    echo shar: \"'test/00/t0075a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0075a.sh'
fi
if test -f 'test/00/t0076a.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'test/00/t0076a.sh'\"
else
echo shar: Extracting \"'test/00/t0076a.sh'\" \(1662 characters\)
sed "s/^X//" >'test/00/t0076a.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: Test the strip builtin function
X#
Xwork=/tmp/$$
XPAGER=cat
Xexport PAGER
Xumask 022
Xunset COOK
Xhere=`pwd`
Xif test $? -ne 0 ; then exit 1; fi
X
Xif test "$1" != "" ; then bin="$here/$1/bin"; else bin="$here/bin"; fi
X
Xfail()
X{
X	set +x
X	echo 'FAILED test of the strip builtin function' 1>&2
X	cd $here
X	rm -rf $work
X	exit 1
X}
Xpass()
X{
X	set +x
X	cd $here
X	rm -rf $work
X	exit 0
X}
Xtrap \"fail\" 1 2 3 15
X
Xmkdir $work
Xif test $? -ne 0 ; then exit 1; fi
Xcd $work
Xif test $? -ne 0 ; then fail; fi
X
X#
X# test the strip builtin function
X#
Xcat > Howto.cook << 'fubar'
Xtest:
X{
X	if [not [in "hello sailor" [strip "   hello\t\fsailor\n"]]] then
X		fail;
X}
Xfubar
Xif test $? -ne 0 ; then fail; fi
X
X$bin/cook -nl
Xif test $? -ne 0 ; then fail; fi
X
X#
X# Only definite negatives are possible.
X# The functionality exercised by this test appears to work,
X# no other guarantees are made.
X#
Xpass
END_OF_FILE
if test 1662 -ne `wc -c <'test/00/t0076a.sh'`; then
    echo shar: \"'test/00/t0076a.sh'\" unpacked with wrong size!
fi
# end of 'test/00/t0076a.sh'
fi
echo shar: End of archive 4 \(of 19\).
cp /dev/null ark4isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
