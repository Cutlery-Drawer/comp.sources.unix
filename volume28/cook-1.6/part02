Newsgroups: comp.sources.unix
From: pmiller@bmr.gov.au (Peter Miller)
Subject: v28i095: cook - a file construction tool, V1.6, Part02/19
References: <1.775008949.28543@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: pmiller@bmr.gov.au (Peter Miller)
Posting-Number: Volume 28, Issue 95
Archive-Name: cook-1.6/part02

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 19)."
# Contents:  aux/CHANGES.sh aux/Makefile.awk aux/new.1.6.so
#   aux/patches.sh c_incl/cache.h common/ac/string.h common/ac/time.h
#   common/ac/unistd.h common/fp/README common/main.h common/mem.h
#   common/mprintf.h cook/archive.h cook/builtin.h
#   cook/builtin/addprefix.c cook/builtin/addprefix.h
#   cook/builtin/addsuffix.c cook/builtin/addsuffix.h
#   cook/builtin/boolean.h cook/builtin/cook.h
#   cook/builtin/filter_out.h cook/builtin/find_command.h
#   cook/builtin/findstring.h cook/builtin/join.c cook/builtin/match.h
#   cook/builtin/pathname.h cook/builtin/text.h cook/builtin/unsplit.c
#   cook/fngrprnt.h cook/fngrprnt_lex.h cook/id.h cook/stat.cache.h
#   doc/builtin.so doc/function/addprefix.so doc/function/addsuffix.so
#   doc/function/cando.so doc/function/collect_ln.so
#   doc/function/count.so doc/function/defined.so doc/function/dir.so
#   doc/function/dirname.so doc/function/downcase.so
#   doc/function/entryname.so doc/function/filter.so
#   doc/function/filter_out.so doc/function/glob.so
#   doc/function/home.so doc/function/mtime.so doc/function/or.so
#   doc/function/pathname.so doc/function/prepost.so
#   doc/function/strip.so doc/function/tail.so
#   doc/function/uptodate.so doc/function/wildcard.so
#   doc/function/words.so lib/as lib/text make2cook/emit.h
#   make2cook/lex.h make2cook/stmt/assign.h make2cook/stmt/blank.c
#   make2cook/stmt/comment.h make2cook/stmt/compound.h
#   make2cook/stmt/define.h make2cook/stmt/if.h
#   make2cook/stmt/include.h make2cook/stmt/rule.h
#   make2cook/stmt/vpath.h make2cook/variable.h
# Wrapped by vixie@gw.home.vix.com on Sat Jul 23 17:11:17 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'aux/CHANGES.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/CHANGES.sh'\"
else
echo shar: Extracting \"'aux/CHANGES.sh'\" \(1184 characters\)
sed "s/^X//" >'aux/CHANGES.sh' <<'END_OF_FILE'
X#! /bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: shell script to generate CHANGES file
X#
Xcase $# in
X1)
X	project=$1
X	;;
X
X*)
X	echo "usage: $0 <project>" 1>&2
X	exit 1
X	;;
Xesac
Xset -e
Xaegis -l changes -p $project -v -pl 66 -pw 72 < /dev/null
Xchanges=`aegis -list changes -terse -project $project`
Xfor n in $changes
Xdo
X	echo '' | tr '\12' '\14'
X	aegis -l change_details -p $project -c $n -v -pl 66 -pw 72 < /dev/null
Xdone
Xexit 0
END_OF_FILE
if test 1184 -ne `wc -c <'aux/CHANGES.sh'`; then
    echo shar: \"'aux/CHANGES.sh'\" unpacked with wrong size!
fi
# end of 'aux/CHANGES.sh'
fi
if test -f 'aux/Makefile.awk' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/Makefile.awk'\"
else
echo shar: Extracting \"'aux/Makefile.awk'\" \(1122 characters\)
sed "s/^X//" >'aux/Makefile.awk' <<'END_OF_FILE'
X#
X#	cook - a program construction tool
X#	Copyright (C) 1991, 1992, 1993 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: helper file for generating Makefile file
X#
Xlength <= 72
Xlength > 72 {
X	if (substr($0, 1, 1) == "\t")
X	{
X		printf "\t"
X		pos = 8
X	}
X	else	
X		pos = 0
X	for (j = 1; j <= NF; ++j)
X	{
X		if (pos + 1 + length($j) > 72)
X		{
X			printf "\\\n\t\t"
X			pos = 16
X		}
X		printf "%s ", $j
X		pos += length($j) + 1
X	}
X	printf "\n"
X}
END_OF_FILE
if test 1122 -ne `wc -c <'aux/Makefile.awk'`; then
    echo shar: \"'aux/Makefile.awk'\" unpacked with wrong size!
fi
# end of 'aux/Makefile.awk'
fi
if test -f 'aux/new.1.6.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/new.1.6.so'\"
else
echo shar: Extracting \"'aux/new.1.6.so'\" \(1106 characters\)
sed "s/^X//" >'aux/new.1.6.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: document describing new 1.6 features
X.\"
X.PP
X.if t \(bu
X.if n *
XFixed a bug in the leading-dot removal code,
Xand added an option to make it user-settable.
XFixed a bug in the search_path depth code.
X.PP
XThe following changes were made in the previous release:
X.so new.1.5.so
END_OF_FILE
if test 1106 -ne `wc -c <'aux/new.1.6.so'`; then
    echo shar: \"'aux/new.1.6.so'\" unpacked with wrong size!
fi
# end of 'aux/new.1.6.so'
fi
if test -f 'aux/patches.sh' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'aux/patches.sh'\"
else
echo shar: Extracting \"'aux/patches.sh'\" \(1290 characters\)
sed "s/^X//" >'aux/patches.sh' <<'END_OF_FILE'
X#!/bin/sh
X#
X#	cook - file construction tool
X#	Copyright (C) 1993, 1994 Peter Miller.
X#	All rights reserved.
X#
X#	This program is free software; you can redistribute it and/or modify
X#	it under the terms of the GNU General Public License as published by
X#	the Free Software Foundation; either version 2 of the License, or
X#	(at your option) any later version.
X#
X#	This program is distributed in the hope that it will be useful,
X#	but WITHOUT ANY WARRANTY; without even the implied warranty of
X#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X#	GNU General Public License for more details.
X#
X#	You should have received a copy of the GNU General Public License
X#	along with this program; if not, write to the Free Software
X#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X#
X# MANIFEST: shell script to generate the patch file
X#
Xecho "#!/bin/sh"
Xecho "#"
Xecho "# This is a self-applying patch in a shell script."
Xecho "#"
Xecho "# Change directory to the top of the cook source tree"
Xecho "# before running this shell script."
Xecho "#"
Xecho "# Don't forget the -p0 option if you apply this patch manually."
Xecho "#"
Xecho "# ------------------------------------------------------------"
Xecho "patch -p0 << 'EndOfThePatch'"
Xcat $*
Xecho "fubar"
Xecho 'EndOfThePatch'
Xexit 0
END_OF_FILE
if test 1290 -ne `wc -c <'aux/patches.sh'`; then
    echo shar: \"'aux/patches.sh'\" unpacked with wrong size!
fi
# end of 'aux/patches.sh'
fi
if test -f 'c_incl/cache.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'c_incl/cache.h'\"
else
echo shar: Extracting \"'c_incl/cache.h'\" \(1297 characters\)
sed "s/^X//" >'c_incl/cache.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for c_incl/cache.c
X */
X
X#ifndef CACHE_H
X#define CACHE_H
X
X#include <sys/types.h>
X#include <sys/stat.h>
X
X#include <main.h>
X#include <str.h>
X#include <word.h>
X
Xtypedef struct cache_ty cache_ty;
Xstruct cache_ty
X{
X	struct stat	st;
X	wlist		ingredients;
X};
X
Xvoid cache_initialize _((void));
Xcache_ty *cache_search _((string_ty *filename));
Xvoid cache_read _((void));
Xvoid cache_write _((void));
Xvoid cache_update_notify _((void));
X
X#endif /* CACHE_H */
END_OF_FILE
if test 1297 -ne `wc -c <'c_incl/cache.h'`; then
    echo shar: \"'c_incl/cache.h'\" unpacked with wrong size!
fi
# end of 'c_incl/cache.h'
fi
if test -f 'common/ac/string.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/string.h'\"
else
echo shar: Extracting \"'common/ac/string.h'\" \(1251 characters\)
sed "s/^X//" >'common/ac/string.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate string.h/strings.h differences
X */
X
X#ifndef COMMON_AC_STRING_H
X#define COMMON_AC_STRING_H
X
X#include <config.h>
X
X#if STDC_HEADERS || HAVE_STRING_H
X#  include <string.h>
X   /* An ANSI string.h and pre-ANSI memory.h might conflict.  */
X#  if !STDC_HEADERS && HAVE_MEMORY_H
X#    include <memory.h>
X#  endif
X#else
X   /* memory.h and strings.h conflict on some systems.  */
X#  include <strings.h>
X#endif
X
X#endif /* COMMON_AC_STRING_H */
END_OF_FILE
if test 1251 -ne `wc -c <'common/ac/string.h'`; then
    echo shar: \"'common/ac/string.h'\" unpacked with wrong size!
fi
# end of 'common/ac/string.h'
fi
if test -f 'common/ac/time.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/time.h'\"
else
echo shar: Extracting \"'common/ac/time.h'\" \(1102 characters\)
sed "s/^X//" >'common/ac/time.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate time.h differences
X */
X
X#ifndef COMMON_AC_TIME_H
X#define COMMON_AC_TIME_H
X
X#include <config.h>
X
X#ifdef TIME_WITH_SYS_TIME
X#include <sys/time.h>
X#include <time.h>
X#else
X#ifdef HAVE_SYS_TIME_H
X#include <sys/time.h>
X#else
X#include <time.h>
X#endif
X#endif
X
X#endif /* COMMON_AC_TIME_H */
END_OF_FILE
if test 1102 -ne `wc -c <'common/ac/time.h'`; then
    echo shar: \"'common/ac/time.h'\" unpacked with wrong size!
fi
# end of 'common/ac/time.h'
fi
if test -f 'common/ac/unistd.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/ac/unistd.h'\"
else
echo shar: Extracting \"'common/ac/unistd.h'\" \(1074 characters\)
sed "s/^X//" >'common/ac/unistd.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: isolate unistd.h presnce/absence
X */
X
X#ifndef COMMON_AC_UNISTD_H
X#define COMMON_AC_UNISTD_H
X
X#include <config.h>
X
X#ifdef HAVE_UNISTD_H
X#include <sys/types.h>
X#include <unistd.h>
X#endif
X
X#ifndef SEEK_SET
X#define SEEK_SET 0
X#endif
X
X#endif /* COMMON_AC_UNISTD_H */
END_OF_FILE
if test 1074 -ne `wc -c <'common/ac/unistd.h'`; then
    echo shar: \"'common/ac/unistd.h'\" unpacked with wrong size!
fi
# end of 'common/ac/unistd.h'
fi
if test -f 'common/fp/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/fp/README'\"
else
echo shar: Extracting \"'common/fp/README'\" \(1215 characters\)
sed "s/^X//" >'common/fp/README' <<'END_OF_FILE'
XThe fingerprinting code is derived from a package
Xwhich describes itself as follows
X
X	Do you want a powerful, uniform interface to MD5, a standard
X	CRC-32, Snefru-8, and a combined universal fingerprint, in
X	highly efficient library form or as easy-to-use programs?
X	That's what this package provides.  The code is freely reusable
X	so you can distribute it along with your own applications.
X	Have fun.
X
X	fingerprint 0.50 package, beta.
X	930809
X	Daniel J. Bernstein, djb@silverton.berkeley.edu.
X
X	Fingerprint produces a base-64-sanely-encoded fingerprint of
X	its input.  There are no options. I imagine this fingerprint as
X	something universal and permanent, which people will use
X	forever. If the fingerprint is ever broken, I'd rather make an
X	entirely new program than try to extend this one.
X
X	A fingerprint is 76 characters long. What does it contain?
X	Here's a list:
X
X	1. A Snefru-8 (version 2.5, 8 passes, 512->256) hash.
X	   (Derived from the Xerox Secure Hash Function.)
X	2. An MD5 hash, as per RFC 1321.
X	   (Derived from the RSADSI MD5 Message-Digest Algorithm.)
X	3. A CRC checksum, as in the new cksum utility.
X	4. Length modulo 2^40.
X
X	The output format is not expected to be compatible with
X	anything.
END_OF_FILE
if test 1215 -ne `wc -c <'common/fp/README'`; then
    echo shar: \"'common/fp/README'\" unpacked with wrong size!
fi
# end of 'common/fp/README'
fi
if test -f 'common/main.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/main.h'\"
else
echo shar: Extracting \"'common/main.h'\" \(1170 characters\)
sed "s/^X//" >'common/main.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: common defined, including DEBUG define
X */
X
X#ifndef MAIN_H
X#define MAIN_H
X
X#if defined(__STDC__) && __STDC__
X# define _(x) x
X#else
X# define _(x) ()
X#endif
X
X#define SIZEOF(a) (sizeof(a) / sizeof(a[0]))
X#define ENDOF(a) ((a) + SIZEOF(a))
X
X/*
X * take the following out of comments to enable debugging
X *
X#define DEBUG
X */
X
X#endif /* MAIN_H */
END_OF_FILE
if test 1170 -ne `wc -c <'common/main.h'`; then
    echo shar: \"'common/main.h'\" unpacked with wrong size!
fi
# end of 'common/main.h'
fi
if test -f 'common/mem.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/mem.h'\"
else
echo shar: Extracting \"'common/mem.h'\" \(1133 characters\)
sed "s/^X//" >'common/mem.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/mem.c
X */
X
X#ifndef MEM_H
X#define MEM_H
X
X#include <ac/stddef.h>
X#include <main.h>
X
Xvoid *mem_alloc _((size_t));
Xvoid *mem_alloc_clear _((size_t));
Xvoid *mem_change_size _((void *, size_t));
Xvoid mem_free _((void *));
Xchar *mem_copy_string _((char *));
X
X#endif /* MEM_H */
END_OF_FILE
if test 1133 -ne `wc -c <'common/mem.h'`; then
    echo shar: \"'common/mem.h'\" unpacked with wrong size!
fi
# end of 'common/mem.h'
fi
if test -f 'common/mprintf.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'common/mprintf.h'\"
else
echo shar: Extracting \"'common/mprintf.h'\" \(1187 characters\)
sed "s/^X//" >'common/mprintf.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for common/mprintf.c
X */
X
X#ifndef COMMON_MPRINTF_H
X#define COMMON_MPRINTF_H
X
X#include <s-v-arg.h>
X#include <main.h>
X
Xchar *mprintf _((char *fmt, ...));
Xchar *mprintfe _((char *fmt, ...));
Xchar *vmprintf _((char *fmt, va_list));
Xchar *vmprintfe _((char *fmt, va_list));
Xstruct string_ty *vmprintfes _((char *fmt, va_list));
X
X#endif /* COMMON_MPRINTF_H */
END_OF_FILE
if test 1187 -ne `wc -c <'common/mprintf.h'`; then
    echo shar: \"'common/mprintf.h'\" unpacked with wrong size!
fi
# end of 'common/mprintf.h'
fi
if test -f 'cook/archive.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/archive.h'\"
else
echo shar: Extracting \"'cook/archive.h'\" \(1185 characters\)
sed "s/^X//" >'cook/archive.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/archive.c
X */
X
X#ifndef COOK_ARCHIVE_H
X#define COOK_ARCHIVE_H
X
Xstruct stat;
Xstruct utimbuf;
Xstruct fingerprint_ty;
X
X#include <str.h>
X
Xint archive_stat _((string_ty *, struct stat *));
Xint archive_utime _((string_ty *, struct utimbuf *));
Xint archive_fingerprint _((struct fingerprint_ty *fp, string_ty *, char *));
X
X#endif /* COOK_ARCHIVE_H */
END_OF_FILE
if test 1185 -ne `wc -c <'cook/archive.h'`; then
    echo shar: \"'cook/archive.h'\" unpacked with wrong size!
fi
# end of 'cook/archive.h'
fi
if test -f 'cook/builtin.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin.h'\"
else
echo shar: Extracting \"'cook/builtin.h'\" \(1077 characters\)
sed "s/^X//" >'cook/builtin.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin.c
X */
X
X#ifndef BUILTIN_H
X#define BUILTIN_H
X
X#include <word.h>
X
Xtypedef int (*bifp)_((wlist *, wlist *));
X
Xvoid builtin_initialize _((void));
Xbifp builtin_search _((string_ty *));
X
X#endif /* BUILTIN_H */
END_OF_FILE
if test 1077 -ne `wc -c <'cook/builtin.h'`; then
    echo shar: \"'cook/builtin.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin.h'
fi
if test -f 'cook/builtin/addprefix.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/addprefix.c'\"
else
echo shar: Extracting \"'cook/builtin/addprefix.c'\" \(1304 characters\)
sed "s/^X//" >'cook/builtin/addprefix.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the builtin addprefix function
X */
X
X#include <builtin/addprefix.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_addprefix(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires one or more arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	for (j = 2; j < arg->wl_nwords; ++j)
X	{
X		s = str_catenate(arg->wl_word[1], arg->wl_word[j]);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1304 -ne `wc -c <'cook/builtin/addprefix.c'`; then
    echo shar: \"'cook/builtin/addprefix.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/addprefix.c'
fi
if test -f 'cook/builtin/addprefix.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/addprefix.h'\"
else
echo shar: Extracting \"'cook/builtin/addprefix.h'\" \(1037 characters\)
sed "s/^X//" >'cook/builtin/addprefix.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/addprefix.c
X */
X
X#ifndef COOK_BUILTIN_ADDPREFIX_H
X#define COOK_BUILTIN_ADDPREFIX_H
X
X#include <word.h>
X
Xint builtin_addprefix _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_ADDPREFIX_H */
END_OF_FILE
if test 1037 -ne `wc -c <'cook/builtin/addprefix.h'`; then
    echo shar: \"'cook/builtin/addprefix.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/addprefix.h'
fi
if test -f 'cook/builtin/addsuffix.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/addsuffix.c'\"
else
echo shar: Extracting \"'cook/builtin/addsuffix.c'\" \(1304 characters\)
sed "s/^X//" >'cook/builtin/addsuffix.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the builtin addsuffix function
X */
X
X#include <builtin/addsuffix.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_addsuffix(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		j;
X	string_ty	*s;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires one or more arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	for (j = 2; j < arg->wl_nwords; ++j)
X	{
X		s = str_catenate(arg->wl_word[j], arg->wl_word[1]);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1304 -ne `wc -c <'cook/builtin/addsuffix.c'`; then
    echo shar: \"'cook/builtin/addsuffix.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/addsuffix.c'
fi
if test -f 'cook/builtin/addsuffix.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/addsuffix.h'\"
else
echo shar: Extracting \"'cook/builtin/addsuffix.h'\" \(1037 characters\)
sed "s/^X//" >'cook/builtin/addsuffix.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/addsuffix.c
X */
X
X#ifndef COOK_BUILTIN_ADDSUFFIX_H
X#define COOK_BUILTIN_ADDSUFFIX_H
X
X#include <word.h>
X
Xint builtin_addsuffix _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_ADDSUFFIX_H */
END_OF_FILE
if test 1037 -ne `wc -c <'cook/builtin/addsuffix.h'`; then
    echo shar: \"'cook/builtin/addsuffix.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/addsuffix.h'
fi
if test -f 'cook/builtin/boolean.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/boolean.h'\"
else
echo shar: Extracting \"'cook/builtin/boolean.h'\" \(1163 characters\)
sed "s/^X//" >'cook/builtin/boolean.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for boolean.h
X */
X
X#ifndef COOK_BUILTIN_BOOLEAN_H
X#define COOK_BUILTIN_BOOLEAN_H
X
X#include <word.h>
X
Xint builtin_if _((wlist *, wlist *));
Xint builtin_not _((wlist *, wlist *));
Xint builtin_and _((wlist *, wlist *));
Xint builtin_or _((wlist *, wlist *));
Xint builtin_in _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_BOOLEAN_H */
END_OF_FILE
if test 1163 -ne `wc -c <'cook/builtin/boolean.h'`; then
    echo shar: \"'cook/builtin/boolean.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/boolean.h'
fi
if test -f 'cook/builtin/cook.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/cook.h'\"
else
echo shar: Extracting \"'cook/builtin/cook.h'\" \(1188 characters\)
sed "s/^X//" >'cook/builtin/cook.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/cook.c
X */
X
X#ifndef COOK_BUILTIN_COOK_H
X#define COOK_BUILTIN_COOK_H
X
X#include <word.h>
X
Xint builtin_mtime _((wlist *, wlist *));
Xint builtin_resolve _((wlist *, wlist *));
Xint builtin_sort_newest _((wlist *, wlist *));
Xint builtin_cando _((wlist *, wlist *));
Xint builtin_uptodate _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_COOK_H */
END_OF_FILE
if test 1188 -ne `wc -c <'cook/builtin/cook.h'`; then
    echo shar: \"'cook/builtin/cook.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/cook.h'
fi
if test -f 'cook/builtin/filter_out.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/filter_out.h'\"
else
echo shar: Extracting \"'cook/builtin/filter_out.h'\" \(1029 characters\)
sed "s/^X//" >'cook/builtin/filter_out.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for filter_out.h
X */
X
X#ifndef COOK_BUILTIN_FILTER_OUT_H
X#define COOK_BUILTIN_FILTER_OUT_H
X
X#include <word.h>
X
Xint builtin_filter_out _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_FILTER_OUT_H */
END_OF_FILE
if test 1029 -ne `wc -c <'cook/builtin/filter_out.h'`; then
    echo shar: \"'cook/builtin/filter_out.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/filter_out.h'
fi
if test -f 'cook/builtin/find_command.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/find_command.h'\"
else
echo shar: Extracting \"'cook/builtin/find_command.h'\" \(1039 characters\)
sed "s/^X//" >'cook/builtin/find_command.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for find_command.h
X */
X
X#ifndef COOK_BUILTIN_FIND_COMMAND_H
X#define COOK_BUILTIN_FIND_COMMAND_H
X
X#include <word.h>
X
Xint builtin_find_command _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_FIND_COMMAND_H */
END_OF_FILE
if test 1039 -ne `wc -c <'cook/builtin/find_command.h'`; then
    echo shar: \"'cook/builtin/find_command.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/find_command.h'
fi
if test -f 'cook/builtin/findstring.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/findstring.h'\"
else
echo shar: Extracting \"'cook/builtin/findstring.h'\" \(1042 characters\)
sed "s/^X//" >'cook/builtin/findstring.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/findstring.c
X */
X
X#ifndef COOK_BUILTIN_FINDSTRING_H
X#define COOK_BUILTIN_FINDSTRING_H
X
X#include <word.h>
X
Xint builtin_findstring _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_FINDSTRING_H */
END_OF_FILE
if test 1042 -ne `wc -c <'cook/builtin/findstring.h'`; then
    echo shar: \"'cook/builtin/findstring.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/findstring.h'
fi
if test -f 'cook/builtin/join.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/join.c'\"
else
echo shar: Extracting \"'cook/builtin/join.c'\" \(1331 characters\)
sed "s/^X//" >'cook/builtin/join.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the builtin join function
X */
X
X#include <builtin/join.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_join(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	size_t		n;
X	size_t		j;
X	string_ty	*s;
X
X	if ((arg->wl_nwords & 1) == 0)
X	{
X		expr_error
X		(
X			"%s: requires an even number of arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	n = arg->wl_nwords / 2;
X	for (j = 1; j <= n; ++j)
X	{
X		s = str_catenate(arg->wl_word[j], arg->wl_word[j + n]);
X		wl_append(result, s);
X		str_free(s);
X	}
X	return 0;
X}
END_OF_FILE
if test 1331 -ne `wc -c <'cook/builtin/join.c'`; then
    echo shar: \"'cook/builtin/join.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/join.c'
fi
if test -f 'cook/builtin/match.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/match.h'\"
else
echo shar: Extracting \"'cook/builtin/match.h'\" \(1092 characters\)
sed "s/^X//" >'cook/builtin/match.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for match.h
X */
X
X#ifndef COOK_BUILTIN_MATCH_H
X#define COOK_BUILTIN_MATCH_H
X
X#include <word.h>
X
Xint builtin_match _((wlist *, wlist *));
Xint builtin_match_mask _((wlist *, wlist *));
Xint builtin_fromto _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_MATCH_H */
END_OF_FILE
if test 1092 -ne `wc -c <'cook/builtin/match.h'`; then
    echo shar: \"'cook/builtin/match.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/match.h'
fi
if test -f 'cook/builtin/pathname.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/pathname.h'\"
else
echo shar: Extracting \"'cook/builtin/pathname.h'\" \(1116 characters\)
sed "s/^X//" >'cook/builtin/pathname.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/builtin/pathname.c
X */
X
X#ifndef COOK_BUILTIN_PATHNAME_H
X#define COOK_BUILTIN_PATHNAME_H
X
X#include <word.h>
X
Xint builtin_dir _((wlist *, wlist *));
Xint builtin_entryname _((wlist *, wlist *));
Xint builtin_pathname _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_PATHNAME_H */
END_OF_FILE
if test 1116 -ne `wc -c <'cook/builtin/pathname.h'`; then
    echo shar: \"'cook/builtin/pathname.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/pathname.h'
fi
if test -f 'cook/builtin/text.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/text.h'\"
else
echo shar: Extracting \"'cook/builtin/text.h'\" \(1334 characters\)
sed "s/^X//" >'cook/builtin/text.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for text.h
X */
X
X#ifndef COOK_BUILTIN_TEXT_H
X#define COOK_BUILTIN_TEXT_H
X
X#include <word.h>
X
Xint builtin_upcase _((wlist *, wlist *));
Xint builtin_downcase _((wlist *, wlist *));
Xint builtin_prepost _((wlist *, wlist *));
Xint builtin_head _((wlist *, wlist *));
Xint builtin_tail _((wlist *, wlist *));
Xint builtin_catenate _((wlist *, wlist *));
Xint builtin_count _((wlist *, wlist *));
Xint builtin_quote _((wlist *, wlist *));
Xint builtin_sort _((wlist *, wlist *));
X
X#endif /* COOK_BUILTIN_TEXT_H */
END_OF_FILE
if test 1334 -ne `wc -c <'cook/builtin/text.h'`; then
    echo shar: \"'cook/builtin/text.h'\" unpacked with wrong size!
fi
# end of 'cook/builtin/text.h'
fi
if test -f 'cook/builtin/unsplit.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/builtin/unsplit.c'\"
else
echo shar: Extracting \"'cook/builtin/unsplit.c'\" \(1250 characters\)
sed "s/^X//" >'cook/builtin/unsplit.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to implement the unsplit builtin function
X */
X
X#include <builtin/unsplit.h>
X#include <expr.h>
X
X
Xint
Xbuiltin_unsplit(result, arg)
X	wlist		*result;
X	wlist		*arg;
X{
X	string_ty	*s;
X
X	if (arg->wl_nwords < 2)
X	{
X		expr_error
X		(
X			"%s: requires one or more arguments",
X			arg->wl_word[0]->str_text
X		);
X		return -1;
X	}
X	s = wl2str(arg, 2, arg->wl_nwords, arg->wl_word[1]->str_text);
X	wl_append(result, s);
X	str_free(s);
X	return 0;
X}
END_OF_FILE
if test 1250 -ne `wc -c <'cook/builtin/unsplit.c'`; then
    echo shar: \"'cook/builtin/unsplit.c'\" unpacked with wrong size!
fi
# end of 'cook/builtin/unsplit.c'
fi
if test -f 'cook/fngrprnt.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/fngrprnt.h'\"
else
echo shar: Extracting \"'cook/fngrprnt.h'\" \(1244 characters\)
sed "s/^X//" >'cook/fngrprnt.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/fngrprnt.c
X */
X
X#ifndef COOK_FNGRPRNT_H
X#define COOK_FNGRPRNT_H
X
X#include <ac/time.h>
X#include <str.h>
X
Xtypedef struct fp_ty fp_ty;
Xstruct fp_ty
X{
X	time_t		oldest;
X	time_t		newest;
X	string_ty	*fingerprint;
X};
X
Xfp_ty *fp_search _((string_ty *path));
Xvoid fp_assign _((string_ty *, fp_ty *));
Xvoid fp_delete _((string_ty *));
Xstring_ty *fp_fingerprint _((string_ty *path));
X
X#endif /* COOK_FNGRPRNT_H */
END_OF_FILE
if test 1244 -ne `wc -c <'cook/fngrprnt.h'`; then
    echo shar: \"'cook/fngrprnt.h'\" unpacked with wrong size!
fi
# end of 'cook/fngrprnt.h'
fi
if test -f 'cook/fngrprnt_lex.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/fngrprnt_lex.h'\"
else
echo shar: Extracting \"'cook/fngrprnt_lex.h'\" \(1109 characters\)
sed "s/^X//" >'cook/fngrprnt_lex.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/fngrprnt_lex.c
X */
X
X#ifndef COOK_FNGRPRNT_LEX_H
X#define COOK_FNGRPRNT_LEX_H
X
X#include <main.h>
X
Xvoid fngrprnt_lex_open _((char *));
Xvoid fngrprnt_lex_close _((void));
Xint fngrprnt_lex _((void));
Xvoid fngrprnt_error _((char *, ...));
X
X#endif /* COOK_FNGRPRNT_LEX_H */
END_OF_FILE
if test 1109 -ne `wc -c <'cook/fngrprnt_lex.h'`; then
    echo shar: \"'cook/fngrprnt_lex.h'\" unpacked with wrong size!
fi
# end of 'cook/fngrprnt_lex.h'
fi
if test -f 'cook/id.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/id.h'\"
else
echo shar: Extracting \"'cook/id.h'\" \(1335 characters\)
sed "s/^X//" >'cook/id.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/id.c
X */
X
X#ifndef ID_H
X#define ID_H
X
X#include <word.h>
X
Xextern string_ty *id_need;
Xextern string_ty *id_younger;
Xextern string_ty *id_friend;
Xextern string_ty *id_target;
Xextern string_ty *id_search_list;
X
Xvoid id_initialize _((void));
Xvoid id_reset _((void));
Xint id_search _((string_ty *, wlist *));
Xvoid id_assign _((string_ty *, wlist *));
Xvoid id_assign_push _((string_ty *, wlist *));
Xvoid id_delete _((string_ty *));
Xvoid id_dump _((char *));
X
X#endif /* ID_H */
END_OF_FILE
if test 1335 -ne `wc -c <'cook/id.h'`; then
    echo shar: \"'cook/id.h'\" unpacked with wrong size!
fi
# end of 'cook/id.h'
fi
if test -f 'cook/stat.cache.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'cook/stat.cache.h'\"
else
echo shar: Extracting \"'cook/stat.cache.h'\" \(1161 characters\)
sed "s/^X//" >'cook/stat.cache.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for cook/stat.cache.c
X */
X
X#ifndef COOK_STAT_CACHE_H
X#define COOK_STAT_CACHE_H
X
X#include <ac/time.h>
X#include <str.h>
X
Xtime_t stat_cache_oldest _((string_ty *));
Xtime_t stat_cache_newest _((string_ty *));
Xvoid stat_cache_set _((string_ty *, time_t, int));
Xvoid stat_cache_clear _((string_ty *));
X
X#endif /* COOK_STAT_CACHE_H */
END_OF_FILE
if test 1161 -ne `wc -c <'cook/stat.cache.h'`; then
    echo shar: \"'cook/stat.cache.h'\" unpacked with wrong size!
fi
# end of 'cook/stat.cache.h'
fi
if test -f 'doc/builtin.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/builtin.so'\"
else
echo shar: Extracting \"'doc/builtin.so'\" \(1172 characters\)
sed "s/^X//" >'doc/builtin.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions
X.\"
X.H 1 "Built-In Functions"
XThis chapter defines each of the builtin functions of
X.IR cook .
X.P
XA builtin function is invoked by using an expression of the form
X.eB
X.fi
X.BI [ func-name
X.I arg
X.I arg
X.RB \&... ]
X.eE
Xin most places where a literal word is valid.
X.so function.so
END_OF_FILE
if test 1172 -ne `wc -c <'doc/builtin.so'`; then
    echo shar: \"'doc/builtin.so'\" unpacked with wrong size!
fi
# end of 'doc/builtin.so'
fi
if test -f 'doc/function/addprefix.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/addprefix.so'\"
else
echo shar: Extracting \"'doc/function/addprefix.so'\" \(1152 characters\)
sed "s/^X//" >'doc/function/addprefix.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Addprefix
X.\"
X.H 2 "addprefix"
XThe
X.I addprefix"
Xfunction is used to add a prefix to a list or words.
XThis function requires at least one argument.
XThe first argument is a prefix to be added to the
Xsecond and subsequent arguments.
X.H 3 "See Also"
Xaddsuffix, patsubst, prepost, subst
END_OF_FILE
if test 1152 -ne `wc -c <'doc/function/addprefix.so'`; then
    echo shar: \"'doc/function/addprefix.so'\" unpacked with wrong size!
fi
# end of 'doc/function/addprefix.so'
fi
if test -f 'doc/function/addsuffix.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/addsuffix.so'\"
else
echo shar: Extracting \"'doc/function/addsuffix.so'\" \(1152 characters\)
sed "s/^X//" >'doc/function/addsuffix.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Addsuffix
X.\"
X.H 2 "addsuffix"
XThe
X.I addsuffix"
Xfunction is used to add a suffix to a list or words.
XThis function requires at least one argument.
XThe first argument is a suffix to be added to the
Xsecond and subsequent arguments.
X.H 3 "See Also"
Xaddprefix, patsubst, prepost, subst
END_OF_FILE
if test 1152 -ne `wc -c <'doc/function/addsuffix.so'`; then
    echo shar: \"'doc/function/addsuffix.so'\" unpacked with wrong size!
fi
# end of 'doc/function/addsuffix.so'
fi
if test -f 'doc/function/cando.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/cando.so'\"
else
echo shar: Extracting \"'doc/function/cando.so'\" \(1172 characters\)
sed "s/^X//" >'doc/function/cando.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Cando
X.\"
X.H 2 "cando"
XThis function is used to test whether cook knows how to cook the given targets.
XFor each argument, the result contains either "1" (true) or "" (false).
X.H 3 "Caveat"
XThis function is rarely required,
Xsince it is inherent in the basic functioning of cook.
X.H 3 "See Also"
Xuptodate
END_OF_FILE
if test 1172 -ne `wc -c <'doc/function/cando.so'`; then
    echo shar: \"'doc/function/cando.so'\" unpacked with wrong size!
fi
# end of 'doc/function/cando.so'
fi
if test -f 'doc/function/collect_ln.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/collect_ln.so'\"
else
echo shar: Extracting \"'doc/function/collect_ln.so'\" \(1295 characters\)
sed "s/^X//" >'doc/function/collect_ln.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Collect_lines
X.\"
X.H 2 "collect_lines"
XThe arguments are interpreted as a command to be passed to the operating system.
XThe result one "word" for each
Xline of the output of the command.
X.H 3 "Example"
XTo read each line of a file into a variable:
X.eB
Xfiles = [collect_lines cat file];
X.eE
XSpaces and tabs in the input lines will be preserved
Xin the "words" of the result.
X.H 3 "See Also"
Xcollect, glob
END_OF_FILE
if test 1295 -ne `wc -c <'doc/function/collect_ln.so'`; then
    echo shar: \"'doc/function/collect_ln.so'\" unpacked with wrong size!
fi
# end of 'doc/function/collect_ln.so'
fi
if test -f 'doc/function/count.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/count.so'\"
else
echo shar: Extracting \"'doc/function/count.so'\" \(1298 characters\)
sed "s/^X//" >'doc/function/count.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Count
X.\"
X.H 2 "count"
XThis function requires zero or more arguments.
XThe result is a word list of one word containing the (decimal) length
Xof the argument word list.
X.H 3 "Example"
XThis cookbook fragment echoes the number of files,
Xand then the name of the last file:
X.eB
Xecho There are [count [files]] files.;
Xecho The last file is [word [count [files]] [files]].;
X.eE
X.H 3 "See Also"
Xhead, tail, word
END_OF_FILE
if test 1298 -ne `wc -c <'doc/function/count.so'`; then
    echo shar: \"'doc/function/count.so'\" unpacked with wrong size!
fi
# end of 'doc/function/count.so'
fi
if test -f 'doc/function/defined.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/defined.so'\"
else
echo shar: Extracting \"'doc/function/defined.so'\" \(1256 characters\)
sed "s/^X//" >'doc/function/defined.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Defined
X.\"
X.H 2 "defined"
XThis function requires a single argument,
Xthe name of a variable to be tested for existence.
XIt returns "1" (true) if the named variable is defined and "" (false) if it
Xis not.
X.H 3 "Example"
XThis function is most often seen in conditional portions of cookbooks:
X.eB
Xif [defined baseline] then
X	cc_flags = [cc_flags] -I[baseline];
X.eE
END_OF_FILE
if test 1256 -ne `wc -c <'doc/function/defined.so'`; then
    echo shar: \"'doc/function/defined.so'\" unpacked with wrong size!
fi
# end of 'doc/function/defined.so'
fi
if test -f 'doc/function/dir.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/dir.so'\"
else
echo shar: Extracting \"'doc/function/dir.so'\" \(1175 characters\)
sed "s/^X//" >'doc/function/dir.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Dir
X.\"
X.H 2 "dir"
XThis function requires one or more arguments,
Xthe names of files which will have their directory parts extracted.
X.H 3 "Example"
X.TS
Xcenter;
Xl l.
XExpression	Result
X_
X[dir a]	.
X[dir a/b]	a
X[dir a/b/c]	a/b
X.TE
X.H 3 "See Also"
Xpathname, entryname, basename, suffix
END_OF_FILE
if test 1175 -ne `wc -c <'doc/function/dir.so'`; then
    echo shar: \"'doc/function/dir.so'\" unpacked with wrong size!
fi
# end of 'doc/function/dir.so'
fi
if test -f 'doc/function/dirname.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/dirname.so'\"
else
echo shar: Extracting \"'doc/function/dirname.so'\" \(1171 characters\)
sed "s/^X//" >'doc/function/dirname.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Dirname
X.\"
X.H 2 "dirname"
XThis function requires one or more arguments,
Xthe names of files which will have their directory parts extracted.
X.H 3 "Example"
X.TS
Xcenter;
Xl l.
XExpression	Result
X_
X[dirname a]	.
X[dirname a/b]	a
X[dirname a/b/c]	a/b
X.TE
X.H 3 "See Also"
Xpathname, entryname, basename, suffix
END_OF_FILE
if test 1171 -ne `wc -c <'doc/function/dirname.so'`; then
    echo shar: \"'doc/function/dirname.so'\" unpacked with wrong size!
fi
# end of 'doc/function/dirname.so'
fi
if test -f 'doc/function/downcase.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/downcase.so'\"
else
echo shar: Extracting \"'doc/function/downcase.so'\" \(1141 characters\)
sed "s/^X//" >'doc/function/downcase.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Downcase
X.\"
X.H 2 "downcase"
XThis function requires one or more arguments,
Xwords to be forced into lower case.
X.H 3 "Example"
X.TS
Xcenter;
Xl l.
XExpression	Result
X_
X[downcase FOO]	foo
X[downcase Bar]	bar
X[downcase baz]	baz
X.TE
X.H 3 "See Also"
Xupcase
END_OF_FILE
if test 1141 -ne `wc -c <'doc/function/downcase.so'`; then
    echo shar: \"'doc/function/downcase.so'\" unpacked with wrong size!
fi
# end of 'doc/function/downcase.so'
fi
if test -f 'doc/function/entryname.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/entryname.so'\"
else
echo shar: Extracting \"'doc/function/entryname.so'\" \(1190 characters\)
sed "s/^X//" >'doc/function/entryname.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Entryname
X.\"
X.H 2 "entryname"
XThis function requires one or more arguments,
Xthe names of files which will have their entry name parts extracted.
X.H 3 Example
X.TS
Xcenter;
Xl l.
XExpression	Result
X_
X[entryname a]	a
X[entryname a/b]	b
X[entryname a/b/c]	c
X.TE
X.H 3 "See Also"
Xdirname, basename, suffix
END_OF_FILE
if test 1190 -ne `wc -c <'doc/function/entryname.so'`; then
    echo shar: \"'doc/function/entryname.so'\" unpacked with wrong size!
fi
# end of 'doc/function/entryname.so'
fi
if test -f 'doc/function/filter.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/filter.so'\"
else
echo shar: Extracting \"'doc/function/filter.so'\" \(1289 characters\)
sed "s/^X//" >'doc/function/filter.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Filter
X.\"
X.H 2 "filter"
XThis function requires one or more arguments.
XThe first argument is a pattern,
Xthe second and later arguments are strings to match against this pattern.
XThe resulting wordlist contains those arguments which
Xmatched the pattern given as the first argument.
X.H 3 "Example"
X.TS
Xtab(;),center;
Xl l.
XExpression;Result
X_
X[filter %.c a.c a.o];a.c
X[filter %.cc a.c a.o];
X.TE
X.H 3 "See Also"
Xfilter_out
END_OF_FILE
if test 1289 -ne `wc -c <'doc/function/filter.so'`; then
    echo shar: \"'doc/function/filter.so'\" unpacked with wrong size!
fi
# end of 'doc/function/filter.so'
fi
if test -f 'doc/function/filter_out.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/filter_out.so'\"
else
echo shar: Extracting \"'doc/function/filter_out.so'\" \(1306 characters\)
sed "s/^X//" >'doc/function/filter_out.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Filter_out
X.\"
X.H 2 "filter_out"
XThis function requires one or more arguments.
XThe first argument is a pattern,
Xthe second and later arguments are strings to match against this pattern.
XThe resulting wordlist contains those arguments which
Xdid not match the pattern given as the first argument.
X.H 3 "Example"
X.TS
Xtab(;),center;
Xl l.
XExpression;Result
X_
X[filter %.c a.c a.o];a.o
X[filter %.cc a.c a.o];a.c a.o
X.TE
X.H 3 "See Also"
Xfilter
END_OF_FILE
if test 1306 -ne `wc -c <'doc/function/filter_out.so'`; then
    echo shar: \"'doc/function/filter_out.so'\" unpacked with wrong size!
fi
# end of 'doc/function/filter_out.so'
fi
if test -f 'doc/function/glob.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/glob.so'\"
else
echo shar: Extracting \"'doc/function/glob.so'\" \(1319 characters\)
sed "s/^X//" >'doc/function/glob.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Glob
X.\"
X.H 2 "glob"
XEach argument is treated as a
X.IR sh (1)
Xfile name pattern,
Xand expanded accordingly.
XThe resulting list of filenames is sorted lexicographically.
X.P
XYou may need to quote the pattern,
Xto protect square brackets from the meaning cook attaches to them.
X.H 3 "Example"
XTo find the sources in the current directory:
X.eB
Xsrc = [glob *.c];
Xobj = [fromto %.c %.o [src]];
X.eE
X.H 3 "See Also"
Xfilter, filter_out
END_OF_FILE
if test 1319 -ne `wc -c <'doc/function/glob.so'`; then
    echo shar: \"'doc/function/glob.so'\" unpacked with wrong size!
fi
# end of 'doc/function/glob.so'
fi
if test -f 'doc/function/home.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/home.so'\"
else
echo shar: Extracting \"'doc/function/home.so'\" \(1073 characters\)
sed "s/^X//" >'doc/function/home.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Home
X.\"
X.H 2 "Home"
XThe
X.I home
Xfunction is used to find the home directory of the named users.
XYou may name more than one user.
XIf no users are named,
Xit returns the home directory of the current user.
END_OF_FILE
if test 1073 -ne `wc -c <'doc/function/home.so'`; then
    echo shar: \"'doc/function/home.so'\" unpacked with wrong size!
fi
# end of 'doc/function/home.so'
fi
if test -f 'doc/function/mtime.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/mtime.so'\"
else
echo shar: Extracting \"'doc/function/mtime.so'\" \(1211 characters\)
sed "s/^X//" >'doc/function/mtime.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Mtime
X.\"
X.H 2 "mtime"
XThis function requires one argument,
Xthe name of a file to fetch the last-modified time of.
XThe resulting wordlist is "" (false) is the file does not exist,
Xor a string containing a (sortable) representation of the date and
Xtime the files was last modified.
X.H 3 "See Also"
Xexists, sort_newest
END_OF_FILE
if test 1211 -ne `wc -c <'doc/function/mtime.so'`; then
    echo shar: \"'doc/function/mtime.so'\" unpacked with wrong size!
fi
# end of 'doc/function/mtime.so'
fi
if test -f 'doc/function/or.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/or.so'\"
else
echo shar: Extracting \"'doc/function/or.so'\" \(1140 characters\)
sed "s/^X//" >'doc/function/or.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Or
X.\"
X.H 2 "or"
XThis function requires at least two arguments,
Xupon which it forms a logical disjunction.
XThe value returned is "1" (true) if any one of the arguments is not "" (false),
Xotherwise "" (false) is returned.
X.H 3 "See Also"
Xand, not
END_OF_FILE
if test 1140 -ne `wc -c <'doc/function/or.so'`; then
    echo shar: \"'doc/function/or.so'\" unpacked with wrong size!
fi
# end of 'doc/function/or.so'
fi
if test -f 'doc/function/pathname.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/pathname.so'\"
else
echo shar: Extracting \"'doc/function/pathname.so'\" \(1141 characters\)
sed "s/^X//" >'doc/function/pathname.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Pathname
X.\"
X.H 2 "pathname"
XThe function requires one or more arguments,
Xbeing files names to be replaced with their full path names.
X.H 3 "Example"
XRelative names are made absolute:
X.eB
Xpwd = [pathname .];
X.eE
X.H 3 "See Also"
Xdirname, entryname
END_OF_FILE
if test 1141 -ne `wc -c <'doc/function/pathname.so'`; then
    echo shar: \"'doc/function/pathname.so'\" unpacked with wrong size!
fi
# end of 'doc/function/pathname.so'
fi
if test -f 'doc/function/prepost.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/prepost.so'\"
else
echo shar: Extracting \"'doc/function/prepost.so'\" \(1227 characters\)
sed "s/^X//" >'doc/function/prepost.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Prepost
X.\"
X.H 2 "prepost"
XThis function must have at least two arguments.
XThe first argument is a prefix and the second argument is a suffix.
XThe resulting word list is
Xthe third and later arguments each given the prefix and suffix as
Xdefined by the first and second arguments.
X.H 3 "See Also"
Xaddprefix, addsuffix, patsubst, subst
END_OF_FILE
if test 1227 -ne `wc -c <'doc/function/prepost.so'`; then
    echo shar: \"'doc/function/prepost.so'\" unpacked with wrong size!
fi
# end of 'doc/function/prepost.so'
fi
if test -f 'doc/function/strip.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/strip.so'\"
else
echo shar: Extracting \"'doc/function/strip.so'\" \(1204 characters\)
sed "s/^X//" >'doc/function/strip.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Builtin Functions, Strip
X.\"
X.H 2 "Strip"
XThe
X.I strip
Xfunction is used to remove leading and trailing white space from words.
XInternal sequences of white space are replaced by a single space.
X.H 3 "Example"
X.TS
Xcenter,tab(;);
Xl l.
XExpression;Result
X_
X[strip " " "foo " " bar"];"" foo bar
X[strip " really   big  "];"really big"
X.TE
X.H 3 "See Also"
Xsplit
END_OF_FILE
if test 1204 -ne `wc -c <'doc/function/strip.so'`; then
    echo shar: \"'doc/function/strip.so'\" unpacked with wrong size!
fi
# end of 'doc/function/strip.so'
fi
if test -f 'doc/function/tail.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/tail.so'\"
else
echo shar: Extracting \"'doc/function/tail.so'\" \(1131 characters\)
sed "s/^X//" >'doc/function/tail.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Tail
X.\"
X.H 2 "tail"
XThis function requires zero or more arguments.
XThe word list returned will be empty if
Xthere is less than two arguments,
Xotherwise it will consist of the second and later arguments.
X.H 3 "See Also"
Xcount, head, word
END_OF_FILE
if test 1131 -ne `wc -c <'doc/function/tail.so'`; then
    echo shar: \"'doc/function/tail.so'\" unpacked with wrong size!
fi
# end of 'doc/function/tail.so'
fi
if test -f 'doc/function/uptodate.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/uptodate.so'\"
else
echo shar: Extracting \"'doc/function/uptodate.so'\" \(1113 characters\)
sed "s/^X//" >'doc/function/uptodate.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1990, 1991, 1992, 1993, 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Uptodate
X.\"
X.H 2 "uptodate"
XThis function requires one or more arguments,
Xfilenames to be brought up-to-date.
XThe result are true ("1") if no error occurred,
Xor false ("") if some error occurred.
X.H 3 "See Also"
Xcando
END_OF_FILE
if test 1113 -ne `wc -c <'doc/function/uptodate.so'`; then
    echo shar: \"'doc/function/uptodate.so'\" unpacked with wrong size!
fi
# end of 'doc/function/uptodate.so'
fi
if test -f 'doc/function/wildcard.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/wildcard.so'\"
else
echo shar: Extracting \"'doc/function/wildcard.so'\" \(1319 characters\)
sed "s/^X//" >'doc/function/wildcard.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Wildcard
X.\"
X.H 2 "wildcard"
XEach argument is treated as a
X.IR sh (1)
Xfile name pattern,
Xand expanded accordingly.
XThe resulting list of filenames is sorted lexicographically.
X.P
XYou may need to quote the pattern,
Xto protect square brackets from the meaning cook attaches to them.
X.H 3 "Example"
XTo find the sources in the current directory:
X.eB
Xsrc = [wildcard *.c];
Xobj = [patsubst %.c %.o [src]];
X.eE
X.H 3 "See Also"
Xfilter, filter_out, patsubst
END_OF_FILE
if test 1319 -ne `wc -c <'doc/function/wildcard.so'`; then
    echo shar: \"'doc/function/wildcard.so'\" unpacked with wrong size!
fi
# end of 'doc/function/wildcard.so'
fi
if test -f 'doc/function/words.so' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'doc/function/words.so'\"
else
echo shar: Extracting \"'doc/function/words.so'\" \(1274 characters\)
sed "s/^X//" >'doc/function/words.so' <<'END_OF_FILE'
X.\"
X.\"	cook - file construction tool
X.\"	Copyright (C) 1994 Peter Miller.
X.\"	All rights reserved.
X.\"
X.\"	This program is free software; you can redistribute it and/or modify
X.\"	it under the terms of the GNU General Public License as published by
X.\"	the Free Software Foundation; either version 2 of the License, or
X.\"	(at your option) any later version.
X.\"
X.\"	This program is distributed in the hope that it will be useful,
X.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
X.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X.\"	GNU General Public License for more details.
X.\"
X.\"	You should have received a copy of the GNU General Public License
X.\"	along with this program; if not, write to the Free Software
X.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X.\"
X.\" MANIFEST: Reference Manual, Built-In Functions, Words
X.\"
X.H 2 "words"
XThis function requires zero or more arguments.
XThe result is a word list of one word containing the (decimal) length
Xof the argument word list.
X.H 3 "Example"
XThis cookbook fragment echoes the number of files,
Xand then the name of the last file:
X.eB
Xecho There are [words [files]] files.;
Xecho The last file is [word [words [files]] [files]].;
X.eE
X.H 3 "See Also"
Xhead, tail, word
END_OF_FILE
if test 1274 -ne `wc -c <'doc/function/words.so'`; then
    echo shar: \"'doc/function/words.so'\" unpacked with wrong size!
fi
# end of 'doc/function/words.so'
fi
if test -f 'lib/as' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/as'\"
else
echo shar: Extracting \"'lib/as'\" \(1238 characters\)
sed "s/^X//" >'lib/as' <<'END_OF_FILE'
X/*
X * NAME
X *	as - assembler cookbook
X *
X * DESCRIPTION
X *	This cookbook defines how to use the assembler
X *
X * RECIPES
X *	%.o: %.s	construct object friles from assembler source files
X *
X * VARIABLES
X *	as		The assembler command.
X *			Not altered if already defined.
X *	as_flags	Options to pass the assembler command.
X *			Not altered if already defined.
X *			The default is empty.
X *	as_src		Assembler source files in the current directory.
X *	dot_src		Source files constructable in the current directory
X *			(unioned with existing setting, if necessary).
X *	dot_obj		Object files constructable in the current directory
X *			(unioned with existing setting, if necessary).
X *	dot_clean	Files which may be removed from the current directory
X *			in a clean target.			
X *
X * MANIFEST: cookbook for using assembler
X */
X
X#pragma once
X
Xif [not [defined as]] then
X    as = as;
Xif [not [defined as_flags]] then
X    as_flags = ;
Xif [not [defined dot_src]] then
X    dot_src = ;
Xif [not [defined dot_obj]] then
X    dot_obj = ;
Xas_src = [glob *.s];
Xdot_src = [stringset [dot_src] [as_src]];
Xdot_obj = [stringset [dot_obj] [fromto %.s %.o [as_src]]];
Xdot_clean = [stringset [dot_clean] [dot_obj]];
X
X%.o: %.s
X    {
X	[as] [as_flags] -o %.o %.s;
X    }
END_OF_FILE
if test 1238 -ne `wc -c <'lib/as'`; then
    echo shar: \"'lib/as'\" unpacked with wrong size!
fi
# end of 'lib/as'
fi
if test -f 'lib/text' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'lib/text'\"
else
echo shar: Extracting \"'lib/text'\" \(1177 characters\)
sed "s/^X//" >'lib/text' <<'END_OF_FILE'
X/*
X * NAME
X *	text - process text 
X *
X * DESCRIPTION
X *	This cookbook is used to process text documents.
X *
X *	Include file dependencies are automatically detected.
X *	The requirements for various preprocessors are automatically detected
X *	(eg eqn, tbl, pic, graf).
X *
X * RECIPES
X *	%.ps: %.t	PostScript for generic *roff source
X *	%: %.t		straight text from *roff source
X *
X * VARIABLES
X *	text_incl	The text_incl command (finds include dependencies).
X *			Not altered if already set.
X *	text_roff	The text_roff command	 (finds preprocessor needs).
X *			Not altered if already set.
X *	roff_flags	Arguments passed to text_roff,
X *			and indirectly to the *roff program.
X *			Not altered if already set.
X *			Defaults to empty.
X *
X * MANIFEST: cookbook for formatting documents
X */
X
X#pragma once
X
Xif [not [defined text_incl]] then
X    text_incl = text_incl;
Xif [not [defined text_roff]] then
X    text_roff = text_roff;
Xif [not [defined roff_flags]] then
X    roff_flags = ;
X
X%.ps: %.t: [collect [text_incl] %.t]
X    {
X	[collect [text_roff] -e [roff_flags] %.t] > %.ps;
X    }
X    
X%: %.t: [collect [text_incl] %.t]
X    {
X	[collect [text_roff] -n [roff_flags] %.t] > %.doc;
X    }
END_OF_FILE
if test 1177 -ne `wc -c <'lib/text'`; then
    echo shar: \"'lib/text'\" unpacked with wrong size!
fi
# end of 'lib/text'
fi
if test -f 'make2cook/emit.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/emit.h'\"
else
echo shar: Extracting \"'make2cook/emit.h'\" \(1306 characters\)
sed "s/^X//" >'make2cook/emit.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/emit.c
X */
X
X#ifndef MAKE2COOK_EMIT_H
X#define MAKE2COOK_EMIT_H
X
X#include <str.h>
X
Xextern int emit_line_numbers;
X
Xvoid emit_open _((char *));
Xvoid emit_close _((void));
Xvoid emit_char _((int));
Xvoid emit_str _((char *));
Xvoid emit_string _((string_ty *));
Xvoid emit_line_number _((long, string_ty *));
Xvoid emit_set_file _((string_ty *));
Xvoid emit_bol _((void));
Xvoid emit_indent_more _((void));
Xvoid emit_indent_less _((void));
X
X#endif /* MAKE2COOK_EMIT_H */
END_OF_FILE
if test 1306 -ne `wc -c <'make2cook/emit.h'`; then
    echo shar: \"'make2cook/emit.h'\" unpacked with wrong size!
fi
# end of 'make2cook/emit.h'
fi
if test -f 'make2cook/lex.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/lex.h'\"
else
echo shar: Extracting \"'make2cook/lex.h'\" \(1145 characters\)
sed "s/^X//" >'make2cook/lex.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/lex.c
X */
X
X#ifndef MAKE2COOK_LEX_H
X#define MAKE2COOK_LEX_H
X
X#include <main.h>
X
Xvoid lex_open _((char *));
Xvoid lex_close _((void));
X
Xvoid gram_error _((char *, ...));
Xvoid gram_trace _((char *, ...));
Xvoid gram_trace2 _((void *, char *, ...));
Xint gram_lex _((void));
X
X#endif /* MAKE2COOK_LEX_H */
END_OF_FILE
if test 1145 -ne `wc -c <'make2cook/lex.h'`; then
    echo shar: \"'make2cook/lex.h'\" unpacked with wrong size!
fi
# end of 'make2cook/lex.h'
fi
if test -f 'make2cook/stmt/assign.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/assign.h'\"
else
echo shar: Extracting \"'make2cook/stmt/assign.h'\" \(1243 characters\)
sed "s/^X//" >'make2cook/stmt/assign.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/assign.c
X */
X
X#ifndef MAKE2COOK_STMT_ASSIGN_H
X#define MAKE2COOK_STMT_ASSIGN_H
X
X#include <blob.h>
X#include <stmt.h>
X
Xenum
X{
X	stmt_assign_op_normal,
X	stmt_assign_op_colon,
X	stmt_assign_op_default,
X	stmt_assign_op_plus
X};
X
Xstmt_ty *stmt_assign_alloc _((int override, blob_ty *lhs, int op,
X	blob_list_ty *rhs));
Xstmt_ty *stmt_assign_default _((stmt_ty *));
X
X#endif /* MAKE2COOK_STMT_ASSIGN_H */
END_OF_FILE
if test 1243 -ne `wc -c <'make2cook/stmt/assign.h'`; then
    echo shar: \"'make2cook/stmt/assign.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/assign.h'
fi
if test -f 'make2cook/stmt/blank.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/blank.c'\"
else
echo shar: Extracting \"'make2cook/stmt/blank.c'\" \(1167 characters\)
sed "s/^X//" >'make2cook/stmt/blank.c' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: functions to manipulate blank statements
X */
X
X#include <stmt/blank.h>
X
Xstatic stmt_method_ty method =
X{
X	sizeof(stmt_ty),
X	"blank",
X	0, /* constructor */
X	0, /* destructor */
X	0, /* emit */
X	0, /* regroup */
X	0, /* sort */
X};
X
X
Xstmt_ty *
Xstmt_blank_alloc()
X{
X	stmt_ty		*result;
X	
X	result = stmt_alloc(&method);
X	result->white_space = 1;
X	return result;
X}
END_OF_FILE
if test 1167 -ne `wc -c <'make2cook/stmt/blank.c'`; then
    echo shar: \"'make2cook/stmt/blank.c'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/blank.c'
fi
if test -f 'make2cook/stmt/comment.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/comment.h'\"
else
echo shar: Extracting \"'make2cook/stmt/comment.h'\" \(1101 characters\)
sed "s/^X//" >'make2cook/stmt/comment.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/comment.c
X */
X
X#ifndef MAKE2COOK_STMT_COMMENT_H
X#define MAKE2COOK_STMT_COMMENT_H
X
X#include <blob.h>
X#include <stmt.h>
X
Xstmt_ty *stmt_comment_alloc _((void));
Xvoid stmt_comment_append _((stmt_ty *, blob_ty *));
X
X#endif /* MAKE2COOK_STMT_COMMENT_H */
END_OF_FILE
if test 1101 -ne `wc -c <'make2cook/stmt/comment.h'`; then
    echo shar: \"'make2cook/stmt/comment.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/comment.h'
fi
if test -f 'make2cook/stmt/compound.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/compound.h'\"
else
echo shar: Extracting \"'make2cook/stmt/compound.h'\" \(1143 characters\)
sed "s/^X//" >'make2cook/stmt/compound.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/compound.c
X */
X
X#ifndef MAKE2COOK_STMT_COMPOUND_H
X#define MAKE2COOK_STMT_COMPOUND_H
X
X#include <stmt.h>
X
Xstmt_ty *stmt_compound_alloc _((void));
Xvoid stmt_compound_prepend _((stmt_ty *, stmt_ty *));
Xvoid stmt_compound_append _((stmt_ty *, stmt_ty *));
X
X#endif /* MAKE2COOK_STMT_COMPOUND_H */
END_OF_FILE
if test 1143 -ne `wc -c <'make2cook/stmt/compound.h'`; then
    echo shar: \"'make2cook/stmt/compound.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/compound.h'
fi
if test -f 'make2cook/stmt/define.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/define.h'\"
else
echo shar: Extracting \"'make2cook/stmt/define.h'\" \(1100 characters\)
sed "s/^X//" >'make2cook/stmt/define.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/define.c
X */
X
X#ifndef MAKE2COOK_STMT_DEFINE_H
X#define MAKE2COOK_STMT_DEFINE_H
X
X#include <blob.h>
X#include <stmt.h>
X
Xstmt_ty *stmt_define_alloc _((blob_ty *));
Xvoid stmt_define_append _((stmt_ty *, blob_ty *));
X
X#endif /* MAKE2COOK_STMT_DEFINE_H */
END_OF_FILE
if test 1100 -ne `wc -c <'make2cook/stmt/define.h'`; then
    echo shar: \"'make2cook/stmt/define.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/define.h'
fi
if test -f 'make2cook/stmt/if.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/if.h'\"
else
echo shar: Extracting \"'make2cook/stmt/if.h'\" \(1051 characters\)
sed "s/^X//" >'make2cook/stmt/if.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/if.c
X */
X
X#ifndef MAKE2COOK_STMT_IF_H
X#define MAKE2COOK_STMT_IF_H
X
X#include <blob.h>
X#include <stmt.h>
X
Xstmt_ty *stmt_if_alloc _((blob_ty *, stmt_ty *, stmt_ty *));
X
X#endif /* MAKE2COOK_STMT_IF_H */
END_OF_FILE
if test 1051 -ne `wc -c <'make2cook/stmt/if.h'`; then
    echo shar: \"'make2cook/stmt/if.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/if.h'
fi
if test -f 'make2cook/stmt/include.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/include.h'\"
else
echo shar: Extracting \"'make2cook/stmt/include.h'\" \(1049 characters\)
sed "s/^X//" >'make2cook/stmt/include.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for include.h
X */
X
X#ifndef MAKE2COOK_STMT_INCLUDE_H
X#define MAKE2COOK_STMT_INCLUDE_H
X
X#include <stmt.h>
X#include <blob.h>
X
Xstmt_ty *stmt_include_alloc _((blob_list_ty *, int));
X
X#endif /* MAKE2COOK_STMT_INCLUDE_H */
END_OF_FILE
if test 1049 -ne `wc -c <'make2cook/stmt/include.h'`; then
    echo shar: \"'make2cook/stmt/include.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/include.h'
fi
if test -f 'make2cook/stmt/rule.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/rule.h'\"
else
echo shar: Extracting \"'make2cook/stmt/rule.h'\" \(1225 characters\)
sed "s/^X//" >'make2cook/stmt/rule.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/rule.c
X */
X
X#ifndef MAKE2COOK_STMT_RULE_H
X#define MAKE2COOK_STMT_RULE_H
X
X#include <blob.h>
X#include <stmt.h>
X
Xextern int stmt_rule_default_history;
X
Xstmt_ty *stmt_rule_alloc _((blob_list_ty *lhs, int op, blob_list_ty *rhs,
X	blob_list_ty *predicate));
Xvoid stmt_rule_append _((stmt_ty *, blob_ty *));
Xstmt_ty *stmt_rule_default _((int));
X
X#endif /* MAKE2COOK_STMT_RULE_H */
END_OF_FILE
if test 1225 -ne `wc -c <'make2cook/stmt/rule.h'`; then
    echo shar: \"'make2cook/stmt/rule.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/rule.h'
fi
if test -f 'make2cook/stmt/vpath.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/stmt/vpath.h'\"
else
echo shar: Extracting \"'make2cook/stmt/vpath.h'\" \(1135 characters\)
sed "s/^X//" >'make2cook/stmt/vpath.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/stmt/vpath.c
X */
X
X#ifndef MAKE2COOK_STMT_VPATH_H
X#define MAKE2COOK_STMT_VPATH_H
X
X#include <stmt.h>
X#include <blob.h>
X
Xvoid stmt_vpath_remember1 _((blob_list_ty *));
Xvoid stmt_vpath_remember2 _((blob_list_ty *));
Xstmt_ty	*stmt_vpath_default _((void));
X
X#endif /* MAKE2COOK_STMT_VPATH_H */
END_OF_FILE
if test 1135 -ne `wc -c <'make2cook/stmt/vpath.h'`; then
    echo shar: \"'make2cook/stmt/vpath.h'\" unpacked with wrong size!
fi
# end of 'make2cook/stmt/vpath.h'
fi
if test -f 'make2cook/variable.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'make2cook/variable.h'\"
else
echo shar: Extracting \"'make2cook/variable.h'\" \(1293 characters\)
sed "s/^X//" >'make2cook/variable.h' <<'END_OF_FILE'
X/*
X *	cook - file construction tool
X *	Copyright (C) 1994 Peter Miller.
X *	All rights reserved.
X *
X *	This program is free software; you can redistribute it and/or modify
X *	it under the terms of the GNU General Public License as published by
X *	the Free Software Foundation; either version 2 of the License, or
X *	(at your option) any later version.
X *
X *	This program is distributed in the hope that it will be useful,
X *	but WITHOUT ANY WARRANTY; without even the implied warranty of
X *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X *	GNU General Public License for more details.
X *
X *	You should have received a copy of the GNU General Public License
X *	along with this program; if not, write to the Free Software
X *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * MANIFEST: interface definition for make2cook/variable.c
X */
X
X#ifndef MAKE2COOK_VARIABLE_H
X#define MAKE2COOK_VARIABLE_H
X
X#include <blob.h>
X#include <word.h>
X
Xvoid variable_rename _((blob_ty *, blob_list_ty *, wlist *));
Xvoid variable_archive _((string_ty *target, string_ty *member));
X
X/* for use by vargram */
Xint vargram_lex _((void));
Xvoid vargram_error _((char *, ...));
Xvoid vargram_result _((string_ty *));
Xstring_ty *vargram_lookup _((string_ty *));
X
X#endif /* MAKE2COOK_VARIABLE_H */
END_OF_FILE
if test 1293 -ne `wc -c <'make2cook/variable.h'`; then
    echo shar: \"'make2cook/variable.h'\" unpacked with wrong size!
fi
# end of 'make2cook/variable.h'
fi
echo shar: End of archive 2 \(of 19\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 19 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
