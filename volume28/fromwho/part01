Newsgroups: comp.sources.unix
From: darkfox@netcom.com (Johnson Michael Earls)
Subject: v28i092: fromwho - an expanded `from' program, V1.7, Part01/02
Message-id: <1.774896492.20702@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: darkfox@netcom.com (Johnson Michael Earls)
Posting-Number: Volume 28, Issue 92
Archive-Name: fromwho/part01

	    This is a new 'from' program.  Instead of just listing who your
	mail is from, it tells you how many total messages, how many are
	new, and for each person you have mail from, tells how many messages
	they sent, how many are new, and lists the subjects of the messages.
	It supports both sendmail and MMDF-style mailboxes.

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 2)."
# Contents:  fromwho/CHANGES fromwho/INSTALL fromwho/MANIFEST
#   fromwho/Makefile.in fromwho/README fromwho/configure
#   fromwho/fromwho.man fromwho/parseargs fromwho/parseargs/Makefile
#   fromwho/parseargs/parseargs.h fromwho/strdup.c
# Wrapped by darkfox@netcom14 on Fri Jul 22 09:36:14 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'fromwho/CHANGES' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/CHANGES'\"
else
echo shar: Extracting \"'fromwho/CHANGES'\" \(1601 characters\)
sed "s/^X//" >'fromwho/CHANGES' <<'END_OF_FILE'
X--------------------------
XChanges since version 1.0:
X--------------------------
X
XRevision 1.7  1993/02/07  16:54:29  jearls
XPATCH7: Updated to use 'parseargs' command-line parsing library
XPATCH7: and added '-on' / '--nosort' option to display the mailbox
XPATCH7: messages with no sorting whatsoever, and no combining of
XPATCH7: messages from the same user (unless the messages were
XPATCH7: together in the mailbox file).
X
XRevision 1.6  1992/12/11  13:40:57  jearls
XPATCH6: added -oa, -om to specify ordering of users alphabetically
XPATCH6: or by mailbox order.  other small changes for portability.
X
XRevision 1.5  92/04/07  17:24:26  jearls
XPATCH5: Updated to use password file entry to get
XPATCH5: user name and home directory, rather than
XPATCH5: using UTMP and other fiddlingness.
X
XRevision 1.4  92/03/16  12:21:28  jearls
XPATCH4: Added support for MMDF mailboxes (I hope!)
XPATCH4: Added option to count mark unread messages as new
XPATCH4: Added option to suppress error message when mail file doesn't exist
XPATCH4: Added checking of an environment variable to find mail file
XPATCH4: Added -q flag to reverse error message suppression
XPATCH4: Added -v flag to display the version number
X
XRevision 1.3  91/12/03  11:14:15  jearls
XPATCH3: Added `-v' option to display the version number.
X
XRevision 1.2  91/11/23  12:49:40  jearls
XPATCH2: Fixed miscellanous bugs, added '-n' option to
XPATCH2: list only new mail.
X
XRevision 1.1  91/10/19  17:06:12  jearls
XPATCH1: Added support for AIX and other systems that don't
XPATCH1: use a mail spool.
X
XRevision 1.0  91/10/19  14:40:25  jearls
XInitial revision
X
END_OF_FILE
if test 1601 -ne `wc -c <'fromwho/CHANGES'`; then
    echo shar: \"'fromwho/CHANGES'\" unpacked with wrong size!
fi
# end of 'fromwho/CHANGES'
fi
if test -f 'fromwho/INSTALL' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/INSTALL'\"
else
echo shar: Extracting \"'fromwho/INSTALL'\" \(3987 characters\)
sed "s/^X//" >'fromwho/INSTALL' <<'END_OF_FILE'
XInstallation instructions for fromwho:
X
X
XUpdating the `Tweakables' section of the Makefile:
X
X  There are seven parameters in the Makefile that affect
X  the installation of fromwho:
X
X    CC          This is the C compiler you will compile
X                with.  It must be ANSI-C compliant.
X
X    CCFLAGS     What default flags to send to the C
X                compiler.  On some systems you may need
X                to add '-Dindex=strchr' to this line.
X
X    DEFAULTS    Contains zero or more of the following
X                options:
X
X                -DQUIETMBOX     Include this if you want
X                                to suppress the error
X                                message when the mailbox
X                                file doesn't exist, don't
X                                include it if you want the
X                                error message to be given.
X                                `-q' will do the opposite
X                                in any case.
X
X                -DMMDF          This uses MMDF-style mail
X                                spool files rather than
X                                sendmail-style.
X
X                -DUNREADNEW     Counts unread mail as new.
X
X    MAIL        How to find the incoming mailbox for a
X                user.  If this is left blank, then the
X                incoming mailbox will be
X
X                    /usr/spool/mail/<username>
X
X                If incoming mail is kept in a different
X                directory "/xyz/<username>", then
X                set MAIL to
X
X                    -DMAILDIR=\"/xyz/\"
X
X                If incoming mail is set up in some other
X                fashion (i.e. all mailboxes not in the
X                same directory) then set MAIL to
X
X                    -DMAILFILE=\"<mailbox>\"
X
X                where <mailbox> is the path to the mail-
X                box file.  <mailbox> may contain a ~ for
X                the user's home directory and a * for the
X                user's login name.  For example, AIX keeps
X                it's incoming mail in the file `.newmail'
X                in the user's home directory.  For this
X                setup, MAIL would be defined as
X
X                    -DMAILFILE=\"~/.newmail\"
X
X                In addition to this, you can add to MAIL
X                -DMAILVAR=\"<var>\", where <var> is the
X                name of an environment variable that
X                contains the name of the mailbox file.
X
X    STRIP       If you want the executable stripped after
X                being compiled, set this to `strip', other-
X                wise, set it to `touch'.
X
X    SECTION     The section of the manual to install as.
X                Normally either `1' (one), `l', or `n'.
X
X    BIN         The directory to install the executable in.
X
X    MAN         The directory to install the manpage in.
X               (The manpage will actaully be instaled
X                one level below this, in a directory called
X                manX, where X is the SECTION defined above)
X
X  After setting up these parameters, build the executable
X  and manpage with `make' with no parameters.
X
X  If the executable builds correctly, test it out by running
X  `make verify'.  It will run through the various test mail-
X  boxes to insure that the parameters work correctly and
X  that it is reading the mailboxes correctly.  It will also
X  create a shell script to attempt to verify that the MAIL
X  setting is correct.
X
X  When you are satisfied that it works correctly, type `make
X  info' to check that the directories are correct, and `make
X  install'.  If the directories aren't correct, modify the
X  Makefile and re-make.
X
XIf you have any problems compiling or installing fromwho,
Xmail a description of the problems encountered and a
Xdescription of the system on which you are trying to
Xinstall to:
X
X    darkfox@netcom.com
X
XBe prepared to send a script of the `make' process -- but
Xnot until I ask you for it.  :)
X
XSuggestions and comments are also welcome.
END_OF_FILE
if test 3987 -ne `wc -c <'fromwho/INSTALL'`; then
    echo shar: \"'fromwho/INSTALL'\" unpacked with wrong size!
fi
# end of 'fromwho/INSTALL'
fi
if test -f 'fromwho/MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/MANIFEST'\"
else
echo shar: Extracting \"'fromwho/MANIFEST'\" \(1207 characters\)
sed "s/^X//" >'fromwho/MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X fromwho/CHANGES            1	What changes have been made since v1.0
X fromwho/INSTALL            1	Installation help
X fromwho/MANIFEST           1	This list
X fromwho/Makefile.in        1	Template used by configure to create Makefile
X fromwho/README             1	Information about fromwho
X fromwho/configure          1	Configuration script
X fromwho/fromwho.c          2	Source for fromwho
X fromwho/fromwho.man        1	Template for man page
X fromwho/parseargs          1	The command-line argument parsing library
X fromwho/parseargs/Makefile  1	The command-line argument parsing library
X fromwho/parseargs/parseargs.c  2	The command-line argument parsing library
X fromwho/parseargs/parseargs.h  1	The command-line argument parsing library
X fromwho/parseargs/parseargs.man  2	The command-line argument parsing library
X fromwho/patchlevel.h       2	Patch level control file
X fromwho/strdup.c           1	`strdup' routine
X fromwho/test.mmdf.uu       2	Test mailbox for MMDF (uuencoded)
X fromwho/test.sendmail      2	Test mailbox for sendmail
X fromwho/verify.script      2	Template for the verification shell script
END_OF_FILE
if test 1207 -ne `wc -c <'fromwho/MANIFEST'`; then
    echo shar: \"'fromwho/MANIFEST'\" unpacked with wrong size!
fi
# end of 'fromwho/MANIFEST'
fi
if test -f 'fromwho/Makefile.in' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/Makefile.in'\"
else
echo shar: Extracting \"'fromwho/Makefile.in'\" \(2289 characters\)
sed "s/^X//" >'fromwho/Makefile.in' <<'END_OF_FILE'
X# Generated automatically from Makefile.in by configure.
X# Makefile for fromwho
X#
X# (See INSTALL file for installation instructions)
X
X#### Start of system configuration ####
X
X# Your CC must grok ANSI C
XCC =		@CC@
X
XCCFLAGS =	@DEFS@
XLIBRARIES =	@LIBS@
XEXTRAS =	@LIBOBJS@
X
XUUDECODE =	@UUDECODE@
XINSTALL =	@INSTALL@
XMKDIR =		@MKDIR@
X
Xprefix =	/usr/local
Xexec_prefix =	/usr/local
Xbinprefix =
Xmanprefix =
X
Xbindir =	$(exec_prefix)/bin
Xlibdir =	$(exec_prefix)/lib
Xdatadir =	$(prefix)/lib
Xmandir =	$(prefix)/man/man1
Xmanext =	1
X
X########### Don't change anything below this line ##########
X
XPROG =		fromwho
XOBJS =		fromwho.o $(EXTRAS)
XSRCS =		fromwho.c patchlevel.h
XMANPAGE =	$(PROG).$(manext)
XLDFLAGS =	-L.
XLIBS =		-lparseargs $(LIBRARIES)
XCFLAGS =	-Iparseargs $(CCFLAGS)
X
Xall:		$(PROG) $(MANPAGE)
X
Xlibparseargs.a:	parseargs/parseargs.c
X		(cd parseargs; make LIB=../libparseargs.a "CC=$(CC)")
X
X$(PROG):	libparseargs.a $(OBJS)
X		$(CC) $(CFLAGS) -o $(PROG) $(OBJS) $(LDFLAGS) $(LIBS)
X
X$(MANPAGE):	$(PROG).man sedscript
X		/lib/cpp -C -P $(CFLAGS) < $(PROG).man | ./sedscript > $(MANPAGE)
X
Xinfo:
X		@echo
X		@echo '`'"make install' will install $(PROG) into $(bindir)"
X		@echo "and $(MANPAGE) into $(mandir)."
X		@echo
X
Xinstall:	$(PROG) $(MANPAGE)
X		@echo "Installing $(PROG) in $(bindir)"
X		@$(MKDIR) $(bindir)
X		@$(INSTALL) $(PROG) $(bindir)/$(PROG)
X		@echo "Installing $(MANPAGE) in $(mandir)"
X		@$(MKDIR) $(mandir)
X		@$(INSTALL) $(MANPAGE) $(mandir)/$(MANPAGE)
X
Xsedscript:	Makefile
X		@rm -f sedscript
X		@echo "#!/bin/sh" > sedscript
X		@echo 'set `date`' >> sedscript
X		@echo 'DATE="$$3 $$2 $$6"' >> sedscript
X		@echo 'set '"'"'"'"'"'`grep "Revision" patchlevel.h`'"'"'"'"'" >> sedscript
X		@echo 'VERSION="$$3"' >> sedscript
X		@echo 'sed '"'"'/^$$/d'"'"' | sed "s/^X //" | sed "s/%V%/$$VERSION/g" | sed "s/%D%/$$DATE/g" | sed "s/%S%/$(SECTION)/g"' >> sedscript
X		@chmod 700 sedscript
X
Xclean:
X		rm -f *.o $(PROG).[0-9nlo] sedscript *.BAK
X		(cd parseargs; make realclean)
X
Xdistclean:	clean
X		rm -f $(PROG) Makefile config.status
X
Xcheck:		$(PROG) test.mmdf test.sendmail
X		@rm -f verify.sh
X		@/lib/cpp -C -P -DPROG=$(PROG) $(CFLAGS) < verify.script > verify.sh
X		@echo ""
X		@sh verify.sh
X		@rm -f verify.sh
X
Xtest.mmdf:	test.mmdf.uu
X		$(UUDECODE) < test.mmdf.uu > test.mmdf
X
Xfromwho.o:	fromwho.c Makefile
END_OF_FILE
if test 2289 -ne `wc -c <'fromwho/Makefile.in'`; then
    echo shar: \"'fromwho/Makefile.in'\" unpacked with wrong size!
fi
# end of 'fromwho/Makefile.in'
fi
if test -f 'fromwho/README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/README'\"
else
echo shar: Extracting \"'fromwho/README'\" \(1298 characters\)
sed "s/^X//" >'fromwho/README' <<'END_OF_FILE'
Xfromwho -- 'from' with extras
X
X    This is a new 'from' program.  Instead of just listing who your
Xmail is from, it tells you how many total messages, how many are new,
Xand for each person you have mail from, tells how many messages they
Xsent, how many are new, and lists the subjects of the messages.  It
Xsupports both sendmail and MMDF-style mailboxes.
X
X    This code is public domain.  I might keep updating it, or I might
Xforget about it ]:)  But feel free to mail comments / suggestions to me
Xat: darkfox@netcom.com
X
X  Usage:
X    fromwho [ <options>... ]
X
X  Options:
X    All fromwho options now have short and long forms.
X
X    --nolist
X    -l  Turns listing of users/subjects off.
X    --nosubject
X    -s  Turns listing of subjects off.
X    --newmail
X    -n  List only new mail
X    --alpha
X    -oa Sort the message list alphabetically by user
X    --mailbox
X    -om Sort the message list by mailbox order
X        (This still groups all messages from the same user together)
X    --nosort
X    -on Don't sort messages or combine messages from same user
X    --quiet
X    -q  Do not give an error if the mailbox doesn't exist.
X    --version
X    -v  Display the version number and exit immediately.
X    --file
X    -f  Sets the mailbox to read from.  If no mailbox is
X        given then use $HOME/mbox.
END_OF_FILE
if test 1298 -ne `wc -c <'fromwho/README'`; then
    echo shar: \"'fromwho/README'\" unpacked with wrong size!
fi
# end of 'fromwho/README'
fi
if test -f 'fromwho/configure' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/configure'\"
else
echo shar: Extracting \"'fromwho/configure'\" \(14431 characters\)
sed "s/^X//" >'fromwho/configure' <<'END_OF_FILE'
X
Xecho ""
Xecho "Checking your system configuration..."
Xecho ""
X
X#!/bin/sh
X# Guess values for system-dependent variables and create Makefiles.
X# Generated automatically using autoconf.
X# Copyright (C) 1991, 1992, 1993 Free Software Foundation, Inc.
X
X# This program is free software; you can redistribute it and/or modify
X# it under the terms of the GNU General Public License as published by
X# the Free Software Foundation; either version 2, or (at your option)
X# any later version.
X
X# This program is distributed in the hope that it will be useful,
X# but WITHOUT ANY WARRANTY; without even the implied warranty of
X# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X# GNU General Public License for more details.
X
X# You should have received a copy of the GNU General Public License
X# along with this program; if not, write to the Free Software
X# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X
X# Usage: configure [--srcdir=DIR] [--host=HOST] [--gas] [--nfp] [--no-create]
X#        [--prefix=PREFIX] [--exec-prefix=PREFIX] [--with-PACKAGE] [TARGET]
X# Ignores all args except --srcdir, --prefix, --exec-prefix, --no-create, and
X# --with-PACKAGE unless this script has special code to handle it.
X
X
Xfor arg
Xdo
X  # Handle --exec-prefix with a space before the argument.
X  if test x$next_exec_prefix = xyes; then exec_prefix=$arg; next_exec_prefix=
X  # Handle --host with a space before the argument.
X  elif test x$next_host = xyes; then next_host=
X  # Handle --prefix with a space before the argument.
X  elif test x$next_prefix = xyes; then prefix=$arg; next_prefix=
X  # Handle --srcdir with a space before the argument.
X  elif test x$next_srcdir = xyes; then srcdir=$arg; next_srcdir=
X  else
X    case $arg in
X     # For backward compatibility, also recognize exact --exec_prefix.
X     -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* | --exec=* | --exe=* | --ex=* | --e=*)
X	exec_prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
X     -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- | --exec | --exe | --ex | --e)
X	next_exec_prefix=yes ;;
X
X     -gas | --gas | --ga | --g) ;;
X
X     -host=* | --host=* | --hos=* | --ho=* | --h=*) ;;
X     -host | --host | --hos | --ho | --h)
X	next_host=yes ;;
X
X     -nfp | --nfp | --nf) ;;
X
X     -no-create | --no-create | --no-creat | --no-crea | --no-cre | --no-cr | --no-c | --no- | --no)
X        no_create=1 ;;
X
X     -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
X	prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
X     -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
X	next_prefix=yes ;;
X
X     -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=* | --s=*)
X	srcdir=`echo $arg | sed 's/[-a-z_]*=//'` ;;
X     -srcdir | --srcdir | --srcdi | --srcd | --src | --sr | --s)
X	next_srcdir=yes ;;
X
X     -with-* | --with-*)
X       package=`echo $arg|sed 's/-*with-//'`
X       # Delete all the valid chars; see if any are left.
X       if test -n "`echo $package|sed 's/[-a-zA-Z0-9_]*//g'`"; then
X         echo "configure: $package: invalid package name" >&2; exit 1
X       fi
X       eval "with_`echo $package|sed s/-/_/g`=1" ;;
X
X     -v | -verbose | --verbose | --verbos | --verbo | --verb | --ver | --ve | --v)
X       verbose=yes ;;
X
X     *) ;;
X    esac
X  fi
Xdone
X
Xtrap 'rm -f conftest* core; exit 1' 1 3 15
X
X# Needed for some versions of `tr' so that character classes in `[]' work.
Xif test "${LANG+set}" = "set" ; then
X   LANG=C
Xfi
X
Xrm -f conftest*
Xcompile='${CC-cc} $CFLAGS $DEFS conftest.c -o conftest $LIBS >/dev/null 2>&1'
X
X# A filename unique to this package, relative to the directory that
X# configure is in, which we can look for to find out if srcdir is correct.
Xunique_file=test.mmdf.uu
X
X# Find the source files, if location was not specified.
Xif test -z "$srcdir"; then
X  srcdirdefaulted=yes
X  # Try the directory containing this script, then `..'.
X  prog=$0
X  confdir=`echo $prog|sed 's%/[^/][^/]*$%%'`
X  test "X$confdir" = "X$prog" && confdir=.
X  srcdir=$confdir
X  if test ! -r $srcdir/$unique_file; then
X    srcdir=..
X  fi
Xfi
Xif test ! -r $srcdir/$unique_file; then
X  if test x$srcdirdefaulted = xyes; then
X    echo "configure: Can not find sources in \`${confdir}' or \`..'." 1>&2
X  else
X    echo "configure: Can not find sources in \`${srcdir}'." 1>&2
X  fi
X  exit 1
Xfi
X# Preserve a srcdir of `.' to avoid automounter screwups with pwd.
X# But we can't avoid them for `..', to make subdirectories work.
Xcase $srcdir in
X  .|/*|~*) ;;
X  *) srcdir=`cd $srcdir; pwd` ;; # Make relative path absolute.
Xesac
X
Xif test -z "$CC"; then
X  # Extract the first word of `gcc', so it can be a program name with args.
X  set dummy gcc; word=$2
X  echo checking for $word
X  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
X  for dir in $PATH; do
X    test -z "$dir" && dir=.
X    if test -f $dir/$word; then
X      CC="gcc"
X      break
X    fi
X  done
X  IFS="$saveifs"
Xfi
Xtest -z "$CC" && CC="cc"
Xtest -n "$CC" -a -n "$verbose" && echo "	setting CC to $CC"
X
X# Find out if we are using GNU C, under whatever name.
Xcat > conftest.c <<EOF
X#ifdef __GNUC__
X  yes
X#endif
XEOF
X${CC-cc} -E conftest.c > conftest.out 2>&1
Xif egrep yes conftest.out >/dev/null 2>&1; then
X  GCC=1 # For later tests.
Xfi
Xrm -f conftest*
X
Xecho checking how to run the C preprocessor
Xif test -z "$CPP"; then
X  CPP='${CC-cc} -E'
X  cat > conftest.c <<EOF
X#include <stdio.h>
XEOF
Xerr=`eval "($CPP \$DEFS conftest.c >/dev/null) 2>&1"`
Xif test -z "$err"; then
X  :
Xelse
X  CPP=/lib/cpp
Xfi
Xrm -f conftest*
Xfi
X
X# Make sure to not get the incompatible SysV /etc/install and
X# /usr/sbin/install, which might be in PATH before a BSD-like install,
X# or the SunOS /usr/etc/install directory, or the AIX /bin/install,
X# or the AFS install, which mishandles nonexistent args, or
X# /usr/ucb/install on SVR4, which tries to use the nonexistent group
X# `staff'.  On most BSDish systems install is in /usr/bin, not /usr/ucb
X# anyway.  Sigh.
Xif test "z${INSTALL}" = "z" ; then
X  echo checking for install
X  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
X  for dir in $PATH; do
X    test -z "$dir" && dir=.
X    case $dir in
X    /etc|/usr/sbin|/usr/etc|/usr/afsws/bin|/usr/ucb) ;;
X    *)
X      if test -f $dir/installbsd; then
X	INSTALL="$dir/installbsd -c" # OSF1
X	INSTALL_PROGRAM='$(INSTALL)'
X	INSTALL_DATA='$(INSTALL) -m 644'
X	break
X      fi
X      if test -f $dir/install; then
X	if grep dspmsg $dir/install >/dev/null 2>&1; then
X	  : # AIX
X	else
X	  INSTALL="$dir/install -c"
X	  INSTALL_PROGRAM='$(INSTALL)'
X	  INSTALL_DATA='$(INSTALL) -m 644'
X	  break
X	fi
X      fi
X      ;;
X    esac
X  done
X  IFS="$saveifs"
Xfi
XINSTALL=${INSTALL-cp}
XINSTALL_PROGRAM=${INSTALL_PROGRAM-'$(INSTALL)'}
XINSTALL_DATA=${INSTALL_DATA-'$(INSTALL)'}
X
Xecho checking for AIX
Xcat > conftest.c <<EOF
X#ifdef _AIX
X  yes
X#endif
X
XEOF
Xeval "$CPP \$DEFS conftest.c > conftest.out 2>&1"
Xif egrep "yes" conftest.out >/dev/null 2>&1; then
X  {
X
X}
X
Xfi
Xrm -f conftest*
X
X
Xecho checking for DYNIX/ptx libseq
Xcat > conftest.c <<EOF
X#if defined(_SEQUENT_)
X  yes
X#endif
X
XEOF
Xeval "$CPP \$DEFS conftest.c > conftest.out 2>&1"
Xif egrep "yes" conftest.out >/dev/null 2>&1; then
X  SEQUENT=1
Xfi
Xrm -f conftest*
X
Xtest -n "$SEQUENT" && test -f /usr/lib/libseq.a &&
X  LIBS="$LIBS -lseq"
X
Xecho checking for POSIXized ISC
Xif test -d /etc/conf/kconfig.d &&
X  grep _POSIX_VERSION /usr/include/sys/unistd.h >/dev/null 2>&1
Xthen
X  ISC=1 # If later tests want to check for ISC.
X  {
X
X}
X
X  if test -n "$GCC"; then
X    CC="$CC -posix"
X  else
X    CC="$CC -Xp"
X  fi
Xfi
X
Xecho checking for minix/config.h
Xcat > conftest.c <<EOF
X#include <minix/config.h>
XEOF
Xerr=`eval "($CPP \$DEFS conftest.c >/dev/null) 2>&1"`
Xif test -z "$err"; then
X  MINIX=1
Xfi
Xrm -f conftest*
X
X# The Minix shell can't assign to the same variable on the same line!
Xif test -n "$MINIX"; then
X  {
X
X}
X
X  {
X
X}
X
X  {
X
X}
X
Xfi
X
Xecho checking for ANSI C header files
Xcat > conftest.c <<EOF
X#include <stdlib.h>
X#include <stdarg.h>
X#include <string.h>
X#include <float.h>
XEOF
Xerr=`eval "($CPP \$DEFS conftest.c >/dev/null) 2>&1"`
Xif test -z "$err"; then
X  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
Xecho '#include <string.h>' > conftest.c
Xeval "$CPP \$DEFS conftest.c > conftest.out 2>&1"
Xif egrep "memchr" conftest.out >/dev/null 2>&1; then
X  
Xcat > conftest.c <<EOF
X#include <ctype.h>
X#define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
X#define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
X#define XOR(e,f) (((e) && !(f)) || (!(e) && (f)))
Xint main () { int i; for (i = 0; i < 256; i++)
Xif (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);
Xexit (0); }
X
XEOF
Xeval $compile
Xif test -s conftest && (./conftest; exit) 2>/dev/null; then
X  {
X
X}
X
Xfi
Xrm -f conftest*
Xfi
Xrm -f conftest*
X
Xfi
Xrm -f conftest*
X
Xecho checking for BSD string and memory functions
Xcat > conftest.c <<EOF
X#include <strings.h>
Xint main() { exit(0); }
Xint t() { rindex(0, 0); bzero(0, 0); }
XEOF
Xif eval $compile; then
X  :
Xelse
X  {
X
X}
X
Xfi
Xrm -f conftest*
X
Xecho checking for uid_t in sys/types.h
Xecho '#include <sys/types.h>' > conftest.c
Xeval "$CPP \$DEFS conftest.c > conftest.out 2>&1"
Xif egrep "uid_t" conftest.out >/dev/null 2>&1; then
X  :
Xelse
X  {
X
X}
X {
X
X}
X
Xfi
Xrm -f conftest*
X
Xfor func in strdup
Xdo
Xecho checking for ${func}
Xcat > conftest.c <<EOF
X
Xint main() { exit(0); }
Xint t() { /* The GNU C library defines this for functions which it implements
X    to always fail with ENOSYS.  Some functions are actually named
X    something starting with __ and the normal name is an alias.  */
X#if defined (__stub_${func}) || defined (__stub___${func})
Xchoke me
X#else
X/* Override any gcc2 internal prototype to avoid an error.  */
Xextern char ${func}(); ${func}();
X#endif
X }
XEOF
Xif eval $compile; then
X  :
Xelse
X  LIBOBJS="$LIBOBJS ${func}.o"
Xtest -n "$verbose" && echo "	using ${func}.o instead"
Xfi
Xrm -f conftest*
X
Xdone
X
Xecho "checking for /usr/spool/mail..."
Xtest -d /usr/spool/mail && MAILDIR="/usr/spool/mail/"
Xtest -z "$MAILDIR" && echo "checking for /usr/mail..." && test -d /usr/mail && MAILDIR="/usr/mail/"
Xtest -z "$MAILDIR" && echo "checking for $HOME/.newmail..." && test -d $HOME/.newmail && MAILFILE="~/.newmail"
Xecho "checking for \$MAIL environment variable..."
Xtest -n "$MAIL" && MAILVAR="MAIL"
Xtest -n "$MAILDIR" && {
X
X}
X
Xtest -n "$MAILFILE" && {
X
X}
X
Xtest -n "$MAILVAR" && {
X
X}
X
Xecho "checking for sendmail or MMDF..."
Xtest `((ps -x 2>&1 > /dev/null && ps -auxww | grep sendmail) || (ps -x 2>&1 > /dev/null && ps -eaf | grep sendmail)) | wc -l` -gt 1 || {
X
X}
X
Xif test -z "$UUDECODE"; then
X  # Extract the first word of `uudecode', so it can be a program name with args.
X  set dummy uudecode; word=$2
X  echo checking for $word
X  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
X  for dir in $PATH; do
X    test -z "$dir" && dir=.
X    if test -f $dir/$word; then
X      UUDECODE="$dir/uudecode"
X      break
X    fi
X  done
X  IFS="$saveifs"
Xfi
Xtest -z "$UUDECODE" && UUDECODE="echo "'"'"Can't uudecode MMDF test file; creating empty file."'"'"; touch"
Xtest -n "$UUDECODE" -a -n "$verbose" && echo "	setting UUDECODE to $UUDECODE"
X
Xtest -z "$UUDECODE" && echo "Not found, you'll have to uudecode the MMDF test file to test the MMDF fromwho."
Xif test -z "$INSTALL"; then
X  # Extract the first word of `install', so it can be a program name with args.
X  set dummy install; word=$2
X  echo checking for $word
X  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
X  for dir in $PATH; do
X    test -z "$dir" && dir=.
X    if test -f $dir/$word; then
X      INSTALL="$dir/install"
X      break
X    fi
X  done
X  IFS="$saveifs"
Xfi
Xtest -z "$INSTALL" && INSTALL="cp"
Xtest -n "$INSTALL" -a -n "$verbose" && echo "	setting INSTALL to $INSTALL"
X
Xif test -z "$MKDIR"; then
X  # Extract the first word of `install', so it can be a program name with args.
X  set dummy install; word=$2
X  echo checking for $word
X  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
X  for dir in $PATH; do
X    test -z "$dir" && dir=.
X    if test -f $dir/$word; then
X      MKDIR="install -d"
X      break
X    fi
X  done
X  IFS="$saveifs"
Xfi
Xtest -z "$MKDIR" && MKDIR="mkdir -p"
Xtest -n "$MKDIR" -a -n "$verbose" && echo "	setting MKDIR to $MKDIR"
X
Xif test -n "$prefix"; then
X  test -z "$exec_prefix" && exec_prefix='${prefix}'
X  prsub="s%^prefix\\([ 	]*\\)=\\([ 	]*\\).*$%prefix\\1=\\2$prefix%"
Xfi
Xif test -n "$exec_prefix"; then
X  prsub="$prsub
Xs%^exec_prefix\\([ 	]*\\)=\\([ 	]*\\).*$%\
Xexec_prefix\\1=\\2$exec_prefix%"
Xfi
XDEFS="`echo \"$DEFS\" | sed 's%[&\\\]%\\\&%g'`"
X
Xtrap 'rm -f config.status; exit 1' 1 3 15
Xecho creating config.status
Xrm -f config.status
Xcat > config.status <<EOF
X#!/bin/sh
X# Generated automatically by configure.
X# Run this file to recreate the current configuration.
X# This directory was configured as follows,
X# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
X#
X# $0 $*
X
Xfor arg
Xdo
X  case "\$arg" in
X    -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
X    exec /bin/sh $0 $* ;;
X    *) echo "Usage: config.status --recheck" 2>&1; exit 1 ;;
X  esac
Xdone
X
Xtrap 'rm -f Makefile; exit 1' 1 3 15
XCC='$CC'
XCPP='$CPP'
XINSTALL='$INSTALL'
XINSTALL_PROGRAM='$INSTALL_PROGRAM'
XINSTALL_DATA='$INSTALL_DATA'
XLIBOBJS='$LIBOBJS'
XUUDECODE='$UUDECODE'
XMKDIR='$MKDIR'
XLIBS='$LIBS'
Xsrcdir='$srcdir'
XDEFS='$DEFS'
Xprefix='$prefix'
Xexec_prefix='$exec_prefix'
Xprsub='$prsub'
XEOF
Xcat >> config.status <<\EOF
X
Xtop_srcdir=$srcdir
X
X# Allow make-time overrides of the generated file list.
Xtest -n "$gen_files" || gen_files="Makefile"
X
Xfor file in .. $gen_files; do if [ "x$file" != "x.." ]; then
X  srcdir=$top_srcdir
X  # Remove last slash and all that follows it.  Not all systems have dirname.
X  dir=`echo $file|sed 's%/[^/][^/]*$%%'`
X  if test "$dir" != "$file"; then
X    test "$top_srcdir" != . && srcdir=$top_srcdir/$dir
X    test ! -d $dir && mkdir $dir
X  fi
X  echo creating $file
X  rm -f $file
X  echo "# Generated automatically from `echo $file|sed 's|.*/||'`.in by configure." > $file
X  sed -e "
X$prsub
Xs%@CC@%$CC%g
Xs%@CPP@%$CPP%g
Xs%@INSTALL@%$INSTALL%g
Xs%@INSTALL_PROGRAM@%$INSTALL_PROGRAM%g
Xs%@INSTALL_DATA@%$INSTALL_DATA%g
Xs%@LIBOBJS@%$LIBOBJS%g
Xs%@UUDECODE@%$UUDECODE%g
Xs%@MKDIR@%$MKDIR%g
Xs%@LIBS@%$LIBS%g
Xs%@srcdir@%$srcdir%g
Xs%@DEFS@%$DEFS%
X" $top_srcdir/${file}.in >> $file
Xfi; done
X
Xexit 0
XEOF
Xchmod +x config.status
Xtest -n "$no_create" || ./config.status
X
Xecho ""
Xecho "Now check the generated Makefile for the C compiler & options, and"
Xecho "'make install'."
Xecho ""
END_OF_FILE
if test 14431 -ne `wc -c <'fromwho/configure'`; then
    echo shar: \"'fromwho/configure'\" unpacked with wrong size!
fi
chmod +x 'fromwho/configure'
# end of 'fromwho/configure'
fi
if test -f 'fromwho/fromwho.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/fromwho.man'\"
else
echo shar: Extracting \"'fromwho/fromwho.man'\" \(1783 characters\)
sed "s/^X//" >'fromwho/fromwho.man' <<'END_OF_FILE'
XX .\"	@(#)fromwho.%S%	%V%	created by:	Johnson Earls	%D%
XX .\"
XX .TH FROMWHO %S% "%D%"
XX .SH NAME
XX .B fromwho
XX .RB [ \-l ]
XX .RB [ \-s ]
XX .RB [ \-n ]
XX .RB [ \-q ]
XX .RB [ \-v ]
XX .RB [ \-f
XX .RI [ mailbox ]]
XX .SH DESCRIPTION
XX .LP
XX .B Fromwho
XX is a new
XX .RB ` from ' \" "'` for the stupid CPPs that complains of unterminated strings
XX utility that lists the contents of a mailbox arranged by the sender.
XX For the mailbox and for each user,
XX .B fromwho
XX reports the number of messages in the mailbox or from that user, and
XX how many of the messages are
X#ifdef UNREADNEW
XX new or unread.
X#else
XX new.
X#endif
XX For each user,
XX .B fromwho
XX then lists the subjects of each message from that user, putting a
XX .B >
XX before the messages that are
X#ifdef UNREADNEW
XX new or unread.
X#else
XX new.
X#endif
XX .SH OPTIONS
XX .TP
XX .B -l
XX Turns listing of users/subjects off.
XX .TP
XX .B -s
XX Turns listing of subjects off.
XX .TP
XX .B -n
XX List only new mail
XX .TP
XX .B -q
X#ifdef QUIETMBOX
XX Gives an error message if the mailbox does not exist.
X#else
XX Suppresses the error message if the mailbox does not exist.
X#endif
XX .TP
XX .BI -f " " \fR[ mailbox \fR]
XX Sets the mailbox to read from.  If
XX .I mailbox
XX is not specified then reads from the
XX .B mbox
XX file in your home directory.
XX .TP
XX .B -v
XX Displays the current version of
XX .BR fromwho .
XX .SH VERSION
XX This describes
XX .B fromwho
XX version %V%.  To find out what version you are running,
XX type
XX .B fromwho
XX .BR \-v .
XX .SH FILES
XX .PD 0
XX .TP 20
XX .RI /usr/spool/mail/ username
XX .TP
XX .RI /usr/mail/ username
XX .TP
XX .IR $HOME /.newmail
XX Your incoming mail spool probably looks like one of these.
XX 
XX .TP
XX .IR $HOME /mbox
XX The default mailbox for
XX .BR \-f .
XX 
XX .SH SEE ALSO
XX .BR from (1)
XX \	
XX .BR mail (1)
END_OF_FILE
if test 1783 -ne `wc -c <'fromwho/fromwho.man'`; then
    echo shar: \"'fromwho/fromwho.man'\" unpacked with wrong size!
fi
# end of 'fromwho/fromwho.man'
fi
if test ! -d 'fromwho/parseargs' ; then
    echo shar: Creating directory \"'fromwho/parseargs'\"
    mkdir 'fromwho/parseargs'
fi
if test -f 'fromwho/parseargs/Makefile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/parseargs/Makefile'\"
else
echo shar: Extracting \"'fromwho/parseargs/Makefile'\" \(910 characters\)
sed "s/^X//" >'fromwho/parseargs/Makefile' <<'END_OF_FILE'
XCC=gcc -g
XCFLAGS = $(OPT) -I. $(XCFLAGS)
XAR = ar
XRANLIB = ranlib
X
XLIB = libparseargs.a
XHDR = parseargs.h
XMANFILE = parseargs.man
XMANEXT = 3
XMANPAGE = parseargs.$(MANEXT)
X
XINCDIR = /usr/local/include
XLIBDIR = /usr/local/lib
XMANDIR = /usr/local/man
X
X# INCDIR = /home/phoenix/cscstd/ijkl/jearls/include
X# LIBDIR = /home/phoenix/cscstd/ijkl/jearls/lib
X# MANDIR = /home/phoenix/cscstd/ijkl/jearls/man
X
XMAKEDIR = install -d
XINSTALL = install
X
Xall:		library
X
Xinstall:	$(LIB)
X		$(MAKEDIR) $(LIBDIR)
X		$(INSTALL) $(LIB) $(LIBDIR)
X		$(MAKEDIR) $(INCDIR)
X		$(INSTALL) $(HDR) $(INCDIR)
X		$(MAKEDIR) $(MANDIR)/man$(MANEXT)
X		$(INSTALL) $(MANFILE) $(MANDIR)/man$(MANEXT)/$(MANPAGE)
X
Xlibrary:	$(LIB)
X
X$(LIB):		parseargs.o
X		$(AR) ru $(LIB) parseargs.o
X		$(RANLIB) $(LIB)
X
Xclean:
X		-rm -f *.o
X
Xrealclean:	clean
X		-rm -f $(LIB)
X
Xdistclean:	realclean
X		-rm -f $(LIBDIR)/$(LIB) $(INCDIR)/$(HDR) $(MANDIR)/man$(MANEXT)/$(MANPAGE)
END_OF_FILE
if test 910 -ne `wc -c <'fromwho/parseargs/Makefile'`; then
    echo shar: \"'fromwho/parseargs/Makefile'\" unpacked with wrong size!
fi
# end of 'fromwho/parseargs/Makefile'
fi
if test -f 'fromwho/parseargs/parseargs.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/parseargs/parseargs.h'\"
else
echo shar: Extracting \"'fromwho/parseargs/parseargs.h'\" \(787 characters\)
sed "s/^X//" >'fromwho/parseargs/parseargs.h' <<'END_OF_FILE'
X#ifndef __PARSEARGS_H__
X#define __PARSEARGS_H__
X
X#include <errno.h>
X#ifndef EINVAL
X#include <sys/errno.h>
X#endif
X
Xtypedef struct OptsList
X{
X  char *opt;
X  int minlen;
X  int argtype;
X  int retval;
X  char *desc;
X} OptsList;
X
Xtypedef struct OptVal
X{
X  char *opt;
X  int which;
X  union
X  {
X    char *str;
X    long num;
X    double real;
X    int bool;
X  } arg;
X} OptVal;
X
X#define OPT_NONE    0
X#define OPT_FLAG    0
X#define OPT_STRING  1
X#define OPT_NUMBER  2
X#define OPT_REAL    3
X#define OPT_BOOLEAN 4
X
X#define OPT_HELP    -1
X
X#define OPT_ARGMAX  4
X#define OPT_FUNCMIN -1
X
Xextern int pa_argc;
X
Xextern int paInit(OptsList *);
Xextern OptVal *paOpt(int, char **, OptsList *);
Xextern void paListOpts(OptsList *, int (*)(char *));
Xextern void paDoHelp(OptsList *, char *);
X
X#endif __PARSEARGS_H__
END_OF_FILE
if test 787 -ne `wc -c <'fromwho/parseargs/parseargs.h'`; then
    echo shar: \"'fromwho/parseargs/parseargs.h'\" unpacked with wrong size!
fi
# end of 'fromwho/parseargs/parseargs.h'
fi
if test -f 'fromwho/strdup.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'fromwho/strdup.c'\"
else
echo shar: Extracting \"'fromwho/strdup.c'\" \(107 characters\)
sed "s/^X//" >'fromwho/strdup.c' <<'END_OF_FILE'
Xchar *strdup(char *s)
X{
X  char *p = (char *)malloc(1+strlen(s));
X
X  if (p)
X    strcpy(p, s);
X  return p;
X}
END_OF_FILE
if test 107 -ne `wc -c <'fromwho/strdup.c'`; then
    echo shar: \"'fromwho/strdup.c'\" unpacked with wrong size!
fi
# end of 'fromwho/strdup.c'
fi
echo shar: End of archive 1 \(of 2\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked both archives.
    echo "Now cd to fromwho and run './configure' to set up the Makefile."
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
-- 
John `Addicted to VR' Earls       darkfox@netcom.com

The opinions stated above are my very own.  If you want to use
'em, they're for sale, cheap.
