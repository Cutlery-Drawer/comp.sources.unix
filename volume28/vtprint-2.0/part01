Newsgroups: comp.sources.unix
From: garrett@athena.sdsu.edu (Garrett D'Amore)
Subject: v28i071: vtprint-2.0 - utility for printing through VT100/clone "aux" port, Part01/03
Message-id: <1.772124471.27041@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: garrett@athena.sdsu.edu (Garrett D'Amore)
Posting-Number: Volume 28, Issue 71
Archive-Name: vtprint-2.0/part01

	vtprint is a program which provides printing services to printers
	attached to terminals (or emulators) from a remote UNIX host.

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 1 (of 3)."
# Contents:  ANNOUNCE CHANGELOG COMPAT COMPAT.tmpl FAQ.macros INSTALL
#   MANIFEST README WHATSNEW arglist.c arglist.h escape.c escape.h
#   install tabstrip template template.c template.h termstate.c
#   termstate.h testfile vtprintcap vtprintcap.5 vtprintcap.man
#   vtprintcap.sed vtprtoff.1 vtprtoff.man vtprtoff.sed
# Wrapped by vixie@gw.home.vix.com on Mon Jun 20 07:59:57 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'ANNOUNCE' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'ANNOUNCE'\"
else
echo shar: Extracting \"'ANNOUNCE'\" \(2588 characters\)
sed "s/^X//" >'ANNOUNCE' <<'END_OF_FILE'
X
XANNOUNCING THE OFFICIAL RELEASE OF VTPRINT 2.0!
X===============================================
X
XJune 19, 1994
X
XFinally, I have finished putting the last touches on the vtprint-2.0
Xpackage.  It is now ready for general consumption.  If you are using
Xan earlier version of vtprint, I strongly recommend you to upgrade now!
Xvtprint 2.0 is a complete rewrite from the 1.x versions.
X
Xvtprint is a program that allows users to print from a remote UNIX host
Xto a printer attached to their local terminal or emulator, which makes
Xit great for printing files at home, etc. (It only does text files, though.)
X
Xvtprint is available via anonymous ftp from ftp.sdsu.edu in the /pub/vtprint
Xdirectory.  It is also available by uuencoded e-mail by sending a request
Xto the author at <garrett@sciences.sdsu.edu>.  NOTE THAT FTP.NETCOM.COM
XIS NO LONGER THE OFFICIAL SITE FOR VTPRINT -- the files stored there are
Xlikely to old -- use ftp.sdsu.edu instead!
X
Xvtprint should be fully portable to any modern UNIX.  The only "difficult"
Xthings are likely to be a need for an ANSI C compiler and GNU gzip.  (gzip
Xis used to decompress the package, and is available from prep.ai.mit.edu
Xvia anonymous ftp in the /pub/gnu directory.)
X
XAttached below is the WHATSNEW file for those of you already using
Xvtprint:
X
X=======> cut here <========
XWhat's new in vtprint 2.0 from 1.x?
X
Xvtprint-2.0 represents a *complete* rewrite of vtprint.  I decided to change
Xsomewhat the design philosophy, deeming portability to non-UNIX systems to
Xbe really worthless.  Hence, this is probably only compilable on UNIX  or
XUNIX-clone systems.  Also, I moved to the "getopt()" facility which
Xsimplified some of the option parsing code.
X
XHere's a list of some of the "user-visible" additions to vtprint:
X
X    1) support for any *terminal* with printer control codes via
X       an external library file (see vtprintcap(5).)
X
X    2) support for CR/LF handling directly
X
X    3) support for output to *any* device file via the command line.
X
X    4) support for "session defaults" via an environmental variable
X       which can hold command-line options.
X
X    5) optional "binary" mode, overriding CR/LF translations (can only
X       be used on terminal devices).
X
X    6) probably other things I can't think of now.
X
X=================================================================
XGarrett D'Amore                 |     garrett@sciences.sdsu.edu
XStudent Programmer/Analyst      |     SDSU College of Sciences
XSDSU Computer Science Major     |     Physics Bldg., Room 238
X=================================================================
END_OF_FILE
if test 2588 -ne `wc -c <'ANNOUNCE'`; then
    echo shar: \"'ANNOUNCE'\" unpacked with wrong size!
fi
# end of 'ANNOUNCE'
fi
if test -f 'CHANGELOG' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'CHANGELOG'\"
else
echo shar: Extracting \"'CHANGELOG'\" \(1756 characters\)
sed "s/^X//" >'CHANGELOG' <<'END_OF_FILE'
XCHANGELOG
X=========
X
XThe following changes to vtprint have been made:
X
X2.0gamma2 -> 2.0
X
XFixed:   -h option now provides complete list of available options
XFixed:   Bogus [filename...] in vtprtoff.1 SYNOPSIS removed
XAdded:   Section about binary files to vtprint.1 in CAVEATS chapter
XChanged: man pages are now formatted with groff to fix bug in Sun man package
XChanged: FAQ is now nicely formatted, more complete, and is available in
X         either ASCII or PostScript.  (MS macro source is provided.)
X
X2.0gamma  -> 2.0gamma2:
X
XFixed:   Major Makefile fixes (thanks to dolittle@math.toronto.edu)
XFixed:   Extra "newline" bug in vtprintcap codes (thanks goes to
X         dolittle@math.toronto.edu for spotting the bug)
XFixed:   Backwards -E and -e options (thanks again to dolittle@math.toronto.edu
X         for leading me to the bug)
XFixed:   Unused variable warnings in escape.c
XFixed:   Mixed up -n and -c options
XFixed:   Various typos in man pages (thanks to tli@ucssun1.sdsu.edu and 
X         dolittle@math.toronto.edu)
XAdded:   WHATSNEW
XAdded:   CHANGELOG
XAdded:   install (modified from X11R5/GNU Autoconf) for systems without a 
X         working install program (SYSV).
XAdded:   tabstrip shell script (strips tabs from file using expand -4)
XChanged: Format of COMPAT and COMPAT.tmpl entries
XChanged: vtprint man page (CAVEATS section) to reflect hardware handshaking
X         caveat
XChanged: Updated FAQ with new information.  (This is really a "proto-FAQ".)
X
X2.0beta   -> 2.0gamma:
X
XFixed:   Makefile fleshed out/some fixes
XAdded:   Documentation fleshed out (vtprintcap & vtprtoff man pages)
XChanged: FAQ includes new comments/fixes
X
X1.x       -> 2.0beta:
X
XChanged: Everything, compelete rewrite.  See WHATSNEW and README for
X         details.
END_OF_FILE
if test 1756 -ne `wc -c <'CHANGELOG'`; then
    echo shar: \"'CHANGELOG'\" unpacked with wrong size!
fi
# end of 'CHANGELOG'
fi
if test -f 'COMPAT' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'COMPAT'\"
else
echo shar: Extracting \"'COMPAT'\" \(3206 characters\)
sed "s/^X//" >'COMPAT' <<'END_OF_FILE'
XCompatibility File for vtprint v2.0
X===================================
X
XPlease see the file "COMPAT.tmpl" for information regarding
Xtesting and submitting compatibility information.  If your system
Xisn't represented here, I want to know about it!
X
X----------------------------------------------------------------------------
Xsuccess [y/n]       : yes
Xformfeed [y/n]      : yes
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt100
Xterminal_platform   : MS-DOS
Xterminal_media      : modem
Xterminal_sw         : COMit!
Xterminal_sw_version : ??
Xterminal_notes      : Poor use of "/" key for command functions make
X                    : it an extremely bad choice for UNIX users.
X----------------------------------------------------------------------------
Xsuccess [y/n]       : yes
Xformfeed [y/n]      : no
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt102
Xterminal_platform   : MS-DOS
Xterminal_media      : modem
Xterminal_sw         : Telemate
Xterminal_sw_version : 4.12
Xterminal_notes      : This is what the author of "vtprint" uses!
X----------------------------------------------------------------------------
Xsuccess [y/n]       : yes
Xformfeed [y/n]      : yes
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt100
Xterminal_platform   : MS-Windows
Xterminal_media      : modem
Xterminal_sw         : Terminal
Xterminal_sw_version : 3.1
Xterminal_notes      : 
X----------------------------------------------------------------------------
Xsuccess [y/n]       : yes
Xformfeed [y/n]      : yes
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt100
Xterminal_platform   : UNIX & X11R5
Xterminal_media      : ethernet/modem
Xterminal_sw         : rxvt
Xterminal_sw_version : 1.63+
Xterminal_notes      : By default sends data to "lpr", but this can be
X                    : changed by an undocumented X resource.
X----------------------------------------------------------------------------
Xsuccess [y/n]       : yes
Xformfeed [y/n]      : yes
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt102
Xterminal_platform   : MS-DOS
Xterminal_media      : modem
Xterminal_sw         : Quick Link II Fax
Xterminal_sw_version : 2.2.2
Xterminal_notes      : Prints correctly, but outputs newlines and formfeeds
X                    : on the screen as well as the printer.
X----------------------------------------------------------------------------
Xsuccess [y/n]       : no
Xformfeed [y/n]      : no
Xreported_by         : Garrett D'Amore
Xreported_by_email   : garrett@sciences.sdsu.edu
X
Xterminal_type       : vt100/vt102
Xterminal_platform   : MS-Windows
Xterminal_media      : modem
Xterminal_sw         : Quick Link II Fax
Xterminal_sw_version : 1.3
Xterminal_notes      : Doesn't work, and has some of the worst VT10x emulation
X                    : the author has seen to date!  Not recommended for use
X                    : except FAX transmissions!
X----------------------------------------------------------------------------
END_OF_FILE
if test 3206 -ne `wc -c <'COMPAT'`; then
    echo shar: \"'COMPAT'\" unpacked with wrong size!
fi
# end of 'COMPAT'
fi
if test -f 'COMPAT.tmpl' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'COMPAT.tmpl'\"
else
echo shar: Extracting \"'COMPAT.tmpl'\" \(2207 characters\)
sed "s/^X//" >'COMPAT.tmpl' <<'END_OF_FILE'
XCOMPAT.tmpl
X===========
X
XThis is a template for compatibility submissions for vtprint.  If you
Xhave hardware or software that isn't represented in the "COMPAT" file,
Xthen I'd *really love* to hear about what your set up is, and what level
Xof success you have had with it!
X
XIf you have compiled vtprint, you can test it by doing "vtprint testfile"
Xin the source directory, or doing "make test".
X
XThe following is a description of fields used in a COMPAT entry.  You
Xwill find a blank COMPAT entry to fill out at the end of this file.  If
Xyou would like to see an example entry, take a look at the "COMPAT"
Xfile included.
X
X----------------------------------------------------------------------------
Xsuccess [y/n]       : whether or not vtprint works for you
Xformfeed [y/n]      : do formfeeds work for you?
Xreported_by         : the name of the person reporting this
Xreported_by_email   : e-mail address of same person, if available
Xcredit [y/n]        : whether or not I can include that name along with
X                      the entry so people with similiar set-ups can
X                      ask for advice if they have difficulty. (This field
X                      isn't included in the distributed COMPAT  file.)
X
Xterminal_type       : the type of terminal or emulation used (e.g. "vt100")
Xterminal_platform   : the emulator platform being used, or "true" if the
X                      terminal is the genuine article.
Xterminal_media      : type of communications, eg "serial", "modem", "ethernet"
Xterminal_sw         : name of emulation software being used, e.g. "Telemate"
Xterminal_sw_version : version information of emulator, e.g. "4.12"
Xterminal_notes      : any notes you'd think others would benefit by
X----------------------------------------------------------------------------
X
X===> cut here <===
X----------------------------------------------------------------------------
Xsuccess [y/n]       :
Xformfeed [y/n]      :
Xreported_by         :
Xreported_by_email   :
Xcredit [y/n]        :
X
Xterminal_type       :
Xterminal_platform   :
Xterminal_media      :
Xterminal_sw         :
Xterminal_sw_version :
Xterminal_notes      :
X----------------------------------------------------------------------------
END_OF_FILE
if test 2207 -ne `wc -c <'COMPAT.tmpl'`; then
    echo shar: \"'COMPAT.tmpl'\" unpacked with wrong size!
fi
# end of 'COMPAT.tmpl'
fi
if test -f 'FAQ.macros' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'FAQ.macros'\"
else
echo shar: Extracting \"'FAQ.macros'\" \(1436 characters\)
sed "s/^X//" >'FAQ.macros' <<'END_OF_FILE'
X.de FQT
X.pn 1
X.P1
X.pg@begin 1 i
X.bp
X.CD
X.ft B
XTable of Contents
X.DE
X..
X.de FQ
X.nr FS \\$1
X.if !\\n(.$ .nr FS 1
X.if !\\n[FS] .nr FS 1
X.nr F\\n(FS +1
X.if !\\n(FS-4 .nr F5 0
X.if !\\n(FS-3 .nr F4 0
X.if !\\n(FS-2 .nr F3 0
X.if !\\n(FS-1 .nr F2 0
X.if !\\$1 .if \\n(.$ .nr F1 1
X.if '\\$1'S' \{\
X.   nr FS \\n(.$-1
X.   nr F1 \\$2
X.   nr F2 \\$3
X.   nr F3 \\$4
X.   nr F4 \\$5
X.   nr F5 \\$6
X.\}
X.ds SN \\n(F1.
X.if \\n(FS-1 .as SN \\n(F2.
X.if \\n(FS-2 .as SN \\n(F3.
X.if \\n(FS-3 .as SN \\n(F4.
X.if \\n(FS-4 .as SN \\n(F5.
X.nr SI 5
X.if \\n(FS-1 .nr SI 10
X.if \\n(FS-2 .nr SI 15
X.if \\n(FS-3 .nr SI 20
X.if \\n(FS-4 .nr SI 25
X.ie '\\n(FS'1' \{\
X.   am FQT
X.sp
X.IP \\*(SN \\n(SI
X.B
X\\..
X.\}
X.el \{\
X.am FQT
X.IP \\*(SN \\n(SI
X\\..
X.\}
X..
X.de QH
X.FQ \\$1
X.am FQT
X\\$2
X.PP
X\\..
X.br
X.ds SN
X.nr QS \\$1
X.if !\\n(.$ .nr QS 1
X.if !\\n[QS] .nr QS 1
X.nr Q\\n(QS +1
X.if !\\n(QS-4 .nr Q5 0
X.if !\\n(QS-3 .nr Q4 0
X.if !\\n(QS-2 .nr Q3 0
X.if !\\n(QS-1 .nr Q2 0
X.if !\\$1 .if \\n(.$ .nr Q1 1
X.if '\\$1'S' \{\
X.   nr QS \\n(.$-1
X.   nr Q1 \\$2
X.   nr Q2 \\$3
X.   nr Q3 \\$4
X.   nr Q4 \\$5
X.   nr Q5 \\$6
X.\}
X.ds SN \\n(Q1.
X.if \\n(QS-1 .as SN \\n(Q2.
X.if \\n(QS-2 .as SN \\n(Q3.
X.if \\n(QS-3 .as SN \\n(Q4.
X.if \\n(QS-4 .as SN \\n(Q5.
X.nr SI 5
X.if \\n(QS-1 .nr SI 10
X.if \\n(QS-2 .nr SI 15
X.if \\n(QS-3 .nr SI 20
X.if \\n(QS-4 .nr SI 25
X.ie '\\n(QS'1' \{\
X.sp
X.sp
X.LG
X.LG
X.IP \fB\\*(SN 
X\fB\\$2\fR
X.SM
X.SM
X.PP
X.sp
X.\}
X.el \{\
X.sp
X.IP \\*(SN
X\\$2
X.sp
X.PP
X.\}
X.IP
X..
X
END_OF_FILE
if test 1436 -ne `wc -c <'FAQ.macros'`; then
    echo shar: \"'FAQ.macros'\" unpacked with wrong size!
fi
# end of 'FAQ.macros'
fi
if test -f 'INSTALL' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'INSTALL'\"
else
echo shar: Extracting \"'INSTALL'\" \(3002 characters\)
sed "s/^X//" >'INSTALL' <<'END_OF_FILE'
XINSTALL --  Installation directions for vtprint 2.0
X=======
X
XI. What you need
X
X    * an ANSI C compiler (vtprint won't compile without an ANSI C
X      compiler, but "unprotoize" might solve this)
X
X    * UNIX or similiar system with one of termios, termio, or sgtty
X
X    * about 10 minutes of your time to install vtprint
X
X
XII. Before you compile
X
X    * First, you'll need to edit the Makefile.  There are a number
X      options, but you'll probably only want/need to change a few of
X      them.
X
X    * If your system uses something other than /dev/tty as the tty
X      device, change DEVTTY and SEDDEVTTY.  (SED* defines are used
X      only in building the man pages.)
X
X    * If you want to place the vtprintcap file somewhere other than
X      /usr/local/lib/vtprint/vtprintcap, please change the LIBFILE
X      and SEDLIBFILE defines.
X
X    * If you are installing vtprint for a whole system (you are the
X      sysadmin), please check/edit the *_DIR destination directories
X      and OWNER and GROUP defines (for file ownership).
X
X    * If you are an ordinary user and want to install a *private* copy
X      of vtprint, please check/edit the USR_* destination directories.
X
X    * Check the CFLAGS and compiler section.  If your system is old and
X      doesn't support POSIX termios, please either define SYSV_TERMIO
X      or SGTTY in the CFLAGS.  (Depending on which your system has!)
X
X    * If you wish to rebuild the man pages, please verify that the 
X      commands given in MAN_* will produce correct output.
X
XIII. Compiling vtprint
X
X    * If you run "make", a vtprint binary should be created.  (Some
X      systems make get warning messages, those are probably normal.)
X
X    * If you run "make test" from a station you think should/will work
X      with vtprint, a test file should be printed.  Please read 
X      "testfile" about this.
X
XIV. Installing vtprint
X
X    * If the above step worked, either do "make install" as "root", or
X      do "make userinstall" to install a private copy of vtprint.
X
X    * If you wish to rebuild man pages, you may attempt to do so by
X      doing "make man".  (You need 'roff and sed to do this!)
X
X    * Install the man pages by doing "make install.man" or
X      "make userinstall.man"
X
X    * Add any definitions you need to the "vtprintcap" file (forward
X      your changes to garrett@sciences.sdsu.edu).
X
X    * Read the man pages for vtprint, vtprintcap, and vtprtoff.
X
X    * Use vtprint!
X
X    * Write to "garrett@sciences.sdsu.edu" letting him now how it
X      works!  You should fill out an entry for the COMPAT file using
X      the template COMPAT.templ if your configuration doesn't already
X      appear in the COMPAT file.
X
X    * Enjoy!
X
X=================================================================
XGarrett D'Amore                 |     garrett@sciences.sdsu.edu
XStudent Programmer/Analyst      |     SDSU College of Sciences
XSDSU Computer Science Major     |     Physics Bldg., Room 238
X=================================================================
END_OF_FILE
if test 3002 -ne `wc -c <'INSTALL'`; then
    echo shar: \"'INSTALL'\" unpacked with wrong size!
fi
# end of 'INSTALL'
fi
if test -f 'MANIFEST' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'MANIFEST'\"
else
echo shar: Extracting \"'MANIFEST'\" \(1323 characters\)
sed "s/^X//" >'MANIFEST' <<'END_OF_FILE'
X   File Name		Archive #	Description
X-----------------------------------------------------------
X ANNOUNCE                   1	
X CHANGELOG                  1	
X COMPAT                     1	
X COMPAT.tmpl                1	
X FAQ                        2	
X FAQ.macros                 1	
X FAQ.ms                     2	
X FAQ.ps                     3	
X INSTALL                    1	
X MANIFEST                   1	This shipping list
X Makefile                   2	
X README                     1	
X WHATSNEW                   1	
X arglist.c                  1	
X arglist.h                  1	
X escape.c                   1	
X escape.h                   1	
X install                    1	
X tabstrip                   1	
X template                   1	
X template.c                 1	
X template.h                 1	
X termstate.c                1	
X termstate.h                1	
X testfile                   1	
X vtprint.1                  2	
X vtprint.c                  3	
X vtprint.man                2	
X vtprint.ps                 3	
X vtprint.sed                2	
X vtprintcap                 1	
X vtprintcap.5               1	
X vtprintcap.man             1	
X vtprintcap.ps              2	
X vtprintcap.sed             1	
X vtprtoff.1                 1	
X vtprtoff.man               1	
X vtprtoff.ps                2	
X vtprtoff.sed               1	
END_OF_FILE
if test 1323 -ne `wc -c <'MANIFEST'`; then
    echo shar: \"'MANIFEST'\" unpacked with wrong size!
fi
# end of 'MANIFEST'
fi
if test -f 'README' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(1016 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
XVTPRINT 2.0 
X-----------
X
XWelcome to vtprint 2.0!
X
XIf you have already installed a previous version of vtprint, installing
Xthis version is almost the same.  
X
XThere is a file "INSTALL" which should be read, as it describe step-by-
Xstep how to install vtprint, either as an ordinary user or as a sysadmin.
XThere is also a FAQ in case you get stuck.  Read it before asking me, since
Xmost questions should be answered there.
X
XYou should read the Makefile over, and make sure you are happy with the
Xdestination directories, file ownerships, etc.
X
XAfter you have compiled vtprint, you can test it by doing "make test".
XRead "testfile" if you don't get an obvious result!
X
X        -- Garrett D'Amore
X
X=================================================================
XGarrett D'Amore                 |     garrett@sciences.sdsu.edu
XStudent Programmer/Analyst      |     SDSU College of Sciences
XSDSU Computer Science Major     |     Physics Bldg., Room 238
X=================================================================
END_OF_FILE
if test 1016 -ne `wc -c <'README'`; then
    echo shar: \"'README'\" unpacked with wrong size!
fi
# end of 'README'
fi
if test -f 'WHATSNEW' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'WHATSNEW'\"
else
echo shar: Extracting \"'WHATSNEW'\" \(1271 characters\)
sed "s/^X//" >'WHATSNEW' <<'END_OF_FILE'
XWhat's new in vtprint 2.0 from 1.x?
X
Xvtprint-2.0 represents a *complete* rewrite of vtprint.  I decided to change
Xsomewhat the design philosophy, deeming portability to non-UNIX systems to
Xbe really worthless.  Hence, this is probably only compilable on UNIX  or
XUNIX-clone systems.  Also, I moved to the "getopt()" facility which
Xsimplified some of the option parsing code.
X
XHere's a list of some of the "user-visible" additions to vtprint:
X
X    1) support for any *terminal* with printer control codes via
X       an external library file (see vtprintcap(5).)
X
X    2) support for CR/LF handling directly
X
X    3) support for output to *any* device file via the command line.
X
X    4) support for "session defaults" via an environmental variable
X       which can hold command-line options.
X
X    5) optional "binary" mode, overriding CR/LF translations (can only
X       be used on terminal devices).
X
X    6) probably other things I can't think of now.
X
X=================================================================
XGarrett D'Amore                 |     garrett@sciences.sdsu.edu
XStudent Programmer/Analyst      |     SDSU College of Sciences
XSDSU Computer Science Major     |     Physics Bldg., Room 238
X=================================================================
END_OF_FILE
if test 1271 -ne `wc -c <'WHATSNEW'`; then
    echo shar: \"'WHATSNEW'\" unpacked with wrong size!
fi
# end of 'WHATSNEW'
fi
if test -f 'arglist.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'arglist.c'\"
else
echo shar: Extracting \"'arglist.c'\" \(5261 characters\)
sed "s/^X//" >'arglist.c' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** arglist.c       Argument list functions                              **
X ** =========                                                            **
X **                                                                      **
X ** Purpose:        Simplifies handling of argument lists that may       **
X **                 appear in argv, and environment variable, or else-   **
X **                 where.                                               **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     None.                                                **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 2, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X#include <stdio.h>
X#include <stdlib.h>
X#include <errno.h>
X#include <string.h>
X
X#include "arglist.h"
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X/***************************************
X *
X *  string2arglist  Convert a string to an arglist.
X *
X *  Purpose         Used to split a string up into an
X *                  argv-like arglist.
X *
X *  Parameters      string:     the string to convert from
X *                  args:       pointer to struct to hold result
X *
X *  Returns         zero on success,
X *                  non-zero on error (ENOMEM).
X *
X */
X
Xint string2arglist (char *string, arglist *args)
X{
X    char *st;
X
X    /* clear the arglist to a clean state */
X    if (args->argv) free (args->argv);
X    args->argc = 1;
X    args->alloc = 0;
X
X    st = string;
X
X    while (1)
X    {
X        /* resize array if necessary */
X        if (args->argc >= args->alloc)
X        {
X            if (!(args->argv))
X                args->argv = (char **) malloc (ARGLISTINC * sizeof (char *));
X            else
X                args->argv = (char **) realloc (args->argv,
X                    (args->alloc + ARGLISTINC) * sizeof (char *));
X            if (args->argv == NULL) return (ENOMEM);
X            args->alloc += ARGLISTINC;
X        }
X
X        /* get string and set it up, exit loop if not found */
X        if (!(args->argv [args->argc] = strtok (st, "\t "))) break;
X
X        /* needed for additional calls to strtok */
X        st = NULL;
X
X        args->argc++;
X    }
X    return 0;
X}
X
X/***************************************
X *
X *  argv2arglist    Fill an arglist from argv array.
X *
X *  Purpose         Converts argv[] array to arglist structure.
X *
X *  Parameters      argc:       number of entries in argv[]
X *                  argv:       argv argument to main()
X *
X *  Returns         zero on success,
X *                  nonzero on error (ENOMEM).
X *
X */
X
Xint argv2arglist (int argc, char *argv[], arglist *args)
X{
X    int i;
X
X    /* clear any old memory */
X    if (args->argv) free (args->argv);
X
X    args->argv = (char **) malloc ((argc + 1) * sizeof (char *));
X    if (!args->argv) return (ENOMEM);
X    
X    args->alloc = argc;
X    
X    for (i = 0; i < argc; i++)
X    {
X        args->argv[i+1] = argv[i+1];
X    }
X    args->argc = argc;
X
X    return 0;
X}
X
END_OF_FILE
if test 5261 -ne `wc -c <'arglist.c'`; then
    echo shar: \"'arglist.c'\" unpacked with wrong size!
fi
# end of 'arglist.c'
fi
if test -f 'arglist.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'arglist.h'\"
else
echo shar: Extracting \"'arglist.h'\" \(4442 characters\)
sed "s/^X//" >'arglist.h' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** arglist.h       Argument list functions                              **
X ** =========                                                            **
X **                                                                      **
X ** Purpose:        Simplifies handling of argument lists that may       **
X **                 appear in argv, and environment variable, or else-   **
X **                 where.                                               **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     None.                                                **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 2, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X#ifndef ARGLIST_H
X#define ARGLIST_H
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X/* >>>>>>>>>> Defines <<<<<<<<<< */
X
X#define ARGLISTINC  (40)
X
X/* >>>>>>>>>> Types <<<<<<<<<< */
X
Xtypedef struct alist    /* The actual argument list */
X{
X    int     alloc;      /* amount of memory allocated to an arglist */
X    int     argc;       /* analogous to the global argc */
X    char    **argv;     /* analogous to the global argv[] */
X} arglist;
X
X/* >>>>>>>>>> Variables <<<<<<<<<< */
X
X/* >>>>>>>>>> Prototypes <<<<<<<<<< */
X
X/***************************************
X *
X *  string2arglist  Convert a string to an arglist.
X *
X *  Purpose         Used to split a string up into an
X *                  argv-like arglist.
X *
X *  Parameters      string:     the string to convert from
X *                  args:       pointer to struct to hold result
X *
X *  Returns         zero on success,
X *                  non-zero on error (ENOMEM).
X *
X */
X
Xint string2arglist (char *string, arglist *args);
X
X/***************************************
X *
X *  argv2arglist    Fill an arglist from argv array.
X *
X *  Purpose         Converts argv[] array to arglist structure.
X *
X *  Parameters      argc:       number of entries in argv[]
X *                  argv:       argv argument to main()
X *
X *  Returns         zero on success,
X *                  nonzero on error (ENOMEM).
X *
X */
X
Xint argv2arglist (int argc, char *argv[], arglist *args);
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X#endif /* ARGLIST_H */
END_OF_FILE
if test 4442 -ne `wc -c <'arglist.h'`; then
    echo shar: \"'arglist.h'\" unpacked with wrong size!
fi
# end of 'arglist.h'
fi
if test -f 'escape.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'escape.c'\"
else
echo shar: Extracting \"'escape.c'\" \(5840 characters\)
sed "s/^X//" >'escape.c' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** escape.c        Routine for performing escape code string expansion. **
X ** ========                                                             **
X **                                                                      **
X ** Purpose:        Expand strings with C style escapes in them.         **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     Kernighan & Ritchie, "The C Programming Language"    **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 4, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X#include <ctype.h>
X#include <stdlib.h>
X#include <stdio.h>
X
X#include "escape.h"
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X/***************************************
X *
X *  escape          Convert a C style format string to actual value.
X *
X *  Purpose         Provides a mechanism for expanding C-style escape
X *                  codes in a string.
X *
X *  Parameters      source:     String to expand.
X *
X *  Returns         pointer to converted string on success,
X *                  NULL on (parse) error.
X *
X */
X
Xchar *escape (char *source)
X{
X    char    *dest;
X    char    *probe;
X    long    l;
X
X    if (!source) return NULL;
X    dest = source;
X
X    for (probe = source; *probe; probe++)
X    {
X        /* skip bare double quotes, used as delimiters */
X        if (*probe == '\"') continue;
X
X        if (*probe != '\\') 
X        {
X            *dest = *probe;
X            dest++;
X            continue;
X        }
X
X        probe++;    /* assume we are escaped now! */
X        switch (*probe)
X        {
X            case 'a'    : { *dest = '\x07'; dest++; break; }
X            case 'b'    : { *dest = '\x08'; dest++; break; }
X            case 'f'    : { *dest = '\x0C'; dest++; break; }
X            case 'n'    : { *dest = '\x0A'; dest++; break; }
X            case 'r'    : { *dest = '\x0D'; dest++; break; }
X            case 't'    : { *dest = '\x09'; dest++; break; }
X            case 'v'    : { *dest = '\x0B'; dest++; break; }
X            case '\\'   : 
X            case '\''   : 
X            case '\"'   : 
X            case '\?'   : { *dest = *probe; dest++; break; }
X            case '0'    : {
X                            l = strtol (probe, &probe, 8);
X                            *dest = (char) l;
X                            dest++;
X                            probe--;
X                            break;
X                          }
X            case '1'    :
X            case '2'    :
X            case '3'    :
X            case '4'    :
X            case '5'    :
X            case '6'    :
X            case '7'    :
X            case '8'    :
X            case '9'    : {
X                            l = strtol (probe, &probe, 10);
X                            *dest = (char) l;
X                            dest++;
X                            probe--;
X                            break;
X                          }
X            case 'X'    :
X            case 'x'    : {
X                            /* check for valid character */
X                            if ((!isdigit(probe[1])) && 
X                                ((toupper (probe[1]) > 'F') ||
X                                (toupper (probe [1]) < 'A')))
X                            return NULL;
X                            l = strtol (probe, &probe, 16);
X                            *dest = (char) l;
X                            dest++;
X                            probe--;
X                            break;
X                          }
X            default     : return NULL;
X        }
X    }
X    *dest = '\0';
X    return (source);
X}
END_OF_FILE
if test 5840 -ne `wc -c <'escape.c'`; then
    echo shar: \"'escape.c'\" unpacked with wrong size!
fi
# end of 'escape.c'
fi
if test -f 'escape.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'escape.h'\"
else
echo shar: Extracting \"'escape.h'\" \(3333 characters\)
sed "s/^X//" >'escape.h' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** escape.h        Routine for performing escape code string expansion. **
X ** ========                                                             **
X **                                                                      **
X ** Purpose:        Expand strings with C style escapes in them.         **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     Kernighan & Ritchie, "The C Programming Language"    **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 4, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X#ifndef ESCAPE_H
X#define ESCAPE_H
X
X/* >>>>>>>>>> Prototypes <<<<<<<<<< */
X
X/***************************************
X *
X *  escape          Convert a C style format string to actual value.
X *
X *  Purpose         Provides a mechanism for expanding C-style escape
X *                  codes in a string.
X *
X *  Parameters      source:     String to expand.
X *
X *  Returns         pointer to converted string on success,
X *                  NULL on (parse) error.
X *
X */
X
Xchar *escape (char *source);
X
X#endif /* ESCAPE_H */
END_OF_FILE
if test 3333 -ne `wc -c <'escape.h'`; then
    echo shar: \"'escape.h'\" unpacked with wrong size!
fi
# end of 'escape.h'
fi
if test -f 'install' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'install'\"
else
echo shar: Extracting \"'install'\" \(2725 characters\)
sed "s/^X//" >'install' <<'END_OF_FILE'
X#!/bin/sh
X
X#
X# install - install a program, script, link, or datafile
X# This comes from X11R5; it is not part of GNU.
X#
X# Modified 6/13/94 by Garrett D'Amore to handle -l and -d options
X# for directories and links, respectively.
X#
X# $XConsortium: install.sh,v 1.2 89/12/18 14:47:22 jim Exp $
X#
X# This script is compatible with the BSD install script, but was written
X# from scratch.
X#
X
X
X# set DOITPROG to echo to test this script
X
X# Don't use :- since 4.3BSD and earlier shells don't like it.
Xdoit="${DOITPROG-}"
X
X
X# put in absolute paths if you don't have them in your path; or use env. vars.
X
Xmdprog="${MDPROG-mkdir}"
Xlnprog="${LNPROG-ln}"
Xmvprog="${MVPROG-mv}"
Xcpprog="${CPPROG-cp}"
Xchmodprog="${CHMODPROG-chmod}"
Xchownprog="${CHOWNPROG-chown}"
Xchgrpprog="${CHGRPPROG-chgrp}"
Xstripprog="${STRIPPROG-strip}"
Xrmprog="${RMPROG-rm}"
X
Xinstcmd="$mvprog"
Xmdcmd=""
Xlncmd=""
Xchmodcmd=""
Xchowncmd=""
Xchgrpcmd=""
Xstripcmd=""
Xrmcmd="$rmprog -f"
Xmvcmd="$mvprog"
Xsrc=""
Xdst=""
X
Xwhile [ x"$1" != x ]; do
X    case $1 in
X	-l) instcmd=""
X		mdcmd=""
X		lncmd="$lnprog"
X		shift
X		continue;;
X
X	-d) instcmd=""
X		lncmd=""
X		mdcmd="$mdprog -p"
X		shift
X		continue;;
X
X	-c) instcmd="$cpprog"
X	    shift
X	    continue;;
X
X	-m) chmodcmd="$chmodprog $2"
X	    shift
X	    shift
X	    continue;;
X
X	-o) chowncmd="$chownprog $2"
X	    shift
X	    shift
X	    continue;;
X
X	-g) chgrpcmd="$chgrpprog $2"
X	    shift
X	    shift
X	    continue;;
X
X	-s) stripcmd="$stripprog"
X	    shift
X	    continue;;
X
X	*)  if [ x"$src" = x ]
X	    then
X		src=$1
X	    else
X		dst=$1
X	    fi
X	    shift
X	    continue;;
X    esac
Xdone
X
Xif [ x"$src" = x ]
Xthen
X	echo "install:  no input file specified"
X	exit 1
Xfi
X
Xif [ x"$dst" = x ]
Xthen
Xif [ x"$mdcmd" = x ]
Xthen
X	echo "install:  no destination specified"
X	exit 1
Xfi
Xfi
X
X
X# If destination is a directory, append the input filename; if your system
X# does not like double slashes in filenames, you may need to add some logic
X
Xif [ -d "$dst" ]
Xthen
X	dst="$dst"/`basename $src`
Xfi
X
X# Make a temp file name in the proper directory.
X
Xdstdir=`dirname $dst`
Xdsttmp=$dstdir/#inst.$$#
X
X# Move or copy the file name to the temp name
X
Xif   [ x"$instcmd" != x ]; then $doit $instcmd $src $dsttmp; 
Xelif [ x"$mdcmd" != x ];   then $doit $mdcmd $src; dsttmp=$src;
Xelif [ x"$lncmd" != x ];   then $doit $lncmd $src $dsttmp;
Xfi
X
X# and set any options; do chmod last to preserve setuid bits
X
Xif [ x"$chowncmd" != x ]; then $doit $chowncmd $dsttmp; fi
Xif [ x"$chgrpcmd" != x ]; then $doit $chgrpcmd $dsttmp; fi
Xif [ x"$stripcmd" != x ]; then $doit $stripcmd $dsttmp; fi
Xif [ x"$chmodcmd" != x ]; then $doit $chmodcmd $dsttmp; fi
X
X# Now rename the file to the real destination.
X
Xif [ x"$mdcmd" = x ]; then
X$doit $rmcmd $dst
X$doit $mvcmd $dsttmp $dst
Xfi
X
Xexit 0
END_OF_FILE
if test 2725 -ne `wc -c <'install'`; then
    echo shar: \"'install'\" unpacked with wrong size!
fi
chmod +x 'install'
# end of 'install'
fi
if test -f 'tabstrip' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'tabstrip'\"
else
echo shar: Extracting \"'tabstrip'\" \(100 characters\)
sed "s/^X//" >'tabstrip' <<'END_OF_FILE'
X#!/bin/sh
Xwhile [ -n "$1" ]; do
X{ expand -4 $1 > /tmp/$$; cp /tmp/$$ $1; rm /tmp/$$; shift; }
Xdone
X
END_OF_FILE
if test 100 -ne `wc -c <'tabstrip'`; then
    echo shar: \"'tabstrip'\" unpacked with wrong size!
fi
chmod +x 'tabstrip'
# end of 'tabstrip'
fi
if test -f 'template' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'template'\"
else
echo shar: Extracting \"'template'\" \(252 characters\)
sed "s/^X//" >'template' <<'END_OF_FILE'
X/***************************************
X *
X *  function        description
X *
X *  Purpose         A longer description of this functions
X *                  purpose.
X *
X *  Parameters      a:      example parameter
X *
X *  Returns         None.
X *
X */
END_OF_FILE
if test 252 -ne `wc -c <'template'`; then
    echo shar: \"'template'\" unpacked with wrong size!
fi
# end of 'template'
fi
if test -f 'template.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'template.c'\"
else
echo shar: Extracting \"'template.c'\" \(3250 characters\)
sed "s/^X//" >'template.c' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** template.c      Template C source file                               **
X ** ==========                                                           **
X **                                                                      **
X ** Purpose:        Serves as a template C header file.                  **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Usage:          This line only belongs in files containing main().   **
X **                                                                      **
X ** Restrictions:   Tabs are set every 4 spaces.                         **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     Steve Oualline, "C Elements of Style", 1992          **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 2, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X#include "template.h"
X
X/* >>>>>>>>>> Defines <<<<<<<<<< */
X
X/* >>>>>>>>>> Types <<<<<<<<<< */
X
X/* >>>>>>>>>> Variables <<<<<<<<<< */
X
X/* >>>>>>>>>> Prototypes <<<<<<<<<< */
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X/* >>>>>>>>>> Main <<<<<<<<<< */
X
END_OF_FILE
if test 3250 -ne `wc -c <'template.c'`; then
    echo shar: \"'template.c'\" unpacked with wrong size!
fi
# end of 'template.c'
fi
if test -f 'template.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'template.h'\"
else
echo shar: Extracting \"'template.h'\" \(3290 characters\)
sed "s/^X//" >'template.h' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** template.c      Template C header file                               **
X ** ==========                                                           **
X **                                                                      **
X ** Purpose:        Serves as a template C header file.                  **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Usage:          This line only belongs in files containing main().   **
X **                                                                      **
X ** Restrictions:   Tabs are set every 4 spaces.                         **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     Steve Oualline, "C Elements of Style", 1992          **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 2, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X#ifndef TEMPLATE_H
X#define TEMPLATE_H
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X/* >>>>>>>>>> Defines <<<<<<<<<< */
X
X/* >>>>>>>>>> Types <<<<<<<<<< */
X
X/* >>>>>>>>>> Variables <<<<<<<<<< */
X
X/* >>>>>>>>>> Prototypes <<<<<<<<<< */
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X/* >>>>>>>>>> Main <<<<<<<<<< */
X
X#endif /* TEMPLATE_H */
END_OF_FILE
if test 3290 -ne `wc -c <'template.h'`; then
    echo shar: \"'template.h'\" unpacked with wrong size!
fi
# end of 'template.h'
fi
if test -f 'termstate.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'termstate.c'\"
else
echo shar: Extracting \"'termstate.c'\" \(5034 characters\)
sed "s/^X//" >'termstate.c' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** termstate.c     terminal state functions                             **
X ** ===========                                                          **
X **                                                                      **
X ** Purpose:        Provides functions to simplifify management of some  **
X **                 terminal states.                                     **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     None.                                                **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 4, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X#include <errno.h>
X
X#if defined (SGTTY)
X#include <sgtty.h>
X#elif defined (SYSV_TERMIO)
X#include <termio.h>
X#else /* POSIX_TERMIOS */
X#include <termios.h>
X#endif
X
X#include <unistd.h>
X
X#include "termstate.h"
X
X/* >>>>>>>>>> Functions <<<<<<<<<< */
X
X/***************************************
X *
X *  save_termstate  Save terminal state.
X *
X *  Purpose         Saves the terminal state so that we can restore
X *                  it later.  
X *
X *  Parameters      fd:     filedescriptor to save
X *                  state:  pointer to area to save state at
X *
X *  Returns         zero on success,
X *                  non-zero on failure.
X *
X */
X
Xint save_termstate (int fd, termstate *state)
X{
X    if (!isatty (fd)) return (ENOTTY);
X
X#if defined (SGTTY)
X    return (gtty (fd, state));
X#elif defined (SYSV_TERMIO)
X    return (ioctl (fd, TCGETA, state));
X#else /* POSIX_TERMIOS */
X    return (tcgetattr (fd, state));
X#endif 
X
X}
X
X/***************************************
X *
X *  restore_termstate   Restore terminal state.
X *
X *  Purpose         Restores a terminal state saved with
X *                  save_termstate.
X *
X *  Parameters      fd:     file descriptor associated with terminal
X *                  state:  previously saved termstate
X *
X *  Returns         zero on success,
X *                  non-zero on error.
X *
X */
X
Xint restore_termstate (int fd, termstate *state)
X{
X    if (!isatty (fd)) return (ENOTTY);
X
X#if defined (SGTTY)
X    return (stty (fg, state));
X#elif defined (SYSV_TERMIO)
X    return (ioctl (fd, TCSETAW, state)); 
X#else /* POSIX_TERMIOS */
X    return (tcsetattr (fd, TCSADRAIN, state));
X#endif 
X
X}
X
X/***************************************
X *
X *  raw_termstate   Sets a termstate to raw mode.
X *
X *  Purpose         Modifies a termstate structure so that
X *                  it has no ouput postprocessing.
X *
X *  Parameters      state:  terminal state structure to modify
X *
X *  Returns         None.
X *
X */
X
Xvoid raw_termstate (termstate *state)
X{
X
X#ifdef SGTTY
X    state->sg_flags |= RAWOUT;
X#else /* SYSV_TERMIO || POSIX_TERMIOS */
X    state->c_oflag |= OPOST;
X#endif
X
X    return;
X}
X
END_OF_FILE
if test 5034 -ne `wc -c <'termstate.c'`; then
    echo shar: \"'termstate.c'\" unpacked with wrong size!
fi
# end of 'termstate.c'
fi
if test -f 'termstate.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'termstate.h'\"
else
echo shar: Extracting \"'termstate.h'\" \(4570 characters\)
sed "s/^X//" >'termstate.h' <<'END_OF_FILE'
X/**************************************************************************
X **************************************************************************
X **                                                                      **
X ** termstate.h     terminal state functions                             **
X ** ===========                                                          **
X **                                                                      **
X ** Purpose:        Provides functions to simplifify management of some  **
X **                 terminal states.                                     **
X **                                                                      **
X ** Author:         Garrett D'Amore <garrett@sciences.sdsu.edu>          **
X **                                                                      **
X ** Copyright:      1994, Garrett E. D'Amore                             **
X **                                                                      **
X ** NO WARRANTY:    This program is provided entirely without warranty.  **
X **                 The user assumes full responsibility for the use of  **
X **                 this program, and agrees to indemnify the author and **
X **                 the copyright holder from any damage or loss that    **
X **                 may result from the use of or inability to use this  **
X **                 program.  In simple language: YOU USE THIS PROGRAM   **
X **                 AT YOUR OWN RISK!                                    **
X **                                                                      **
X ** Warning:        None.                                                **
X **                                                                      **
X ** Restrictions:   None.                                                **
X **                                                                      **
X ** Algorithm:      None.                                                **
X **                                                                      **
X ** References:     None.                                                **
X **                                                                      **
X ** File formats:   None.                                                **
X **                                                                      **
X ** Rev. History:   June 4, 1994    Garrett D'Amore                      **
X **                 -- Initial coding.                                   **
X **                                                                      **
X ** Notes:          None.                                                **
X **                                                                      **
X **************************************************************************
X **************************************************************************/
X
X/* >>>>>>>>>> Headers <<<<<<<<<< */
X
X#if defined (SGTTY)
X#include <sgtty.h>
X#elif defined (SYSV_TERMIO)
X#include <termio.h>
X#else /* POSIX_TERMIOS */
X#include <termios.h>
X#endif
X
X/* >>>>>>>>>> Types <<<<<<<<<< */
X
X#if defined (SGTTY)
Xtypedef struct sgttyb termstate;
X#elif defined (SYSV_TERMIO)
Xtypedef struct termio termstate;
X#else /* POSIX_TERMIOS */
Xtypedef struct termios termstate;
X#endif
X
X/* >>>>>>>>>> Prototypes <<<<<<<<<< */
X
X/***************************************
X *
X *  save_termstate  Save terminal state.
X *
X *  Purpose         Saves the terminal state so that we can restore
X *                  it later.  
X *
X *  Parameters      fd:     filedescriptor to save
X *                  state:  pointer to area to save state at
X *
X *  Returns         zero on success,
X *                  non-zero on failure.
X *
X */
X
Xint save_termstate (int fd, termstate *state);
X
X/***************************************
X *
X *  restore_termstate   Restore terminal state.
X *
X *  Purpose         Restores a terminal state saved with
X *                  save_termstate.
X *
X *  Parameters      fd:     file descriptor associated with terminal
X *                  state:  previously saved termstate
X *
X *  Returns         zero on success,
X *                  non-zero on error.
X *
X */
X
Xint restore_termstate (int fd, termstate *state);
X
X/***************************************
X *
X *  raw_termstate   Sets a termstate to raw mode.
X *
X *  Purpose         Modifies a termstate structure so that
X *                  it has no ouput postprocessing.
X *
X *  Parameters      state:  terminal state structure to modify
X *
X *  Returns         None.
X *
X */
X
Xvoid raw_termstate (termstate *state);
X
END_OF_FILE
if test 4570 -ne `wc -c <'termstate.h'`; then
    echo shar: \"'termstate.h'\" unpacked with wrong size!
fi
# end of 'termstate.h'
fi
if test -f 'testfile' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'testfile'\"
else
echo shar: Extracting \"'testfile'\" \(623 characters\)
sed "s/^X//" >'testfile' <<'END_OF_FILE'
X
XThis is a file for testing vtprint.  Hopefully it will provide some
Xinsight as to whether your program works correctly or not.  To use, type
X"vtprint [options] testfile"
X
XOkay,  are characters lining up?
X
X    ***************************
X    * This box should line up *
X    ***************************
X
XNow we have to skip to a new page.
X
XThis should appear on a second page of the output.
X
XNow answer the following questions:
X
X    1) Did the first page print out completely and correctly?
X    2) Were there two pages of output?
X
XIf both questions are answered yes, congratulations!   vtprint will work
Xproperly for you!
X
END_OF_FILE
if test 623 -ne `wc -c <'testfile'`; then
    echo shar: \"'testfile'\" unpacked with wrong size!
fi
# end of 'testfile'
fi
if test -f 'vtprintcap' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprintcap'\"
else
echo shar: Extracting \"'vtprintcap'\" \(931 characters\)
sed "s/^X//" >'vtprintcap' <<'END_OF_FILE'
X#
X# vtprintcap
X#
X# Copyright 1994, Garrett D'Amore
X# This file contains various escape codes used by terminals
X# to control their printers.  The general format for an entry
X# looks like this:
X#
X# term [,term..]
X# prt-on code in printf format
X# prt-off code in printf format
X#
X# Please send your updates and corrections to this file to the
X# vtprint mailing list (vtprint@sdsu.edu).  Thank-you!
X#
X# Standard DEC/ANSI escape sequences (most common)
X#
Xvt100, vt102, vt220, ansi
X\033[5i
X\033[4i
X#
X# A few televideo models, I'm not sure these are correct
X# or complete, so please test!
X#
Xtvi950, tvi955, tvi910, tvi914, tvi924, tvi925, tvi920, tvi910+
X\033@
X\033A
X#
X# Here are some other terms people may have laying around.
X# Please test and get back to me!
X#
Xwyse50, wyse60, adm31, addsviewpoint, addsviewpoint60
X\022
X\024
X#
X# Special codes used for debugging vtprint, not for general use.
X#
Xdebug
X\nprinter-on\007
X\007printer-off\n
X
END_OF_FILE
if test 931 -ne `wc -c <'vtprintcap'`; then
    echo shar: \"'vtprintcap'\" unpacked with wrong size!
fi
# end of 'vtprintcap'
fi
if test -f 'vtprintcap.5' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprintcap.5'\"
else
echo shar: Extracting \"'vtprintcap.5'\" \(3486 characters\)
sed "s/^X//" >'vtprintcap.5' <<'END_OF_FILE'
X.\" -*- nroff -*-
X.\" Like TP, but if specified indent is more than half
X.\" the current line-length - indent, use the default indent.
X.de Tp
X.ie \\n(.$=0:((0\\$1)*2u>(\\n(.lu-\\n(.iu)) .TP
X.el .TP "\\$1"
X..
X.TH VTPRINTCAP 5 "19 June 1994" "vtprint v2.0"
X.SH NAME
Xvtprintcap \- database of terminal printer control codes
X.SH SYNOPSIS
X.B /usr/local/lib/vtprint/vtprintcap
X.SH DESCRIPTION
X.B vtprintcap
Xis a simple flat file database containing a list of the names of various
Xterminals and the codes those terminals use to start and stop an attached
Xprinter (media hard copy). This database is used by \fBvtprint\fP(1) and
Xrelated programs.
X.PP
XEach entry is composed of three lines.  The first line is a comma-delimited
Xlist of names which may be used to reference this entry.  The second line
Xthe sequence of characters used by the terminal to turn on an attached 
Xhard copy device and redirect output to that device.   The third line contains
Xthe sequence of characters used to turn the device off and restore normal
Xoutput to the screen.
X.PP
XAn entry must have all three lines to be considered valid.  Currently no
Xcomment lines are permitted to exist between these lines: such lines
Xwould be interpreted as the printer control codes themselves! 
X.PP
XThe rules for selecting a terminal name are simple: you must follow the
Xsame rules as for \fB/etc/termcap\fP(5) names.  Terminal names should
Xbe entered in \fB/usr/local/lib/vtprint/vtprintcap\fP with exactly the same names as are
Xin \fB/etc/termcap\fP.
X.PP
XThe control code strings in the second and third lines of an entry are 
Xgoverned as follows: ANSI C style escapes for character
Xconstants (e.g. \\n for newline) are permitted, constant strings are
Xpermitted, and quotes may be used to as delimiters in the string.  (This
Xis useful if you wish you use a digit immediately following a numeric
Xescape. For example, ESC-5 should be represented as \\033"5" to avoid
Xconfusion in with \\335.  In general, the rules outlined for ANSI 
Xconstant escaping are enforced.
X.PP
XAdditionally, \fB/usr/local/lib/vtprint/vtprintcap\fP may contain comment lines, which are indicated
Xby placing a hash mark (#) in the first column of the line.  Remember
Xhowever that entries must \fInot\fP be broken up by comment lines!
X.SH EXAMPLE
XHere is a sample entry common to DEC vt100 and vt102 terminals:
X.PP
X.IP
X# Sample vtprintcap entry for vt100 & vt102 terminals
X.br
Xvt100, vt102
X.br
X\\033[5i
X.br
X\\033[4i
X.PP
XThis entry would be used whenever the user's TERM environment variable 
Xwas set to "vt102" or "vt100", using ESC [5i and ESC [4i as the printer
Xcontrol codes to turn a printer on and off, respectively.
X.SH DISTRIBUTION
X.B vtprintcap
Xis part of the 
X.B vtprint
Xpackage, which can be obtained by anonymous ftp at ftp.sdsu.edu in the
X.B /pub/vtprint
Xdirectory.  Please read the
X.B INDEX
Xand
X.B README
Xfiles before downloading.
X.LP
XIf you do not have ftp availability, then you can request a
Xuuencoded copy of 
X.B vtprint
Xbe sent to you via e-mail from the author.  The author is also willing to
Xmake other arrangements as needed, within certain limitations.
X.SH FILES
X.B /etc/termcap
X.br
X.B /usr/local/lib/vtprint/vtprintcap
X.SH BUGS
X.B vtprintcap
Xhandling code currently could get confused if a printer control code 
Xis exactly the same as the name of a terminal, or contained the name
Xof a terminal delimited by commas.  As this is very unlikely to every
Xoccur, it shouldn't be a problem.
X.SH SEE ALSO
X.B "termcap\fR(5)"
X.B "vtprint\fR(1)"
END_OF_FILE
if test 3486 -ne `wc -c <'vtprintcap.5'`; then
    echo shar: \"'vtprintcap.5'\" unpacked with wrong size!
fi
# end of 'vtprintcap.5'
fi
if test -f 'vtprintcap.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprintcap.man'\"
else
echo shar: Extracting \"'vtprintcap.man'\" \(4623 characters\)
sed "s/^X//" >'vtprintcap.man' <<'END_OF_FILE'
X
X
X
XVTPRINTCAP(5)              FILE FORMATS             VTPRINTCAP(5)
X
X
XNNAAMMEE
X       vtprintcap - database of terminal printer control codes
X
XSSYYNNOOPPSSIISS
X       //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp
X
XDDEESSCCRRIIPPTTIIOONN
X       vvttpprriinnttccaapp  is  a  simple  flat file database containing a
X       list of the names of various terminals and the codes those
X       terminals use to start and stop an attached printer (media
X       hard copy).  This  database  is  used  by  vvttpprriinntt(1)  and
X       related programs.
X
X       Each  entry is composed of three lines.  The first line is
X       a comma-delimited list of names which may be used to  ref-
X       erence  this entry.  The second line the sequence of char-
X       acters used by the terminal to turn on  an  attached  hard
X       copy  device  and  redirect  output  to that device.   The
X       third line contains the sequence  of  characters  used  to
X       turn  the  device  off  and  restore  normal output to the
X       screen.
X
X       An entry must have all three lines to be considered valid.
X       Currently  no comment lines are permitted to exist between
X       these lines:  such  lines  would  be  interpreted  as  the
X       printer control codes themselves!
X
X       The  rules  for  selecting a terminal name are simple: you
X       must follow the same rules as for  //eettcc//tteerrmmccaapp(5)  names.
X       Terminal      names      should      be     entered     in
X       //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp with  exactly  the  same
X       names as are in //eettcc//tteerrmmccaapp.
X
X       The  control code strings in the second and third lines of
X       an entry are governed as follows: ANSI C style escapes for
X       character  constants  (e.g. \n for newline) are permitted,
X       constant strings are permitted, and quotes may be used  to
X       as  delimiters in the string.  (This is useful if you wish
X       you use a digit immediately following  a  numeric  escape.
X       For  example,  ESC-5  should  be represented as \033"5" to
X       avoid confusion in with \335.  In general, the rules  out-
X       lined for ANSI constant escaping are enforced.
X
X       Additionally,  //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp  may con-
X       tain comment lines, which are indicated by placing a  hash
X       mark  (#)  in the first column of the line.  Remember how-
X       ever that entries must _n_o_t be broken up by comment  lines!
X
XEEXXAAMMPPLLEE
X       Here  is a sample entry common to DEC vt100 and vt102 ter-
X       minals:
X
X
X              #  Sample  vtprintcap  entry  for  vt100  &   vt102
X
X
X
Xvtprint v2.0               19 June 1994                         1
X
X
X
X
X
XVTPRINTCAP(5)              FILE FORMATS             VTPRINTCAP(5)
X
X
X              terminals
X              vt100, vt102
X              \033[5i
X              \033[4i
X
X       This entry would be used whenever the user's TERM environ-
X       ment variable was set to "vt102" or "vt100", using ESC [5i
X       and ESC [4i as the printer control codes to turn a printer
X       on and off, respectively.
X
XDDIISSTTRRIIBBUUTTIIOONN
X       vvttpprriinnttccaapp is part of the vvttpprriinntt package,  which  can  be
X       obtained   by   anonymous   ftp  at  ftp.sdsu.edu  in  the
X       //ppuubb//vvttpprriinntt directory.  Please read the IINNDDEEXX and  RREEAADDMMEE
X       files before downloading.
X
X       If  you do not have ftp availability, then you can request
X       a uuencoded copy of vvttpprriinntt be sent to you via e-mail from
X       the  author.   The  author  is  also willing to make other
X       arrangements as needed, within certain limitations.
X
XFFIILLEESS
X       //eettcc//tteerrmmccaapp
X       //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp
X
XBBUUGGSS
X       vvttpprriinnttccaapp handling code currently could get confused if a
X       printer  control code is exactly the same as the name of a
X       terminal, or contained the name of a terminal delimited by
X       commas.   As  this  is  very  unlikely  to every occur, it
X       shouldn't be a problem.
X
XSSEEEE AALLSSOO
X       tteerrmmccaapp(5) vvttpprriinntt(1)
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
Xvtprint v2.0               19 June 1994                         2
X
X
END_OF_FILE
echo shar: 317 control characters may be missing from \"'vtprintcap.man'\"
if test 4623 -ne `wc -c <'vtprintcap.man'`; then
    echo shar: \"'vtprintcap.man'\" unpacked with wrong size!
fi
# end of 'vtprintcap.man'
fi
if test -f 'vtprintcap.sed' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprintcap.sed'\"
else
echo shar: Extracting \"'vtprintcap.sed'\" \(3414 characters\)
sed "s/^X//" >'vtprintcap.sed' <<'END_OF_FILE'
X.\" -*- nroff -*-
X.\" Like TP, but if specified indent is more than half
X.\" the current line-length - indent, use the default indent.
X.de Tp
X.ie \\n(.$=0:((0\\$1)*2u>(\\n(.lu-\\n(.iu)) .TP
X.el .TP "\\$1"
X..
X.TH VTPRINTCAP MAN5_SECT "VER_DY VER_MO VER_YR" "vtprint vVERSION_NO"
X.SH NAME
Xvtprintcap \- database of terminal printer control codes
X.SH SYNOPSIS
X.B LIBFILE
X.SH DESCRIPTION
X.B vtprintcap
Xis a simple flat file database containing a list of the names of various
Xterminals and the codes those terminals use to start and stop an attached
Xprinter (media hard copy). This database is used by \fBvtprint\fP(1) and
Xrelated programs.
X.PP
XEach entry is composed of three lines.  The first line is a comma-delimited
Xlist of names which may be used to reference this entry.  The second line
Xthe sequence of characters used by the terminal to turn on an attached 
Xhard copy device and redirect output to that device.   The third line contains
Xthe sequence of characters used to turn the device off and restore normal
Xoutput to the screen.
X.PP
XAn entry must have all three lines to be considered valid.  Currently no
Xcomment lines are permitted to exist between these lines: such lines
Xwould be interpreted as the printer control codes themselves! 
X.PP
XThe rules for selecting a terminal name are simple: you must follow the
Xsame rules as for \fBTERMCAP\fP(MAN5_SECT) names.  Terminal names should
Xbe entered in \fBLIBFILE\fP with exactly the same names as are
Xin \fBTERMCAP\fP.
X.PP
XThe control code strings in the second and third lines of an entry are 
Xgoverned as follows: ANSI C style escapes for character
Xconstants (e.g. \\n for newline) are permitted, constant strings are
Xpermitted, and quotes may be used to as delimiters in the string.  (This
Xis useful if you wish you use a digit immediately following a numeric
Xescape. For example, ESC-5 should be represented as \\033"5" to avoid
Xconfusion in with \\335.  In general, the rules outlined for ANSI 
Xconstant escaping are enforced.
X.PP
XAdditionally, \fBLIBFILE\fP may contain comment lines, which are indicated
Xby placing a hash mark (#) in the first column of the line.  Remember
Xhowever that entries must \fInot\fP be broken up by comment lines!
X.SH EXAMPLE
XHere is a sample entry common to DEC vt100 and vt102 terminals:
X.PP
X.IP
X# Sample vtprintcap entry for vt100 & vt102 terminals
X.br
Xvt100, vt102
X.br
X\\033[5i
X.br
X\\033[4i
X.PP
XThis entry would be used whenever the user's TERM environment variable 
Xwas set to "vt102" or "vt100", using ESC [5i and ESC [4i as the printer
Xcontrol codes to turn a printer on and off, respectively.
X.SH DISTRIBUTION
X.B vtprintcap
Xis part of the 
X.B vtprint
Xpackage, which can be obtained by anonymous ftp at ftp.sdsu.edu in the
X.B /pub/vtprint
Xdirectory.  Please read the
X.B INDEX
Xand
X.B README
Xfiles before downloading.
X.LP
XIf you do not have ftp availability, then you can request a
Xuuencoded copy of 
X.B vtprint
Xbe sent to you via e-mail from the author.  The author is also willing to
Xmake other arrangements as needed, within certain limitations.
X.SH FILES
X.B TERMCAP
X.br
X.B LIBFILE
X.SH BUGS
X.B vtprintcap
Xhandling code currently could get confused if a printer control code 
Xis exactly the same as the name of a terminal, or contained the name
Xof a terminal delimited by commas.  As this is very unlikely to every
Xoccur, it shouldn't be a problem.
X.SH SEE ALSO
X.B "termcap\fR(MAN5_SECT)"
X.B "vtprint\fR(MAN1_SECT)"
END_OF_FILE
if test 3414 -ne `wc -c <'vtprintcap.sed'`; then
    echo shar: \"'vtprintcap.sed'\" unpacked with wrong size!
fi
# end of 'vtprintcap.sed'
fi
if test -f 'vtprtoff.1' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprtoff.1'\"
else
echo shar: Extracting \"'vtprtoff.1'\" \(3889 characters\)
sed "s/^X//" >'vtprtoff.1' <<'END_OF_FILE'
X.\" -*- nroff -*-
X.\" Like TP, but if specified indent is more than half
X.\" the current line-length - indent, use the default indent.
X.de Tp
X.ie \\n(.$=0:((0\\$1)*2u>(\\n(.lu-\\n(.iu)) .TP
X.el .TP "\\$1"
X..
X.TH VTPRTOFF 1 "19 June 1994" "vtprint v2.0"
X.SH NAME
Xvtprtoff,vtprton \- turn off or on printer attached to local terminal
X.SH SYNOPSIS
X.B vtprtoff
X[
X.B \-dDeEhlqQNtvw
X] [
X.B \-L
X.I vtprintcap
X] [
X.B \-T
X.I termtype
X] [
X.B \-V
X.I device
X]
X.PP
X.B vtprton
X[
X.B \-dDeEhlqQNtvw
X] [
X.B \-L
X.I vtprintcap
X] [
X.B \-T
X.I termtype
X] [
X.B \-V
X.I device
X]
X.SH DESCRIPTION
X.B vtprtoff
Xis a simple program that turns off (or on) redirection of ASCII text to
Xa printer connected to a 
Xterminal or terminal emulator.  It uses terminal escape sequences to
Xachieve this end.
X.SH OPTIONS
X.TP
X.B \-d
XUse the tty device file instead of stdout for output.  This is defined as
X.B /dev/tty
Xon this system. (This is operating system specific and may vary from system to
Xsystem.)
X.TP
X.B \-D
XUse the stdout stream for output, rather than a tty device file.
X.TP
X.B \-e
XForces \fBvtprtoff\fP to ignore the TERM environment variable and use
Xthe builtin control codes instead.
X.TP
X.B \-E
XUndoes the effect of the \fB\-e\fP option, which allows \fBvtprtoff\fP to
Xattempt to find an entry in \fB/usr/local/lib/vtprint/vtprintcap\fP for the TERM value and use the
Xcorresponding control codes.
X.TP
X.B \-h
XPrint out a simple usage message.
X.TP
X.B \-l
XPrint out the license agreement.
X.TP
X.BI \-L " vtprintcap"
XSpecifies an alternate file to use instead of \fB/usr/local/lib/vtprint/vtprintcap\fP.
X.TP
X.B \-q
XQuiet mode.  Suppress various status messages from being displayed.
X.TP
X.B \-Q
XCancels the effect of the \fB\-q\fP option, allowing normal progress 
Xreporting to occur.
X.TP
X.B \-t
XForce the use of the TERM variable to perform a look up of the control
Xsequences to be used in \fB/usr/local/lib/vtprint/vtprintcap\fP.  If an entry in that file can't
Xbe found, \fBvtprtoff\fP will abort with an error.
X.TP
X.BI \-T " termtype"
XUse the value of \fItermtype\fP instead of the value of the TERM environment
Xvariable when performing lookups in \fB/usr/local/lib/vtprint/vtprintcap\fP.
X.TP
X.B \-v
XDisplay version information.
X.TP
X.BI \-V " device"
XSpecifies an alternate device file instead of \fB/dev/tty\fP to use.
X.TP
X.B \-w
XDisplay important warranty waiver information.  NO WARRANTY!
X.SH ENVIRONMENT
X.IP TERM
Xthe type of the terminal 
X.B vtprtoff
Xwill assume is being used.
X.IP VTPRINT
Xstring of options to be used by
X.B vtprtoff.
X.SH AUTHOR
X.B vtprtoff
Xwas written by Garrett D'Amore, on June 5, 1994 and last modified on
XJune 19, 1994.  It is heavily derived
Xfrom a similar program, called
X.B lprint,
Xby the same author.
XHe can be reached via Internet e-mail at garrett@sciences.sdsu.edu.
X.SH DISTRIBUTION
XThe latest version of
X.B vtprtoff
Xis available as part of the
X.B vtprint
Xpackage, and 
Xcan be obtained by anonymous ftp at ftp.sdsu.edu in the
X.B /pub/vtprint
Xdirectory.  Please read the
X.B INDEX
Xand
X.B README
Xfiles before downloading.
X.LP
XIf you do not have ftp availability, then you can request a
Xuuencoded copy of 
X.B vtprint
Xbe sent to you via e-mail from the author.  The author is also willing to
Xmake other arrangements as needed, within certain limitations.
X.SH COPYRIGHT
X.B vtprtoff
Xis copyrighted 1994, by Garrett D'Amore.  It may be freely redistributed
Xor modified, so long as this and any other copyright notices are included
Xin their original form with the program.  The user is granted the right to 
Xuse this program without limitation.
X.SH DISCLAIMER
X.B vtprtoff
Xis provided WITHOUT WARRANTY.  The user agrees to indemnify
Xthe author from any claims of damage or loss arising from the use
Xof or inability to use this program.  In other words, USE AT YOUR
XOWN RISK! 
X.SH FILES
X.B /usr/local/lib/vtprint/vtprintcap
X.SH SEE ALSO
X.B "lpr\fR(1), "
X.B "vtprint\fR(1), "
X.B "vtprintcap\fR(5)"
END_OF_FILE
if test 3889 -ne `wc -c <'vtprtoff.1'`; then
    echo shar: \"'vtprtoff.1'\" unpacked with wrong size!
fi
# end of 'vtprtoff.1'
fi
if test -f 'vtprtoff.man' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprtoff.man'\"
else
echo shar: Extracting \"'vtprtoff.man'\" \(5766 characters\)
sed "s/^X//" >'vtprtoff.man' <<'END_OF_FILE'
X
X
X
XVTPRTOFF(1)               USER COMMANDS               VTPRTOFF(1)
X
X
XNNAAMMEE
X       vtprtoff,vtprton  -  turn  off  or  on printer attached to
X       local terminal
X
XSSYYNNOOPPSSIISS
X       vvttpprrttooffff [ --ddDDeeEEhhllqqQQNNttvvww ] [ --LL _v_t_p_r_i_n_t_c_a_p ] [ --TT _t_e_r_m_t_y_p_e
X       ] [ --VV _d_e_v_i_c_e ]
X
X       vvttpprrttoonn  [ --ddDDeeEEhhllqqQQNNttvvww ] [ --LL _v_t_p_r_i_n_t_c_a_p ] [ --TT _t_e_r_m_t_y_p_e
X       ] [ --VV _d_e_v_i_c_e ]
X
XDDEESSCCRRIIPPTTIIOONN
X       vvttpprrttooffff is a simple program that turns off (or on)  redi-
X       rection of ASCII text to a printer connected to a terminal
X       or terminal emulator.  It uses terminal  escape  sequences
X       to achieve this end.
X
XOOPPTTIIOONNSS
X       --dd     Use  the tty device file instead of stdout for out-
X              put.  This is defined as //ddeevv//ttttyy on  this  system.
X              (This  is  operating  system  specific and may vary
X              from system to system.)
X
X       --DD     Use the stdout stream for output, rather than a tty
X              device file.
X
X       --ee     Forces  vvttpprrttooffff  to  ignore  the  TERM environment
X              variable and use the builtin control codes instead.
X
X       --EE     Undoes  the  effect  of the --ee option, which allows
X              vvttpprrttooffff  to  attempt   to   find   an   entry   in
X              //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp   for   the  TERM
X              value and use the corresponding control codes.
X
X       --hh     Print out a simple usage message.
X
X       --ll     Print out the license agreement.
X
X       --LL _v_t_p_r_i_n_t_c_a_p
X              Specifies an  alternate  file  to  use  instead  of
X              //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp.
X
X       --qq     Quiet  mode.  Suppress various status messages from
X              being displayed.
X
X       --QQ     Cancels the effect of the --qq option, allowing  nor-
X              mal progress reporting to occur.
X
X       --tt     Force  the  use  of  the TERM variable to perform a
X              look up of the control  sequences  to  be  used  in
X              //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp.   If an entry in
X              that file can't be found, vvttpprrttooffff will abort  with
X              an error.
X
X
X
X
Xvtprint v2.0               19 June 1994                         1
X
X
X
X
X
XVTPRTOFF(1)               USER COMMANDS               VTPRTOFF(1)
X
X
X       --TT _t_e_r_m_t_y_p_e
X              Use  the  value of _t_e_r_m_t_y_p_e instead of the value of
X              the  TERM  environment  variable  when   performing
X              lookups in //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp.
X
X       --vv     Display version information.
X
X       --VV _d_e_v_i_c_e
X              Specifies  an  alternate  device  file  instead  of
X              //ddeevv//ttttyy to use.
X
X       --ww     Display important warranty waiver information.   NO
X              WARRANTY!
X
XEENNVVIIRROONNMMEENNTT
X       TERM   the  type  of  the terminal vvttpprrttooffff will assume is
X              being used.
X
X       VTPRINT
X              string of options to be used by vvttpprrttooffff..
X
XAAUUTTHHOORR
X       vvttpprrttooffff was written by Garrett D'Amore, on June  5,  1994
X       and last modified on June 19, 1994.  It is heavily derived
X       from a similar program, called llpprriinntt,, by the same author.
X       He   can   be   reached   via   Internet  e-mail  at  gar-
X       rett@sciences.sdsu.edu.
X
XDDIISSTTRRIIBBUUTTIIOONN
X       The latest version of vvttpprrttooffff is available as part of the
X       vvttpprriinntt  package,  and can be obtained by anonymous ftp at
X       ftp.sdsu.edu in the //ppuubb//vvttpprriinntt directory.   Please  read
X       the IINNDDEEXX and RREEAADDMMEE files before downloading.
X
X       If  you do not have ftp availability, then you can request
X       a uuencoded copy of vvttpprriinntt be sent to you via e-mail from
X       the  author.   The  author  is  also willing to make other
X       arrangements as needed, within certain limitations.
X
XCCOOPPYYRRIIGGHHTT
X       vvttpprrttooffff is copyrighted 1994, by Garrett D'Amore.  It  may
X       be  freely  redistributed or modified, so long as this and
X       any other copyright notices are included in their original
X       form  with  the program.  The user is granted the right to
X       use this program without limitation.
X
XDDIISSCCLLAAIIMMEERR
X       vvttpprrttooffff is provided WITHOUT WARRANTY.  The user agrees to
X       indemnify  the  author  from  any claims of damage or loss
X       arising from the use of or inability to use this  program.
X       In other words, USE AT YOUR OWN RISK!
X
XFFIILLEESS
X       //uussrr//llooccaall//lliibb//vvttpprriinntt//vvttpprriinnttccaapp
X
X
X
Xvtprint v2.0               19 June 1994                         2
X
X
X
X
X
XVTPRTOFF(1)               USER COMMANDS               VTPRTOFF(1)
X
X
XSSEEEE AALLSSOO
X       llpprr(1), vvttpprriinntt(1), vvttpprriinnttccaapp(5)
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
Xvtprint v2.0               19 June 1994                         3
X
X
END_OF_FILE
echo shar: 581 control characters may be missing from \"'vtprtoff.man'\"
if test 5766 -ne `wc -c <'vtprtoff.man'`; then
    echo shar: \"'vtprtoff.man'\" unpacked with wrong size!
fi
# end of 'vtprtoff.man'
fi
if test -f 'vtprtoff.sed' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'vtprtoff.sed'\"
else
echo shar: Extracting \"'vtprtoff.sed'\" \(3813 characters\)
sed "s/^X//" >'vtprtoff.sed' <<'END_OF_FILE'
X.\" -*- nroff -*-
X.\" Like TP, but if specified indent is more than half
X.\" the current line-length - indent, use the default indent.
X.de Tp
X.ie \\n(.$=0:((0\\$1)*2u>(\\n(.lu-\\n(.iu)) .TP
X.el .TP "\\$1"
X..
X.TH VTPRTOFF MAN1_SECT "VER_DY VER_MO VER_YR" "vtprint vVERSION_NO"
X.SH NAME
Xvtprtoff,vtprton \- turn off or on printer attached to local terminal
X.SH SYNOPSIS
X.B vtprtoff
X[
X.B \-dDeEhlqQNtvw
X] [
X.B \-L
X.I vtprintcap
X] [
X.B \-T
X.I termtype
X] [
X.B \-V
X.I device
X]
X.PP
X.B vtprton
X[
X.B \-dDeEhlqQNtvw
X] [
X.B \-L
X.I vtprintcap
X] [
X.B \-T
X.I termtype
X] [
X.B \-V
X.I device
X]
X.SH DESCRIPTION
X.B vtprtoff
Xis a simple program that turns off (or on) redirection of ASCII text to
Xa printer connected to a 
Xterminal or terminal emulator.  It uses terminal escape sequences to
Xachieve this end.
X.SH OPTIONS
X.TP
X.B \-d
XUse the tty device file instead of stdout for output.  This is defined as
X.B DEVTTY
Xon this system. (This is operating system specific and may vary from system to
Xsystem.)
X.TP
X.B \-D
XUse the stdout stream for output, rather than a tty device file.
X.TP
X.B \-e
XForces \fBvtprtoff\fP to ignore the TERM environment variable and use
Xthe builtin control codes instead.
X.TP
X.B \-E
XUndoes the effect of the \fB\-e\fP option, which allows \fBvtprtoff\fP to
Xattempt to find an entry in \fBLIBFILE\fP for the TERM value and use the
Xcorresponding control codes.
X.TP
X.B \-h
XPrint out a simple usage message.
X.TP
X.B \-l
XPrint out the license agreement.
X.TP
X.BI \-L " vtprintcap"
XSpecifies an alternate file to use instead of \fBLIBFILE\fP.
X.TP
X.B \-q
XQuiet mode.  Suppress various status messages from being displayed.
X.TP
X.B \-Q
XCancels the effect of the \fB\-q\fP option, allowing normal progress 
Xreporting to occur.
X.TP
X.B \-t
XForce the use of the TERM variable to perform a look up of the control
Xsequences to be used in \fBLIBFILE\fP.  If an entry in that file can't
Xbe found, \fBvtprtoff\fP will abort with an error.
X.TP
X.BI \-T " termtype"
XUse the value of \fItermtype\fP instead of the value of the TERM environment
Xvariable when performing lookups in \fBLIBFILE\fP.
X.TP
X.B \-v
XDisplay version information.
X.TP
X.BI \-V " device"
XSpecifies an alternate device file instead of \fBDEVTTY\fP to use.
X.TP
X.B \-w
XDisplay important warranty waiver information.  NO WARRANTY!
X.SH ENVIRONMENT
X.IP TERM
Xthe type of the terminal 
X.B vtprtoff
Xwill assume is being used.
X.IP VTPRINT
Xstring of options to be used by
X.B vtprtoff.
X.SH AUTHOR
X.B vtprtoff
Xwas written by Garrett D'Amore, on June 5, 1994 and last modified on
XVER_MO VER_DY, VER_YR.  It is heavily derived
Xfrom a similar program, called
X.B lprint,
Xby the same author.
XHe can be reached via Internet e-mail at garrett@sciences.sdsu.edu.
X.SH DISTRIBUTION
XThe latest version of
X.B vtprtoff
Xis available as part of the
X.B vtprint
Xpackage, and 
Xcan be obtained by anonymous ftp at ftp.sdsu.edu in the
X.B /pub/vtprint
Xdirectory.  Please read the
X.B INDEX
Xand
X.B README
Xfiles before downloading.
X.LP
XIf you do not have ftp availability, then you can request a
Xuuencoded copy of 
X.B vtprint
Xbe sent to you via e-mail from the author.  The author is also willing to
Xmake other arrangements as needed, within certain limitations.
X.SH COPYRIGHT
X.B vtprtoff
Xis copyrighted 1994, by Garrett D'Amore.  It may be freely redistributed
Xor modified, so long as this and any other copyright notices are included
Xin their original form with the program.  The user is granted the right to 
Xuse this program without limitation.
X.SH DISCLAIMER
X.B vtprtoff
Xis provided WITHOUT WARRANTY.  The user agrees to indemnify
Xthe author from any claims of damage or loss arising from the use
Xof or inability to use this program.  In other words, USE AT YOUR
XOWN RISK! 
X.SH FILES
X.B LIBFILE
X.SH SEE ALSO
X.B "LPR_BIN\fR(LPR_SECT), "
X.B "vtprint\fR(MAN1_SECT), "
X.B "vtprintcap\fR(MAN5_SECT)"
END_OF_FILE
if test 3813 -ne `wc -c <'vtprtoff.sed'`; then
    echo shar: \"'vtprtoff.sed'\" unpacked with wrong size!
fi
# end of 'vtprtoff.sed'
fi
echo shar: End of archive 1 \(of 3\).
cp /dev/null ark1isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
