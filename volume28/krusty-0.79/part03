Newsgroups: comp.sources.unix
From: gls@hrcms.ATT.COM (Col. G. L. Sicherman)
Subject: v28i175: krusty-0.79 - Krusty's Fun House (a game), Part03/08
References: <1.784409622.283@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: gls@hrcms.ATT.COM (Col. G. L. Sicherman)
Posting-Number: Volume 28, Issue 175
Archive-Name: krusty-0.79/part03

# This is a shell archive.  Remove anything before this line,
# then unpack it by saving it in a file and typing "sh file".
#
# Wrapped by Col. G. L. Sicherman on Wed Sep  7 10:44:39 1994
#
# This archive contains:
#	load.c		monsters.c	room.2h		room.2z		
#

LANG=""; export LANG
PATH=/bin:/usr/bin:$PATH; export PATH

echo x - load.c
cat >load.c <<'HIPPOPOTAMUS_ON_A_POGO_STICK'
/*
 *	load.c - load a room.
 */

#include <malloc.h>
#include <memory.h>
#include <string.h>

#include "krusty.h"
#include "codes.h"
#include "globs.h"

freeroom(rm)
ROOM *rm;
{
	int r;
	for (r=0; r<rm->rows; r++) free(rm->grid[r]);
	free(rm->grid);
	for (r=0; r<rm->rows; r++) free(rm->mgrid[r]);
	free(rm->mgrid);
	rm->rows = 0;
}

int
loadroom(name, rm, isold, banged)
char *name;
ROOM *rm;
int isold;	/* we've been here before; suppress food, dolls, and pies */
int banged;	/* we've already kicked the bang box */
{
	char *fullname, hdrbuf[20], *linebuf;
	FILE *Room;
	int i;

	if (rm->rows) freeroom(rm);
	fullname = malloc(strlen(DATADIR) + 1 + strlen(name) + 1);
	if (!fullname) {
		fprintf(stderr, "out of space\n");
		return 0;
	}
	sprintf(fullname, "%s/%s", DATADIR, name);
	Room = fopen(fullname, "r");
	free(fullname);
	if (!Room) return 0;		/* failure */
	if (!fgets(hdrbuf, 20, Room)) return 0;	/* empty file */
	if (3 != sscanf(hdrbuf, "%d %d %c", &rm->rows, &rm->cols, &rm->ratdir))
		return 0;
	rm->grid = (char **)calloc(rm->rows, sizeof(char *));
	rm->mgrid = (char **)calloc(rm->rows, sizeof(char *));
	for (i=0; i<rm->rows; i++) {
		linebuf = malloc(rm->cols + 2);
		if (!fgets(linebuf, rm->cols+2, Room)) {
			fclose(Room);
			return 0;
		}
		rm->grid[i] = linebuf;
		rm->mgrid[i] = malloc(rm->cols);
		memset(rm->mgrid[i], I_BLANK, rm->cols);
	}
	fclose(Room);
	analyze(rm, isold, banged);
	rm->flypies = rm->flyballs = 0;
	if (rm->ratholes) {
		rm->liverats = 4;
		for (i=0; i<4; i++) rm->rat[i].loc.x = -1;
	}
	else rm->liverats = 0;
	rm->hazards = rm->leave = rm->canleave = rm->stunned =
		rm->kicking = rm->staggering = 0;
	rm->krusty.loc.x = rm->door.x * 2; /* middle of door */
	rm->krusty.loc.y = rm->door.y;
	rm->krusty.facing = rightward;
	rm->carry = 0;
	rm->jumping = -1;
	rm->falling = -1;
	rm->springing = -1;
	rm->timer = 999999;		/* the default */		
	return 1;
}

analyze(rm, isold, banged)
ROOM *rm;
int isold, banged;
{
/*
 *	The input matrix is cell by cell, and so recorded.
 *	Only positions of rats, Krusty, and projectiles
 *		are on double horizontal scale.
 */
	int y, x;
	char c;
/* find door, entries, trap, bangbox, jars, and ratholes */
	rm->entries = rm->ratholes = rm->bangbox = rm->bonusboxes = 0;
	rm->trap.x = rm->trap.y = -99;
	for (y=0; y<rm->rows; y++)
	for (x=0; x<rm->cols; x++) {
		switch(rm->grid[y][x]) {
		case I_BONUSBOX:	/* are processed some more later */
		case I_DOLLBOX:
			rm->bonusboxes++;
			break;
		case I_BANGBOX:		/* There should be only one */
			if (banged) rm->grid[y][x] = I_BLANK;
			else rm->bangbox++;
			break;
		case I_REENTRY:
			rm->reentry.x = x;
			rm->reentry.y = y;
			rm->grid[y][x] = rm->grid[y-1][x];
			break;
		case I_RATHOLE:
			rm->rathole[rm->ratholes].x = x;
			rm->rathole[rm->ratholes].y = y;
			rm->ratholes++;
			break;
		case I_ENTRY:
			{
			ENTRY *ep;
			if (findentry(rm,y,x)) break;	/* already got it */
			ep = & rm->entry[rm->entries];
			ep->loc.x = x+1;
			ep->loc.y = y+1;
			ep->name = rm->grid[y+1][x+1];
			rm->grid[y+1][x+1] = I_ENTRY;	/* patch the name */
			ep->tries = ep->banged = ep->clean = 0;
			ep->locked = ep->name == 'z';
			x++;	/* skip the name */
			rm->entries++;
			}
			break;
		case I_TRAPCENTER:
			rm->trap.x = x;
			rm->trap.y = y;
			break;
		case I_DOOR:
			rm->door.x = x;
			rm->door.y = y;
			break;
		}
	}
/* find boxes and vipers */
	rm->vipers = rm->aliens = rm->pigs = rm->birds = 0;
	for (y=0; y<rm->rows; y++)
	for (x=0; x<rm->cols; x++) {
		switch(c=rm->grid[y][x]) {
		case I_PIEBOX:
		case I_DOLLBOX:
		case I_FOODBOX:
			if (isold) {
				blankout(rm, y, x);
				break;
			} /* else fall through */
		case I_MOVEBOX:
		case I_HEAVYBOX:
		case I_BONUSBOX:
		case I_BALLBOX:
		case I_TELEPORTBOX:
		case I_BANGBOX:
		case I_MHPIPE:
		case I_MVPIPE:
		case I_MULPIPE:
		case I_MURPIPE:
		case I_MDRPIPE:
		case I_MUBLOWER:
		case I_MLBLOWER:
		case I_MRBLOWER:
		case I_MSPRING:
		case I_JAR:
			rm->mgrid[y][x] = c;
			blankout(rm, y, x);
			break;
		case I_VIPER:
			newviper(rm, y, x);
			break;
		case I_ALIEN:
			newalien(rm, y, x);
			break;
		case I_PIG:
			newpig(rm, y, x, 0);
			break;
		case I_SPIG:
			newpig(rm, y, x, 1);
			break;
		case I_BIRD:
			newbird(rm, y, x, 0);
			break;
		case I_SBIRD:
			newbird(rm, y, x, 1);
			break;
		}
	}
/* find falling rocks */
	rm->leaks = 0;
	for (x=0; x<rm->cols; x++)
	for (y=0; y<rm->rows; y++) {
		switch(rm->grid[y][x]) {
		case I_ROCK:
			rm->leak[rm->leaks].l.x = x;
			rm->leak[rm->leaks].l.y = y;
			rm->leak[rm->leaks].timer = 10;
			rm->leaks++;
			blankout(rm, y, x);
			break;
		}
	}
	findelevators(rm);
	findgondolas(rm);
}

findelevators(rm)
ROOM *rm;
{
	int x, y, yy;
	char c;

	rm->elevators = rm->shooters = 0;
	for (x=0; x<rm->cols; x++)
	for (y=0; y<rm->rows; y++) {
		switch (c = rm->grid[y][x]) {
		case I_ELEVATOR:
			rm->elevator[rm->elevators].x = x;
			rm->elevator[rm->elevators].ymin = y;
			rm->elevator[rm->elevators].dir = upward;
			for (yy=y; yy<rm->rows; yy++)
				if (c != rm->grid[yy][x]) break;
/*
 * In the real thing, platform is half a cell high,
 * and Krusty can jump 5.5 cells.  Compensate here
 * by running the platform off the bottom of the track.
 */
			rm->elevator[rm->elevators].ymax = yy; /* don't sub 1 */
			rm->elevator[rm->elevators].y = (y + yy - 1) / 2;
			rm->elevators++;
			y = yy - 1;	/* skip to bottom of elevator */
			break;
		case I_SHOOTER:
			for (yy=y; yy<rm->rows; yy++)
				if (c != rm->grid[yy][x]) break;
			newshooter(rm, y, yy-1, x);
			y = yy - 1;	/* skip to bottom of shooter */
			break;
		}
	}
}

findgondolas(rm)
ROOM *rm;
{
	int x, y, xx;

	rm->gondolas = 0;
	for (y=0; y<rm->rows; y++)
	for (x=0; x<rm->cols; x++) {
		switch (rm->grid[y][x]) {
		case I_GONDOLA:
			rm->gondola[rm->gondolas].xmin = x;
			rm->gondola[rm->gondolas].y = y;
			rm->gondola[rm->gondolas].dir = rightward;
			for (xx=x; xx<rm->cols; xx++)
				if (I_GONDOLA != rm->grid[y][xx]) break;
				else blankout(rm, y, xx);
			rm->gondola[rm->gondolas].xmax = xx - 1;
/* xcur is on double-x measure */
			rm->gondola[rm->gondolas].xcur = x + xx - 1;
			rm->gondolas++;
			x = xx - 1;	/* skip to bottom of rm->gondola */
		}
	}
}

newshooter(rm, ymin, ymax, x)
ROOM *rm;
int ymin, ymax, x;
{
	SHOOTER *sp;
	sp = & rm->shooter[rm->shooters];
	sp->x = x;
	sp->ymin = ymin;
	sp->dir = upward;
	sp->ymax = ymax;
	sp->y = (ymin + ymax - 1) / 2;
	sp->fuse = 5 + (x%7);
	rm->shooters++;
}

unsigned char
useblank(rm,y,x)
ROOM *rm;
int y, x;
{
	static unsigned char *blanks = (unsigned char *)BLANKS;
	unsigned char *up, *dn;

	up = (unsigned char *)strchr(blanks,rm->grid[y-1][x]);
	dn = (unsigned char *)strchr(blanks,rm->grid[y+1][x]);
	if (!up) return dn? *dn: I_BLANK;
	if (!dn) return *up;
	return up<dn? *up: *dn;
}

blankout(rm, y, x)
ROOM *rm;
int y, x;
{
	rm->grid[y][x] = useblank(rm, y, x);
}
HIPPOPOTAMUS_ON_A_POGO_STICK

chmod 644 load.c

echo x - monsters.c
cat >monsters.c <<'HIPPOPOTAMUS_ON_A_POGO_STICK'
/*
 *	monsters.c - monster control.
 */

#include <string.h>

#include "krusty.h"
#include "codes.h"
#include "globs.h"

static int swoopcycle[24] = {0,0,0,1,1,2,3,4,5,5,6,6,6,6,6,5,5,4,3,2,1,1,0,0};

movemonsters(rm)
ROOM *rm;
{
	movevipers(rm);
	movealiens(rm);
	movepigs(rm);
	movebirds(rm);
}

movevipers(rm)
ROOM *rm;
{
	int v, inc, xl, xr, y;
	CREATURE *vp;
	for (v=0; v<rm->vipers; v++) {
/*
 *		Supervipers are worth 1000.
 */
		if (hitmon(rm, v, &rm->vipers, rm->viper,
		section=='1'? 100: 1000, 4)) {
			v--;
			continue;
		}
		vp = & rm->viper[v];
		if (--vp->fuse <= 0) {	/* spit venom */
			newhazard(rm, vp->loc.y-1,
				vp->loc.x+(vp->facing==leftward? -4: 1),
				vp->facing, 11, Y_SPIT);
			vp->fuse = 25;
		}
		switch(vp->facing) {
		case leftward: inc = -1; break;
		case rightward: inc = 1; break;
		}
		y = vp->loc.y;
		if (vp->loc.x >= rm->krusty.loc.x-1
		 && vp->loc.x <= rm->krusty.loc.x+3
		 && (y == rm->krusty.loc.y || y-1 == rm->krusty.loc.y
		 || y+1 == rm->krusty.loc.y)) { 
			stun(rm, Y_VIPER, none);
		}
		if (tick % 3) continue;	/* vipers move slower than Krusty */
/*
 *		If the viper's move would leave it without two solid rocks
 *		beneath it, turn around.
 */
		xl = (vp->loc.x - 3 + inc)/2;
		xr = (vp->loc.x + inc)/2;
		if (!strchr(BLANKS, rm->grid[y][xl])	/* bump belly */
		 || !strchr(BLANKS, rm->grid[y][xr])
		 || !strchr("#=FLJ7^TH", rm->grid[y+1][xl])
		 || !strchr("#=FLJ7^TH", rm->grid[y+1][xr])) {
			aboutface(vp);
			continue;
		}
		vp->loc.x += inc;
	}
}

newviper(rm, y, x)
ROOM *rm;
int y, x;
{
	CREATURE *vp;
	vp = & rm->viper[rm->vipers];
	vp->loc.x = x*2+1;
	vp->loc.y = y;
	vp->facing = rightward;	/* arbitrary */
	vp->hp = section=='1'? 1: 3;
	vp->fuse = 15;
	rm->vipers++;
	blankout(rm, y, x);
}

newalien(rm, y, x)
ROOM *rm;
int y, x;
{
	CREATURE *vp;

	vp = & rm->alien[rm->aliens];
	vp->loc.x = x*2+1;
	vp->loc.y = y;
	vp->facing = rightward;
	vp->hp = 2;
	vp->fuse = 10;
	rm->aliens++;
	blankout(rm, y, x);
}

newpig(rm, y, x, sw)
ROOM *rm;
int y, x;	/* x is the leftmost end of the range */
int sw;
{
	CREATURE *vp;

	vp = & rm->pig[rm->pigs];
	vp->loc.x = x*2+9;
	vp->ymin = y;
	vp->loc.y = sw? y - swoopcycle[tick%24]: y;
	vp->xmin = x;
	vp->xmax = x+17;
	vp->facing = rightward;
	vp->hp = 3;
	vp->swooping = sw;
	rm->pigs++;
	blankout(rm, y, x);
}

newbird(rm, y, x, sw)
ROOM *rm;
int y, x;	/* x is the leftmost end of the range */
int sw;
{
	CREATURE *vp;

	vp = & rm->bird[rm->birds];
	vp->loc.x = x*2+9;
	vp->ymin = y;
	vp->loc.y = sw? y - swoopcycle[tick%24]: y;
	vp->xmin = x;
	vp->xmax = x+17;
/*
 *	Bird range may be less than 18, as in room 4L.
 */
	while (!strchr(BLANKS,rm->grid[y][vp->xmax])) vp->xmax--;
	vp->facing = rightward;
	vp->hp = 3;
	vp->swooping = sw;
	rm->birds++;
	blankout(rm, y, x);
}

movealiens(rm)
ROOM *rm;
{
	int v, inc, xl, xr, y;
	CREATURE *vp;
	for (v=0; v<rm->aliens; v++) {
		if (hitmon(rm, v, &rm->aliens, rm->alien, 500, 2)) {
			v--;
			continue;
		}
		vp = & rm->alien[v];
		if (--vp->fuse <= 0) {	/* fire laser burst */
			newhazard(rm, vp->loc.y-1,
				vp->loc.x+(vp->facing==leftward? -2: 1),
				vp->facing, 19, Y_BULLET);
			vp->fuse = 25;
		}
		switch(vp->facing) {
		case leftward: inc = -1; break;
		case rightward: inc = 1; break;
		}
		xl = (vp->loc.x - 1 + inc)/2;
		xr = (vp->loc.x + inc)/2;
		y = vp->loc.y;
		if ((vp->loc.x == rm->krusty.loc.x
		 || vp->loc.x == rm->krusty.loc.x-1
		 || vp->loc.x-1 == rm->krusty.loc.x)
		 && (y == rm->krusty.loc.y || y-1 == rm->krusty.loc.y
		 || y+1 == rm->krusty.loc.y)) { 
			stun(rm, Y_ALIEN, none);
		}
		if (tick % 2) continue;	/* aliens move slower than Krusty */
/*
 *		If the alien's move would leave it without two solid rocks
 *		beneath it, turn around.
 */
		if (!strchr(BLANKS, rm->grid[y-1][xl])	/* bump head */
		 || !strchr(BLANKS, rm->grid[y-1][xr])
		 || !strchr(BLANKS, rm->grid[y][xl])	/* bump belly */
		 || !strchr(BLANKS, rm->grid[y][xr])
		 || !strchr("#=FLJ7T^H", rm->grid[y+1][xl])
		 || !strchr("#=FLJ7T^H", rm->grid[y+1][xr])) {
			aboutface(& rm->alien[v]);
			continue;
		}
		vp->loc.x += inc;
	}
}

movepigs(rm)
ROOM *rm;
{
	int v, inc, xl, xr, y;
	CREATURE *vp;
	for (v=0; v<rm->pigs; v++) {
		if (hitmon(rm, v, &rm->pigs, rm->pig, 1000, 4)) {
			v--;
			continue;
		}
		vp = & rm->pig[v];
		switch(vp->facing) {
		case leftward: inc = -1; break;
		case rightward: inc = 1; break;
		}
		xl = (vp->loc.x - 3 + inc)/2;
		xr = (vp->loc.x + inc)/2;
		y = vp->loc.y;
		if (vp->loc.x >= rm->krusty.loc.x-1
		 && vp->loc.x <= rm->krusty.loc.x+3
		 && (y == rm->krusty.loc.y || y-1 == rm->krusty.loc.y
		 || y+1 == rm->krusty.loc.y)) { 
			stun(rm, Y_PIG, vp->facing);	/* pig staggers K */
		}
		if (tick % 3) continue;	/* pigs move slower than Krusty */
		if (xl < vp->xmin || xr > vp->xmax) {
			aboutface(vp);
			continue;
		}
		vp->loc.x += inc;
		if (vp->swooping)
			vp->loc.y = vp->ymin - swoopcycle[tick%24];
	}
}

movebirds(rm)
ROOM *rm;
{
	int v, inc, xl, xr, y;
	CREATURE *vp;
	for (v=0; v<rm->birds; v++) {
		if (hitmon(rm, v, &rm->birds, rm->bird, 1000, 4)) {
			v--;
			continue;
		}
		vp = & rm->bird[v];
		switch(vp->facing) {
		case leftward: inc = -1; break;
		case rightward: inc = 1; break;
		}
		xl = (vp->loc.x - 3 + inc)/2;
		xr = (vp->loc.x + inc)/2;
		y = vp->loc.y;
		if (vp->loc.x >= rm->krusty.loc.x-1
		 && vp->loc.x <= rm->krusty.loc.x+3
		 && (y == rm->krusty.loc.y || y-1 == rm->krusty.loc.y
		 || y+1 == rm->krusty.loc.y)) { 
			stun(rm, Y_BIRD, none);
		}
/*
 *	lay an "egg" (or however you interpret it).
 *	Bird is somewhat erratic
 */
		if (--vp->fuse <= 0
		 && vp->loc.y < rm->krusty.loc.y-2
		 && vp->loc.x >= rm->krusty.loc.x-2
		 && vp->loc.x <= rm->krusty.loc.x+4
		 && tick % 7 == 0) {
			newhazard(rm, vp->loc.y, vp->loc.x-1, downward, 999,
				Y_EGG);
			vp->fuse = 15;
		}
		if (tick % 5 == 0) continue;	/* slightly slower than K */
		if (xl < vp->xmin || xr > vp->xmax) {
			aboutface(vp);
			continue;
		}
		vp->loc.x += inc;
		if (vp->swooping)
			vp->loc.y = vp->ymin - swoopcycle[tick%24];
	}
}

hitmon(rm, i, cnt, vec, scor, wid)
ROOM *rm;
int i, *cnt;
CREATURE *vec;
int scor, wid;
{
	int p, vx, vy;
	vx = vec[i].loc.x;
	vy = vec[i].loc.y;
	for (p=0; p<rm->flypies; p++) {
		if (rm->flypie[p].l.x <= vx && rm->flypie[p].l.x > vx-wid
		 && (rm->flypie[p].l.y == vy || rm->flypie[p].l.y == vy-1)) {
			delpie(rm,p);
			if (!--vec[i].hp) delmon(i,cnt,vec,scor);
			return 1;
		}
	}
	for (p=0; p<rm->flyballs; p++) {
		if (rm->flyball[p].l.x <= vx+1 && rm->flyball[p].l.x > vx-wid
		 && rm->flyball[p].l.y <= vy+1 && rm->flyball[p].l.y >= vy-1) {
			delball(rm,p);
			delmon(i,cnt,vec,scor);
			return 1;
		}
	}
	return 0;
}

delmon(n, c, v, b)
int n, *c;
CREATURE *v;
int b;
{
	v[n] = v[--*c];
	addscore(b);
}
HIPPOPOTAMUS_ON_A_POGO_STICK

chmod 644 monsters.c

echo x - room.2h
cat >room.2h <<'HIPPOPOTAMUS_ON_A_POGO_STICK'
63 81 R
#################################################################################
#################################################################################
#################################################################################
################################~~~~~~~~~~~~~~~~~################################
################################~~~~~~~~~~~~~~~~~################################
################################~~~~~~~~~######TT################################
################################W~~~~#~~~######~~################################
################################TTT~~#~TT######~~################################
################################~~~~~#~~~######TT################################
################################~~~~~#~~~######~~################################
################################~~~~~#~~~######~~################################
################################~~~#####~######TT################################
########TTTTTTTTTTT#~~~~########~~~#~~~~~######~~################################
#####~~#~~~~~~~~~~~~~~~~########~~~#~~~~~######~~################################
#####~~#~~TTTTTT#~~~~~~~########~TT#~~Q~~#####~T~~~~~############################
#####~~~~~~~~~~~#~~~~S~~########~~~###########~~~~~~~############################
#####X~~~~~~~~~~#~~~~S~~########~~~~~~~~~#####~::::~~############################
#####TTTT~TTTTTT#~~~~S~~########TT~~~~~~~#####~:yy:~~############################
#####~~~~~~~~~~~~~~~~S~~########~~~~~~X~~#####Y:Ry:~!############################
#####~~~#~~TTT#~~~~~~S~~########~~~~~TTT~########################################
#####~~~#~~~~~#~~~~~~S~~########~~~~~~~~~########################################
#####X~~#~~#T~#~~~~~~S~~########~TT~~~~~~########################################
#####TTT####~~~~~~~~~~~~########~~~~~~~~~########################################
#####~~~~###~########~~~~~~~~~~~~~~~~~~~~~~~~~~~:~~~~~~:~~~~:..........##########
#####~~#####~########~~~~~~~~A~~~~~~~~~~~~~~~~~~:~~~~~~:~~~~:..........##########
#####~~##TTT##################################~~:~~~~~~:~~~~:..........##########
#####~~##~~~##################################~~:~~~~~~:~~~~:..........##########
######T##~~~~######################################################....##########
######~~~~~~~######################################################.......#######
######~~#TTT~######################################################.......#######
######~~#~~~~######################################################.......#######
######TT#~TTT#########################################......:...............#####
#####~~~#~~~~#########################################......:...............#####
#####~~~#~##~#########################################......:.A.............#####
######TT#~~#~###############...............###########..#########################
#####~~~~~~#~~:....:...#...................###########.T#########################
#####T~~~~~#~~:....:...#......##########...###########..#########################
#################..:...#...#############...###########..#########################
#################..##TT#...####.......##TTT###########..##########:...:.....#####
#################..##TT#...####.......#....###########..##########:...:.....#####
#################..##......####...++.......###########T.##........:...:.....#####
#################..##TT#..#####...++..@....###########..##.......@:...:#....#####
#################TT#...#..##############...###########..##O.....##:.%.:#....#####
#################..:...#..##############...###########..#####..#########....#####
#################..:...#..##.##............###########......##....:...:.....#####
#################..:#TT#..##.##............###########.......#....:...:@....#####
#################..:#.....##T##....#######################...#....%...:##...#####
#################..:#.....##..#....#######################...############...#####
#################TTT#....T##TT#............###############........:...:.....#####
#################..:......##TTT#...........###############........:...:...TT#####
#################..:.......#############...###############........:...:.....#####
#################..:.......#############...###############........:...:.....#####
############################yyy#...........###############........:...:.....#####
############################yyy#...................:....:.........:...:...#######
###############################y...................:....:.........:...:.....#####
###########################[-]#y.........##########:....::::::::::::::::::::#####
###########################[*]yy..........&&&&&&&..:....:.........:...:.....#####
###########################[-]yy..........&&&&&&&..:....:.........:.A.:.....#####
#######################################################.:.....###################
#######################################################.:########################
#################################################################################
#################################################################################
#################################################################################
HIPPOPOTAMUS_ON_A_POGO_STICK

chmod 644 room.2h

echo x - room.2z
cat >room.2z <<'HIPPOPOTAMUS_ON_A_POGO_STICK'
60 90 N
##########################################################################################
##########################################################################################
##########################################################################################
#######################gggg:ggg:ggggggggggggggg:gggggggg:gggggggggggggg:ggggggg:ggggg#####
#######################gggg:ggg:ggggggggggggggg:gggggggg:gggggggggggggg:ggggggg:ggggg#####
#######################ggg#########################################################TT#####
#######################g###########################################################gg#####
#######################g##################################################ggggg:g##gg#####
#######################ggg############ggg################################gggggg:g##gg#####
#######################gSg############gSg###############################gggggggD!##TT#####
######################::S::##########ggSgg##########gggg:gggg##########:gggggg#####gg#####
#####################:ggSgg:########gggSggg########ggggg:gggg#########g:ggggggg:g##gg#####
####################g:ggSgg:g######ggggSgggg######gggggg:gggg########gg:ggggggg:g##gg#####
###############gggggg:ggSgg:ggg:gggggggSggggggg:gggggggg:gggg########Xg:ggAgggg:g##TT#####
##############ggggggg:ggSgg:ggg:gggggggSggggggg:gggggggg:gggg##################:g##gg#####
#############gggggggg:ggSgg:ggg::::::::S::::::::S::::::::gggg#######ggg:ggggggg:g##gg#####
############ggggggggg:ggSgg:ggg:gggggggSggggggggSggggggg:gggg#######ggg:ggggggg:g##gg#####
###########:::::::::::::S:::::::gggggggSggggggggSggggggg:gggg#######::::ggggggA:g##TT#####
##########:gggggggggg:ggSgg:ggg:gggggggSggggggggSggggggg:gggg#######ggg:gg#########gg#####
#########.:gg#####TT###gSg############gSg######gSg###ggg:gggg#######ggg:ggggggg:g##gg#####
########..:g######gg###gSg############:S:######:S:###::::::::#######:::::::::::::##::#####
#######...:#######gg###gSg############gSg######gSg###ggg:gggg#######Ygg:ggggggg:g##TT#####
######....########gg###gSg############gSg######ggg###ggg:gggg###############ggg:g##gg#####
#####....#########TT###gSg############gSg######:::###::::::::##############gggg:W##gg#####
#####....#########gg###ggg############gSg######ggg###ggg:gggg#############gggg#####gg#####
#####..TT#########gg###ggg############gSg######ggg###ggg:gggg############gggg######TT#####
#####....#########TT###ggg############gSg######ggg###ggg:gggggggggggggg:gggg#######gg#####
#####....#########ggg:ggggg:ggg:ggggg#:S:######ggg###ggg:gggggggggggggg:ggg########gg#####
#####TT..#########ggg:ggggg:ggg:ggggg#gSg#gggggggg###ggg:ggggggggggAggg:gg#########gg#####
#####....##########################TT#ggg#gggggggg###ggg:gggg######################TT#####
#####....##########################gg#ggg#gg#########ggg:gggg######################gg#####
#####....##########################ggggggggg#########ggg:gggg######################gg#####
######....#########################ggggggggg#########ggg:gggg######################gg#####
#######...:.#############################TTT#########ggg:gggg######################TT#####
########..:.#############################ggg#########ggg:gggg######################gg#####
#########.:.#############################ggg#########ggg:gggg######################gg#####
########..:.#############################ggg#########ggg:gggg######################TT#####
#######...:.#############################TTT##############gggg#####################gg#####
######....###############################ggg###############gggg####gggg:###########gg#####
#####....################################ggg################gggg##ggggg:g##########gg#####
#####....################################ggg#################gggggggggg:g##########TT#####
#####...T################################TTT##################ggggggggg:g##########gg#####
#####....################################ggg###################gggggggg:g##########gg#####
#####TT..################################ggg######################ggggg:g##########gg#####
#####....################################ggg######################ggggg:g##########TT#####
#####....################################TTT######################&&###&&##########gg#####
#####....################################ggg######################&&###&&##########gg#####
#####TT..################################ggg######################&&###&&##########gg#####
#####.....###############################ggg######################&&###&&##########TT#####
#####.....:..........####################TTT######################&&###&&##########gg#####
#####.....:..........####################ggg######################&&###&&##########gg#####
######....:....::::..####################:::######################&&###&&##########gg#####
######....:....:++:..####################ggg######################gg###:g##########TT#####
######....:....:++:..####################TTT#####################ggg###:ggggggg:ggggg#####
#########################################ggg####################ggg####:ggggggg:ggggg#####
#########################################ggggggggggggggggggggggggg########################
#########################################ggggggggggggAggggggggggg#########################
##########################################################################################
##########################################################################################
##########################################################################################
HIPPOPOTAMUS_ON_A_POGO_STICK

chmod 644 room.2z

exit 0
