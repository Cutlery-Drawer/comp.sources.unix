Newsgroups: comp.sources.unix
From: rca@ingres.com (Bob Arnold)
Subject: v28i067: saenv_alldisks - sysadmin env, disk management and backups, Part03/06
References: <1.771948808.8446@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: rca@ingres.com (Bob Arnold)
Posting-Number: Volume 28, Issue 67
Archive-Name: saenv_alldisks/part03

#!/bin/sh
# this is saenv_alld.03 (part 3 of saenv_alld)
# do not concatenate these parts, unpack them in order with /bin/sh
# file saenv.paper.ps continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 3; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping saenv.paper.ps'
else
echo 'x - continuing file saenv.paper.ps'
sed 's/^X//' << 'SHAR_EOF' >> 'saenv.paper.ps' &&
X573 X(would)s
X767 X(be)s
X858 X(impossible)s
X1176 X(to)s
X1256 X(create)s
X1446 X(research)s
X1698 X(code)s
X360 X
X1742 Y(without)s
X595 X(a)s
X656 X(common)s
X920 X(tool)s
X1055 X(set)s
X1160 X(to)s
X1242 X(write)s
X1410 X(it)s
X1478 X(in)s
X1530 X(.)s
X1599 X(Luckily,)s
X360 X
X1815 Y(there)s
X524 X(seems)s
X718 X(to)s
X801 X(be)s
X895 X(one)s
X991 X(.)s
X1061 X(Bugs)s
X1228 X(notwithstanding)s
X1658 X(,)s
X1706 X(ven-)s
X360 X
X1888 Y(dors)s
X498 X(seem)s
X660 X(to)s
X736 X(have)s
X886 X(maintained)s
X1207 X(backwards)s
X1515 X(compatibil-)s
X360 X
X1961 Y(ity)s
X460 X(with)s
X608 X(Version)s
X848 X(7)s
X911 X(usage)s
X1093 X(and)s
X1219 X(functionality)s
X1591 X(of)s
X1676 X(many)s
X2016 X
X448 Y(of)s
X2102 X(the)s
X2214 X(common)s
X2477 X(utilities)s
X2710 X(in)s
X2792 X(all)s
X2890 X(the)s
X2998 X
Xf.R 8 Z(UNIX)s
X3160 X
Xf.R 10 Z(variants)s
X3402 X(we)s
X2016 X
X521 Y(have)s
X2164 X(seen)s
X2283 X(.)s
X2016 X
X615 Y
X2160 X(Shell)s
X2340 X(scripts)s
X2557 X(which)s
X2762 X(run)s
X2892 X(everywhere)s
X3245 X(must)s
X3417 X(be)s
X2016 X
X688 Y(written)s
X2247 X(with)s
X2407 X(the)s
X2529 X(greatest)s
X2778 X(common)s
X3051 X(denominator)s
X3428 X(in)s
X2016 X
X761 Y(mind)s
X2153 X(.)s
X2241 X(This)s
X2409 X(means)s
X2630 X(we)s
X2758 X(can't)s
X2942 X(take)s
X3104 X(advantage)s
X3425 X(of)s
X2016 X
X834 Y(features)s
X2253 X(available)s
X2521 X(in)s
X2598 X(many)s
X2771 X(newer)s
X2955 X
Xf.R 8 Z(UNIX)s
X3112 X
Xf.R 10 Z(variants)s
X3324 X(.)s
X3387 X(We)s
X2016 X
X907 Y(miss)s
X2165 X(being)s
X2340 X(able)s
X2479 X(to)s
X2558 X(use)s
X2674 X
Xf.B 10 Z(sh)s
X2764 X
Xf.R 10 Z(functions,)s
X3056 X
Xf.B 10 Z(grep)s
Xf.R 10 Z('s)s
X3261 X("ignore-)s
X2016 X
X980 Y(case")s
X2211 X
Xf.CW 10 Z(-i)s
X2325 X
Xf.R 10 Z(\257ag,)s
X2476 X
Xf.B 10 Z(test)s
Xf.R 10 Z('s)s
X2658 X("executable")s
X3051 X
Xf.CW 10 Z(-x)s
X3164 X
Xf.R 10 Z(option,)s
X3384 X(and)s
X2016 X
X1053 Y(the)s
X2126 X(BSD)s
X2284 X
Xf.B 10 Z(head)s
X2450 X
Xf.R 10 Z(program,)s
X2721 X(for)s
X2827 X(example)s
X3054 X(.)s
X3122 X(But)s
X3247 X(the)s
X3358 X(Ver-)s
X2016 X
X1126 Y(sion)s
X2155 X(7)s
X2216 X(set)s
X2319 X(of)s
X2402 X(utilities)s
X2632 X(is)s
X2704 X(certainly)s
X2966 X(rich)s
X3097 X(enough)s
X3319 X(to)s
X3398 X(get)s
X2016 X
X1199 Y(the)s
X2121 X(job)s
X2229 X(done)s
X2358 X(.)s
X2421 X(An)s
X2526 X(old)s
X2635 X(manual)s
X2856 X(is)s
X2925 X(handy)s
X3111 X(for)s
X3212 X(Version)s
X3447 X(7)s
X2016 X
X1272 Y(descriptions)s
X2373 X(of)s
X2462 X(commonly)s
X2781 X(used)s
X2937 X(tools)s
X3101 X(such)s
X3256 X(as)s
X3345 X
Xf.B 10 Z(awk)s
Xf.R 10 Z(,)s
X2016 X
X1345 Y(the)s
X2120 X
Xf.B 10 Z(grep)s
X2272 X
Xf.R 10 Z(family,)s
X2486 X
Xf.B 10 Z(sed)s
Xf.R 10 Z(,)s
X2618 X(and)s
X2736 X
Xf.B 10 Z(sh)s
X2821 X
Xf.R 10 Z([1])s
X2898 X(.)s
X2016 X
X1439 Y
X2160 X(Looking)s
X2413 X(hazily)s
X2605 X(into)s
X2737 X(the)s
X2847 X(future,)s
X3052 X(the)s
X3163 X(only)s
X3310 X(poten-)s
X2016 X
X1512 Y(tial)s
X2141 X(addition)s
X2398 X(to)s
X2488 X(this)s
X2623 X(toolset)s
X2840 X(seems)s
X3042 X(to)s
X3132 X(be)s
X3233 X
Xf.B 10 Z(perl)s
X3386 X
Xf.R 10 Z([2])s
X3463 X(.)s
X2016 X
X1585 Y(However,)s
X2313 X(it)s
X2387 X(would)s
X2589 X(be)s
X2688 X(a)s
X2755 X(large)s
X2926 X(amount)s
X3163 X(of)s
X3255 X(work)s
X3428 X(to)s
X2016 X
X1658 Y(install)s
X2211 X(and)s
X2337 X(maintain)s
X2602 X
Xf.B 10 Z(perl)s
X2748 X
Xf.R 10 Z(on)s
X2844 X(each)s
X2996 X(of)s
X3080 X(our)s
X3193 X
Xf.R 8 Z(UNIX)s
X3354 X
Xf.R 10 Z(vari-)s
X2016 X
X1731 Y(ants)s
X2124 X(.)s
X2193 X(This)s
X2342 X(alone)s
X2517 X(probably)s
X2783 X(means)s
X2985 X(it)s
X3054 X(won't)s
X3240 X(be)s
X3334 X(done)s
X3463 X(.)s
X2016 X
X1804 Y(Furthermore,)s
X2415 X(rewriting)s
X2709 X(our)s
X2845 X(current)s
X3082 X(tools)s
X3260 X(as)s
X3364 X
Xf.B 10 Z(perl)s
X2016 X
X1877 Y
Xf.R 10 Z(scripts)s
X2213 X(would)s
X2401 X(also)s
X2531 X(be)s
X2616 X(real)s
X2739 X(work)s
X2875 X(.)s
X360 X
X4967 Y
Xf.B 10 Z(16)s
X2096 X(LISA)s
X2273 X(V)s
X2343 X(\261)s
X2398 X(Sep)s
X2502 X(.)s
X2541 X(30)s
X2607 X(-Oct)s
X2733 X(.)s
X2772 X(3,)s
X2844 X(1991)s
X2998 X(\261)s
X3053 X(San)s
X3182 X(Diego,)s
X3384 X(CA)s
X5280 Y
Xpagebot
X
X%%Page: 17 7
Xpagetop
Xstdencoding /NTimes-Bold /Times-Bold RE
X/f.B /NTimes-Bold findfont def 
Xf.B 10 Z
X600 X
X448 Y
X744 X
Xstdencoding /NTimes-Roman /Times-Roman RE
X/f.R /NTimes-Roman findfont def 
Xf.R 10 Z(This)s
X897 X(seems)s
X1095 X(to)s
X1181 X(be)s
X1279 X(a)s
X1344 X(good)s
X1511 X(place)s
X1688 X(to)s
X1775 X(say)s
X1899 X(a)s
X1964 X(few)s
X600 X
X521 Y(words)s
X784 X(about)s
X954 X
Xf.B 10 Z(perl)s
X1070 X
Xf.R 10 Z(.)s
X1131 X
Xstdencoding /NTimes-Italic /Times-Italic RE
X/f.I /NTimes-Italic findfont def 
Xf.I 10 Z(Programming)s
X1526 X(`perl')s
X1700 X
Xf.R 10 Z(says)s
X1837 X(that)s
X1960 X(part)s
X600 X
X594 Y(of)s
X679 X(the)s
X785 X(process)s
X1010 X(of)s
X1090 X(installing)s
X1365 X
Xf.B 10 Z(perl)s
X1506 X
Xf.R 10 Z(is)s
X1576 X(to)s
X1653 X("run)s
X1793 X(a)s
X1848 X(massive)s
X600 X
X667 Y(shell)s
X762 X(script)s
X945 X(called)s
X1140 X
Xf.B 10 Z(Con\256gure)s
Xf.R 10 Z(,)s
X1476 X(which)s
X1673 X(tries)s
X1823 X(to)s
X1909 X(\256gure)s
X600 X
X740 Y(out)s
X723 X(everything)s
X1046 X(about)s
X1232 X(your)s
X1391 X(system)s
X1577 X(.")s
X1682 X(\([2,)s
X1815 X(p)s
X1848 X(.)s
X1904 X(372]\))s
X2047 X(.)s
X600 X
X813 Y(This)s
X747 X(sounds)s
X959 X(like)s
X1088 X(a)s
X1146 X(very)s
X1292 X(similar)s
X1507 X(approach)s
X1779 X(to)s
X1859 X(the)s
X1968 X(one)s
X600 X
X886 Y(discussed)s
X897 X(in)s
X990 X(this)s
X1128 X(paper)s
X1276 X(.)s
X1356 X(Although)s
X1648 X
Xf.B 10 Z(Con\256gure)s
X1975 X
Xf.R 10 Z(has)s
X600 X
X959 Y(been)s
X753 X(around)s
X964 X(a)s
X1021 X(lot)s
X1119 X(longer)s
X1316 X(than)s
X1458 X
Xf.B 10 Z(saenv)s
X1617 X(.setup)s
Xf.R 10 Z(,)s
X1830 X(we)s
X1934 X(were)s
X600 X
X1032 Y(simply)s
X815 X(unaware)s
X1074 X(of)s
X1162 X(it)s
X1233 X(when)s
X1410 X(we)s
X1522 X(began)s
X1715 X(the)s
X1831 X(develop-)s
X600 X
X1105 Y(ment)s
X756 X(of)s
X833 X(this)s
X952 X(approach)s
X1196 X(.)s
X600 X
X1199 Y
X744 X(However,)s
X1049 X(if)s
X1135 X(installed)s
X1408 X(everywhere,)s
X1781 X
Xf.B 10 Z(perl)s
X1942 X
Xf.R 10 Z(does)s
X600 X
X1272 Y(provide)s
X835 X(the)s
X949 X(basics)s
X1113 X(.)s
X1184 X(It)s
X1257 X(gives)s
X1430 X(a)s
X1492 X(common)s
X1757 X(toolbase)s
X2012 X(to)s
X600 X
X1345 Y(write)s
X779 X(tools)s
X950 X(with,)s
X1127 X(and)s
X1264 X(also)s
X1414 X(supplies)s
X1675 X(the)s
X1799 X(Con\256gure)s
X600 X
X1418 Y(script)s
X779 X(which)s
X972 X(could)s
X1150 X(be)s
X1243 X(used)s
X1395 X(as)s
X1481 X(a)s
X1541 X(basis)s
X1705 X(for)s
X1812 X(writing)s
X2034 X(a)s
X600 X
X1491 Y(research)s
X859 X(tool)s
X1000 X(such)s
X1159 X(as)s
X1252 X
Xf.B 10 Z(saenv)s
X1411 X(.setup)s
X1580 X
Xf.R 10 Z(.)s
X1656 X(Even)s
X1830 X(so,)s
X1943 X(your)s
X600 X
X1564 Y(tools)s
X757 X(must)s
X914 X(still)s
X1042 X(research)s
X1291 X(issues)s
X1477 X(related)s
X1686 X(to)s
X1764 X(the)s
X1872 X(organi-)s
X600 X
X1637 Y(zation)s
X794 X(of)s
X880 X(your)s
X1032 X(site,)s
X1174 X(and)s
X1301 X(of)s
X1387 X(course)s
X1592 X(must)s
X1753 X(still)s
X1886 X(handle)s
X600 X
X1710 Y(OS)s
X707 X(differences)s
X1004 X(.)s
X600 X
X1837 Y
X944 X
Xf.B 10 Z(Developing)s
X1285 X(Research)s
X1571 X(Code)s
X600 X
X1946 Y
X744 X
Xf.R 10 Z(Figuring)s
X1013 X(out)s
X1138 X(how)s
X1292 X(to)s
X1384 X(code)s
X1550 X(a)s
X1620 X(test)s
X1755 X(which)s
X1959 X(will)s
X600 X
X2019 Y(work)s
X761 X(everywhere)s
X1097 X(can)s
X1215 X(be)s
X1302 X(easy)s
X1421 X(.)s
X1484 X(Sometimes)s
X1806 X(it)s
X1868 X(doesn't)s
X600 X
X2092 Y(take)s
X755 X(much)s
X946 X(more)s
X1126 X(than)s
X1285 X(creating)s
X1545 X(a)s
X1619 X(list)s
X1746 X(of)s
X1845 X(possible)s
X600 X
X2165 Y(answers,)s
X873 X(such)s
X1036 X(as)s
X1132 X(the)s
X1254 X(code)s
X1420 X(that)s
X1561 X(builds)s
X1764 X(the)s
X1904 X
Xstdencoding /NCourier /Courier RE
X/f.CW /NCourier findfont def 
Xf.CW 10 Z(PATH)s
X600 X
X2238 Y
Xf.R 10 Z(environment)s
X959 X(variable)s
X1175 X(.)s
X600 X
X2332 Y
X744 X(Other)s
X937 X(times)s
X1124 X(it)s
X1203 X(is)s
X1289 X(trickier)s
X1483 X(.)s
X1563 X(Finding)s
X1811 X(the)s
X1935 X(BSD)s
X600 X
X2405 Y
Xf.B 10 Z(dump)s
X792 X
Xf.R 10 Z(program)s
X1042 X(\(as)s
X1145 X(discussed)s
X1426 X(above\))s
X1631 X(is)s
X1700 X(one)s
X1820 X(example)s
X2047 X(.)s
X600 X
X2478 Y(Another)s
X843 X(is)s
X913 X(how)s
X1052 X(to)s
X1130 X(\256gure)s
X1311 X(out)s
X1422 X(what)s
X1578 X(\257ag)s
X1704 X(to)s
X1782 X(give)s
X1923 X
Xf.B 10 Z(ps)s
X2012 X
Xf.R 10 Z(to)s
X600 X
X2551 Y(get)s
X715 X(a)s
X778 X(listing)s
X979 X(of)s
X1066 X(all)s
X1166 X(the)s
X1280 X(currently)s
X1553 X(running)s
X1791 X(processes)s
X2047 X(.)s
X600 X
X2624 Y(The)s
X726 X(code)s
X874 X(to)s
X948 X(determine)s
X1238 X(this)s
X1357 X(used)s
X1501 X(to)s
X1575 X(be)s
X1660 X(easy)s
X1779 X(.)s
X600 X
X2726 Y
X648 X
Xf.CW 10 Z(if)s
X768 X(ps)s
X888 X(ax)s
X1008 X(>)s
X1088 X(/dev/null)s
X1488 X(2>&1)s
X1688 X(;)s
X1768 X(then)s
X600 X
X2799 Y
X808 X(PSALL_K=ax)s
X1448 X(#)s
X1528 X(BSD)s
X1688 X(key)s
X600 X
X2872 Y
X648 X(else)s
X600 X
X2945 Y
X808 X(PSALL_K=)s
X1128 X(-e)s
X1448 X(#)s
X1528 X(SysV)s
X1728 X(key)s
X600 X
X3018 Y
X648 X(fi)s
X600 X
X3141 Y
X744 X
Xf.R 10 Z(This)s
X896 X(worked)s
X1128 X(because)s
X1373 X(versions)s
X1628 X(of)s
X1716 X
Xf.B 10 Z(ps)s
X1812 X
Xf.R 10 Z(based)s
X1998 X(on)s
X600 X
X3214 Y(System)s
X837 X(V)s
X924 X(can)s
X1056 X(be)s
X1158 X(expected)s
X1435 X(to)s
X1526 X(give)s
X1680 X(a)s
X1749 X(failure)s
X1963 X(exit)s
X600 X
X3287 Y(status)s
X785 X(if)s
X858 X(handed)s
X1082 X(the)s
X1196 X(BSD)s
X1325 X(-ish)s
X1476 X
Xf.CW 10 Z(ax)s
X1589 X
Xf.R 10 Z(\257ag)s
X1689 X(.)s
X1761 X(But)s
X1890 X(a)s
X1953 X(new)s
X600 X
X3360 Y(platform)s
X869 X(recently)s
X1124 X(arrived)s
X1352 X(with)s
X1510 X(a)s
X1579 X(System)s
X1815 X(V)s
X1863 X(-ish)s
X2001 X
Xf.B 10 Z(ps)s
X600 X
X3433 Y
Xf.R 10 Z(which)s
X796 X(accepted)s
X1064 X(the)s
X1197 X
Xf.CW 10 Z(ax)s
X1310 X
Xf.R 10 Z(\257ag)s
X1443 X(too)s
X1561 X(\(without)s
X1820 X(reporting)s
X600 X
X3506 Y(all)s
X697 X(the)s
X808 X(processes,)s
X1110 X(however\))s
X1361 X(.)s
X1429 X(Now)s
X1587 X(the)s
X1698 X(code)s
X1853 X(is)s
X1927 X(more)s
X600 X
X3579 Y(robust)s
X788 X(and)s
X906 X(looks)s
X1072 X(like)s
X1195 X(this)s
X1292 X(.)s
X600 X
X3681 Y
X648 X
Xf.CW 10 Z(npsax=`ps)s
X1048 X(ax)s
X1168 X(2>&1)s
X1368 X(|)s
X1448 X(wc)s
X1568 X(-l`)s
X600 X
X3754 Y
X648 X(nps_e=`ps)s
X1048 X(-e)s
X1168 X(2>&1)s
X1368 X(|)s
X1448 X(wc)s
X1568 X(-l`)s
X600 X
X3827 Y
X648 X(if)s
X768 X(test)s
X968 X($npsax)s
X1248 X(-gt)s
X1408 X($nps_e)s
X1688 X(;)s
X1768 X(then)s
X1968 X(.)s
X2008 X(.)s
X2048 X(.)s
X600 X
X3950 Y
X744 X
Xf.R 10 Z(Before)s
X1003 X(putting)s
X1271 X(a)s
X1380 X(chunk)s
X1621 X(of)s
X1755 X(code)s
X1960 X(into)s
X600 X
X4023 Y
Xf.B 10 Z(saenv)s
X759 X(.setup)s
Xf.R 10 Z(,)s
X969 X(it)s
X1031 X(needs)s
X1207 X(to)s
X1282 X(be)s
X1368 X(tested)s
X1548 X(widely)s
X1730 X(.)s
X1792 X(We)s
X1908 X(main-)s
X600 X
X4096 Y(tain)s
X738 X(a)s
X805 X(list)s
X925 X(of)s
X1017 X(roughly)s
X1260 X(thirty)s
X1443 X(hosts)s
X1618 X(which)s
X1819 X(represent)s
X600 X
X4169 Y(more)s
X774 X(or)s
X866 X(less)s
X1004 X(unique)s
X1222 X(versions)s
X1481 X(of)s
X1569 X
Xf.R 8 Z(UNIX)s
X1701 X
Xf.R 10 Z(.)s
X1777 X(Small)s
X1970 X(test)s
X600 X
X4242 Y(scripts)s
X800 X(are)s
X907 X(created)s
X1127 X(and)s
X1249 X(tested)s
X1432 X(on)s
X1524 X(these)s
X1688 X(representative)s
X600 X
X4315 Y(hosts)s
X768 X(before)s
X969 X(the)s
X1082 X(code)s
X1239 X(is)s
X1315 X(installed)s
X1543 X(.)s
X1613 X(One)s
X1755 X(test)s
X1880 X(run)s
X1998 X(on)s
X600 X
X4388 Y(these)s
X774 X(thirty)s
X956 X(hosts)s
X1130 X(may)s
X1282 X(take)s
X1431 X(anywhere)s
X1727 X(from)s
X1893 X(ten)s
X2012 X(to)s
X600 X
X4461 Y(thirty)s
X781 X(minutes)s
X1029 X(depending)s
X1342 X(on)s
X1444 X(the)s
X1561 X(nature)s
X1763 X(of)s
X1853 X(the)s
X1970 X(test)s
X600 X
X4534 Y(and)s
X718 X(the)s
X822 X(problems)s
X1092 X(encountered)s
X1418 X(.)s
X2256 X
X448 Y
X2400 X(Although)s
X2674 X(we)s
X2776 X(have)s
X2926 X(a)s
X2980 X(fairly)s
X3149 X(stable)s
X3330 X(tool)s
X3458 X(now,)s
X3613 X(it)s
X3675 X(is)s
X2256 X
X521 Y(still)s
X2385 X(occasionally)s
X2747 X(necessary)s
X3033 X(to)s
X3111 X(add)s
X3233 X(research)s
X3482 X(topics)s
X3668 X(to)s
X2256 X
X594 Y
Xf.B 10 Z(saenv)s
X2415 X(.setup)s
X2584 X
Xf.R 10 Z(.)s
X2645 X(If)s
X2711 X(only)s
X2851 X(one)s
X2969 X(other)s
X3128 X(tool)s
X3255 X(might)s
X3434 X(need)s
X3583 X(addi-)s
X2256 X
X667 Y(tional)s
X2446 X(research)s
X2706 X(information,)s
X3075 X(we)s
X3190 X(make)s
X3372 X(a)s
X3438 X(judgement)s
X2256 X
X740 Y(call)s
X2378 X(about)s
X2550 X(including)s
X2826 X(it)s
X2864 X(.)s
X2927 X(If)s
X2995 X(two)s
X3119 X(or)s
X3198 X(more)s
X3359 X(tools)s
X3514 X(need)s
X3665 X(it,)s
X2256 X
X813 Y(though,)s
X2479 X(the)s
X2583 X(decision)s
X2828 X(to)s
X2902 X(add)s
X3020 X(is)s
X3087 X(easy)s
X3206 X(.)s
X2256 X
X907 Y
X2400 X(When)s
X2590 X(a)s
X2652 X(new)s
X2795 X(type)s
X2942 X(of)s
X3025 X
Xf.R 8 Z(UNIX)s
X3189 X
Xf.R 10 Z(system)s
X3407 X(arrives,)s
X3638 X(the)s
X2256 X
X980 Y(easiest)s
X2459 X(way)s
X2593 X(to)s
X2668 X(test)s
X2785 X
Xf.B 10 Z(saenv)s
X2944 X(.setup)s
X3136 X
Xf.R 10 Z(on)s
X3225 X(it)s
X3286 X(is)s
X3354 X(to)s
X3428 X(simply)s
X3632 X(run)s
X2256 X
X1053 Y(it)s
X2323 X(and)s
X2448 X(watch)s
X2637 X(what)s
X2796 X(happens)s
X3014 X(.)s
X3082 X(It)s
X3152 X(is)s
X3226 X(not)s
X3340 X(uncommon)s
X3668 X(to)s
X2256 X
X1126 Y(see)s
X2366 X(unexpected)s
X2694 X(error)s
X2847 X(messages)s
X3124 X(while)s
X3296 X(it)s
X3357 X(is)s
X3425 X(running)s
X3654 X(on)s
X2256 X
X1199 Y(a)s
X2313 X(new)s
X2451 X(system)s
X2637 X(.)s
X2703 X(The)s
X2834 X(resulting)s
X3096 X
Xf.B 10 Z(saenv)s
X3283 X
Xf.R 10 Z(\256le)s
X3397 X(needs)s
X3577 X(to)s
X3657 X(be)s
X2256 X
X1272 Y(checked)s
X2521 X(for)s
X2644 X(variables)s
X2932 X(that)s
X3078 X(do)s
X3189 X(not)s
X3319 X(have)s
X3490 X(assigned)s
X2256 X
X1345 Y(values)s
X2452 X(or)s
X2533 X(other)s
X2696 X(unexpected)s
X3026 X(answers)s
X3241 X(.)s
X3306 X(Frequently,)s
X3638 X(the)s
X2256 X
X1418 Y(master)s
X2467 X
Xf.B 10 Z(saenv)s
X2626 X(.setup)s
X2827 X
Xf.R 10 Z(needs)s
X3011 X(to)s
X3095 X(be)s
X3190 X(modi\256ed)s
X3459 X(to)s
X3542 X(handle)s
X2256 X
X1491 Y(the)s
X2360 X(new)s
X2493 X(situation)s
X2724 X(.)s
X2256 X
X1585 Y
X2400 X(Analysis)s
X2662 X(of)s
X2745 X
Xf.B 10 Z(saenv)s
X2932 X
Xf.R 10 Z(\256les)s
X3073 X(is)s
X3147 X(made)s
X3321 X(easier)s
X3507 X(by)s
X3602 X(hav-)s
X2256 X
X1658 Y(ing)s
X2368 X(each)s
X2518 X(host)s
X2656 X(send)s
X2805 X(a)s
X2862 X(copy)s
X3018 X(of)s
X3100 X
Xf.B 10 Z(/etc/saenv)s
X3405 X
Xf.R 10 Z(\(along)s
X3601 X(with)s
X2256 X
X1731 Y(other)s
X2423 X(system)s
X2639 X(con\256guration)s
X3025 X(information\))s
X3393 X(to)s
X3476 X(a)s
X3537 X(central)s
X2256 X
X1804 Y(location)s
X2472 X(.)s
X2550 X(Changes)s
X2818 X(show)s
X2997 X(up)s
X3102 X(in)s
X3192 X(a)s
X3260 X(local)s
X3429 X(newsgroup)s
X2256 X
X1877 Y(monitored)s
X2569 X(by)s
X2674 X(interested)s
X2974 X(Data)s
X3140 X(Center)s
X3357 X(staff)s
X3476 X(.)s
X3554 X(Unex-)s
X2256 X
X1950 Y(pected)s
X2455 X(changes)s
X2694 X(in)s
X2770 X(a)s
X2824 X(host's)s
X3007 X
Xf.B 10 Z(saenv)s
X3190 X
Xf.R 10 Z(\256le)s
X3300 X(sometimes)s
X3610 X(pro-)s
X2256 X
X2023 Y(vides)s
X2422 X(the)s
X2530 X(\256rst)s
X2660 X(warning)s
X2904 X(that)s
X3031 X(a)s
X3087 X(system)s
X3299 X(is)s
X3370 X(having)s
X3577 X(prob-)s
X2256 X
X2096 Y(lems)s
X2383 X(.)s
X2447 X(The)s
X2576 X(entire)s
X2754 X(set)s
X2854 X(of)s
X2934 X
Xf.B 10 Z(saenv)s
X3117 X
Xf.R 10 Z(\256les)s
X3253 X(can)s
X3370 X(be)s
X3457 X(processed)s
X2256 X
X2169 Y(by)s
X2345 X(analysis)s
X2584 X(tools)s
X2737 X(to)s
X2812 X(warn)s
X2968 X(of)s
X3047 X(problems)s
X3319 X(or)s
X3398 X(collect)s
X3602 X(gen-)s
X2256 X
X2242 Y(eral)s
X2379 X(information)s
X2694 X(.)s
X2256 X
X2336 Y
X2400 X(Writing)s
X2651 X(and)s
X2790 X(debugging)s
X3113 X(research)s
X3379 X(code)s
X3549 X(is)s
X3638 X(the)s
X2256 X
X2409 Y(most)s
X2425 X(time)s
X2584 X(consuming)s
X2914 X(part)s
X3056 X(of)s
X3149 X(our)s
X3275 X(approach)s
X3519 X(.)s
X3596 X(It)s
X3675 X(is)s
X2256 X
X2482 Y(required)s
X2505 X(whenever)s
X2791 X(new)s
X2929 X(research)s
X3180 X(topics)s
X3368 X(are)s
X3478 X(added,)s
X3682 X(it)s
X2256 X
X2555 Y(is)s
X2330 X(common)s
X2592 X(when)s
X2764 X(a)s
X2822 X(new)s
X2957 X
Xf.R 8 Z(UNIX)s
X3117 X
Xf.R 10 Z(variant)s
X3331 X(arrives,)s
X3558 X(and)s
X3682 X(it)s
X2256 X
X2628 Y(crops)s
X2443 X(up)s
X2552 X(occasionally)s
X2931 X(when)s
X3119 X(bugs)s
X3288 X(are)s
X3414 X(discovered)s
X3703 X(.)s
X2256 X
X2701 Y(Sometimes,)s
X2616 X(the)s
X2743 X(right)s
X2914 X(solution)s
X3173 X(to)s
X3269 X(a)s
X3343 X(new)s
X3498 X(problem)s
X2256 X
X2774 Y(requires)s
X2517 X(not)s
X2648 X(only)s
X2813 X(rewriting)s
X3105 X
Xf.B 10 Z(saenv)s
X3264 X(.setup)s
X3480 X
Xf.R 10 Z(but)s
X3612 X(also)s
X2256 X
X2847 Y(some)s
X2424 X(of)s
X2506 X(the)s
X2614 X(tools)s
X2770 X(which)s
X2959 X(depend)s
X3177 X(on)s
X3269 X(it)s
X3307 X(.)s
X3372 X(Luckily,)s
X3623 X(this)s
X2256 X
X2920 Y(work)s
X2418 X(is)s
X2489 X(a)s
X2545 X(lot)s
X2642 X(more)s
X2805 X(fun)s
X2919 X(and)s
X3041 X(much)s
X3216 X(less)s
X3344 X(time)s
X3491 X(consum-)s
X2256 X
X2993 Y(ing)s
X2366 X(than)s
X2506 X(our)s
X2619 X(old)s
X2729 X(haphazard)s
X3027 X(methods)s
X3253 X(.)s
X3316 X(And)s
X3454 X(the)s
X3560 X(distri-)s
X2256 X
X3066 Y(bution)s
X2453 X(of)s
X2535 X(the)s
X2644 X(new)s
X2782 X(tools)s
X2939 X(is)s
X3012 X(automatic)s
X3305 X(thanks)s
X3507 X(to)s
X3587 X
Xf.B 10 Z(upd)s
X3698 X(-)s
X2256 X
X3139 Y(dist)s
X2360 X
Xf.R 10 Z(.)s
X2256 X
X3266 Y
X2676 X
Xf.B 10 Z(Other)s
X2869 X(Considerations)s
X2256 X
X3375 Y
X2400 X
Xf.R 10 Z(Where)s
X2624 X(at)s
X2719 X(all)s
X2833 X(possible,)s
X3115 X(values)s
X3333 X(in)s
X3432 X
Xf.B 10 Z(saenv)s
X3638 X
Xf.R 10 Z(are)s
X2256 X
X3448 Y(unquoted)s
X2503 X(.)s
X2256 X
X3550 Y
X2304 X
Xf.CW 10 Z(PSALL_K=)s
X2624 X(-e)s
X2904 X
Xf.R 10 Z(#)s
X2959 X(this)s
X3078 X(is)s
X3145 X(good)s
X2256 X
X3623 Y
X2304 X
Xf.CW 10 Z(PSALL_K=")s
X2664 X(-e")s
X2904 X
Xf.R 10 Z(#)s
X2959 X(this)s
X3078 X(is)s
X3145 X(bad)s
X2256 X
X3696 Y
X2304 X
Xf.CW 10 Z(PSALL_K=')s
X2664 X(-e')s
X2904 X
Xf.R 10 Z(#)s
X2959 X(this)s
X3078 X(is)s
X3145 X(bad)s
X3263 X(too)s
X2256 X
X3819 Y(We)s
X2379 X(do)s
X2475 X(this)s
X2602 X(because)s
X2844 X(some)s
X3015 X(tools)s
X3175 X(need)s
X3332 X(to)s
X3415 X(run)s
X3534 X(remote)s
X2256 X
X3892 Y
Xf.B 10 Z(grep)s
X2434 X
Xf.R 10 Z(commands)s
X2770 X(to)s
X2869 X(consult)s
X3109 X(the)s
X3238 X
Xf.B 10 Z(saenv)s
X3444 X
Xf.R 10 Z(\256le)s
X3577 X(on)s
X3690 X(a)s
X2256 X
X3965 Y(remote)s
X2475 X(machine)s
X2702 X(.)s
X2774 X(Interpretation)s
X3171 X(of)s
X3259 X(quotes)s
X3466 X(can)s
X3593 X(be)s
X3690 X(a)s
X2256 X
X4038 Y(very)s
X2400 X(tricky)s
X2582 X(problem)s
X2830 X(in)s
X2907 X(shell)s
X3059 X(coding,)s
X3282 X(especially)s
X3576 X(when)s
X2256 X
X4111 Y(using)s
X2432 X(quotes)s
X2638 X(in)s
X2722 X(a)s
X2784 X(remote)s
X3002 X(shell)s
X3162 X(command,)s
X3475 X(and)s
X3604 X(it)s
X3675 X(is)s
X2256 X
X4184 Y(best)s
X2416 X(to)s
X2520 X(simply)s
X2753 X(avoid)s
X2952 X(the)s
X3085 X(issue)s
X3270 X(where)s
X3484 X(possible)s
X3703 X(.)s
X2256 X
X4257 Y(Unfortunately,)s
X2672 X(if)s
X2738 X(a)s
X2793 X(string)s
X2970 X(assigned)s
X3226 X(to)s
X3304 X(a)s
X3360 X(variable)s
X3602 X(con-)s
X2256 X
X4330 Y(tains)s
X2409 X(a)s
X2465 X(character)s
X2737 X(which)s
X2926 X(is)s
X2997 X(special)s
X3210 X(to)s
X3288 X(the)s
X3395 X(shell,)s
X3564 X(like)s
X3690 X(a)s
X2256 X
X4403 Y(backslash)s
X2563 X
Xf.CW 10 Z(\\)s
Xf.R 10 Z(,)s
X2649 X(then)s
X2793 X(some)s
X2963 X(form)s
X3121 X(of)s
X3205 X(quoting)s
X3438 X(is)s
X3513 X(a)s
X3573 X(must)s
X3703 X(.)s
X2256 X
X4476 Y(This)s
X2410 X(is)s
X2490 X(the)s
X2607 X(case)s
X2758 X(with)s
X2912 X
Xf.B 10 Z(echo)s
Xf.R 10 Z('s)s
X3124 X(no)s
X3190 X(-newline)s
X3458 X(suf\256x)s
X3643 X(for)s
X2256 X
X4549 Y(System)s
X2475 X(V)s
X2523 X(.)s
X2256 X
X4651 Y
X2304 X
Xf.CW 10 Z(ECHOSUF='\\c')s
X600 X
X4967 Y
Xf.B 10 Z(LISA)s
X777 X(V)s
X847 X(\261)s
X902 X(Sep)s
X1006 X(.)s
X1045 X(30)s
X1111 X(-Oct)s
X1237 X(.)s
X1276 X(3,)s
X1348 X(1991)s
X1502 X(\261)s
X1557 X(San)s
X1686 X(Diego,)s
X1888 X(CA)s
X3654 X(17)s
X5280 Y
Xpagebot
X
X%%Page: 18 8
Xpagetop
Xstdencoding /NTimes-Bold /Times-Bold RE
X/f.B /NTimes-Bold findfont def 
Xf.B 10 Z
X360 X
X448 Y
X504 X
Xstdencoding /NTimes-Roman /Times-Roman RE
X/f.R /NTimes-Roman findfont def 
Xf.R 10 Z(Tools)s
X697 X(which)s
X902 X(use)s
X1033 X
Xf.B 10 Z(saenv)s
X1234 X
Xf.R 10 Z(understand)s
X1568 X(that)s
X1711 X(if)s
X1794 X(a)s
X360 X
X521 Y(variable)s
X600 X(is)s
X669 X(set)s
X768 X(to)s
X844 X(null,)s
X989 X(then)s
X1128 X(it)s
X1190 X(is)s
X1259 X(not)s
X1368 X(supported)s
X1653 X(on)s
X1742 X(the)s
X360 X
X594 Y(local)s
X525 X(host)s
X636 X(.)s
X709 X(For)s
X835 X(example,)s
X1113 X
Xf.B 10 Z(saenv)s
X1272 X(.setup)s
X1475 X
Xf.R 10 Z(would)s
X1675 X(put)s
X1794 X(a)s
X360 X
X667 Y(line)s
X492 X(like)s
X624 X(this)s
X752 X(into)s
X887 X
Xf.B 10 Z(saenv)s
X1077 X
Xf.R 10 Z(on)s
X1174 X(a)s
X1235 X(machine)s
X1493 X(that)s
X1624 X(did)s
X1739 X(not)s
X360 X
X740 Y(have)s
X508 X
Xf.B 10 Z(csh)s
X601 X
Xf.R 10 Z(.)s
X360 X
X842 Y
X408 X
Xstdencoding /NCourier /Courier RE
X/f.CW /NCourier findfont def 
Xf.CW 10 Z(CSH_P=)s
X728 X(#)s
X808 X(path)s
X1008 X(to)s
X1128 X(csh)s
X360 X
X965 Y
X504 X
Xf.R 10 Z(Care)s
X666 X(must)s
X832 X(be)s
X932 X(taken)s
X1114 X(when)s
X1295 X(chosing)s
X1539 X(names)s
X1747 X(for)s
X360 X
X1038 Y(variables)s
X637 X(set)s
X747 X(in)s
X834 X
Xf.B 10 Z(saenv)s
X1027 X
Xf.R 10 Z(and)s
X1157 X
Xf.B 10 Z(sahead)s
X1353 X
Xf.R 10 Z(.)s
X1426 X(Most)s
X1597 X(of)s
X1686 X(these)s
X360 X
X1111 Y(variable)s
X620 X(names)s
X835 X(end)s
X975 X(in)s
X1071 X(a)s
X1164 X
Xf.CW 10 Z(_X)s
X1289 X
Xf.R 10 Z(suf\256x)s
X1440 X(.)s
X1524 X(The)s
X1673 X(suf\256x)s
X360 X
X1184 Y(describes)s
X637 X(the)s
X747 X(variable)s
X991 X(type,)s
X1151 X(such)s
X1301 X(as)s
X1402 X
Xf.CW 10 Z(_B)s
X1509 X
Xf.R 10 Z(for)s
X1613 X(boolean)s
X360 X
X1257 Y(\(See)s
X518 X(Figure)s
X731 X(6)s
X804 X(for)s
X921 X(more)s
X1098 X(examples\))s
X1373 X(.)s
X1452 X(This)s
X1611 X(practice)s
X360 X
X1330 Y(helps)s
X536 X(avoid)s
X718 X(con\257ict)s
X953 X(with)s
X1106 X(names)s
X1311 X(such)s
X1467 X(as)s
X1575 X
Xf.CW 10 Z(HOME)s
X1769 X
Xf.R 10 Z(or)s
X360 X
X1403 Y
Xf.CW 10 Z(SHELL)s
X593 X
Xf.R 10 Z(which)s
X789 X(are)s
X904 X(used)s
X1059 X(by)s
X1158 X
Xf.B 10 Z(sh)s
X1255 X
Xf.R 10 Z(and)s
X1385 X(other)s
X1556 X(programs)s
X1807 X(.)s
X360 X
X1476 Y(Unfortunately,)s
X799 X(this)s
X944 X(also)s
X1100 X(makes)s
X1319 X(it)s
X1405 X(harder)s
X1623 X(to)s
X1723 X(live)s
X360 X
X1549 Y(within)s
X558 X(Bourne)s
X780 X(shell's)s
X982 X(limit)s
X1137 X(of)s
X1219 X(eight)s
X1380 X(signi\256cant)s
X1687 X(char-)s
X360 X
X1622 Y(acters)s
X539 X(for)s
X638 X(variable)s
X876 X(names)s
X1047 X(.)s
X360 X
X1716 Y
X504 X(Some)s
X705 X(programs)s
X1005 X(are)s
X1137 X(especially)s
X1456 X(likely)s
X1659 X(to)s
X1761 X(be)s
X360 X
X1789 Y(renamed)s
X632 X(by)s
X739 X(vendors)s
X949 X(.)s
X1029 X(Examples)s
X1334 X(include)s
X1572 X(the)s
X1695 X(BSD)s
X360 X
X1862 Y
Xf.B 10 Z(dump)s
X564 X
Xf.R 10 Z(backup)s
X793 X(program,)s
X1072 X(and)s
X1205 X(the)s
X1325 X(remote)s
X1549 X(shell)s
X1714 X(pro-)s
X360 X
X1935 Y(gram)s
X527 X(\(frequently)s
X853 X(called)s
X1044 X
Xf.B 10 Z(rsh)s
X1167 X
Xf.R 10 Z(or)s
X1252 X
Xf.B 10 Z(remsh)s
Xf.R 10 Z(,)s
X1477 X(though)s
X1690 X(there)s
X360 X
X2008 Y(are)s
X476 X(other)s
X647 X(variations\))s
X933 X(.)s
X1006 X(Some)s
X1192 X(con\256guration)s
X1581 X(\256les)s
X1728 X(and)s
X360 X
X2081 Y(programs)s
X653 X(are)s
X777 X(relatively)s
X1073 X(frequent)s
X1337 X(targets)s
X1558 X(for)s
X1676 X(being)s
X360 X
X2154 Y(moved,)s
X580 X(such)s
X724 X(as)s
X802 X(the)s
X906 X
Xf.B 10 Z(aliases)s
X1114 X
Xf.R 10 Z(\256le)s
X1222 X(and)s
X1340 X
Xf.B 10 Z(csh)s
X1433 X
Xf.R 10 Z(.)s
X360 X
X2281 Y
X716 X
Xf.B 10 Z(Another)s
X975 X(Method)s
X1219 X(Rejected)s
X360 X
X2390 Y
X504 X
Xf.R 10 Z(There)s
X706 X(is)s
X797 X(an)s
X906 X(alternative)s
X1236 X(approach)s
X1526 X(to)s
X1624 X(making)s
X360 X
X2463 Y(tools)s
X519 X(work)s
X684 X(everywhere,)s
X1041 X(which)s
X1233 X(we)s
X1340 X(chose)s
X1521 X(not)s
X1634 X(to)s
X1714 X(pur-)s
X360 X
X2536 Y(sue)s
X449 X(.)s
X514 X(One)s
X652 X(could)s
X827 X(create)s
X1015 X(a)s
X1072 X(table)s
X1230 X(containing)s
X1539 X(everything)s
X360 X
X2609 Y(you)s
X494 X(would)s
X695 X(need)s
X856 X(to)s
X943 X(know)s
X1125 X(about)s
X1308 X(all)s
X1406 X
Xf.R 8 Z(UNIX)s
X1572 X
Xf.R 10 Z(operating)s
X360 X
X2682 Y(systems)s
X606 X(in)s
X692 X(your)s
X847 X(environment)s
X1184 X(.)s
X1257 X(That)s
X1414 X(table)s
X1579 X(could)s
X1761 X(be)s
X360 X
X2755 Y(distributed,)s
X694 X(along)s
X873 X(with)s
X1023 X(a)s
X1084 X(research)s
X1338 X(tool)s
X1473 X(to)s
X1556 X(determine)s
X360 X
X2828 Y(a\))s
X442 X(what)s
X602 X(OS)s
X717 X(is)s
X793 X(running)s
X1030 X(on)s
X1127 X(the)s
X1240 X(machine)s
X1498 X(in)s
X1581 X(question,)s
X360 X
X2901 Y(and)s
X486 X(b\))s
X571 X(truly)s
X727 X(local)s
X888 X(variations,)s
X1199 X(such)s
X1351 X(as)s
X1437 X(the)s
X1549 X(machine's)s
X360 X
X2974 Y(hostname)s
X616 X(.)s
X695 X(Other)s
X887 X(tools)s
X1057 X(could)s
X1245 X(consult)s
X1478 X(the)s
X1601 X(research)s
X360 X
X3047 Y(tool,)s
X506 X(and)s
X627 X(select)s
X806 X(the)s
X913 X(appropriate)s
X1242 X(entry)s
X1404 X(from)s
X1558 X(the)s
X1664 X(distri-)s
X360 X
X3120 Y(buted)s
X530 X(table)s
X661 X(.)s
X360 X
X3214 Y
X504 X(There)s
X692 X(are)s
X807 X(two)s
X940 X(disadvantages)s
X1348 X(to)s
X1433 X(this)s
X1563 X(approach)s
X1807 X(.)s
X360 X
X3287 Y(One)s
X501 X(is)s
X575 X(that)s
X705 X(you)s
X833 X(would)s
X1028 X(still)s
X1159 X(have)s
X1314 X(to)s
X1395 X(do)s
X1490 X(the)s
X1601 X(research)s
X360 X
X3360 Y(somehow)s
X645 X(to)s
X728 X(\256ll)s
X834 X(in)s
X917 X(the)s
X1030 X(table)s
X1161 X(.)s
X1231 X(The)s
X1366 X(other)s
X1534 X(is)s
X1610 X(that)s
X1742 X(the)s
X360 X
X3433 Y(table)s
X515 X(would)s
X705 X(be)s
X792 X(static)s
X959 X(and)s
X1079 X(unexpected)s
X1406 X(local)s
X1560 X(variations)s
X360 X
X3506 Y(might)s
X547 X(crop)s
X696 X(up)s
X762 X(.)s
X832 X(\(This)s
X1004 X(last)s
X1129 X(might)s
X1316 X(also)s
X1455 X(be)s
X1549 X(an)s
X1643 X(advan-)s
X360 X
X3579 Y(tage,)s
X512 X(in)s
X587 X(the)s
X692 X(sense)s
X860 X(that)s
X984 X(the)s
X1089 X(table)s
X1243 X(would)s
X1432 X(enforce)s
X1654 X(adher-)s
X360 X
X3652 Y(ence)s
X505 X(to)s
X579 X(a)s
X631 X(standard)s
X857 X(.\))s
X360 X
X3779 Y
X926 X
Xf.B 10 Z(Advantages)s
X360 X
X3888 Y
X504 X
Xf.R 10 Z(In)s
X599 X(addition)s
X858 X(to)s
X950 X(the)s
X1072 X(main)s
X1246 X(goal)s
X1401 X(of)s
X1496 X(making)s
X1736 X(our)s
X360 X
X3961 Y(tools)s
X519 X(work)s
X684 X(as)s
X769 X(written)s
X988 X(everywhere,)s
X1345 X(our)s
X1462 X(approach)s
X1735 X(has)s
X360 X
X4034 Y(several)s
X572 X(other)s
X731 X(advantages)s
X1028 X(.)s
X360 X
X4107 Y
X423 X
Xf.Y 10 Z(\017)s
X494 X
Xf.R 10 Z(Improved)s
X774 X(User)s
X922 X(Support)s
X1132 X(.)s
X1193 X(It)s
X1256 X(used)s
X1400 X(to)s
X1474 X(be)s
X1559 X(hard)s
X1699 X(for)s
X360 X
X4180 Y
X494 X(the)s
X606 X(Data)s
X763 X(Center)s
X971 X(to)s
X1053 X(provide)s
X1286 X(more)s
X1453 X(than)s
X1598 X(margi-)s
X360 X
X4253 Y
X494 X(nal)s
X626 X(support)s
X875 X(for)s
X1002 X(weird)s
X1204 X(workstations,)s
X1613 X(which)s
X360 X
X4326 Y
X494 X(didn't)s
X677 X(really)s
X854 X(make)s
X1023 X(anybody)s
X1275 X(happy)s
X1437 X(.)s
X1500 X(This)s
X1642 X(issue)s
X360 X
X4399 Y
X494 X(has)s
X627 X(largely)s
X857 X(disappeared)s
X1220 X(since)s
X1402 X(we)s
X1524 X(can)s
X1662 X(now)s
X360 X
X4472 Y
X494 X(offer)s
X646 X(more)s
X806 X(complete)s
X1075 X(services)s
X1314 X(on)s
X1402 X(a)s
X1454 X(much)s
X1624 X(wider)s
X360 X
X4545 Y
X494 X(variety)s
X702 X(of)s
X779 X(platforms)s
X1035 X(.)s
X360 X
X4618 Y
X423 X
Xf.Y 10 Z(\017)s
X494 X
Xf.R 10 Z(Code)s
X682 X(maintenance)s
X1021 X(.)s
X1109 X(We)s
X1251 X(only)s
X1418 X(have)s
X1593 X(to)s
X1694 X(get)s
X360 X
X4691 Y
X494 X
Xf.B 10 Z(saenv)s
X653 X(.setup)s
X852 X
Xf.R 10 Z(working)s
X1103 X(once)s
X1229 X(.)s
X1298 X(As)s
X1401 X(we)s
X1508 X(integrated)s
X360 X
X4764 Y
X494 X
Xf.B 10 Z(sahead)s
X730 X
Xf.R 10 Z(and)s
X866 X
Xf.B 10 Z(saenv)s
X1065 X
Xf.R 10 Z(into)s
X1209 X(our)s
X1337 X(tools,)s
X1524 X(the)s
X1646 X(tools)s
X2016 X
X448 Y
X2150 X(shrank)s
X2361 X(because)s
X2607 X(they)s
X2755 X(no)s
X2854 X(longer)s
X3057 X(contained)s
X3350 X(the)s
X2016 X
X521 Y
X2150 X(research)s
X2395 X(code)s
X2521 X(.)s
X2016 X
X594 Y
X2079 X
Xf.Y 10 Z(\017)s
X2150 X
Xf.R 10 Z(Performance)s
X2491 X(.)s
X2553 X(A)s
X2624 X(tool)s
X2751 X(can)s
X2867 X(source)s
X3064 X
Xf.B 10 Z(sahead)s
X3283 X
Xf.R 10 Z(faster)s
X2016 X
X667 Y
X2150 X(than)s
X2287 X(it)s
X2347 X(can)s
X2462 X(do)s
X2550 X(the)s
X2654 X(research)s
X2877 X(.)s
X2016 X
X740 Y
X2079 X
Xf.Y 10 Z(\017)s
X2150 X
Xf.R 10 Z(Easily)s
X2342 X(used)s
X2488 X(by)s
X2578 X(other)s
X2739 X(interpreters)s
X3044 X(.)s
X3108 X(The)s
X3237 X(Bourne)s
X2016 X
X813 Y
X2150 X(shell)s
X2303 X(code)s
X2455 X(which)s
X2644 X(sets)s
X2771 X(variables)s
X3038 X(in)s
X3115 X
Xf.B 10 Z(sahead)s
X3336 X
Xf.R 10 Z(and)s
X2016 X
X886 Y
X2150 X
Xf.B 10 Z(saenv)s
X2338 X
Xf.R 10 Z(\256les)s
X2479 X(can)s
X2602 X(be)s
X2695 X(easily)s
X2882 X(massaged)s
X3172 X(into)s
X3306 X(code)s
X2016 X
X959 Y
X2150 X(suitable)s
X2381 X(for)s
X2480 X(sourcing)s
X2731 X(by)s
X2819 X
Xf.B 10 Z(perl)s
X2957 X
Xf.R 10 Z(or)s
X3034 X
Xf.B 10 Z(csh)s
X3149 X
Xf.R 10 Z(scripts)s
X3324 X(.)s
X2016 X
X1032 Y
X2079 X
Xf.Y 10 Z(\017)s
X2150 X
Xf.R 10 Z(Documentation)s
X2562 X(.)s
X2626 X(We)s
X2744 X(document)s
X3032 X(differences)s
X3354 X(we)s
X2016 X
X1105 Y
X2150 X(encounter)s
X2504 X(in)s
X2647 X(the)s
X2820 X(master)s
X3090 X(version)s
X3377 X(of)s
X2016 X
X1178 Y
X2150 X
Xf.B 10 Z(saenv)s
X2309 X(.setup)s
Xf.R 10 Z(,)s
X2537 X(and)s
X2675 X(to)s
X2770 X(some)s
X2954 X(extent)s
X3161 X(in)s
X3256 X
Xf.B 10 Z(saenv)s
X3415 X
Xf.R 10 Z(.)s
X2016 X
X1251 Y
X2150 X(This)s
X2314 X(gives)s
X2500 X(us)s
X2604 X(a)s
X2679 X(centralized)s
X3019 X(place)s
X3206 X(to)s
X3302 X(store)s
X2016 X
X1324 Y
X2150 X(information)s
X2465 X(.)s
X2016 X
X1451 Y
X2587 X
Xf.B 10 Z(Drawbacks)s
X2016 X
X1560 Y
X2160 X
Xf.R 10 Z(The)s
X2298 X(primary)s
X2543 X(drawback)s
X2836 X(to)s
X2922 X(the)s
X3038 X(approach)s
X3317 X(we've)s
X2016 X
X1633 Y(taken)s
X2188 X(is)s
X2260 X(a)s
X2317 X(typical)s
X2527 X(centralization)s
X2920 X(problem)s
X3142 X(.)s
X3208 X(Each)s
X3369 X(host)s
X2016 X
X1706 Y(has)s
X2139 X(many)s
X2322 X(of)s
X2412 X(its)s
X2511 X(system)s
X2732 X(administration)s
X3154 X(eggs)s
X3311 X(in)s
X3398 X(the)s
X2016 X
X1779 Y
Xf.B 10 Z(saenv)s
X2175 X(.setup/sahead/s)s
X2604 X(aenv)s
X2769 X
Xf.R 10 Z(basket)s
X2940 X(.)s
X3011 X(When)s
X3202 X(something)s
X2016 X
X1852 Y(goes)s
X2161 X(wrong)s
X2353 X(here,)s
X2508 X(many)s
X2679 X(tools)s
X2832 X(can)s
X2949 X(break)s
X3121 X(in)s
X3197 X(interesting)s
X2016 X
X1925 Y(ways)s
X2153 X(.)s
X2220 X(That's)s
X2419 X(why)s
X2561 X(it)s
X2627 X(is)s
X2700 X(so)s
X2786 X(important)s
X3073 X(to)s
X3152 X(do)s
X3245 X(the)s
X3354 X(code)s
X2016 X
X1998 Y(testing)s
X2217 X(on)s
X2305 X(the)s
X2409 X(representative)s
X2807 X(hosts)s
X2944 X(.)s
X2016 X
X2092 Y
X2160 X(Also,)s
X2336 X(we)s
X2447 X(are)s
X2563 X(keeping)s
X2808 X(our)s
X2930 X(\256ngers)s
X3145 X(crossed)s
X3379 X(that)s
X2016 X
X2165 Y(no)s
X2136 X(vendor)s
X2374 X(will)s
X2532 X(use)s
X2674 X(the)s
X2809 X(pathnames)s
X3148 X
Xf.B 10 Z(/etc/dist)s
X3425 X
Xf.R 10 Z(or)s
X2016 X
X2238 Y
Xf.B 10 Z(/etc/saenv)s
X2343 X
Xf.R 10 Z(in)s
X2443 X(their)s
X2610 X
Xf.R 8 Z(UNIX)s
X2791 X
Xf.R 10 Z(variant)s
X2977 X(.)s
X3065 X(If)s
X3158 X(it)s
X3245 X(happens,)s
X2016 X
X2311 Y(though,)s
X2243 X(we'll)s
X2407 X(simply)s
X2615 X(rename)s
X2838 X(our)s
X2952 X(\256les)s
X3089 X(and)s
X3210 X(go)s
X3301 X(on)s
X3392 X(our)s
X2016 X
X2384 Y(merry)s
X2197 X(way)s
X2308 X(.)s
X2016 X
X2511 Y
X2560 X
Xf.B 10 Z(Future)s
X2779 X(Plans)s
X2016 X
X2620 Y
X2160 X
Xf.R 10 Z(By)s
X2265 X(the)s
X2375 X(time)s
X2523 X(this)s
X2648 X(paper)s
X2825 X(reaches)s
X3055 X(publication,)s
X3402 X(we)s
X2016 X
X2693 Y(expect)s
X2225 X(to)s
X2311 X(have)s
X2471 X(created)s
X2699 X(an)s
X2795 X
Xf.B 10 Z(salib)s
X2962 X
Xf.R 10 Z(\("ess)s
X3093 X(-ay)s
X3178 X(-lib"\))s
X3353 X(shell)s
X2016 X
X2766 Y(script)s
X2204 X(to)s
X2295 X(be)s
X2397 X(added)s
X2595 X(to)s
X2686 X(the)s
X2807 X(list)s
X2930 X(of)s
X3025 X(distributed)s
X3351 X(\256les)s
X3463 X(.)s
X2016 X
X2839 Y(Like)s
X2168 X
Xf.B 10 Z(sahead)s
X2393 X
Xf.R 10 Z(and)s
X2518 X
Xf.B 10 Z(saenv)s
Xf.R 10 Z(,)s
X2723 X(it)s
X2790 X(will)s
X2923 X(be)s
X3014 X(sourced)s
X3249 X(by)s
X3343 X(other)s
X2016 X
X2912 Y(tools)s
X2146 X(.)s
X2208 X(It)s
X2272 X(will)s
X2400 X(contain)s
X2620 X(a)s
X2674 X(library)s
X2876 X(of)s
X2955 X(useful)s
X3142 X(code)s
X3292 X(chunks)s
X2016 X
X2985 Y(and)s
X2144 X(macros)s
X2337 X(.)s
X2408 X(For)s
X2532 X(example,)s
X2808 X(it)s
X2877 X(will)s
X3013 X(contain)s
X3241 X(a)s
X3320 X
Xf.CW 10 Z(NEED)s
X2016 X
X3058 Y
Xf.R 10 Z(macro,)s
X2222 X(so)s
X2303 X(a)s
X2355 X(tool)s
X2481 X(could)s
X2651 X(do)s
X2739 X(something)s
X3039 X(like)s
X2016 X
X3160 Y
X2064 X
Xf.CW 10 Z(NEEDLIST="CRON_)s
X2664 X(P)s
X2744 X(CRON43_B)s
X3104 X(CRONCMD_B")s
X2016 X
X3233 Y
X2064 X(eval)s
X2264 X($NEED)s
X2016 X
X3356 Y
X2160 X
Xf.R 10 Z(Evaluating)s
X2481 X(this)s
X2609 X(macro)s
X2807 X(would)s
X3004 X(cause)s
X3184 X(the)s
X3297 X(calling)s
X2016 X
X3429 Y(script)s
X2200 X(to)s
X2287 X(quit)s
X2426 X(with)s
X2580 X(an)s
X2677 X(appropriate)s
X3015 X(error)s
X3178 X(message)s
X3439 X(if)s
X2016 X
X3502 Y(any)s
X2161 X(of)s
X2265 X(these)s
X2452 X(variables)s
X2744 X(had)s
X2890 X(unreasonable)s
X3292 X(values)s
X3463 X(.)s
X2016 X
X3575 Y(Boolean)s
X2271 X(variables)s
X2546 X(would)s
X2745 X(be)s
X2840 X(expected)s
X3110 X(to)s
X3194 X(be)s
X3289 X(true)s
X3425 X(or)s
X2016 X
X3648 Y(false,)s
X2195 X(path)s
X2345 X(variables)s
X2622 X(would)s
X2823 X(be)s
X2921 X(expected)s
X3195 X(to)s
X3283 X(contain)s
X2016 X
X3721 Y(slash)s
X2172 X(characters,)s
X2483 X(and)s
X2601 X(so)s
X2682 X(on)s
X2748 X(.)s
X2016 X
X3848 Y
X2575 X
Xf.B 10 Z(Conclusions)s
X2016 X
X3957 Y
X2160 X
Xf.R 10 Z(We)s
X2275 X(should)s
X2474 X(have)s
X2622 X(done)s
X2773 X(this)s
X2892 X(a)s
X2944 X(long)s
X3084 X(time)s
X3226 X(ago!)s
X2016 X
X4084 Y
X2471 X
Xf.B 10 Z(Acknowledgemen)s
X2976 X(ts)s
X2016 X
X4193 Y
X2160 X
Xf.R 10 Z(The)s
X2290 X(basic)s
X2454 X(idea)s
X2592 X(for)s
X2695 X(this)s
X2818 X(approach)s
X3088 X(came)s
X3256 X(out)s
X3368 X(of)s
X3450 X(a)s
X2016 X
X4266 Y(conversation)s
X2387 X(I)s
X2439 X(had)s
X2565 X(with)s
X2714 X(my)s
X2829 X(fellow)s
X3030 X(system)s
X3246 X(adminis-)s
X2016 X
X4339 Y(trator)s
X2200 X(Sid)s
X2328 X(Shapiro)s
X2535 X(.)s
X2613 X(Thanks)s
X2848 X(are)s
X2969 X(also)s
X3116 X(due)s
X3251 X(to)s
X3343 X(other)s
X2016 X
X4412 Y(coworkers)s
X2316 X(who)s
X2453 X(have)s
X2602 X(put)s
X2710 X(up)s
X2799 X(with)s
X2940 X(problems)s
X3210 X(caused)s
X3414 X(by)s
X2016 X
X4485 Y(the)s
X2138 X("implementation)s
X2626 X(details")s
X2829 X(.)s
X2908 X(The)s
X3053 X
Xf.B 10 Z(upd)s
X3164 X(-dist)s
X3331 X
Xf.R 10 Z(script)s
X2016 X
X4558 Y(was)s
X2142 X(originally)s
X2424 X(written)s
X2636 X(by)s
X2724 X(Diane)s
X2906 X(Alter)s
X3044 X(.)s
X360 X
X4967 Y
Xf.B 10 Z(18)s
X2096 X(LISA)s
X2273 X(V)s
X2343 X(\261)s
X2398 X(Sep)s
X2502 X(.)s
X2541 X(30)s
X2607 X(-Oct)s
X2733 X(.)s
X2772 X(3,)s
X2844 X(1991)s
X2998 X(\261)s
X3053 X(San)s
X3182 X(Diego,)s
X3384 X(CA)s
X5280 Y
Xpagebot
X
X%%Page: 19 9
Xpagetop
Xstdencoding /NTimes-Bold /Times-Bold RE
X/f.B /NTimes-Bold findfont def 
Xf.B 10 Z
X600 X
X448 Y
Xstdencoding /NTimes-Roman /Times-Roman RE
X/f.R /NTimes-Roman findfont def 
Xf.R 10 Z(Bob)s
X735 X(Arnold)s
X949 X(is)s
X1020 X(a)s
X1076 X(Systems)s
X1325 X(Administrator)s
X1726 X(for)s
X1829 X(the)s
X1937 X(Data)s
X600 X
X521 Y(Center)s
X803 X(group)s
X981 X(at)s
X1054 X(the)s
X1160 X(Ingres)s
X1350 X(Products)s
X1607 X(Division)s
X1861 X(of)s
X1940 X(Ask,)s
X600 X
X594 Y(Incorporated)s
X940 X(.)s
X1006 X(He)s
X1111 X(has)s
X1227 X(six)s
X1332 X(years)s
X1501 X(of)s
X1584 X(experience)s
X1902 X(in)s
X1982 X(the)s
X600 X
X667 Y(\256eld)s
X719 X(.)s
X789 X(Bob)s
X930 X(plays)s
X1102 X(in)s
X1185 X(the)s
X1298 X("Insensitives",)s
X1716 X(who's)s
X1908 X(motto)s
X600 X
X740 Y(is)s
X677 X
Xstdencoding /NTimes-Italic /Times-Italic RE
X/f.I /NTimes-Italic findfont def 
Xf.I 10 Z(Rock)s
X843 X(&)s
X927 X(Roll)s
X1071 X(Without)s
X1315 X(Shame!!!)s
X1613 X
Xf.R 10 Z(He)s
X1724 X(can)s
X1850 X(be)s
X1946 X(con-)s
X600 X
X813 Y(tacted)s
X795 X(via)s
X911 X(U)s
X959 X(.S)s
X1013 X(.)s
X1064 X(Mail)s
X1224 X(at)s
X1306 X(ASK/Ingres)s
X1657 X(Products)s
X1923 X(Divi-)s
X600 X
X886 Y(sion,)s
X760 X(1080)s
X924 X(Marina)s
X1149 X(Village)s
X1380 X(Parkway,)s
X1663 X(Alameda,)s
X1955 X(CA,)s
X600 X
X959 Y(94501)s
X765 X(.)s
X977 X(Send)s
X1283 X(electronic)s
X1720 X(mail)s
X2012 X(to)s
X600 X
X1032 Y
Xstdencoding /NCourier /Courier RE
X/f.CW /NCourier findfont def 
Xf.CW 10 Z(rca@Ingres)s
X1000 X(.com)s
X1160 X(.)s
X600 X
X1159 Y
X1175 X
Xf.B 10 Z(References)s
X600 X
X1268 Y
Xf.R 10 Z([1])s
X699 X(Bell)s
X905 X(Telephone)s
X1281 X(Laboratories,)s
X1730 X(Inc)s
X1815 X(.,)s
X1940 X
Xf.I 8 Z(UNIX)s
X600 X
X1341 Y
X699 X
Xf.I 10 Z(Programmer's)s
X1136 X(Manual)s
Xf.R 10 Z(,)s
X1404 X(Seventh)s
X1663 X(Edition,)s
X1921 X(Vols)s
X2047 X(.)s
X600 X
X1414 Y
X699 X(1&)s
X810 X(2,)s
X886 X(New)s
X1038 X(York,)s
X1217 X(NY:)s
X1358 X(Holt,)s
X1521 X(Rinehart)s
X1778 X(and)s
X1901 X(Wins-)s
X600 X
X1487 Y
X699 X(ton,)s
X823 X(1983)s
X955 X(.)s
X600 X
X1560 Y([2])s
X699 X(Larry)s
X882 X(Wall)s
X1049 X(and)s
X1181 X(Randal)s
X1406 X(L)s
X1447 X(.)s
X1500 X(Schwartz,)s
X1802 X
Xf.I 10 Z(Program-)s
X600 X
X1633 Y
X699 X(ming)s
X858 X(`perl')s
Xf.R 10 Z(,)s
X1053 X(Sebastapol,)s
X1386 X(CA:)s
X1523 X(O'Reilly)s
X1783 X(&)s
X1860 X(Associ-)s
X600 X
X1706 Y
X699 X(ates,)s
X843 X(Inc)s
X928 X(.,)s
X984 X(1991)s
X1116 X(.)s
X600 X
X4967 Y
Xf.B 10 Z(LISA)s
X777 X(V)s
X847 X(\261)s
X902 X(Sep)s
X1006 X(.)s
X1045 X(30)s
X1111 X(-Oct)s
X1237 X(.)s
X1276 X(3,)s
X1348 X(1991)s
X1502 X(\261)s
X1557 X(San)s
X1686 X(Diego,)s
X1888 X(CA)s
X3654 X(19)s
X5280 Y
Xpagebot
X
X%%Page: 20 10
Xpagetop
Xstdencoding /NTimes-Bold /Times-Bold RE
X/f.B /NTimes-Bold findfont def 
Xf.B 10 Z
X360 X
X4967 Y(20)s
X2096 X(LISA)s
X2273 X(V)s
X2343 X(\261)s
X2398 X(Sep)s
X2502 X(.)s
X2541 X(30)s
X2607 X(-Oct)s
X2733 X(.)s
X2772 X(3,)s
X2844 X(1991)s
X2998 X(\261)s
X3053 X(San)s
X3182 X(Diego,)s
X3384 X(CA)s
X5280 Y
Xpagebot
X
X%%Trailer
Xlastpage
X
SHAR_EOF
echo 'File saenv.paper.ps is complete' &&
chmod 0644 saenv.paper.ps ||
echo 'restore of saenv.paper.ps failed'
Wc_c="`wc -c < 'saenv.paper.ps'`"
test 98998 -eq "$Wc_c" ||
	echo 'saenv.paper.ps: original size 98998, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= src/backup/doc/alld.features ==============
if test ! -d 'src'; then
    echo 'x - creating directory src'
    mkdir 'src'
fi
if test ! -d 'src/backup'; then
    echo 'x - creating directory src/backup'
    mkdir 'src/backup'
fi
if test ! -d 'src/backup/doc'; then
    echo 'x - creating directory src/backup/doc'
    mkdir 'src/backup/doc'
fi
if test -f 'src/backup/doc/alld.features' -a X"$1" != X"-c"; then
	echo 'x - skipping src/backup/doc/alld.features (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting src/backup/doc/alld.features (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'src/backup/doc/alld.features' &&
X
X		Notes on alldisks, dump, and cpio		p. 1 of 2
X
XBSD "dump" command syntax and example:
X	dump <key> <options> <filesystem> 
X	dump 0ufbsd /dev/nrmt2h 10 2200 6250 /dev/rra3g
X
XBSD "dump" design features:
X1)  Backs up entire filesystem
X2)  Backs up *only* entire filesystem
X3)  Can do levels 0-9 (we use "0" for fulls and "5" for incrementals)
X4)  Handles multi-volume archives
X5)  Makes sure each volume is writable before attempting write
X6)  Handles EOT well (by asking operator to restart the current dump volume)
X7)  Puts list of files it *intends* to back up at head of dump archive
X8)  Archive can be restored anywhere since data is stored w/ *relative* paths
X9)  User interface is good
X10) All messages from "dump" actually *say* that they are from dump
X11) Reports exit status (0=successful, 1=startup errors, 3=abort/failure)
X12) Logs time and level of successful backups (in /etc/dumpdates file) ("u" key)
X13) It is robust
X14) It has a great interactive user interface for file recovery called "restore"
X15) Filesystem does not have to be mounted to back it up
X16) Understands both (raw) filesystem names and mount points (from /etc/fstab)
X17) Handles writing archive to another machine over the net
X
XBSD "dump" problems:
X1)  Archive does not store info on how the filesystem is currently mounted
X2)  Older versions don't look up mount point in /etc/fstab carefully enough
X3)  Under SunOS 4.x (and some others?) "dump" runs as your realuid, so
X    the "backup" account must be in a group which can read the raw device
X
X=============================================================================
X
XAT&T "cpio" command syntax and examples:
X	cpio -o[aBcv]				# cpio "output" mode
X	cpio -i[bBcdfmrsStuv6] [patterns]	# cpio "input" mode
X	cpio -p[adlmuv] [directory]		# cpio "pass" (one-pass) mode
X	cd /usr ; find . -print | cpio -ocB > /dev/rmt8
X	cd $target ; cpio -icBudm [patterns] < /dev/rmt8
X	mkdir $todir ; cd $fromdir ; find . -print | cpio -pudm $todir
X
XAT&T "cpio" features:
X1)  Backs up directories, not filesystems
X2)  Accepts unlimited list of input files for archiving
X
XAT&T "cpio" problems:
X1)  Backs up directories, not filesystems
X2)  List of input files must be read from standard in
X3)  Archive can only be written to standard out
X4)  Older versions don't handle multi-volume archives at all, and newer
X    versions don't handle multi-volume archives well
X5)  Does not put header file at beginning of archive
X6)  Does not handle putting archives on a remote machine
X7)  Updates access times of files it reads
X8)  About a hundred more problems that you don't want to hear about ...
X
X
X		Notes on alldisks, dump, and cpio		p. 2 of 2
X
XHere are examples of the 'alldisks' backup script command syntax:
X	backup help
X	backup examples
X	backup full   /usr/rti       cart1
X	backup incr   alldisks       cheeta:tape
X	backup get    onedisk        dat0
X	backup get    listdisks      tape0
X	backup verify /m/collie/home poodle:video
X	backup verify lastdisk       video2
X	backup verify alldisks       dat0
X	backup devcheck              video1
X	backup devcheck              video,/dev/rmt0,/dev/nrmt0
X
XFeatures of the 'alldisks' backup script:
X1)  Backs up *only* entire machines, or ...
X2)  Backs up *only* entire filesystem, even for cpio backups
X3)  Can do levels "full" or "incremental", even for cpio backups
X4)  Handles multi-volume archives, even for cpio backups
X5)  Makes sure each volume is writable before attempting write for cpio backups
X6)  Handles EOT well (uh, thanks to "dump"; cpio alldisks doesn't handle EOT
X    but luckily we can avoid actually hitting EOT by specifying the number
X    of 5k blocks for the drive in bkp.media)
X7)  Puts list of filesystems it *intends* to backup (and other info too) at
X    head of multi-filesystem archive
X8)  Archive can be restored to any host with the same OS (thanks to "dump"
X    and careful use of cpio)
X9)  User interface is good
X10) All messages from "backup" actually *say* that they are from backup
X11) Reports exit status of dump/restore/cpio
X12) Logs time and level of all backups, even unsuccessful ones:
X	each successful "dump" backup logged in /etc/dumpdates
X	each successful "cpio" backup logged in ~backup/cpiodates
X	all backups logged in ~backup/$workdir/*
X13) It is relatively robust, even when using cpio
X14) It has its own great interactive user front end for file recovery
X	makes sure user set up is OK before starting "restore"
X	makes sure user set up is OK before starting "cpio -icB < /dev/whatever"
X	(entire cpio restore only; interactive cpio restore does not exist)
X15) Backs up all mounted filesystems (except those listed in ~backup/bkp.donot)
X16) Understands *only* mounted filesystems
X17) Uses config file (/etc/dist/bkp.media) which is distributed to all boxes
X18) Verifies rewind and no-rewind device names in bkp.media for every backup
X19) Checks cartridge tapes for correct "ftpi" density
X20) Warns the user about known problems
X21) Tries to send mail to specified email address in the event of *some*
X    known and *any* user-reported failures (this has often notified support
X    staff that there are problems before the users discover them)
X22) Tells the user the name of the first filesystem on each volume
X23) Rewinds the media and takes it offline (where possible)
X24) The script sources /etc/dist/sahead, which sources /etc/saenv
X25) Works on a wide variety of UNIX's (1st release 17 hosts, now >100 hosts)
X26) The code is available, mostly readable, well-maintained, & heavily commented
X27) Has saved major labor, media, and storage costs
X28) Does all this even when using cpio
X29) Uses dump when it can (regardless of what it is called), and cpio if it must
X30) Can verify the archive is readable
SHAR_EOF
chmod 0644 src/backup/doc/alld.features ||
echo 'restore of src/backup/doc/alld.features failed'
Wc_c="`wc -c < 'src/backup/doc/alld.features'`"
test 5703 -eq "$Wc_c" ||
	echo 'src/backup/doc/alld.features: original size 5703, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= src/backup/doc/alld.q ==============
if test -f 'src/backup/doc/alld.q' -a X"$1" != X"-c"; then
	echo 'x - skipping src/backup/doc/alld.q (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting src/backup/doc/alld.q (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'src/backup/doc/alld.q' &&
X
X			Questions About 'alldisks'		p. 1 of 1
X
X1) How do I tell if a tape is good?
XAns: you can't, not really, not without an awful lot of work and
Xunderstanding of exactly how the tapes were made.  It's usually
Xeasier to do the backup again if you have any questions.  Of course
Xdoing it again will also be pointless if you know that some problem
Xwill happen again next time.
X
X2) Does this bread error message from dump mean there was a problem?
X	DUMP: bread: (THIS SHOULD NOT HAPPEN) . . . 
X(maybe?) followed by
X	DUMP: do you want to continue? (yes/no)".
XAns: Yes.  This is a "block read" error, and it means that "dump" had a
Xproblem reading the disk, usually due to a bad block on the disk.
XObviously this *should* never happen.  If you get this kind of error
Xmessage while making a dump, there's no harm in continuing with the
Xbackup, but you shouldn't put too much faith in the resulting tape
Xeither.  If you have the time to deal with it, great, but otherwise
Xthere's no harm in punting and falling back on the previous known
Xsuccessful backups.
X
XIn general, if you get a *read* error of any sort from a disk,
Xthat will mean the dump is not completely trustworthy.  This problem
Xshould be reported.
X
X3) What if I get a read error from a filesystem while making an
Xalldisks backup?
XAns: Then the dump of that filesystem won't be completely trustworthy.
XHowever, other dumps on the alldisks tape(s) may be just fine.  In that
Xcase, you can trust some dumps in the alldisks backup, but not others.
X
X4) Does these write error messages mean there was a problem?
X# Pyramid(dragon), Ultrix 2.0/3.0:
X#       DUMP: Write error on tape 4
X# CCI(camel), Gould(gopher), Pyramid(dragon), Sequent(salmon):
X#       DUMP: Tape write error on tape 1
X# 4.3BSD(cobra), CCI(llama), Mt. Xinu(moose), Sun(ewok):
X#       DUMP: Tape write error 277 feet into tape 4
XFollowed by:
XDUMP: Do you want to restart? (yes/no)"
XAns: Yes, "dump" thought there was a problem with writing to the tape.
XAnd, you should always say "yes" to restart the tape.
X
X5) So, just what caused the "Tape write error", anyhow?
XAns: There are three possible answers:
XAns 1) "dump" thinks the tape was longer than it really is.  Obviously
Xyou'll get this problem if you put in a 600 foot 9track tape.  A much
Xrarer cause is that some parameter is wrong in /etc/dist/bkp.media, e.g.
Xsuppose the 9track tape length is specified as "2700" feet.  The fix in
Xeither case is obvious (but make sure the *master* bkp.media gets fixed too.)
XAns 2) The tape really has a bad spot in it.  The solution here is to
Xput in a new tape (but you were going to do that anyway, right?).
XAns 3) The tape is an alldisks tape, and it did a bunch of successful
Xdumps to this tape before the current dump started.  That almost filled
Xup the tape, and when this dump got going it didn't have as much room
Xas it thought it did.  Remember, when a dump starts, it always thinks
Xthat it's at the beginning of the tape.  dump has never heard of an
Xalldisks backup.  Solve this by putting in a new tape, too.
X
X6) Do I ever have to lie to the alldisks script?
XNo.  Always tell it the truth.  But you do sometimes have to lie to the
Xrestore program if you are doing an interactive restore using
X"backup get /fsname [host:]media"
XRemember, the BSD restore program has never heard of an alldisks archive.
XIt always thinks it is starting to read a BSD dump at the beginning of a
Xtape.  So if you are reading a dump in the middle of an alldisks tape
Xset, you should always say "1<return>" when restore asks you to
X"Specify next volume #:".  You have to lie to restore no matter which
Xalldisks volume you are trying to read.
SHAR_EOF
chmod 0644 src/backup/doc/alld.q ||
echo 'restore of src/backup/doc/alld.q failed'
Wc_c="`wc -c < 'src/backup/doc/alld.q'`"
test 3637 -eq "$Wc_c" ||
	echo 'src/backup/doc/alld.q: original size 3637, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= src/backup/doc/gen.restore.q ==============
if test -f 'src/backup/doc/gen.restore.q' -a X"$1" != X"-c"; then
	echo 'x - skipping src/backup/doc/gen.restore.q (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting src/backup/doc/gen.restore.q (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'src/backup/doc/gen.restore.q' &&
X
X		Generic Questions About Restoring Files		p. 1 of 10
X		Bob Arnold (rca@ingres.com)
X		Tue May  1 1990, revised Apr  8 1992
X
XIn general, there is a list of questions that the user should be able
Xto help you with.  The more they can tell you, the easier and faster it
Xwill be to get it back for them.  If they can't tell you what you need
Xto know, you'll have to figure it out as best you can.
X
Xa) A list of files/directories/filesystems to be recovered
Xb) Which are they?  files? directories? filesystems?
Xc) What filesystem did the data really lived on?	# Basically, what tapes
Xd) What machine did the data really lived on?		# should I get this
Xe) When was the last good version modified?		# data back from?
Xf) How much disk space did it take up?		# Will it fit back on the disk?
Xg) Where should the data be restored to?	# often back where it came from
Xh) Who should own the data?			# usually the original owner
X
X(If this list is incomplete, consult lylace's checklist.)
X
XMy suggestion: Call the user.  email is good for documenting the original
Xrequest, and it's good for listing filenames - items a) and b) above.
XThat way, the user can't say "I told you file 'x'" when they didn't.
XBut it's not very good for making sure you have the real goods on
Xquestions c) through h).  Conversation is best to make sure that they will
Xtell you as much as they can.  Ask probing questions if need be, e.g.
X"Is 'x' a directory or a file?"
X
XIn sum - dig up as much info as you can.  Talking with the user makes
Xthem apreciate how much work it is to help them out.  Talking with them
Xlet's them really know that someone is handling their request.  It's the
Xfastest way to clarify unclear requests.  It's easier to talk than
Xtyping email.  It's often the only way to get the info you really
Xneed.  Last, the user can't really be expected to know, much less tell
Xyou in their original request, all the info you need to help them out.
XMany of them really don't have a clue how much research is involved and
Xshouldn't be expected to.
X
XWith the information from a) through f), you should be able to find out:
Xi) which full and/or incremental backups their data might be on
Xj) when they were made
X
XArmed with this info, you can call the user again, tell them this info,
Xand figure out:
Xk) Will the most recent full do the trick, or do I need to restore from the
Xlatest incremental, or do I need both the full *and* the latest incremental?
X
XLast, you should find out from them
Xl) Is there a current version of their data currently on line?
Xm) If so, do they care about it?
Xn) If they care about it, is the real path to it the same as the data they
Xwant to have recovered?
Xo) If they don't care about it, can you remove it or write over it (destroy
Xit) with the version you're about to get from backups for them?
X
XOne occasionally handy question to ask them:
Xp) How much work would it take for them to recreate the lost data if
Xyou can't find it on backups?
X
X		Generic Questions About Restoring Files		p. 2 of 10
X
X		Common Problems and Research Methods:
X
X1) What if the user can't tell you very much?
XAns: They at least have to know the names of the files/directories they want
Xback.  They also should be able to tell you how they accessed them.  Like
Xdid they do a "cd such-and-such-dir ; vi screwed.up.file", or something.
XWith whatever info you get from them, you can become root on that machine
Xand try to duplicate their access methods.
X
X2) Suppose they only know what the file is called on some machine?
XAns: Log into that machine, and try to find the directory the data
Xused to live *in* (i.e. what was the parent directory for the data)
Xbefore they trashed or removed it.  Then, there are two handy methods:
X# df .		# df of ".", i.e. report "disk free" space in my current dir.
X		# This is the easiest way but it only works on BSD systems
X# df ; pwd	# do a "df" to list mounted filesystems, and "pwd" to figure
X		# out what your real current directory is, and hence which
X		# filesystem your current directory is in.
X
XThis may show you that the file is really an NFS filesystem.
X"/dev/" filesystems are local - they really live on the machine.
X"host:" filesystems really live on "host" - note the colon (:) character.
XIf it's really an NFS filesystem, you'll have to log into the remote
Xhost and look around.
Xk9 651# df
XFilesystem            kbytes    used   avail capacity  Mounted on
X/dev/xd0a              15720    8489    5659    60%    /
X/dev/xd0g              71615   62150    2303    96%    /usr
X/dev/xd0h             444433       9  399980     0%    /install
X/dev/xd1h             472833  277110  148439    65%    /home
X/dev/xd1a              15720      44   14104     0%    /tmp
X/dev/xd1g              43215       9   38884     0%    /usr/var
Xhound:/fe12           799669  698484   21218    97%    /m/hound/fe12
Xmoose:/usr/manuals    140488  118785    7654    94%    /m/moose/usr/manuals
Xmoth:/usr/local/icon  988508  860342   29315    97%    /usr/local/icon
Xmoth:/usr/local/src   988508  860342   29315    97%    /usr/local/src
X
XFor example, if someone tells you that they lost a file from k9 called
X/m/hound/fe12/important, then you'll have to log onto hound and look
Xfor it in /fe12 (on hound).
X
XIt will also be useful to figure out the complete path to the data's
Xparent directory.  Once again pwd comes in handy.
Xk9 652# pwd
X/home/k9/rti/sys/rca
X
X		Generic Questions About Restoring Files		p. 3 of 10
X
X3) What about symbolic links?
XHard linked files have to be in the same filesystem.  Unlike hard links,
Xsymbolic links can point from one filesystem into another.  Example:
X
Xk9 653# ls -l /usr/rti
Xlrwxrwxrwx  1 root           12 Dec 22 14:52 /usr/rti -> /home/k9/rti
X
XThat's why is it's a good idea to "cd parentdir ; df ." to find out the
Xfilesystem where the lost data really lived.  For example, let's say
Xthat Bob Arnold, who's login name is "rca", lost a file in his home
Xdirectory called "important".  You would become root on k9 somehow, and
Xthen:
X
Xk9 654# cd ~rca		# rca's home directory is the "parentdir"
Xk9 655# ls important	# see if some version of the file is there
Ximportant not found	# it's not
Xk9 656# df .		# df of the filesystem containing my current directory
XFilesystem            kbytes    used   avail capacity  Mounted on
X/dev/xd1h             472833  277117  148432    65%    /home
Xk9 657# pwd		# get the real full path to my current directory
X/home/k9/rti/sys/rca
X
XThis would show you need the apropriate backup of the k9:/home filesystem.
X
X4) When was a certain filesystem backed up?  And was it a full or an
Xincremental?
XAns: Unfortunately there are two places to look for this info.
XOn machines that have BSD's "dump" program (all BSD-based machines and
Xeven a few System V machines like camel and the HP's), you can look in
X/etc/dumpdates for the device name of the filesystem in question.
XGoing back to the example of k9:~rca/important, we already know that
Xrca's home directory really lives in the /home filesystem, and that
Xthe partition/device currently mounted as /home is /dev/xd1h.  Check this:
X
Xk9 658# egrep /dev/rxd1h /etc/dumpdates	# note the extra "r" for raw device
X/dev/rxd1h       0 Thu Feb 15 02:24:42 1990
X/dev/rxd1h       5 Wed Feb 21 05:59:18 1990
X
XLook in the second column, which is where the dump level is recorded by dump.
XA level 0 is a full, and a level 5 is an incremental.
X
XOne catch - dumpdates does not contain a history of all successful dumps.
XIt only records the last successful dump for each filesystem for each level.
XIf there were also successful level 5's of k9:/dev/rxd1h on the Monday and
XTuesday before Feb 21, that won't be recorded there.
X
XSo the second place to look for this info is in backup's home directory.
XThat's where you have to look if the machine is a System V box and it
Xdoesn't have BSD dump.  The procedure (let's say on raccoon) is
X# csh					# root's login shell on raccoon is "sh"
Xraccoon# cd ~backup			# now cd to backup's home directory
Xraccoon# grep /usr/rti cpiodates	# and look for /usr/rti in cpiodates
Xfull    0406171292      Mon Apr 06 17:12 1992   /usr/rti
Xincr    0407180392      Tue Apr 07 18:03 1992   /usr/rti
X
X
X		Generic Questions About Restoring Files		p. 4 of 10
X
X5) Suppose the user doesn't know when the latest "good" version is?
XAns: Then the user is probably a ninny.  Unfortunately, this also means
Xthat you may have to start with the most recent backup, and work your way
Xback in time through older and older backups until you find something
Xthat will make the user happy.  This is a good time to ask them how
Xmuch work it would be to recreate the file from scratch.
X
X6) Where do you restore the data to?
XAns: That depends on whether it will it fit where the user wants it?
XRe where the user wants it, sometimes they don't mind if you clobber the
Xcurrent (possibly mangled) version, sometimes they do.  It's simpler if
Xthey don't care about whatever current version might be on line.  Let's
Xlet that go for a minute, and look at whether it will fit.
X
XItems f) and b) above are attempts to get at that question.  Sometimes
Xthe user will say that it was a simple little file.  Sometimes they'll
Xsay it was a huge directory, or (rarely) even a whole filesystem.
XSometimes they'll even know how big it was.  This is why it's a good idea
Xto call the user - it makes a big difference if their data was 1Meg or 100Meg.
XEven a ballpark estimate is helpful.
X
XIf it's a directory, it's probably not tiny.  Maybe it's only small, maybe
Xit's big.  Filesystems come in all sizes, too.  A reasonable guess can often
Xbe made by looking at the current system.
X
XThen you have to figure out whether there's space where they want it.
XAgain, "df" comes in handy since it tells you how much space is free.
XBut remember:
X	o	BSD "df" tells you the answer in kilobytes (1024char/block)
X	o	System V "df" reports in 512character blocks.  
X	o	1Meg = 1024 "BSD blocks"
X	o	1Meg = 2048 "SysV blocks"
X
XBack to k9:
Xk9 659# df .		# df of my current directory
XFilesystem            kbytes    used   avail capacity  Mounted on
X/dev/xd1h             472833  277117  148432    65%    /home
X
XIn this example, it would be pretty surprising if ~rca/important didn't fit
Xin k9:/home.
X
XIf the user does have a current version on line, maybe it's about the
Xsame size as the version your going to recover from backups.  In that
Xcase you can use the "cd current_version_dir ; du -s ." to get the
Xdisk usage summary of that directory.  "du -s" can take a while if
Xthe directory in question has lots of subdirectories in it.
X
Xk9 660# cd ~rca ; du -s .
X124	.	# this means that "." occupies 124k
X
XAgain, BSD and SysV report in different units (1k and 0.5k respectively).
X
X
X		Generic Questions About Restoring Files		p. 5 of 10
X
X			A Simple Research Example:
X
XLet's say the user sends a request like:
X
X	Please restore the file "~rca/stat_rpt/Nov89" which I accidentally
X	removed from my account on k9.  My home directory is in the
X	/home filesystem on k9.  I haven't touched the file since I wrote
X	my report back in November.  Call me at x2819 if you have any
X	questions.  Thanx!
X
X			Bob
X
XWhat questions does this answer?  (This is left as an exercise for the reader.)
XHere's a list of all the questions:
X
Xa) A list of files/directories/filesystems to be recovered
Xb) Which are they?  files? directories? filesystems?
Xc) What filesystem did the data really lived on?	# Basically, what tapes
Xd) What machine did the data really lived on?		# should I get this
Xe) When was the last good version modified?		# data back from?
Xf) How much disk space did it take up?		# Will it fit back on the disk?
Xg) Where should the data be restored to?	# often back where it came from
Xh) Who should own the data?			# usually the original owner
Xi) which full and/or incremental backups their data might be on
Xj) when they were made
Xk) Will the most recent full do the trick, or do I need to restore from the
Xlatest incremental, or do I need both the full *and* the latest incremental?
Xl) Is there a current version of their data currently on line?
Xm) If so, do they care about it?
Xn) If they care about it, is the real path to it the same as the data they
Xwant to have recovered?
Xo) If they don't care about it, can you remove it or write over it (destroy
Xit) with the version you're about to get from backups for them?
Xp) How much work would it take for them to recreate the lost data if
Xyou can't find it on backups?
X
XOnce these questions are answered, you grab the appropriate tapes and get
Xthe file back for him.  What, you want to know how?  Well, that's in the
Xnext section.
X
X		Generic Questions About Restoring Files		p. 6 of 10
X
X			Actual File Restores:
X
X		Simple Full (i.e., "onedisk") "dump"s:
X
XTo recover lost data from a simple "onedisk" "dump" tape, do:
X
X1) Get all the research done that we've talked about - questions a) thru p)
Xabove.  This includes the directory that you're going to put the data in.
X
X2) Get the appropriate dump tape(s) from the tape racks or offsite storage
Xor wherever.
X
X3) load the first tape of the dump into the tape drive.
X
X4) become root (via login or "su") on the machine that you're restoring data to.
X
X5) Figure out, using /etc/dist/backup.media, which machine has the tape
Xdrive that you're going to use.  The drive obviously has to be of the same
Xtype and density that the tape was made in.  Hopefully, you'll be able to
Xuse a drive on the machine you're restoring the data to; if not, use one
Xon a compatible remote machine.  It's usually (but not always) possible
Xto use the same machine and drive that the tape was written on.
X
X6) If it's a multi-volume dump (that's *different* from a multi-volume
Xalldisks backup), decide what is the fastest way to get your file(s).
XDo you want to work from the first volume towards the last, or the
Xlast volume towards the first?  Either method will work, but usually
Xone will be faster than the other, depending on how many files you
Xactually are getting off the dump tape.  Here's the general rule:
X
X	o	if you're getting only a few files, work last to first
X	o	if you're getting lots of files, work first to last
X
XWhy?  Because every UNIX file has an "inode" (Index Node) number associated
Xwith it.  The dump knows the inode number, and puts files on tape in
Xascending inode order.  When restore looks at the first file on a dump
Xvolume, it can tell whether the file is somewhere farther along in the
Xdump or not.  If it's farther along, restore keeps reading the tape;
Xif not, it asks you to choose another volume.
X
XWhat if you only want one file and its inode number is, say 132?  Is it
Xfaster to work first to last or vice-versa, and does this follow the rule
Xor is it an exception?  (To anticipate a bit, restore tells you file inode
Xnumbers if you toggle "verbose" on at the "restore > " prompt.)
X
X7) Figure out whether you'll use "restore" or "rrestore" (remote restore).
X	o	if the tape drive is on the local machine, use /etc/restore
X	o	if the tape drive is on a remote machine, use /etc/rrestore
X
X"rrestore" is usually used like this:
X	rrestore if host:/dev/tapename
X
X		Generic Questions About Restoring Files		p. 7 of 10
X
X8) Issue the following commands (let's say we're restoring from the
Xsimple example of getting k9:~rca/stat_rpt/Nov89 for "rca".):
Xk9 661# egrep k9 /etc/dist/backup.media	# figure out the "rewind" device name
Xk9      cart    xx      xx      rmt8            nrmt8           c
Xk9 662# cd /tmp				# building the restoration tree here
Xk9 663# pwd				# make sure the *csh* is really there
X/tmp					# yup, the csh is where we want it
Xk9 664# ls /home			# I'm about to demonstrate a point
X beagle/      export/      k9/          lost+found/
Xk9 665# /etc/restore if /dev/rmt8	# "i" for interractive restore
Xrestore > pwd				# pwd on the *tape* - proof positive!
X/					# we're in the root of this dump !!!
Xrestore > ls				# list all the files in the current dir
X.:					# . is the current dir on the *tape*
Xbeagle/	export/	k9/	lost+found/	# notice there isn't a "/home"
Xrestore > cd k9/rti/rca			# going down three levels at once - wow
Xrestore > pwd				# pwd - proving the point again
X/k9/rti/rca				# note no "/home" !!!
Xrestore > cd stat_rep			# oops - a typo
X./stat_rep is not on volume		# so very true
Xrestore > cd stat_rpt			# try again - this time fer sure
Xrestore > ls Nov89			# is it on this dump tape?
X Nov89					# Bingo!
Xrestore > add Nov89			# add Nov89 to the extraction list
Xrestore > ls Nov89			# is it marked for extraction?
X*Nov89					# the asterisk (*) means yes.
Xrestore > extract			# the extraction list is OK - do it
XYou have not read any volumes yet.	# well, this is virtually true
XUnless you know which volume your file(s) are on you should start
Xwith the last volume and work towards the first.
XSpecify next volume #: 2^M		# start with last volume
XMount volume 2
Xthen enter volume name (default: /dev/rmt8) ^M
XYou have read volumes: 2
XSpecify next volume #: 1^M		# work towards first volume
XMount volume 1
Xthen enter volume name (default: /dev/rmt8) ^M
X(sometimes various information appears)
Xchange owner/mode for '.'? no^M		# 	Always answer NO !!!!
Xrestore > help				# list available commands
XAvailable commands are:
X	ls [arg] - list directory
X	cd arg - change directory
X	pwd - print current directory
X	add [arg] - add `arg' to list of files to be extracted
X	delete [arg] - delete `arg' from list of files to be extracted
X	extract - extract requested files
X	setmodes - set modes of requested directories
X	quit - immediately exit program
X	what - list dump header information
X	verbose - toggle verbose flag (useful with ``ls'')
X	help or `?' - print this list
XIf no `arg' is supplied, the current directory is used
Xrestore > what				# gee, this is new, and great!
XDump   date: Wed Feb 21 22:24:47 1990
XDumped from: Wed Dec 31 16:00:00 1969
Xrestore > quit				# we're done with the restore, but ...
Xk9 666#					# the work isn't quite finished
X
X		Generic Questions About Restoring Files		p. 8 of 10
X
X8) continued from previous page
Xk9 666# ls -l /tmp/k9/rti/sys/rca/stat_rpt/Nov89
X-rw-r--r--  1 rca          2860 Nov 29 12:42 /tmp/k9/rti/sys/rca/stat_rpt/Nov89
Xk9 667# mv !$ ~rca/stat_rpt		# move the file
Xmv /tmp/k9/rti/sys/rca/stat_rpt/Nov89 ~rca/stat_rpt
Xk9 668# ls -l ~rca/stat_rpt/Nov89	# now root owns it
X-rw-r--r--  1 root         2860 Nov 29 12:42 /usr/rti/sys/rca/stat_rpt/Nov89
Xk9 669# chown rca !$			# chown rca "last arg on last command"
Xchown rca ~rca/stat_rpt/Nov89
Xk9 670# ls -l !$			# ls -l "last arg on last command"
Xls -l ~rca/stat_rpt/Nov89
X-rw-r--r--  1 rca          2860 Nov 29 12:42 /usr/rti/sys/rca/stat_rpt/Nov89
X
XNow we're done.  "rca" owns the file and it's where it belongs.
X
XIf command number 662 had said "cd /home" instead of "cd /tmp", e.g.
Xk9 662# cd /home			# building the restoration tree here
Xthen we wouldn't have had to go through the extra work shown in
Xcommands 666 through 670.  Why not (left to an exercise for the reader)?
X
X9) Let the user know that the file(s) are restored.
X
X		Generic Questions About Restoring Files		p. 9 of 10
X
X		Restore From "alldisks" Backup:
X
XThe big deal here is that you've got more than one dump on the tape(s).
XSo the big question is - which dump is the right one?  And once
Xyou know that, how do you position the tape at the right dump?
X
X>>>>>	This is why it is critical that the operator write
X>>>>>	down the first filesystem on every alldisks backup volume.
X
XHere are the current command syntaxes for my "alldisks" backup script:
Xbackup: 'alldisks' backup script, version 4.23
X
Xusage:
Xbackup level       /fsname                              [host:]media [opts]
X       <full|incr> </fsname|alldisks>                   [host:]media [opts]
Xbackup get         get_mode                             [host:]media [opts]
X       get         <onedisk|listdisks|/fsname>          [host:]media [opts]
Xbackup verify      verify_mode                          [host:]media [opts]
X       verify      <onedisk|listdisks|/fsname|lastdisk> [host:]media [opts]
Xmedia:		cart, dat, null, tape, tk50, or video
X		See '/etc/dist/backup.media' for valid hosts and media
Xopts (all opts work with all modes):
Xcpio		forces usage of cpio even if a version BSD dump is available
Xcron		handle running from cron (by setting OPER=cron)
Xdemo		echo's media work without actually doing it
Xfsfalse		/fsname is not a filesystem - used for directory backups
Xnoall		sets nocheck, nofailq, nofitguess, nojoke, nooffline, noupdate
Xnocheck		skips the normal check of the rewind and and norewind devices
Xnofailq		skips the normal question re did the backup fail or not
Xnofitguess	skips the normal guess whether an alldisks will fit on media
Xnojoke		skips the normal cpio joke
Xnomail		skips the normal mailing of reports to dc-stash@k9 or na-opers
Xnooffline	skips the normal taking media offline
Xnoupdate	skips the normal update of /etc/dumpdates or ~backup/cpiodates
Xshowdd		tell backup.dd to show 'dd' commands
X
XThe easiest way to get a restore going from an alldisks backup is:
Xk9 664# backup get listdisks tape
X
XWhat a "backup get" does for you:
X1) My script always says "backup" when it's giving you info or asking
Xyou a question.  All other questions and prompts come from "restore".
X
X2) It will ask you several questions.  Life is much easier if you know
Xthe answers.  On multivolume alldisk backups, one question can only be
Xanswered by reading the info which the operator wrote, by hand, on the
Xtape label.
X
X		Generic Questions About Restoring Files		p. 10 of 10
X
X3) Since we have to get the startup directory correct, before starting
Xany restore, it makes sure you deal with the question.
Xbackup: Your are now in this directory: '/usr/rti/sys/backup'.
Xbackup: The complete paths to the files you select will be rebuilt
Xbackup: by 'restore', starting downward from here.
Xbackup: Enter the directory you want to REBUILD the RESTORATION TREE into.
Xbackup: (Press <return> if '/usr/rti/sys/backup' is OK with you):
X
X4) It will position the tape at the correct dump for you, if you follow
Xany instructions my script gives you.
X
X5) It will then invoke restore for you.  It's up to you from there.
XBut remember, as far as restore is concerned, it started at the beginning
Xof the tape on the first dump volume.  restore has no idea that the dump
Xit's about to read is in the middle of the tape.  In this case, you
Xalways want to work first to last, since you started in the middle of
Xthe tape.  The alldisks script can't handle repositioning the tape again.
SHAR_EOF
chmod 0644 src/backup/doc/gen.restore.q ||
echo 'restore of src/backup/doc/gen.restore.q failed'
Wc_c="`wc -c < 'src/backup/doc/gen.restore.q'`"
test 22366 -eq "$Wc_c" ||
	echo 'src/backup/doc/gen.restore.q: original size 22366, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= src/backup/doc/alld.prob ==============
if test -f 'src/backup/doc/alld.prob' -a X"$1" != X"-c"; then
	echo 'x - skipping src/backup/doc/alld.prob (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting src/backup/doc/alld.prob (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'src/backup/doc/alld.prob' &&
XThe 'alldisks' backup script has been in use on a daily basis at
XASK/Ingres for over five years.  As such, it has received real life
Xtesting in our environment, and much effort has gone into making it
Xrobust as well as making it more usable.
X
XHowever, there are a number of known weaknesses and problems with the
X'alldisks' backup script and its supporting tools.  This 'alld.prob'
Xis an attempt to list them, but the list may not be complete or up to
Xdate.
X
XWeaknesses:
X
X* Although the tools to install the backup account handle things in a
X  general way fairly well, they are not as strong as they might be.
X  For one thing, the choice of location for the backup account's home
X  directory is probably not useful everywhere.  However, once a suitable
X  backup account and home directory are created, things work fine.
X  Also, the tools don't handle shadow password files, nor do
X  they cope with NIS environments.
X
X* Lots of stuff is recorded in the log directories, which is good,
X  and helpful in debugging any problems.  However, the format of the
X  log files themselves are not as well thought out as they might be.
X
X* There is no support for stackers yet, but that should be coming shortly.
X
X* There is only minimal support for automated backup scheduling, available
X  from a "cron" near you :-)
X
X* Only one level of incrementals is supported.
X
X* There is no support for doing network backups as anyone but root.
X  This is not a problem at our site because all the machines we back
X  up have local tape drives, but that may not be true at your site.
X
X* There is no support for interactive restores from cpio archives.
X
X* There is no support for restores over the net from cpio archives.
X
X* For cpio backups, although the script tries to avoid this, it is
X  possible for the "find" command (which is used to build the list of
X  files for cpio to backup) to descend NFS hierarchies.
X
X* There is no support for putting a header archive on onedisk archives
X  (except through list files).  Some sites might find this desirable.
X
X* Better generation of "df" outputs would be desirable.  We only want
X  "df" output for local filesystems, and we'd like it to look like the
X  BSD-style output too.  A multi-filesystem tape puts its "bkp.dfout"
X  file in the tar/cpio header archive, but if it is a SVR[023] output
X  format you actually can't tell how much data is on the tape.
X
X* The 'alldisks' script tries to clean up "old" log directories.  This
X  works better on some systems than others.
X
X* Neither the 'alldisks' nor the saenv toolsets have been tested on
X  any non-commercial UNIX.  This is a problem I would like to rectify.
X
X* The shell code is fairly readable, I hope.  One large drawback is that
X  the backup script itself it contains no functions, because it is
X  meant to work on systems that don't support Bourne shell functions.
X  This means lots of indenting which looks ugly.  However, in the place
X  of functions, macros are eval'ed.
X
X* In the five years that ASK/Ingres has been using 'alldisks', the script
X  has undergone great changes and feature additions.  While it has been used
X  at various stages in its life on well over 100 commercial UNIXs and
X  their available tape drives in various OS / tape drive combos,
X  there is no guarantee that this current public release will work as
X  well as desired on yours.
X
XProblems working in specific environments:
X
X* AIX 3.X onedisk backups don't work across the net for reasons unknown.
X
X* 'alldisks' uses cpio to backup under AIX 3.X.  However, IBM supports
X  its own "backup" program, which its manual page says can be used to
X  create archives in "dump" format.  Also, a cpio archive is not
X  sufficient to backup a root volume group - "MakeSysB" seems to be the
X  preferred method to do that.  Since AIX 3.X defaults to putting all
X  disks in the root volume group at OS install time, this can lead to
X  problems managing tape usage.  Restoring a cpio backup of the root or
X  /usr filesystem after a disk crash or massive corruption of either
X  filesystem is problematical.
X
X* SunOS "dump" does a setuid(getuid()) before opening the filesystem
X  being dumped, which has permissions implications.  See other docs ...
X
X* Any SVR4-derived version of "dump" which asks for a continuation tape if
X  it hits physical EOT may have a problem when doing multi-filesystem backups
X  over the net.  See other docs ...
X
X* Bull's B.O.S. version of "dump" does something strange which prevents
X  doing an alldisks backup to cart.
SHAR_EOF
chmod 0664 src/backup/doc/alld.prob ||
echo 'restore of src/backup/doc/alld.prob failed'
Wc_c="`wc -c < 'src/backup/doc/alld.prob'`"
test 4485 -eq "$Wc_c" ||
	echo 'src/backup/doc/alld.prob: original size 4485, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= src/backup/doc/alld.notes ==============
if test -f 'src/backup/doc/alld.notes' -a X"$1" != X"-c"; then
	echo 'x - skipping src/backup/doc/alld.notes (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting src/backup/doc/alld.notes (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'src/backup/doc/alld.notes' &&
XName:		alld.notes
XAuthor:		Bob Arnold
XLast modified:	Feb 20 1994
X
XInstall 'alldisks' backup script on one host by:
X	inst-alldisks host
XInstall 'alldisks' backup script on many hosts by:
X	rrun -l inst-alldisks host1 host2 host3 ...
X	rrun -l inst-alldisks alldiskshosts
X
XFiles:
X.cshrc		standard .cshrc   for "backup" account ; sources .getoper.csh
X.getoper.csh	csh script to figure out who is logging in as "backup"
X.getoper.sh	sh  script to figure out who is logging in as "backup"
X.profile	standard .profile for "backup" account ; sources .getoper.sh
XNOTES		this file
Xbackup		master 'alldisks' backup script
Xbackup.c	C program which can be setuid
Xbackup.dd	script wrapper for dd to give reliable output and exit status
Xbackup.*???	various versions of the backup script and related programs
Xbkp.opers	list of operators initials
Xbkp.host	host-specific backup behavior configuration file
Xbkp.media	master site-wide list of media hosts and their devices
Xbkp.nofm	host-specific list    of filesystems not to backup on full multi-filesystem backups
Xbkp.site	master site-wide alldisks behavior configuration file
Xlinst-alldisks*	DO NOT use this script directly; see "Install" notes above
X
X##############################################################################
XBrief outline of this alldisks script:
X". /etc/dist/sahead", initialize variables and stuff
Xreport version, get and verify command args, get who is running it ($OPER)
Xif we're doing a backup create "bkp.dfout" and verify requested filesystem
Xtell user "command looks AOK", do more initialization
Xif we're using dump, build dump/restore command line $bcmd
Xif "demo" was spec'd, turn off actual media work
Xcheck rewind/norewind devices in "backup.media" (unless we don't need to)
Xif we're doing a backup
X	start report
X	if we're backing up more than one filesystem, put tar (we have dump) or cpio (we have cpio) header file on tape
X	fsnn=00 ; voln=1 ; sumrecin=0 ; obleft=$maxocount ; echo $sumrecin $obleft > pass=/tmp/bkp.pas$time6
X	for all filesystems ; do
X		if we're using dump
X			eval $bcmd | tee b.$fsnn.out ; fsnn++
X		else
X			get start date of this cpio backup for "cpiodates"
X			put list of files in this fs in "/usr/tmp/bkp.flist"
X			if $pass says there's not much room left on media prompt for new one
X			{ cpio -oc$ckey < /usr/tmp/$flist 2> $workdir/err.cpio ; echo $? > $workdir/stat.cpio ; } \
X			| while : ; do
X				echo "$pf: dd'ing archive of '$fs' onto filesystem volume '$fsvoln'"
X				is new volume writeable, correct density, etc?
X				$bdd of=$mdev ibs=$ibs obs=$obs count=$icount 2> err.dd
X				$bddstat=$?
X				cat err.dd >> b.$fsnn.out
X				if there's room on this $media echo $sumrecin $obleft > $pass
X				else sumrecin=0 ; obleft=$maxocount ; echo "Change Volumes" >> b.$fsnn.out ; fsvoln++ ; get new $media from $OPER
X			done
X			cat err.cpio >> b.$fsnn.out
X			if cpio went OK then update "cpiodates"
X		fi
X		figure out whether $OPER had to change volumes >> "bkp.firstb"
X	done
X	rewind/offline media now so user doesn't have to wait
X	finish $report "bkp.rpt"
X	if verifytoo is true, verify it and take it offline
Xelse we're doing a "get" (i.e. a restore) or a "verify"
X	if we doing a 'verify onedisk' set $onvol=1 by definition
X	if we're not doing a 'get onedisk' set $nvol
X	case $getmode in knownfs|listdisks|lastdisk|alldisks)
X		make sure we extract header, or link to parent
X		if we can't find position from old logs and user didn't spec a skip
X			get info from user or command line for $firstblist
X			build $volmap
X	case $getmode in knownfs|listdisks|lastdisk)
X		figure out (ask if we have to) which filesystem we want
X		figure out where it is on the media (set $onvol $fileskip)
X		if it isn't on vol. 1, ask $OPER to mount correct volume
X	case $getmode in knownfs|knownskip|listdisks|lastdisk)
X		position media at requested filesystem
X	if doing get, ask "interactive" vs "entire" restore, if not spec'd (interactive cpio restore not implemented)
X	determine target directory for restore work; cd $target
X	case $mode in
X	get)	get $fs
X	verify) set $getcmd
X	esac
X	case $mode$getmode in
X	verifyalldisks)
X		for each volume $nvol
X			for each fs in $dfout on $voln
X				backup verify $fs $marg $diskfile $extravol $child skip $fileskip $notcont $optlist
X	verify*)
X		case $bprog in
X		cpio)	get $getlist
X		*dump*)	get name of last file in archive
X		esac
X		save list of files we found
X		case $bprog in
X		cpio)	if we got $getlist PASS else FAIL
X		*dump*)	if dump is empty or we can reposition tape and extract last file PASS else FAIL
X		esac
X	esac
X	rewind/offline the media; finish get/verify report
Xfi
Xif there were problems try to send mail to $probto
Xif we did a backup
X	ask $OPER "$pr: Do you want to report a problem (yes|no)?" >> $failrpt
X	show operator how to label tapes (if any)
Xfinal cleanup and exit
X
X##############################################################################
X
Xabbreviation conventions for variable names, with examples
Xb	backup		"bstat"		means	"backup (exit) status"
Xd	dump		"dkey"		means	"dump key"
Xf	file		"lockf"		means	"lock file"
Xl	local		"lhost"		means	"local host"
Xm	media		"mtype"		means	"media type"
Xn	number		"voln"		means	"volume number"
Xq	question	"noprobq"	means	"no problem question"
Xv	verify		"vcmd"		means	"verify command"
Xgv	get/verify	"gvreport"	means	"get/verify report"
Xpr	program		"pr"		means	"program"
Xfs	filesystem	"fsdev"		means	"filesystem device"
Xbkp	backup		"bkpn"		means	"backup number"
Xdev	device		"mdev"		means	"media device"
Xcmd	command		"bcmd"		means	"backup command"
Xdir	directory	"hdir"		means	"home directory"
Xrew	rewind		"rewdev"	means	"rewind device"
Xrpt	report		"failrpt"	means	"failure report"
Xvol	volume		"nvol"		means	"number of volumes"
Xprob	problem		"probfs"	means	"problem filesystem"
Xprog	program		"bprog"		means	"backup program
Xstat	status		"bstat"		means	"backup program's exit status"
X
X
X##############################################################################
X
XOwnership/permission issues:
X
XRestores always have to be done as root, whether we're using dump/restore
Xor cpio, because restore and cpio have to be run by root to chown
Xthe restored files.
X
XBackups, on the other hand, have several possibilities.  SunOS 'dump'
Xhas an unusual behavior - it does a setuid(getuid()) so it runs with
Xyour real uid not your effective uid.  This means that under some
Xuid/login/su conditions, group read permission is required on the
Xraw filesystem device so dump can read it.
X
Xdump/restore:
X						SunOS		oper
X						forces	group	knows	remote
Xscript owner/	rawdev owner/			640	read	root	host
Xgroup/perms	group/perms	login/su	rawdev	rawdev	passwd	trusts
X-------------	-------------	-------------	------	------	------	------
X*root/wheel/755	root/wheel/600	root/root	no	no	yes	root
Xroot/wheel/755	root/oper/640	backup/backup	yes	yes	no	backup
Xroot/wheel/755	root/wheel/600	backup/root	yes	yes	yes	root
Xroot/wheel/4755	root/wheel/600	backup/root	yes	yes	yes	root
Xroot/wheel/2755	root/wheel/640	backup/backup	yes	yes	no	backup
X
Xcpio:
X						SunOs		oper
X						forces	group	knows	remote
Xscript owner/	rawdev owner/			640	read	root	host
Xgroup/perms	group/perms	login/su	rawdev	rawdev	passwd	trusts
X-------------	-------------	-------------	------	------	------	------
X*root/wheel/755	root/wheel/600	root/root	no	no	yes	root
Xroot/wheel/755	root/wheel/600	backup/root	no	no	yes	root
Xroot/wheel/4755	root/wheel/600	backup/backup	no	no	yes	root
X
X* This tools for installing 'alldisks' assume this scheme:
Xroot/wheel/755	root/wheel/600	root/root	no	no	yes	root
X
XNote that setuid shell scripts are not supported everywhere.  In some cases
Xthis can be overcome by having a setuid binary call the shellscript, but
Xthis is also not supported everywhere.  In other cases, setuid shellscripts
Xare only supported for UID's under 100.
X
XSome versions of dump/restore also support doing network backups as
Xother users, like this: "dump 0f backup@remote:/dev/whatever /filesystem".
X
XThere are alternatives to having the operator know the root password.
XVarious tools are available on the net to allow ordinary users to do
Xwork which would normally require root access.
X
X##############################################################################
X
XTo use compression or not to use compression:
X
XArguments for compression:
X1) Compression saves space, which may save tape mounts.
XIf you can save tape mounts, you will be able to reduce media costs.
X2) If you want to automate backups, this may help you do that because
Xyou may not have to change tapes if you compress the data.
X
XArguments against compression:
X1) If a compressed tape developes a bad spot, the data after the bad
Xspot become unreadable because the decompression algorithms may depend
Xon the missing data.  If a non-compressed tape develops a bad spot,
Xthat bad spot will be unreadable but it should be possible (perhaps
Xwith some extra work) to recover the data from the rest of the tape.
X
XThe alldisks script doesn't have any special hooks for compression.
XHowever, the number of 5k blocks a compression device can hold is
Xobviously bigger than a non-compression tape drive.  If you use a
Xcompression tape drive, its "# of 5k blocks per tape" field of the
Xbkp.media file would have to be tailored to account for this.
X
X##############################################################################
X
XI chose an "alldisks" design instead of a "system" design for
Xthe backups which use cpio.  The reasoning is this:
X
XAn "alldisks" tape looks like this:
X|| cpio_header | cpio1 | cpio2 | cpio............... ||
X
X	OR
X
XA "system" tape looks like this:
X|| one____________giant___________cpio______archive__||
X
XIn order of importance (#1 is MOST important):
X1) Reliability of backup: alldisks wins because if one of the cpio
Xarchives fails the rest may work and you still have useful data.
X2) Ease of restoring selected files (remember they have to be specified
Xon the "cpio -i ..." command line): alldisks wins because the list of
Xfiles will take fewer characters on the command line.
X3) Ease of figuring out which files to select: system wins because there
Xis only one "ontape" file to look at and it's at the beginning of the first
Xvolume (each cpio archive contains a "timestamp" and "ontape" file).
X4) Ease of positioning the tape at the desired files (one-volume backups):
Xsystem wins.
X5) Ease of positioning the tape at the desired files (multi-volume backups):
Xalldisks wins.
X6) Ease of writing the cpio version: system wins.
X7) Common command line syntax: alldisks wins.
X
XOverall, the winner is alldisks.  We'll put multiple cpio archives on
Xthe media, with a cpio header file similar to the tar header file for
Xalldisks backups which use BSD dump.
X
X##############################################################################
X
X'dd' behaviour notes:
Xdd provides lots of control over input blocks (using "conv=sync" and
X"count="), but no direct control over output blocks (except for "obs=").
Xa) the default block size is often "1b", but not always
Xb) conv=sync pads input blocks to the input block size
Xc) "count=" only counts input blocks, never output blocks
X
XWhy we need $sumrecin:
XWe could try to just use $obleft; after all the main point is how many
Xoutput blocks are left on the media.  However, the way it is used,
Xa) $sumrecin avoids truncation error with "expr"
Xb) $sumrecin is required anyway to track records_in within "| while" loop
Xbecause of how dd counts input blocks
X
XReasons for creating a dd wrapper script:
XThe problem is that it's impossible really to figure out whether a
Xremote dd command has exited successfully.  Simple tricks are complicated
Xby the fact that dd's output isn't the same on all platforms, and
Xby the use of dd in a pipeline.  To take care of this whole mess
SHAR_EOF
true || echo 'restore of src/backup/doc/alld.notes failed'
fi
echo 'End of saenv_alld part 3'
echo 'File src/backup/doc/alld.notes is continued in part 4'
echo 4 > _shar_seq_.tmp
exit 0
