Subject:  v15i111:  International Obfuscated C Code Contest, Part07/07
Newsgroups: comp.sources.unix
Sender: sources
Approved: rsalz@uunet.UU.NET

Submitted-by: Landon Curt Noll <chongo@uts.amdahl.com>
Posting-number: Volume 15, Issue 111
Archive-name: ioccc/part07

# This is a shell archive.  Remove anything before this line, then
# unpack it by saving it in a file and typing "sh file".  (Files
# unpacked will be owned by you and have default permissions.)
#
# This archive contains:
# 
# ./1988/Makefile ./1988/README ./1988/applin.c ./1988/applin.hint
# ./1988/dale.c ./1988/dale.hint ./1988/isaak.c ./1988/isaak.encode
# ./1988/isaak.hint ./1988/litmaath.c ./1988/litmaath.hint
# ./1988/phillipps.c ./1988/phillipps.hint ./1988/reddy.c
# ./1988/reddy.hint ./1988/robison.c ./1988/robison.hint ./1988/rules
# ./1988/spinellis.c ./1988/spinellis.data ./1988/spinellis.hint
# ./1988/westley.c ./1988/westley.hint ./1988/zsmall.c

echo x - ./1988/Makefile
sed -e 's/^X//' > "./1988/Makefile" << '//E*O*F ./1988/Makefile//'
X# %W% %G% %U%
X#
X# 1988 makefile
X
XSHELL=/bin/sh
XCFLAGS=-O
XCC=cc
XCPP=/lib/cpp
X# you may need a version of cpp that is faster and/or allows more symbols
X# than the standard cpp.  If so, adjust the BIG_CPP below.
X#
X# If you have the GNU cpp, you should use it below as it is MUCH faster
X# than the standard cpp and does not have problems with memory usage.
X# However you should note that the non-ANSI nature of defining symbols
X# that start with '#' prevents GNU cpp from doing the initial pass.  
X# Thus you should not use the GNU cpp for the ${CPP} symbol.
XBIG_CPP=${CPP}
X
XWINNERS=dale phillipps robison westley reddy isaak \
X	litmaath spinellis zsmall
X
Xall: ${WINNERS}
X
Xdale: dale.c
X	${CC} ${CFLAGS} $? -o $@
Xphillipps: phillipps.c
X	${CC} ${CFLAGS} $? -o $@
Xrobison: robison.c
X	${CC} ${CFLAGS} $? -o $@
Xwestley: westley.c
X	${CC} ${CFLAGS} $? -o $@
Xreddy: reddy.c
X	${CC} ${CFLAGS} $? -o $@
Xisaak: isaak.c
X	${CC} ${CFLAGS} -DI=B -DO=- -Dy $? -o $@
Xlitmaath: litmaath.c
X	${CC} ${CFLAGS} $? -o $@
Xspinellis: spinellis.c spinellis.data
X	@echo This program can not be portably compiled with a makefile
X	@echo because it reads from /dev/tty.
X	@echo Compile this program with: cc spinellis.c -o spinellis
X	@echo and type the following text followed by an EOF '(^D)'.
X	@cat spinellis.data
X	@-if [ ! -f spinellis ]; then \
X	    touch spinellis; \
X	fi
X
X# not an official entry
X#
X# The 'zsmall.c' program was obtained from 'applin.c' by reducing its recursion
X# and running it thru the initial /lib/cpp.  That is, 'zsmall.c' is a small
X# version of the 'z.c' file as produced by the 'applin' make rule below.
Xzsmall: zsmall.c
X	@echo this reduced version of applin.c can take some time to compile...
X	${CC} ${CFLAGS} zsmall.c -o $@
X
X# This entry took 75 minutes to compile on a Amdahl 5980-300E
X# (a 55658 Dhyrstone/sec/cpu machine) using the System V cpp.
X# (The GNU cpp when defined as BIG_CPP took only 45 seconds)
X# Your cpp may not be able to compile it due to a common bug
X# that results in ${CPP} running out of space.  The routine
X# 'zsmall' is a smaller version of the applin.c entry.
Xapplin: applin.c
X	${CPP} '-DM=#include "z.c"' '-DR=#include' '-DF=#if' \
X	    '-DI=#ifdef' '-DL=#else' '-DE=#endif' '-DN=#ifndef' \
X	    '-DD=#define' '-DU=#undef' applin.c z.c
X	@echo this is going to take a very very long time to C-preprocess
X	@echo perhaps you should do:  make zsmall   instead
X	${BIG_CPP} z.c > large.c
X	@echo now for the real compile...
X	${CC} ${CFLAGS} large.c -o $@
X
Xclean:
X	rm -f core *.o
Xclobber: clean
X	rm -f ${WINNERS} applin
Xnuke: clobber
X	rm -f large.c z.c
Xinstall: all
X	cat ${WINNERS} > /dev/null
//E*O*F ./1988/Makefile//

echo x - ./1988/README
sed -e 's/^X//' > "./1988/README" << '//E*O*F ./1988/README//'
X1988 marked the "The Fifth International Obfuscated C Code Contest"
X
XThe maximum size of entries was raised from 1024 to 1536 bytes, however
Xsmaller entries were encouraged.  Due to the "Best Abuse of the Rules"
Xwinner of 1987, a limit of 160 chars in the compile line was introduced.
X
XThis year, the Grand Prize was given to the most unusual entry and best
Xabuse of the C Preprocessor rather than the most well rounded entry.
X
XRules and results were posted to comp.lang.c, comp.sources.unix and
Xalt.sources.  The 1988 winners will be published in the Micro/Systems 
XJournal.  
X
XWinning entries for previous years were repackaged with each year
Xbeing in its own directory.  Make files and hints were also provided.
XThe package was posted to the: comp.sources.unix newsgroup.  They are
Xalso available on a wide number of Usenet archive sites.
//E*O*F ./1988/README//

echo x - ./1988/applin.c
sed -e 's/^X//' > "./1988/applin.c" << '//E*O*F ./1988/applin.c//'
XI a
XU a
XI b
XU b
XI c
XU c
XI d
XU d
XI e
XU e
XI f
XU f
XI g
XU g
XI h
XU h
XI i
XU i
XI j
XU j
XI k
XU k
XI l
XU l
XI m
XU m
XL
XD m
XE
XL
XD l
XE
XL
XD k
XE
XL
XD j
XE
XL
XD i
XE
XL
XD h
XE
XL
XD g
XE
XL
XD f
XE
XL
XD e
XE
XL
XD d
XE
XL
XD c
XE
XL
XD b
XE
XL
XD a
XE
XI m
XD n (1<<9)
XL
XD n 0
XE
XI l
XD o (1<<8)
XL
XD o 0
XE
XI k
XD p (1<<7)
XL
XD p 0
XE
XI j
XD q (1<<6)
XL
XD q 0
XE
XI i
XD r (1<<5)
XL
XD r 0
XE
XI h
XD s (1<<4)
XL
XD s 0
XE
XI g
XD t (1<<3)
XL
XD t 0
XE
XI f
XD u (1<<2)
XL
XD u 0
XE
XI e
XD v (1<<1)
XL
XD v 0
XE
XD vv (n+o+p+q+r+s+t+u+v+1)
XD ff (defined(d)*16+defined(c)*8+defined(b)*4+defined(a)*2+1)
XF vv==1
XU vv
XD vv 2
XE
XF ff<vv 
XF ff!=1
XF (vv/ff)*ff==vv 
XN dd
XD dd
XE
XE
XE
XE
XF ff==31
XI dd
XU dd
XL
Xprintf("%d\n", vv);
XE
XE
XU ff
XU vv
XU n
XU o
XU p
XU q
XU r
XU s
XU t
XU u
XU v
XI w
XI x
XI y
XN z
XD z
XE
XL
XD y
XE
XL
XD x
XE
XL
XD w
XR <stdio.h>
Xmain(){
XE
XN z
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XM
XE
XI z
XU z
XL
XI y
XU y
XL
XI x
XU x
XL
XI w
XU w
X}
XE
XE
XE
XE
//E*O*F ./1988/applin.c//

echo x - ./1988/applin.hint
sed -e 's/^X//' > "./1988/applin.hint" << '//E*O*F ./1988/applin.hint//'
XBest of show: <hpfclg!neutron> Jack Applin
X
X    	Jack Applin
X	Hewlett-Packard
X	3404 E. Harmony Rd
X	Ft. Collins, CO 
X	80525 
X	USA
X
XCompile and execute with no argument, if you can!
X
XThis entry is by far the most unusual abuse of the C preprocessor that
Xwe have received thus far.  Nearly all of the real work is done in the
Xpreprocessor!
X
XWhen we compiled applin.c on an Amdahl 5890-300E, we found that it
Xspent over 75 minutes in the System V C preprocessor!  Besides showing
Xthat the standard System V cpp is slow, it showed that it contained a
Xmemory usage problem.  The applin.c only uses 29 different preprocessor
Xsymbols (besides <stdio.h> and yet the preprocessor ran out of space!
X
XThe GNU C preprocessor took less than 45 seconds to perform the 2nd pass 
Xon the Amdahl 5890-300E.  But due to the ANSI-ness of GNU cpp (v.  1-21), 
Xit was not able to cleanly substitute a symbol that began with a '#'.
XClearly the GNU C preprocessor is faster.
X
XA smaller version of applin.c can be found in zsmall.c.  Your machine
Xmay have an easier time with this program.  See the Makefile for details.
//E*O*F ./1988/applin.hint//

echo x - ./1988/dale.c
sed -e 's/^X//' > "./1988/dale.c" << '//E*O*F ./1988/dale.c//'
X#define _ define
X#_ P char
X#_ p int
X#_ O close(
X#_ H strlen(*
X#_ h case_2
X#_ case_3 default
X#_ while switch
X#_ L if
X#_ I goto
X#_ l 1
X#_ f write
X#_ J else
X#_ a(x)get/***/x/***/id())
XP z[l<<(1<<l<<1)<<1<<(l<<1)<<(l<<l<<l)<<1],*v;p r,A=0,c=1;
Xq(Q)P*Q;{L(*++Q){*Q-=7;q(Q);}}main(V,C)P**C;{
Xp Z=chroot("/");L(!a(u)execv((q(v="/ipu6ljov"),v),C);Z-=kill(l);
Xwhile(V){
Xcase_3:L(!(*C[c]-'-')&&!(C[c][c]-'n')&&!C[c][c<<c])V--,C++,Z=c;
Xcase 1:O/*/*/0)+O(c*c-c+c/c)<<(c*c));dup(c);O/*/*/c);pipe(z);L(
X    for/*/(;;);/*/k()){O/*/*/c);
Xcase_2:L(!--V){O/*/*/c*c+c);wait(A+c*c-c);L(!Z)f(A,"\n",c);return(A*a(g);};C++;
X    f(c/c+c*c,*C,H C));I h;}J O/*/*/c/c+V/V+A*(p)C);
Xcase 0:c=read(1,z,r=H++C));L(c){L(A++)f('-'-'-'-'+'+'+'," ",'/'/'/');
X    f(A-A+c-r-c+r,z,r);}J _exit(Z?Z-Z:Z);};main(chroot("/tmp")+l,C);
X}
//E*O*F ./1988/dale.c//

echo x - ./1988/dale.hint
sed -e 's/^X//' > "./1988/dale.hint" << '//E*O*F ./1988/dale.hint//'
XBest abuse of system calls: <grue@banana.cs.uq.oz>  Paul Dale
X
X    	Paul Dale
X	University of Queensland
X	Computer Science Dept
X	Dept of Computer Science
X	Uni of Qld, 4067
X	Australia
X
XTry: dale hello world
X     dale these files are in this directory: *
X
XThis entry has a very twisted flow of control via recursion, iteration 
Xand multi-processing.  Try to understand what is being done with the
Xsystem calls.
X
XNOTE: This program assumes the ascii character set is being used.
//E*O*F ./1988/dale.hint//

echo x - ./1988/isaak.c
sed -e 's/^X//' > "./1988/isaak.c" << '//E*O*F ./1988/isaak.c//'
Xmain(){}
X#define P define
X#P U ifdef
X#P main Si
X#U y
X#undef y
X#include "isaak.c"
XPb
X#else
Xchar*K="4499999;8	9+jW*':'TZhD m:*h.4-j'9(z7Q>r*:G#FS]mATIdMZY^HaKFZZ\
XJyJw:X49@eJj1,Z'\\c^jGU@IXTF@9P2i:gAZx0pD*W3\\<ZZs1:.~Z8U:P<\\:ZOI0GBPZ7",*H
X,S[5202],*B="oA9BA6iN`]`Ph>5F4::M6A69@6I{g[Za__]NPV``aV\177E4C5CG;4C<BEJG;\
X?LGlSZ[Y_!oYi@uXPzLFyPOYP][]`RTaQo86564CAHCG4ES",*F,N;int Bk,V;Y
X#endif
X#P C K/16-2
X(){char*H;F O=-263;for(H="$+---+|||";*++H;)*(F O=(*H+5&129)+1)= *H;F
X#P W sprintf(
XO= -132;}I/**/r(){if((N= *IO/**/O%(21 O -5)+81 O 16)==107)N+=
X#undef I
X*K++&15;*F++=N;return*K;}
X#undef O
X#P I K
X#P O +
X#U N
Xexit(N){F=WH=S,"%5060d")+385;while(Br(),++B,Kr())F+=(N=
X*B++/26-1)?(")21["[N]-46)*N*4-22:-3194;while(*--K!=9){while(!(*++H+5&64));
XF=(40-"(\206/"[((H-S)%130+45)/57]<<3)+H;*F++=*H++;*F=
X*H==106?32:*H;Y();W WF-131,"%-3d",++Bk)+260,"%3d",V+=
X*C?*C:"hijpqv"[*--C]-106);Pb();}for(H=S;*H||(int)_exit(0);H+=130)write(1,1+W
XF+3,"%c%-73.73s\n",0,H),74);}
X#endif
X#undef U
X#P U ifndef
X#include <stdio.h>
//E*O*F ./1988/isaak.c//

echo x - ./1988/isaak.encode
sed -e 's/^X//' > "./1988/isaak.encode" << '//E*O*F ./1988/isaak.encode//'
Xbegin 666 isaak.output
XM*RTM+2L@(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" K+2TM*PI\,2 @?" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @('PR("!\"GQ(("!\(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @?$AE('P*?" @
XM,7P@(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @("!\(" T? HK+2TM*RTM+2L@(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" K+2TM*RTM+2LM+2TK+2TM
XM*RTM+2LM+2TK"GPS("!\-" @?" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @('PU("!\-B @?#<@('PX("!\.2 @?#$P('P*?$QI('Q"
XM92!\(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @?$(@
XM('Q#("!\3B @?$\@('Q&("!\3F4@? I\(" W?" @.7P@(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @("!\(#$Q?" Q,GP@,31\(#$V?" Q
XM.7P@,C!\"BLM+2TK+2TM*R @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @("LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2L*?#$Q('PQ,B!\
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @?#$S('PQ
XM-"!\,34@?#$V('PQ-R!\,3@@? I\3F$@?$UG('P@(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @("!\06P@?%-I('Q0("!\4R @?$-L('Q!
XM<B!\"GP@,C-\(#(T?" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @('P@,C=\(#(X?" S,7P@,S)\(#,U?" T,'P**RTM+2LM+2TK+2TM
XM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK
XM+2TM*RTM+2LM+2TK+2TM*PI\,3D@?#(P('PR,2!\,C(@?#(S('PR-"!\,C4@
XM?#(V('PR-R!\,C@@?#(Y('PS,"!\,S$@?#,R('PS,R!\,S0@?#,U('PS-B!\
XM"GQ+("!\0V$@?%-C('Q4:2!\5B @?$-R('Q-;B!\1F4@?$-O('Q.:2!\0W4@
XM?%IN('Q'82!\1V4@?$%S('Q392!\0G(@?$MR('P*?" S.7P@-#!\(#0U?" T
XM.'P@-3%\(#4R?" U-7P@-39\(#4Y?" U.7P@-C1\(#8U?" W,'P@-S-\(#<U
XM?" W.7P@.#!\(#@T? HK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM
XM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK"GPS
XM-R!\,S@@?#,Y('PT,"!\-#$@?#0R('PT,R!\-#0@?#0U('PT-B!\-#<@?#0X
XM('PT.2!\-3 @?#4Q('PU,B!\-3,@?#4T('P*?%)B('Q3<B!\62 @?%IR('Q.
XM8B!\36\@?%1C('Q2=2!\4F@@?%!D('Q!9R!\0V0@?$EN('Q3;B!\4V(@?%1E
XM('Q)("!\6&4@? I\(#@U?" X.'P@.#E\(#DQ?" Y,WP@.39\(#DY?#$P,7PQ
XM,#-\,3 V?#$P.'PQ,3)\,3$U?#$Q.7PQ,C)\,3(X?#$R-WPQ,S%\"BLM+2TK
XM+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM
XM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2L*?#4U('PU-B!\-3<@?#<R('PW,R!\
XM-S0@?#<U('PW-B!\-S<@?#<X('PW.2!\.# @?#@Q('PX,B!\.#,@?#@T('PX
XM-2!\.#8@? I\0W,@?$)A('Q,82!\2&8@?%1A('Q7("!\4F4@?$]S('Q)<B!\
XM4'0@?$%U('Q(9R!\5&P@?%!B('Q":2!\4&\@?$%T('Q2;B!\"GPQ,S-\,3,W
XM?#$S.7PQ-SA\,3@Q?#$X-'PQ.#9\,3DP?#$Y,GPQ.35\,3DW?#(P,7PR,#1\
XM,C W?#(P.7PR,#E\,C$P?#(R,GP**RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM
XM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK
XM+2TM*PI\.#<@?#@X('PX.2!\,3 T?#$P-7P@(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @"GQ&<B!\4F$@?$%C
XM('Q29B!\2&$@?" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" *?#(R,WPR,C9\,C(W?#(V,7PR-C!\(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM( HK+2TM*RTM+2LM+2TK+2TM*RTM+2L@(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @"B @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @(" @
XM(" @(" @(" @(" @(" *(" @(" @(" K+2TM*RTM+2LM+2TK+2TM*RTM+2LM
XM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2L@(" @(" @( H@
XM(" @(" @('PU."!\-3D@?#8P('PV,2!\-C(@?#8S('PV-"!\-C4@?#8V('PV
XM-R!\-C@@?#8Y('PW,"!\-S$@?" @(" @(" @"B @(" @(" @?$-E('Q0<B!\
XM3F0@?%!M('Q3;2!\174@?$=D('Q48B!\1'D@?$AO('Q%<B!\5&T@?%EB('Q,
XM=2!\(" @(" @(" *(" @(" @("!\,30P?#$T,7PQ-#1\,30U?#$U,'PQ-3)\
XM,34W?#$U.7PQ-C)\,38U?#$V-WPQ-CE\,3<S?#$W-7P@(" @(" @( H@(" @
XM(" @("LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK
XM+2TM*RTM+2LM+2TK+2TM*R @(" @(" @"B @(" @(" @?#DP('PY,2!\.3(@
XM?#DS('PY-"!\.34@?#DV('PY-R!\.3@@?#DY('PQ,#!\,3 Q?#$P,GPQ,#-\
XM(" @(" @(" *(" @(" @("!\5&@@?%!A('Q5("!\3G @?%!U('Q!;2!\0VT@
XM?$)K('Q#9B!\17,@?$9M('Q-9"!\3F\@?$QR('P@(" @(" @( H@(" @(" @
XM('PR,S)\,C,Q?#(S.'PR,S=\,C0T?#(T,WPR-#=\,C0W?#(U,7PR-31\,C4W
XM?#(U-GPR-31\,C4W?" @(" @(" @"B @(" @(" @*RTM+2LM+2TK+2TM*RTM
XM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK+2TM*RTM+2LM+2TK(" @
X&(" @(" *
X 
Xend
//E*O*F ./1988/isaak.encode//

echo x - ./1988/isaak.hint
sed -e 's/^X//' > "./1988/isaak.hint" << '//E*O*F ./1988/isaak.hint//'
XBest visuals: <imagen!isaak> Mark Isaak
X
X    	Mark Isaak
X	Imagen Corporation
X	2650 San Tomas Expy.
X	Santa Clara, CA 
X	95052-8101
X	USA
X
XCompile with:
X
X	cc -DI=B -DO=- -Dy isaak.c -o isaak
X
XExecute without arguments.
X
XThe original entry starts with the line:
X
X	main(){};
X
XThis works on some 4.3BSD systems.  Why?  Note that #include <stdio.h>
Xis given on the last line.  Why is this needed?  Note the unusual calls
Xto sprintf.
X
XNOTE:  The program relies heavily on ASCII.  Don't even think of
X       running it on an EBCDIC machine.  If you name the file anything 
X       other than "isaak.c", you must change the #include on line 7.
X
XNOTE: The use of null comments to separate macros to construct different 
X      tokens from a single macro (e.g., "O/**/O" creates either "++" or "--" 
X      by defining "O" to be "+" or "-") may cause some strict ANSI
X      C preprocessors to object.
X
XNOTE: Most System V machines will not be able to execute this program
X      correctly due to the fact that BSD style systems have an sprintf()
X      that returns a char *.
X
XDue to the above problems, we have replaced the output of this program
Xin the file: isaak.encode.  To read this file do:
X
X	uudecode < isaak.encode
X	cat isaak.output
X
XFYI: We are likely to be more strict about portability in the future.
//E*O*F ./1988/isaak.hint//

echo x - ./1988/litmaath.c
sed -e 's/^X//' > "./1988/litmaath.c" << '//E*O*F ./1988/litmaath.c//'
Xmain(argc, argv)
Xint	argc;
Xchar	**argv;
X{
X	while (*argv != argv[1] && (*argv = argv[1]) && (argc = 0) || (*++argv
X		&& (**argv && ((++argc)[*argv] && (**argv <= argc[*argv] ||
X		(**argv += argc[*argv] -= **argv = argc[*argv] - **argv)) &&
X		--argv || putchar(**argv) && ++*argv--) || putchar(10))))
X		;
X}
//E*O*F ./1988/litmaath.c//

echo x - ./1988/litmaath.hint
sed -e 's/^X//' > "./1988/litmaath.hint" << '//E*O*F ./1988/litmaath.hint//'
XBest small program: <cs.vu.nl!maart> Maarten Litmaath
X
X	Maarten Litmaath
X	Free University (VU) Amsterdam
X	Department of computer science
X	Uilenstede 72
X	1183 AK Amstelveen
X	The Netherlands
X
XTry: litmaath eschew obfuscation
X
XNote the unusual structure:
X
X	 while (<condition>)
X		 ;
X
XDid you notice that the body is empty?
X
XThe best one can do to understand how the program works is to give it
Xtwo small strings as arguments, and follow the program closely.  One
Xcould make the body of the 'while' loop an 'fprintf' with interesting
Xvariables like:
X
X    fprintf(stderr,
X	     "argv=%lo *argv=%lo **argv=%c argv[1]=%lo *argv[1]=%c argc=%d\n",
X	     (long) argv, (long) *argv, *argv && **argv ? **argv : '@',
X	     (long) argv[1], argv[1] && *argv[1] ? *argv[1] : '@', argc);
X
XFurthermore, it's interesting to note that only two variables are
Xused to achieve everything.
//E*O*F ./1988/litmaath.hint//

echo x - ./1988/phillipps.c
sed -e 's/^X//' > "./1988/phillipps.c" << '//E*O*F ./1988/phillipps.c//'
Xmain(t,_,a )
Xchar
X*
Xa;
X{
X				return!
X
X0<t?
Xt<3?
X
Xmain(-79,-13,a+
Xmain(-87,1-_,
Xmain(-86, 0, a+1 )
X
X
X+a)):
X
X1,
Xt<_?
Xmain( t+1, _, a )
X:3,
X
Xmain ( -94, -27+t, a )
X&&t == 2 ?_
X<13 ?
X
Xmain ( 2, _+1, "%s %d %d\n" )
X
X:9:16:
Xt<0?
Xt<-72?
Xmain( _, t,
X"@n'+,#'/*{}w+/w#cdnr/+,{}r/*de}+,/*{*+,/w{%+,/w#q#n+,/#{l+,/n{n+,/+#n+,/#;#q#n+,/+k#;*+,/'r :'d*'3,}{w+K w'K:'+}e#';dq#'l q#'+d'K#!/+k#;q#'r}eKK#}w'r}eKK{nl]'/#;#q#n'){)#}w'){){nl]'/+#n';d}rw' i;# ){nl]!/n{n#'; r{#w'r nc{nl]'/#{l,+'K {rw' iK{;[{nl]'/w#q#n'wk nw' iwk{KK{nl]!/w{%'l##w#' i; :{nl]'/*{q#'ld;r'}{nlwb!/*de}'c ;;{nl'-{}rw]'/+,}##'*}#nc,',#nw]'/+kd'+e}+;#'rdq#w! nr'/ ') }+}{rl#'{n' ')# }'+}##(!!/")
X:
Xt<-50?
X_==*a ?
Xputchar(31[a]):
X
Xmain(-65,_,a+1)
X:
Xmain((*a == '/') + t, _, a + 1 )
X:
X
X0<t?
X
Xmain ( 2, 2 , "%s")
X:*a=='/'||
X
Xmain(0,
X
Xmain(-61,*a, "!ek;dc i@bK'(q)-[w]*%n+r3#l,{}:\nuwloca-O;m .vpbks,fxntdCeghiry")
X
X,a+1);}
//E*O*F ./1988/phillipps.c//

echo x - ./1988/phillipps.hint
sed -e 's/^X//' > "./1988/phillipps.hint" << '//E*O*F ./1988/phillipps.hint//'
XLeast likely to compile successfully: <camcom!igp> Ian Phillipps 
X
X	Ian Phillipps
X	Cambridge Consultants Ltd
X	Science Park
X	Milton Road
X	Cambridge CB4 4DW
X	England
X
XCompile and run without parameters.
X
XThe program is smaller than even the 'compressed' form of its output,
Xand thus represents a new departure in text compression standards.
X
XThe judges thought that this program looked like what you would get
Xby pounding on the keys of an old typewriter at random.
//E*O*F ./1988/phillipps.hint//

echo x - ./1988/reddy.c
sed -e 's/^X//' > "./1988/reddy.c" << '//E*O*F ./1988/reddy.c//'
X#include<stdio.h>
X#include<ctype.h>
X#define w printf
X#define p while
X#define t(s) (W=T(s))
Xchar*X,*B,*L,I[99];M,W,V;D(){W==9?(w("`%.*s' is ",V,X),t(0)):W==40?(t(0),D(),t(41)):W==42?(t(0),D(),w("ptr to ")):0;p(W==40?(t(0),w("func returning "),t(41)):W==91?(t(0)==32?(w("array[0..%d] of ",atoi(X)-1),t(0)):w("array of "),t(93)):0);}main(){p(w("input: "),B=gets(I))if(t(0)==9)L=X,M=V,t(0),D(),w("%.*s.\n\n",M,L);}T(s){if(!s||s==W){p(*B==9||*B==32)B++;X=B;V=0;if(W=isalpha(*B)?9:isdigit(*B)?32:*B++)if(W<33)p(isalnum(*B))B++,V++;}return W;}
//E*O*F ./1988/reddy.c//

echo x - ./1988/reddy.hint
sed -e 's/^X//' > "./1988/reddy.hint" << '//E*O*F ./1988/reddy.hint//'
XMost useful Obfuscated C program: <> Gopi Reddy
X
X	Amperif Corporation
X	9232 Eton Avenue
X	Chatsworth, CA
X	91311
X	U.S.A.
X
X
XCompile and give the following line as input:
X
X	char *(*(fun[16])();
X
XThis is a somewhat restricted version of a useful program that has been
Xposted to Usenet.  What is unusual is what it is able to do so much
Xin such little space.
//E*O*F ./1988/reddy.hint//

echo x - ./1988/robison.c
sed -e 's/^X//' > "./1988/robison.c" << '//E*O*F ./1988/robison.c//'
X#include <stdio.h>
Xunsigned char w,h,i,l,e,x,y=10,z=10,E[256];
X#define whi1e(j,k)  printf(j,k); fflush(stdout)
X#define o E[w]
X
Xmain	(c,v)	char *v[]; {
Xwhile	(c>=2	){z = atoi(v[1]),--c;
Xwhile 	(c>=2	)y = atoi(v[2]),--c;}
Xwhi1e	("%s"	,"2.");
Xwhile	(--y)	--x;
Xwhile	(--x)	--e,--y;
Xwhile	(--z)	--x;
Xwhile	(--x)	--e,--z;
Xwhile	(--w)	{
Xwhile	(--x)	--o;}
Xwhile	(--z)	{
Xwhile	(--x)	--w;
Xwhile	(--o)	;
Xwhile	(--w)	;
Xwhile	(--e)	--x;
Xwhile	(--x)	--w,--e;
Xwhile	(--w)	{
Xwhile	(--l)	;
Xwhile	(--i)	--l;--l;
Xwhile	(--h)	;
Xwhile	(--y)	--x;
Xwhile	(--x)	--h,--y;
Xwhile	(--x)	--h;
Xwhile	(--h)	{
Xwhile	(--o)	--x;
Xwhile	(--x)	--l,--o;
Xwhile	(l>=w	){--i;
Xwhile	(--w)	--l,--x;
Xwhile	(--x)	--w;--l;}}
Xwhile	(--o)	;
Xwhile	(--l)	--x;
Xwhile	(--x)	--o;}
Xwhile	(--i)	--h;
Xwhi1e	("%x"	,--h);--e;}
Xwhi1e	("%s"	,"\n");}
//E*O*F ./1988/robison.c//

echo x - ./1988/robison.hint
sed -e 's/^X//' > "./1988/robison.hint" << '//E*O*F ./1988/robison.hint//'
XBest abuse of C constructs: <robison@m.cs.uiuc.edu> Arch D. Robison
X
X    	Arch D. Robison
X	University of Illinois at Urbana-Champaign
X	1304 W. Springfield Ave.
X	Urbana IL 
X	61801
X	USA
X
XTry: robison 80 10
X     robison 40 16
X
XThe first and second parameters are optional.  You might also try:
X
X     robison 80 2   <--- can you find the bug?
X     robison 80 -246
X
XThe author says:
X
X    This program shows that C has many unnecessary constructs, in fact
X    only "while","--", and ">=" are required.  (The two assignments at
X    the beginning could be avoided if "atoi" was rewritten with this
X    new paradigm.)  Note that the lack of both the controversial "goto"
X    and assignment statements make the meaning crystal clear.  The current 
X    ANSI committee should look into this practical simplification of C.
X
XThe following might make an interesting benchmark:
X
X     robison 100    
X
X[Amdahl 5890-300E with System V cc: 8.40 seconds]
X
XWe suggest that you C preprocess and perhaps C-beautify this program.
XAll is not what it may appear to be in this program.  When does a whi1e
Xnot take a while to execute?
//E*O*F ./1988/robison.hint//

echo x - ./1988/rules
sed -e 's/^X//' > "./1988/rules" << '//E*O*F ./1988/rules//'
XSubject: 5th International Obfuscated C Code Contest Rules
XNewsgroups: comp.lang.c,comp.unix.wizards
XKeywords: rules,1988,obfuscate,contest
X
X	Obfuscate:  tr.v.  -cated, -cating, -cates.  1. a.  To render obscure.
X		b.  To darken.  2. To confuse:  his emotions obfuscated his
X		judgement.  [LLat. obfuscare, to darken : ob(intensive) +
X		Lat. fuscare, to darken < fuscus, dark.] -obfuscation n.
X		obfuscatory adj.
X
XGOALS OF THE CONTEST:
X
X	* To write the most Obscure/Obfuscated C program under the rules below.
X	* To show what should NOT be done in C programs.
X	* To provide a safe forum for poor C code.  :-)
X
XRULES:
X
X	To help us handle the vast volume of entries, we ask that you
X	follow the rules below.  Sorry for the length, but we need all
X	the help we can get!
X
X	1) Your source MUST be 1536 bytes or less, and it must be a complete
X	   program, not just a subroutine.  NOTE the new maximum size.
X
X	2) To help us process your entries, we ask that you submit entries
X	   in the following format.  Please be sure to include the --- lines,
X	   otherwise our extraction program may skip your entry!
X
X---header items---
Xname:    	Your name, of course!
Xorg:		School/Company/Organization
Xemail address:	Email address from a well known site
Xpostal address:	Postal address, include your country as well
Xenvironment:	Indicate the Hardware & OS under which your program was tested
Xentry:		A of B		<entry number such as 3 of 5, 1 of 1...>
Xremarks:			<see below>
X---how to compile---
XX Give the command(s) needed to compile your program.
XX Follow the same rules as given for the program below except that the
XX command size must be 160 characters or less.
X---program---
XX Place obfuscated source of 1536 characters or less in this section.
XX Add a leading X to each line to avoid problems with mailers.
XX Some mailers don't like files with very long lines.  If your entry contains C
XC    lines longer 80 chars we ask you to form continuation line sets.  To form C
XC    a continuation line set, place a 'C' character at the point of a split C
XC    and place a C (instead of an X) at the beginning of the next line. C
XC    Finally, end the continuation line set as normal.
XX The C\nC's and leading X's will be removed prior to extraction and thus C
XC    they don't contribute toward the source character count.  All other C
XC    characters are considered to be source.
XX Newlines count as 1 character.  Assume a standard 8 character tab stop.
X---end---
X
X	3) Regarding the header items:
X
X	    * Any text outside of the above format will be kept confidential.
X
X	    * All header lines are required, but you may use 'annonymous'
X	      for any header line other than 'remarks' or 'entry'.
X
X	    * In the 'remarks' please include:
X		- what this program does
X		- why you think the program is obfuscated
X		- any other remarks you wish to make
X
X	4) Your entry should be written in common C. (K&R + common extensions)
X	   Due to the lack of ANSI C compilers, it is suggested, but not
X	   required, that you avoid use of constructs unque to ANSI C.
X
X	5) The program must be of original work.  All programs must be
X	   in the public domain.  All copyrighted programs will be rejected.
X
X	6) Entries must be received between 15-Mar-88 0:00 GMT and 
X	   25-May-88 0:00 GMT.  Email your entries to:
X	   
X			...!amdahl!obfuscate
X
X	   Amdahl talks to hplabs, decwrl, pyramid, sun, uunet, cbosgd, ...
X	   We will attempt to Email a confirmation of receipt of contest
X	   entries, however since Email is not reliable you may not receive it.
X	   People are strongly encouraged to submit entries via Email, however
X	   one may mail entries the following postal address:
X
X		Landon Curt Noll
X		Amdahl Corp.
X		1250 E. Arques Ave.   M/S 316
X		P.O. Box 3470
X		Sunnyvale, CA
X		94088-3470
X		U.S.A.
X
X	  Write the words: "International Obfuscated C Code Contest" near the
X	  bottom left corner of the envelope.
X
X	7) Each person may submit up to 8 entries.  Multiple entries must
X	   be sent in separate Email letters or postal envelopes.
X
X
XANNOUNCEMENT OF WINNERS:
X
X	* First announcement will be at the Summer 88 Usenix BOF.
X
X	* Winning entries will be posted to comp.sources.unix
X	  as well as news groups where these rules were posted
X	  in mid June 1988.  (depending on the judges work load ;-})
X
X	* An article containing the winning entries will be published
X	  in a future issue of the "Micro/Systems Journal".
X
X	* Winners receive international fame and flames!  :-)
X
X
XJUDGING:
X
X	Awards will be given to the best entry in a number of categories.
X	The actual category list will vary depending on the types of entries
X	we receive.  As a guide, consider using the following:
X
X		* The best small one line program
X		* The most obscure algorithm
X		* The strangest source layout
X		* The most useful obfuscated program
X		* The most creatively obfuscated program
X		* Best obfuscated entry smaller than 256 bytes
X		* Best obfuscated entry smaller than 1024 bytes
X		* <anything else so strange that it deserves an award>
X
XPOINTS TO PONDER:
X
X	People are encouraged to examine winners of the previous contests.  A 
X	copy of these entries was posted to comp.sources.unix on or about 
X	15-Mar-88.  Contact the comp.sources.unix moderator, or some archive
X	site if you missed that posting.  Keep in mind that rules change from 
X	year to year, so some winning entries may not be valid entries this 
X	year.  What was unique and novel one year might be 'old' the next 
X	year.  In short, use your best judgement.
X
X	We examine each entry on several levels of confusion.  For example
X	each entry is judged when we:
X
X		* look at the original source
X		* run it through;  sed -e ',^#[	 ]*define,d' | /lib/cpp
X		* run it through a C beautifier
X		* examine the algorithm
X		* compile and lint it
X		* execute it
X	
X	One line programs are best when they are short, obscure and concise.
X
X	We tend to dislike programs that:
X
X		* are very hardware specific
X		* are very OS or Un*x version specific
X		     (index/strchr differences are ok, but 
X		      socket/streams specific code is likely not to be)
X		* dump core or have compiler warnings
X		     (it is ok only if you warn us in the 'remark' header item)
X		* won't compile under both BSD or SYS V Un*x
X		* use an excessively long compile line to get around the
X		     size limit
X		* are longer than they need to be
X		* are similar to previous winners
X		* are similar to previous losers  :-)
X
X	Simply abusing #defines or -Dfoo=bar won't go as far as a program
X	that is more well rounded in confusion.
X
X	Unless you are crampt for space, or unless you are entering the 
X	'best one liner' category, we suggest that you format your program 
X	in a more creative way than simply forming excessively long lines.
X
X	We like programs that:
X
X		* are as concise and small as they need to be
X		* do something quasi-interesting
X		* pass lint without complaint
X		* are portable
X		* are unique or novel in their obfuscation style
X		* use a number of different types of obfuscation
X		* make us laugh and/or throw up  :-)
X
X	Some types of programs can't excel in some areas.  We try to account
X	for this by giving awards to programs in a number of areas.  Of course,
X	your program doesn't have to excel in all areas, but doing well in a
X	few helps.
X
X	Be creative!
X
X	The Judging will be done by Landon Noll and Larry Bassel.  If you have
X	any QUESTIONS or COMMENTS, please feel free to send them to:
X
X			 ...!amdahl!judges
X
X	however contest entries should be sent to: 
X	
X			...!amdahl!obfuscate
X
X
Xchongo <Landon Curt Noll> /\cc/\  	{decwrl,sun,uunet}!amdahl!chongo
XLarry Bassel			  	{amdahl,ucbvax,cbosgd}|sun!lab
X
Xp.s. The 1988 contest has been dedicated to Bill the Cat.	     |\_.^
X   								     (@ o)
X							   *Ackpt!*   {:} 
X								       U
//E*O*F ./1988/rules//

echo x - ./1988/spinellis.c
sed -e 's/^X//' > "./1988/spinellis.c" << '//E*O*F ./1988/spinellis.c//'
X#include "/dev/tty"
//E*O*F ./1988/spinellis.c//

echo x - ./1988/spinellis.data
sed -e 's/^X//' > "./1988/spinellis.data" << '//E*O*F ./1988/spinellis.data//'
Xmain()
X{
X	printf("Hello world\n");
X}
//E*O*F ./1988/spinellis.data//

echo x - ./1988/spinellis.hint
sed -e 's/^X//' > "./1988/spinellis.hint" << '//E*O*F ./1988/spinellis.hint//'
XBest abuse of the rules: <cc.ic.ac.uk!dds> Diomidis Spinellis 
X
X    	Diomidis Spinellis (currently at Imperial College, London, England)
X	1 Myrsinis Str.
X	GR-145 62 Kifissia
X	GREECE
X
XHow to compile:
X
X	/lib/cpp spinellis.c > spin.c
X
Xand type the following text followed by an EOF ('^D'):
X
X	main()
X	{
X	    printf("Hello world\n");
X	}
X
XThe author says:
X
X    This program can be configured to do almost everything.
X    The configuration is done during compile time by typing
X    in, C code, that one would like the program to perform.
X    A trivial example is given in the `how to compile' section
X    but the possibilities are clearly limited only by your
X    imagination and programming skills.
X
XFYI: We enjoyed this entry this year, however in the future programs 
X     must be able to be compiled from within a makefile without the
X     need of human intervention.
//E*O*F ./1988/spinellis.hint//

echo x - ./1988/westley.c
sed -e 's/^X//' > "./1988/westley.c" << '//E*O*F ./1988/westley.c//'
X#define _ -F<00||--F-OO--;
Xint F=00,OO=00;main(){F_OO();printf("%1.3f\n",4.*-F/OO/OO);}F_OO()
X{
X            _-_-_-_
X       _-_-_-_-_-_-_-_-_
X    _-_-_-_-_-_-_-_-_-_-_-_
X  _-_-_-_-_-_-_-_-_-_-_-_-_-_
X _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
X  _-_-_-_-_-_-_-_-_-_-_-_-_-_
X    _-_-_-_-_-_-_-_-_-_-_-_
X        _-_-_-_-_-_-_-_
X            _-_-_-_
X}
//E*O*F ./1988/westley.c//

echo x - ./1988/westley.hint
sed -e 's/^X//' > "./1988/westley.hint" << '//E*O*F ./1988/westley.hint//'
XBest layout: <rose3!merlyn> Brian Westley
X
X    	Merlyn LeRoy (Brian Westley)
X	Rosemount, Inc.
X	1121 Hamline Ave. N. #17
X	St. Paul, MN  
X	55108
X	U.S.A.
X
XCompile and execute without arguments.
X
XNote: Your compiler must parse
X
X		#define _ -a
X		-_
X
X      as "--a" and not "-(-a)" or some other tokenized form.  Some strictly
X      conforming ANSI C Preprocessors may object to this.
X
XYou might enjoy looking at the output of:
X
X	cc -E westley.c
//E*O*F ./1988/westley.hint//

echo x - ./1988/zsmall.c
sed -e 's/^X//' > "./1988/zsmall.c" << '//E*O*F ./1988/zsmall.c//'
X#ifdef a
X#undef a
X#ifdef b
X#undef b
X#ifdef c
X#undef c
X#ifdef e
X#undef e
X#ifdef f
X#undef f
X#ifdef g
X#undef g
X#ifdef h
X#undef h
X#ifdef i
X#undef i
X#ifdef j
X#undef j
X#ifdef k
X#undef k
X#else
X#define k
X#endif
X#else
X#define j
X#endif
X#else
X#define i
X#endif
X#else
X#define h
X#endif
X#else
X#define g
X#endif
X#else
X#define f
X#endif
X#else
X#define e
X#endif
X#else
X#define c
X#endif
X#else
X#define b
X#endif
X#else
X#define a
X#endif
X#ifdef k
X#define p (1<<7)
X#else
X#define p 0
X#endif
X#ifdef j
X#define q (1<<6)
X#else
X#define q 0
X#endif
X#ifdef i
X#define r (1<<5)
X#else
X#define r 0
X#endif
X#ifdef h
X#define s (1<<4)
X#else
X#define s 0
X#endif
X#ifdef g
X#define t (1<<3)
X#else
X#define t 0
X#endif
X#ifdef f
X#define u (1<<2)
X#else
X#define u 0
X#endif
X#ifdef e
X#define v (1<<1)
X#else
X#define v 0
X#endif
X#define vv (p+q+r+s+t+u+v+1)
X#define ff \
X (defined(c)*8+defined(b)*4+defined(a)*2+1)
X#if vv==1
X#undef vv
X#define vv 2
X#endif
X#if ff<vv 
X#if ff!=1
X#if (vv/ff)*ff==vv 
X#ifndef dd
X#define dd
X#endif
X#endif
X#endif
X#endif
X#if ff==15
X#ifdef dd
X#undef dd
X#else
Xprintf("%d\n", vv);
X#endif
X#endif
X#undef ff
X#undef vv
X#undef p
X#undef q
X#undef r
X#undef s
X#undef t
X#undef u
X#undef v
X#ifdef w
X#ifdef x
X#ifdef y
X#ifndef z
X#define z
X#endif
X#else
X#define y
X#endif
X#else
X#define x
X#endif
X#else
X#define w
X#include <stdio.h>
Xmain(){
X#endif
X#ifndef z
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#include "zsmall.c"
X#endif
X#ifdef z
X#undef z
X#else
X#ifdef y
X#undef y
X#else
X#ifdef x
X#undef x
X#else
X#ifdef w
X#undef w
X}
X#endif
X#endif
X#endif
X#endif
//E*O*F ./1988/zsmall.c//

echo Possible errors detected by \'wc\' [hopefully none]:
temp=/tmp/shar$$
trap "rm -f $temp; exit" 0 1 2 3 15
cat > $temp <<\!!!
 80  437  2607  Makefile
 17  137  842  README
 193  323  838  applin.c
 28  190  1095  applin.hint
 26  63  796  dale.c
 17  73  475  dale.hint
 34  71  1006  isaak.c
 68  435  4007  isaak.encode
 43  210  1295  isaak.hint
 10  49  305  litmaath.c
 30  124  866  litmaath.hint
 53  102  877  phillipps.c
 16  71  464  phillipps.hint
 6  24  537  reddy.c
 16  59  353  reddy.hint
 40  123  789  robison.c
 35  171  1107  robison.hint
 207  1272  7713  rules
 1  2  20  spinellis.c
 4  5  37  spinellis.data
 30  129  865  spinellis.hint
 20  23  555  westley.c
 22  66  440  westley.hint
 160  277  1585  zsmall.c
 1156  4436  29474  total
!!!
wc  ./1988/Makefile ./1988/README ./1988/applin.c ./1988/applin.hint ./1988/dale.c ./1988/dale.hint ./1988/isaak.c ./1988/isaak.encode ./1988/isaak.hint ./1988/litmaath.c ./1988/litmaath.hint ./1988/phillipps.c ./1988/phillipps.hint ./1988/reddy.c ./1988/reddy.hint ./1988/robison.c ./1988/robison.hint ./1988/rules ./1988/spinellis.c ./1988/spinellis.data ./1988/spinellis.hint ./1988/westley.c ./1988/westley.hint ./1988/zsmall.c | sed 's=[^ ]*/==' | diff -b $temp -
exit 0

