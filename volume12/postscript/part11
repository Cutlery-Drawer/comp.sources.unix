Subject:  v12i060:  A PostScript interpreter, Part11/18
Newsgroups: comp.sources.unix
Sender: sources
Approved: rs@uunet.UU.NET

Submitted-by: Crispin Goswell <caag@vd.rl.ac.uk>
Posting-number: Volume 12, Issue 60
Archive-name: postscript/part11

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 11 (of 18)."
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'postscript/fonts/Times/bits.r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'postscript/fonts/Times/bits.r'\"
else
echo shar: Extracting \"'postscript/fonts/Times/bits.r'\" \(14110 characters\)
sed "s/^X//" >'postscript/fonts/Times/bits.r' <<'END_OF_FILE'
XCharStrings
X/2281
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XCD3D
X4C3E
X4C3F
X4D40
X4E40
X4F3F
X4F3E
X4E3D
X4D3D
XCD3E
X4D3F
X4E3F
X4E3E
X4D3E
X>
Xput
XMetrics
X/2281
X[-1
X27]
Xput
XCharStrings
X/2282
X<C634
X4435
X4537
X4738
XC634
X4535
X4537
XCB34
X4D35
X4C37
X4A38
XCB34
X4C35
X4C37
XC738
X4539
X443A
X433C
X433F
X4441
X4542
X4743
X4A43
X4C42
X4D41
X4E3F
X4E3C
X4D3A
X4C39
X4A38
X4738
XC843
X4849
XC943
X4949
XC446
X4D46
X>
Xput
XMetrics
X/2282
X[4
X17]
Xput
XCharStrings
X/2283
X<C934
X4635
X4437
X433A
X433B
X443E
X4640
X4941
X4A41
X4D40
X4F3E
X503B
X503A
X4F37
X4D35
X4A34
X4934
XC941
X4949
XCA41
X4A49
XC545
X4E45
X>
Xput
XMetrics
X/2283
X[3
X19]
Xput
XCharStrings
X/2284
X<CC34
X4935
X4637
X443A
X433D
X4341
X4444
X4647
X4949
X4C4A
X504A
X5349
X5647
X5844
X5941
X593D
X583A
X5637
X5335
X5034
X4C34
XCE34
X4E4A
XC33F
X593F
X>
Xput
XMetrics
X/2284
X[-2
X28]
Xput
XCharStrings
X/2285
X<C93B
X463C
X443E
X4341
X4342
X4445
X4647
X4948
X4A48
X4D47
X4F45
X5042
X5041
X4F3E
X4D3C
X4A3B
X493B
XD635
X5035
X5436
X4E3C
XD635
X563B
X5537
X4F3D
XD536
X4F3C
X>
Xput
XMetrics
X/2285
X[0
X25]
Xput
XCharStrings
X/2286
X<C337
X4435
X4634
X4934
X4B35
X4C37
X4C3A
X4B3D
X4A3F
X4841
X4543
XC934
X4A35
X4B37
X4B3B
X4A3E
X4841
XD034
X4E49
XD134
X4D49
XC543
X5343
X>
Xput
XMetrics
X/2286
X[0
X22]
Xput
XCharStrings
X/2287
X<C434
X4443
XC534
X443F
XC43F
X453D
X463C
X483B
X4B3B
X4E3C
X4F3E
X4F40
X4E42
X4C44
XCB3B
X4D3C
X4E3E
X4E40
X4B46
X4B48
X4C49
X4E49
X5047
XC234
X4534
X>
Xput
XMetrics
X/2287
X[3
X19]
Xput
XCharStrings
X/2288
X<C93C
X463D
X443F
X4342
X4343
X4446
X4648
X4949
X4A49
X4D48
X4F46
X5043
X5042
X4F3F
X4D3D
X4A3C
X493C
XC936
X4538
X4934
X493C
XCA36
X4E38
X4A34
X4A3C
XC941
X4842
X4843
X4944
X4A44
X4B43
X4B42
X4A41
X4941
XC942
X4943
X4A43
X4A42
X4942
X>
Xput
XMetrics
X/2288
X[3
X19]
Xput
XCharStrings
X/2289
X<CA36
X4B34
X4B49
XCD36
X4C34
X4C49
XC336
X4434
X443B
X453E
X4740
X4A41
X4B41
XC636
X4534
X453C
X463F
XD436
X5334
X533B
X523E
X5040
X4D41
X4C41
XD136
X5234
X523C
X513F
XC745
X5045
X>
Xput
XMetrics
X/2289
X[1
X23]
Xput
XCharStrings
X/2290
X<C534
X4549
XC634
X4649
XC234
X4E34
X5135
X5236
X5338
X533B
X523D
X513E
X4E3F
X463F
XCE34
X5035
X5136
X5238
X523B
X513D
X503E
X4E3F
XC249
X5249
X5244
X5149
X>
Xput
XMetrics
X/2290
X[1
X22]
Xput
XCharStrings
X/2291
X<D135
X4D35
X4936
X4638
X443B
X433E
X4341
X4444
X4647
X4949
X4D4A
X514A
XD135
X4E36
X4B38
X493B
X483E
X4841
X4944
X4B47
X4E49
X514A
X>
Xput
XMetrics
X/2291
X[1
X19]
Xput
XCharStrings
X/2292
X<C93F
X473F
X4540
X4441
X4343
X4345
X4447
X4548
X4749
X4949
X4B48
X4C47
X4D45
X4D43
X4C41
X4B40
X493F
XCD36
X4A3F
XD438
X4C40
XD63F
X4D42
X>
Xput
XMetrics
X/2292
X[-2
X25]
Xput
XCharStrings
X/2293
X<C739
X4D47
XCD39
X4747
XC33D
X5143
XD13D
X4343
X>
Xput
XMetrics
X/2293
X[-3
X20]
Xput
XCharStrings
X/2294
X<C844
X4643
X4543
X4344
X4246
X4247
X4349
X454A
X464A
X4849
X4947
X4946
X4844
X4540
X443D
X443B
X4538
X4736
X4A35
X4E35
X5136
X5338
X543B
X543D
X5340
X5044
X4F46
X4F47
X5049
X524A
X534A
X5549
X5647
X5646
X5544
X5343
X5243
X5044
XC43B
X4539
X4737
X4A36
X4E36
X5137
X5339
X543B
X>
Xput
XMetrics
X/2294
X[-1
X24]
Xput
XCharStrings
X/2295
X<C83B
X463C
X453C
X433B
X4239
X4238
X4336
X4535
X4635
X4836
X4938
X4939
X483B
X453F
X4442
X4444
X4547
X4749
X4A4A
X4E4A
X5149
X5347
X5444
X5442
X533F
X503B
X4F39
X4F38
X5036
X5235
X5335
X5536
X5638
X5639
X553B
X533C
X523C
X503B
XC444
X4546
X4748
X4A49
X4E49
X5148
X5346
X5444
X>
Xput
XMetrics
X/2295
X[-1
X24]
Xput
XCharStrings
X/2301
X<C43B
X433A
X4338
X4436
X4635
X4835
X4A36
X4B37
X4C39
X4D3E
XC338
X4536
X4736
X4937
X4A38
X4B3A
X4C3E
X4C49
XD53B
X563A
X5638
X5536
X5335
X5135
X4F36
X4E37
X4D39
X4C3E
XD638
X5436
X5236
X5037
X4F38
X4E3A
X4D3E
X4D49
X>
Xput
XMetrics
X/2301
X[-1
X25]
Xput
XCharStrings
X/2302
X<C335
X4439
X453B
X473D
X4A3E
X4E3E
X513D
X533B
X5439
X5535
XC335
X4438
X453A
X473C
X4A3D
X4E3D
X513C
X533A
X5438
X5535
XCA3D
X483E
X473F
X4641
X4644
X4746
X4948
X4B49
X4D49
X4F48
X5146
X5244
X5241
X513F
X503E
X4E3D
XCA3E
X483F
X4741
X4744
X4847
XD047
X5144
X5141
X503F
X4E3E
X>
Xput
XMetrics
X/2302
X[-1
X24]
Xput
XCharStrings
X/2303
X<C738
X4744
XC839
X4843
XD039
X5043
XD138
X5144
XC335
X4537
X4738
X4A39
X4E39
X5138
X5337
X5535
XC347
X4545
X4744
X4A43
X4E43
X5144
X5345
X5547
X>
Xput
XMetrics
X/2303
X[-1
X24]
Xput
XCharStrings
X/2304
X<D537
X4637
X4438
X433A
X433C
X443E
X463F
X483F
X4A3E
X4B3C
X4B3A
X4A38
X5538
XC33B
X443D
X453E
X473F
XCB3B
X4A39
X4938
X4737
XC346
X5246
X5445
X5543
X5541
X543F
X523E
X503E
X4E3F
X4D41
X4D43
X4E45
X4345
XD542
X5440
X533F
X513E
XCD42
X4E44
X4F45
X5146
X>
Xput
XMetrics
X/2304
X[-3
X24]
Xput
XCharStrings
X/2305
X<C943
X4742
X4642
X4443
X4345
X4346
X4448
X4649
X4749
X4948
X4A46
X4A45
X4943
X443E
X433C
X4339
X4437
X4636
X4935
X4D35
X5136
X5338
X543A
X543D
X5340
X5043
X4F45
X4F47
X5049
X5249
X5348
X5446
XC741
X453E
X443C
X4439
X4537
X4636
XCD35
X5036
X5238
X533A
X533D
X5240
X5043
X>
Xput
XMetrics
X/2305
X[-1
X23]
Xput
XCharStrings
X/2306
X<C139
X4436
X4639
X4644
XC337
X453A
X4544
XC639
X4936
X4B39
X4B43
XC837
X4A3A
X4A43
XCB39
X4E36
X5039
X5049
XCD37
X4F3A
X4F49
XD039
X5336
X5438
X553B
X553E
X5441
X5343
X5145
X4E47
X4949
XD237
X5338
X543B
X543E
X5341
X5243
X5045
X4D47
X4949
X>
Xput
XMetrics
X/2306
X[-1
X24]
Xput
XCharStrings
X/2307
X<C341
X4741
X4640
X453D
X453B
X4638
X4836
X4B35
X4D35
X5036
X5238
X533B
X533D
X5240
X5141
X5541
XC342
X4942
X4740
X463D
X463B
X4738
X4936
X4B35
XCD35
X4F36
X5138
X523B
X523D
X5140
X4F42
X5542
XC546
X5346
XC547
X5347
X>
Xput
XMetrics
X/2307
X[-1
X24]
Xput
XCharStrings
X/2308
X<C13A
X4437
X473A
X4746
XC338
X463B
X4646
XC73A
X4A37
X4D3A
X4D46
XC938
X4C3B
X4C46
XCD3A
X5037
X533A
X5345
X5547
XCF38
X523B
X5246
X5448
X5745
X>
Xput
XMetrics
X/2308
X[-1
X25]
Xput
XCharStrings
X/2309
X<D337
X4347
XD337
X5038
X4A38
XD139
X4E39
X4A38
XD337
X523A
X5240
XD139
X513C
X5240
XCA40
X4340
XC941
X4641
X4340
XCA40
X4A47
XC941
X4944
X4A47
X>
Xput
XMetrics
X/2309
X[-2
X22]
Xput
XCharStrings
X/2310
X<C23D
X4439
X4943
XC43B
X4945
X4C3E
X513E
X543D
X553B
X5539
X5437
X5236
X5136
X4F37
X4E39
X4E3B
X4F3E
X5040
X5143
X5146
X4F48
XD136
X5037
X4F39
X4F3B
X513F
X5242
X5245
X5147
X4F48
X>
Xput
XMetrics
X/2310
X[-2
X24]
Xput
XCharStrings
X/2311
X<C33D
X463A
X4A3C
XC53B
X493D
X4C3A
X4F3C
XCB3B
X4E3D
X513A
X533C
XD03B
X523D
X553A
XC343
X4640
X4A42
XC541
X4943
X4C40
X4F42
XCB41
X4E43
X5140
X5342
XD041
X5243
X5540
X>
Xput
XMetrics
X/2311
X[-3
X24]
Xput
XCharStrings
X/2312
X<C436
X4838
X4A3A
X4B3D
X4B40
X4A43
X4845
X4447
XC436
X4737
X4938
X4B3A
X4C3D
XCC40
X4B43
X4945
X4746
X4447
XD436
X5137
X4F38
X4D3A
X4C3D
XCC40
X4D43
X4F45
X5146
X5447
XD436
X5038
X4E3A
X4D3D
X4D40
X4E43
X5045
X5447
XC33E
X553E
XC33F
X553F
X>
Xput
XMetrics
X/2312
X[-2
X24]
Xput
XCharStrings
X/2317
X<C33F
X4341
X4541
X453F
X433F
XC33F
X4541
XC53F
X4341
X>
Xput
XMetrics
X/2317
X[-3
X8]
Xput
XCharStrings
X/2318
X<C33E
X4740
X4A42
X4C44
X4D47
X4D49
X4C4B
X4B4C
XC33F
X4942
XC340
X4641
X4A43
X4C45
X4D47
X>
Xput
XMetrics
X/2318
X[-3
X16]
Xput
XCharStrings
X/2319
X<CD39
X4C3B
X4A3D
X463F
X4340
XC93E
X4341
XCB34
X4C35
X4D37
X4D39
X4C3C
X4A3E
X4740
X4342
X>
Xput
XMetrics
X/2319
X[4
X16]
Xput
XCharStrings
X/2320
X<CB3B
X473C
X443E
X4340
X4342
X4444
X4645
X4945
X4D44
X5042
X5140
X513E
X503C
X4E3B
X4B3B
XD03C
X4B3B
XCE3B
X493C
X443E
XC73C
X4340
XC444
X4945
XC645
X4B44
X5042
XCD44
X5140
X>
Xput
XMetrics
X/2320
X[-3
X20]
Xput
XCharStrings
X/2321
X<CB3B
X473C
X443E
X4340
X4342
X4444
X4645
X4945
X4D44
X5042
X5140
X513E
X503C
X4E3B
X4B3B
XD03C
X4B3B
XCE3B
X493C
X443E
XC73C
X4340
XC444
X4945
XC645
X4B44
X5042
XCD44
X5140
X>
Xput
XMetrics
X/2321
X[-3
X20]
Xput
XCharStrings
X/2322
X<C93B
X463C
X443E
X4340
X4342
X4444
X4645
X4845
X4B44
X4D42
X4E40
X4E3E
X4D3C
X4B3B
X493B
XC53E
X4B3B
XC440
X4C3C
XC342
X4D3D
XC443
X4E3E
XC544
X4D40
XC645
X4C42
X>
Xput
XMetrics
X/2322
X[-3
X17]
Xput
XCharStrings
X/2323
X<C535
X454C
XCB34
X4B4B
XC33C
X4D3A
XC33D
X4D3B
XC345
X4D43
XC346
X4D44
X>
Xput
XMetrics
X/2323
X[4
X16]
Xput
XCharStrings
X/2324
X<C434
X4446
XCC3A
X4C4C
XC43C
X4C3A
XC43D
X4C3B
XC445
X4C43
XC446
X4C44
X>
Xput
XMetrics
X/2324
X[4
X16]
Xput
XCharStrings
X/2325
X<C430
X4445
XC43C
X473A
X4A3A
X4C3B
X4D3D
X4D3F
X4C41
X4943
X4744
X4445
XC43C
X473B
X4A3B
X4C3C
XCB3B
X4C3D
X4C3F
X4B41
X4943
X>
Xput
XMetrics
X/2325
X[8
X16]
Xput
XCharStrings
X/2326
X<C337
X433A
XD737
X573A
XC337
X5737
XC338
X5738
XC339
X5739
XC33A
X573A
X>
Xput
XMetrics
X/2326
X[-3
X26]
Xput
XCharStrings
X/2327
X<C33C
X433F
XCD3C
X4D3F
XC33C
X4D3C
XC33D
X4D3D
XC33E
X4D3E
XC33F
X4D3F
X>
Xput
XMetrics
X/2327
X[-3
X16]
Xput
XCharStrings
X/2328
X<C33A
X4D46
XC33A
X453C
X473D
X4A3D
X4C3C
X4D3B
X4D39
X4B39
X4B3B
X4A3D
XC53C
X4A3D
XC73D
X4D3B
XCC39
X4C3C
XCB3A
X4D3A
XCD46
X4B44
X4943
X4643
X4444
X4345
X4347
X4547
X4545
X4643
XCB44
X4643
XC943
X4345
XC444
X4447
XC346
X4546
X>
Xput
XMetrics
X/2328
X[-1
X16]
Xput
XCharStrings
X/2329
X<C63D
X453B
X4539
X4339
X433B
X443C
X463D
X493D
X4B3C
X4D3A
XC439
X443C
XC33A
X453A
XC33B
X493D
XC63D
X4B3C
XCD3A
X4D47
X>
Xput
XMetrics
X/2329
X[-1
X16]
Xput
XCharStrings
X/2330
X<C654
X4754
X4853
X4852
X4751
X4651
X4552
X4554
X4656
X4857
X4A57
X4D56
X4F54
X5052
X514E
X5143
X5029
X5022
X511D
X521B
X541A
X551A
X571B
X581D
X5821
X5724
X5626
X5429
X4F2D
X4931
X4733
X4536
X4438
X433C
X4340
X4444
X4647
X4949
X4D4A
X514A
X5549
X5748
X5945
X5A42
X5A3E
X593B
X5839
X5637
X5336
X4F36
X4C37
X4A39
X493C
X4940
X4A43
X4C45
XC652
X4653
X4753
X4752
X4652
XD429
X502D
X4B31
X4834
X4637
X4539
X443C
X4440
X4544
X4646
X4949
XD14A
X5449
X5648
X5845
X5942
X593E
X583B
X5739
X5537
X5336
X>
Xput
XMetrics
X/2330
X[21
X29]
Xput
XCharStrings
X/2331
X<C941
X4A43
X4C44
X4E44
X5043
X5141
X513F
X503D
X4E3C
X4C3C
X4A3D
X493E
X4841
X4844
X4947
X4B49
X4E4A
X514A
X5449
X5647
X5745
X5842
X583E
X573B
X5538
X5337
X5036
X4D36
X4A37
X4838
X463A
X443D
X4341
X4346
X444B
X464F
X4851
X4B53
X4F54
X5454
X5853
X5B51
X5D4F
XC63A
X453C
X4440
X4446
X454A
X474E
X4950
X4C52
X5053
X5453
X5852
X5A51
X5D4F
XCB3D
X4F3D
XCA3E
X503E
XC93F
X513F
XC940
X5140
XC941
X5141
XCA42
X5042
XCB43
X4F43
XDC3A
X5C3C
X5E3C
X5E3A
X5C3A
XDD3A
X5D3C
XDC3B
X5E3B
XDC44
X5C46
X5E46
X5E44
X5C44
XDD44
X5D46
XDC45
X5E45
X>
Xput
XMetrics
X/2331
X[-3
X33]
Xput
XCharStrings
X/2332
X<C42E
X4452
XC92E
X4952
XD32E
X5352
XD82E
X5852
XC93B
X5339
XC93C
X533A
XC93D
X533B
XC945
X5343
XC946
X5344
XC947
X5345
X>
Xput
XMetrics
X/2332
X[4
X28]
Xput
XCharStrings
X/2367
X<C33F
X4341
X4541
X453F
X433F
XC33F
X4541
XC53F
X4341
X>
Xput
XMetrics
X/2367
X[-3
X8]
Xput
XCharStrings
X/2368
X<C33E
X4740
X4A42
X4C44
X4D47
X4D49
X4C4B
X4B4C
XC33F
X4942
XC340
X4641
X4A43
X4C45
X4D47
X>
Xput
XMetrics
X/2368
X[-3
X16]
Xput
XCharStrings
X/2369
X<CD39
X4C3B
X4A3D
X463F
X4340
XC93E
X4341
XCB34
X4C35
X4D37
X4D39
X4C3C
X4A3E
X4740
X4342
X>
Xput
XMetrics
X/2369
X[4
X16]
Xput
XCharStrings
X/2370
X<C83B
X453C
X443D
X433F
X4341
X4443
X4544
X4845
X4C45
X4F44
X5043
X5141
X513F
X503D
X4F3C
X4C3B
X483B
XC53C
X443E
X4441
X4543
X4644
X4845
XCF44
X5042
X503F
X4F3D
X4E3C
X4C3B
X>
Xput
XMetrics
X/2370
X[-3
X20]
Xput
XCharStrings
X/2371
X<CB3B
X473C
X443E
X4340
X4342
X4444
X4645
X4945
X4D44
X5042
X5140
X513E
X503C
X4E3B
X4B3B
XD03C
X4B3B
XCE3B
X493C
X443E
XC73C
X4340
XC444
X4945
XC645
X4B44
X5042
XCD44
X5140
X>
Xput
XMetrics
X/2371
X[-3
X20]
Xput
XCharStrings
X/2372
X<C93B
X463C
X443E
X4340
X4342
X4444
X4645
X4845
X4B44
X4D42
X4E40
X4E3E
X4D3C
X4B3B
X493B
XC53E
X4B3B
XC440
X4C3C
XC342
X4D3D
XC443
X4E3E
XC544
X4D40
XC645
X4C42
X>
Xput
XMetrics
X/2372
X[-3
X17]
Xput
XCharStrings
X/2373
X<C535
X454C
XCB34
X4B4B
XC33C
X4D3A
XC33D
X4D3B
XC345
X4D43
XC346
X4D44
X>
Xput
XMetrics
X/2373
X[4
X16]
Xput
XCharStrings
X/2374
X<C434
X4446
XCC3A
X4C4C
XC43C
X4C3A
XC43D
X4C3B
XC445
X4C43
XC446
X4C44
X>
Xput
XMetrics
X/2374
X[4
X16]
Xput
XCharStrings
X/2375
X<C430
X4445
XC43C
X473A
X4A3A
X4C3B
X4D3D
X4D3F
X4C41
X4943
X4744
X4445
XC43C
X473B
X4A3B
X4C3C
XCB3B
X4C3D
X4C3F
X4B41
X4943
X>
Xput
XMetrics
X/2375
X[8
X16]
Xput
XCharStrings
X/2376
X<C337
X433A
XD737
X573A
XC337
X5737
XC338
X5738
XC339
X5739
XC33A
X573A
X>
Xput
XMetrics
X/2376
X[-3
X26]
Xput
XCharStrings
X/2377
X<C33C
X433F
XCD3C
X4D3F
XC33C
X4D3C
XC33D
X4D3D
XC33E
X4D3E
XC33F
X4D3F
X>
Xput
XMetrics
X/2377
X[-3
X16]
Xput
XCharStrings
X/2378
X<C731
X4C3B
X4842
X4843
XCB3A
X4741
XCA37
X4A39
X4640
X4843
X4B47
XCD4A
X4B47
X4946
X4746
X4547
X4449
X444B
X454D
X484F
XCD4A
X4B48
X4947
X4547
X454B
X464D
X484F
XC946
X4648
X444B
X>
Xput
XMetrics
X/2378
X[7
X16]
Xput
XCharStrings
X/2379
X<C63D
X453B
X4539
X4339
X433B
X443C
X463D
X493D
X4B3C
X4D3A
XC439
X443C
XC33A
X453A
XC33B
X493D
XC63D
X4B3C
XCD3A
X4947
X>
Xput
XMetrics
X/2379
X[-1
X16]
Xput
XCharStrings
X/2380
X<C654
X4754
X4853
X4852
X4751
X4651
X4552
X4554
X4656
X4857
X4A57
X4D56
X4F54
X5052
X514E
X5143
X5029
X5022
X511D
X521B
X541A
X551A
X571B
X581D
X5821
X5724
X5626
X5429
X4F2D
X4931
X4733
X4536
X4438
X433C
X4340
X4444
X4647
X4949
X4D4A
X514A
X5549
X5748
X5945
X5A42
X5A3E
X593B
X5839
X5637
X5336
X4F36
X4C37
X4A39
X493C
X4940
X4A43
X4C45
XC652
X4653
X4753
X4752
X4652
XD429
X502D
X4B31
X4834
X4637
X4539
X443C
X4440
X4544
X4646
X4949
XD14A
X5449
X5648
X5845
X5942
X593E
X583B
X5739
X5537
X5336
X>
Xput
XMetrics
X/2380
X[21
X29]
Xput
XCharStrings
X/2381
X<C53F
X463D
X483C
X4A3C
X4C3D
X4D3F
X4D41
X4C43
X4A44
X4844
X4643
X4542
X443F
X443C
X4539
X4737
X4A36
X4E36
X5237
X5539
X573C
X5840
X5845
X5749
X564B
X544E
X5151
X4D54
X4857
X4459
XCE36
X5137
X5439
X563C
X5740
X5745
X5649
X554B
X534E
X5051
X4B55
X4857
XC73D
X4B3D
XC63E
X4C3E
XC53F
X4D3F
XC540
X4D40
XC541
X4D41
XC642
X4C42
XC743
X4B43
XDC3A
X5C3C
X5E3C
X5E3A
X5C3A
XDD3A
X5D3C
XDC3B
X5E3B
XDC44
X5C46
X5E46
X5E44
X5C44
XDD44
X5D46
XDC45
X5E45
X>
Xput
XMetrics
X/2381
X[1
X33]
Xput
XCharStrings
X/2382
X<C42C
X4454
XC52C
X4554
XC92C
X4954
XCD30
X4F30
X4F32
X4D32
X4D2F
X4E2D
X502C
X532C
X552D
X572F
X5832
X5837
X573A
X553C
X533D
X513D
X4F3C
X4E3A
X4D3C
X4B3F
X4A40
X4B41
X4D44
X4E46
X4F44
X5143
X5343
X5544
X5746
X5849
X584E
X5751
X5553
X5354
X5054
X4E53
X4D51
X4D4E
X4F4E
X4F50
X4D50
XCE30
X4E32
XCD31
X4F31
XD52D
X562F
X5732
X5737
X563A
X553C
XCE3A
X4E3C
X4C3F
X4A40
X4C41
X4E44
X4E46
XD544
X5646
X5749
X574E
X5651
X5553
XCE4E
X4E50
XCD4F
X4F4F
X>
Xput
XMetrics
X/2382
X[6
X28]
Xput
XCharStrings
X/Product
X<C730
X4750
XC830
X4850
XDA30
X5A50
XDB30
X5B50
XC330
X5F30
XC350
X4C50
XD650
X5F50
X>
Xput
XMetrics
X/Product
X[-1
X34]
Xput
XCharStrings
X/Sum
X<C530
X4F3E
X4450
XC430
X4E3E
XC330
X4E3F
XC330
X5A30
X5C37
X5930
XC54F
X5A4F
XC450
X5A50
X5C49
X5950
X>
Xput
XMetrics
X/Sum
X[0
X31]
Xput
XCharStrings
X/Parenleft
X<CF19
X4C1F
X4926
X472B
X462F
X4534
X443C
X4444
X454C
X4651
X4755
X495A
X4C61
X4F67
XCC1F
X4A24
X482A
X472E
X4634
X453C
X4544
X464C
X4752
X4856
X4A5C
X4C61
X>
Xput
XMetrics
X/Parenleft
X[30
X18]
Xput
XCharStrings
X/Parenright
X<C319
X461F
X4926
X4B2B
X4C2F
X4D34
X4E3C
X4E44
X4D4C
X4C51
X4B55
X495A
X4661
X4367
XC61F
X4824
X4A2A
X4B2E
X4C34
X4D3C
X4D44
X4C4C
X4B52
X4A56
X485C
X4661
X>
Xput
XMetrics
X/Parenright
X[30
X18]
Xput
XCharStrings
X/Bracketleft
X<C419
X4440
X4467
XC519
X4540
X4567
XC419
X4F19
XC467
X4F67
X>
Xput
XMetrics
X/Bracketleft
X[30
X18]
Xput
XCharStrings
X/Bracketright
X<CD19
X4D40
X4D67
XCE19
X4E40
X4E67
XC319
X4E19
XC367
X4E67
X>
Xput
XMetrics
X/Bracketright
X[30
X18]
Xput
XCharStrings
X/Braceleft
X<CD19
X4A1B
X481D
X471F
X4622
X4626
X472A
X4B32
X4C35
X4C38
X4B3B
X493E
XCA1B
X481E
X4722
X4726
X4829
X4C31
X4D35
X4D38
X4C3B
X493E
X4540
X4942
X4C45
X4D48
X4D4B
X4C4F
X4857
X475A
X475E
X4862
X4A65
XC942
X4B45
X4C48
X4C4B
X4B4E
X4756
X465A
X465E
X4761
X4863
X4A65
X4D67
X>
Xput
XMetrics
X/Braceleft
X[30
X18]
Xput
XCharStrings
X/Braceright
X<C519
X481B
X4A1D
X4B1F
X4C22
X4C26
X4B2A
X4732
X4635
X4638
X473B
X493E
XC81B
X4A1E
X4B22
X4B26
X4A29
X4631
X4535
X4538
X463B
X493E
X4D40
X4942
X4645
X4548
X454B
X464F
X4A57
X4B5A
X4B5E
X4A62
X4865
XC942
X4745
X4648
X464B
X474E
X4B56
X4C5A
X4C5E
X4B61
X4A63
X4865
X4567
X>
Xput
XMetrics
X/Braceright
X[30
X18]
Xput
XCharStrings
X/Braceleft1
X<CD1C
X4A1F
X4822
X4626
X452B
X4531
X4637
X473B
X4A46
X4B4A
X4C50
X4C55
X4B5A
X4A5D
X4861
XCA1F
X4823
X4726
X462B
X4630
X4736
X483A
X4B45
X4C49
X4D4F
X4D55
X4C5A
X4A5E
X4861
X4564
X>
Xput
XMetrics
X/Braceleft1
X[27
X18]
Xput
XCharStrings
X/Braceright1
X<C51C
X481F
X4A22
X4C26
X4D2B
X4D31
X4C37
X4B3B
X4846
X474A
X4650
X4655
X475A
X485D
X4A61
XC81F
X4A23
X4B26
X4C2B
X4C30
X4B36
X4A3A
X4745
X4649
X454F
X4555
X465A
X485E
X4A61
X4D64
X>
Xput
XMetrics
X/Braceright1
X[27
X18]
Xput
XCharStrings
X/Radical
X<C340
X4A40
X5B5D
XC940
X5A5D
XC840
X5B60
XE310
X5F38
X5B60
X>
Xput
XMetrics
X/Radical
X[21
X35]
Xput
XCharStrings
X/Integral
X<DA1C
X591C
X581D
X581E
X591F
X5A1F
X5B1E
X5B1C
X5A1A
X5819
X5619
X541A
X521C
X511E
X5021
X4F28
X4E38
X4E58
X4D61
X4C64
XD91D
X591E
X5A1E
X5A1D
X591D
XCF28
X4F58
XD21C
X511F
X5028
X5048
X4F58
X4E5F
X4D62
X4C64
X4A66
X4867
X4667
X4466
X4364
X4362
X4461
X4561
X4662
X4663
X4564
X4464
XC462
X4463
X4563
X4562
X4462
X>
Xput
XMetrics
X/Integral
X[24
X30]
Xput
END_OF_FILE
if test 14110 -ne `wc -c <'postscript/fonts/Times/bits.r'`; then
    echo shar: \"'postscript/fonts/Times/bits.r'\" unpacked with wrong size!
fi
# end of 'postscript/fonts/Times/bits.r'
fi
if test -f 'postscript/fonts/extra/extra.r' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'postscript/fonts/extra/extra.r'\"
else
echo shar: Extracting \"'postscript/fonts/extra/extra.r'\" \(13017 characters\)
sed "s/^X//" >'postscript/fonts/extra/extra.r' <<'END_OF_FILE'
XCharStrings
X/4000
X<CF44
X4F45
X4E47
X4D48
X4B49
X4749
X4548
X4447
X4345
X4343
X4441
X4540
X493E
X493B
XC936
X4A35
X4934
X4835
X4936
X>
Xput
XMetrics
X/4000
X[3
X18]
Xput
XCharStrings
X/4001
X<C441
X5C41
X>
Xput
XMetrics
X/4001
X[-4
X32]
Xput
XCharStrings
X/4002
X<C341
X4B41
X>
Xput
XMetrics
X/4002
X[-3
X14]
Xput
XCharStrings
X/4003
X<C049
X5049
X>
Xput
XMetrics
X/4003
X[0
X16]
Xput
XCharStrings
X/4004
X<C649
X5234
XC337
X4634
X4641
XD349
X533C
X4C45
X5645
X>
Xput
XMetrics
X/4004
X[0
X24]
Xput
XCharStrings
X/4005
X<C649
X5234
XC337
X4634
X4641
XCE3E
X4F3D
X513C
X523C
X543D
X553F
X5540
X5442
X4E49
X5649
X>
Xput
XMetrics
X/4005
X[0
X24]
Xput
XCharStrings
X/4006
X<C749
X5334
XC334
X4A34
X4639
X4839
X4A3A
X4B3C
X4B3E
X4A40
X4841
X4541
X4340
X423E
XD449
X543C
X4D45
X5745
X>
Xput
XMetrics
X/4006
X[-1
X25]
Xput
XCharStrings
X/4007
X<CB30
X4430
X4450
X4B50
X>
Xput
XMetrics
X/4007
X[9
X14]
Xput
XCharStrings
X/4008
X<C330
X4A30
X4A50
X4350
X>
Xput
XMetrics
X/4008
X[9
X14]
Xput
XCharStrings
X/4009
X<CF3E
X4D3C
X4B3B
X483B
X463C
X443E
X4341
X4343
X4446
X4648
X4849
X4B49
X4D48
X4F46
XC350
X4F34
X>
Xput
XMetrics
X/4009
X[3
X18]
Xput
XCharStrings
X/4010
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XD23A
X4F38
X4C38
X493A
X483D
X4840
X4943
X4C45
X4F45
X5243
X>
Xput
XMetrics
X/4010
X[-2
X27]
Xput
XCharStrings
X/4011
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XC945
X4938
X5038
X523A
X523D
X503F
X493F
XCE3F
X5245
X>
Xput
XMetrics
X/4011
X[-2
X27]
Xput
XCharStrings
X/4012
X<C449
X4437
X5637
X5649
X4449
X>
Xput
XMetrics
X/4012
X[-4
X26]
Xput
XCharStrings
X/4013
X<CC37
X4938
X4739
X453C
X443F
X4441
X4544
X4747
X4948
X4C49
X4E49
X5148
X5347
X5544
X5641
X563F
X553C
X5339
X5138
X4E37
X4C37
X>
Xput
XMetrics
X/4013
X[-4
X26]
Xput
XCharStrings
X/4051
X<CA34
X4834
X4635
X4538
X4549
XC23B
X493B
XD634
X5434
X5235
X5138
X5149
XCE3B
X553B
X>
Xput
XMetrics
X/4051
X[0
X24]
Xput
XCharStrings
X/4052
X<CA34
X4834
X4635
X4538
X4549
XC23B
X493B
XD634
X5434
X5235
X5138
X5149
XCE3B
X553B
XDB34
X5C35
X5D34
X5C33
X5B34
XDC3B
X5C49
X>
Xput
XMetrics
X/4052
X[-2
X32]
Xput
XCharStrings
X/4053
X<CA34
X4834
X4635
X4538
X4549
XC23B
X493B
XD634
X5434
X5235
X5138
X5149
XCE3B
X553B
XDC34
X5C49
X>
Xput
XMetrics
X/4053
X[-2
X32]
Xput
XCharStrings
X/4054
X<CA34
X4834
X4635
X4538
X4549
XC23B
X493B
XCF34
X5035
X5134
X5033
X4F34
XD03B
X5049
X>
Xput
XMetrics
X/4054
X[1
X20]
Xput
XCharStrings
X/4055
X<CA34
X4834
X4635
X4538
X4549
XC23B
X493B
XD034
X5049
X>
Xput
XMetrics
X/4055
X[0
X20]
Xput
XCharStrings
X/4061
X<CB34
X4934
X4735
X4638
X4649
X4749
XCB34
X4B35
X4935
X4736
XC835
X4738
X4749
XC33B
X4A3B
X4A3C
XC33B
X433C
X4A3C
XD934
X5734
X5535
X5438
X5449
X5549
XD934
X5935
X5735
X5536
XD635
X5538
X5549
XD13B
X583B
X583C
XD13B
X513C
X583C
X>
Xput
XMetrics
X/4061
X[-2
X28]
Xput
XCharStrings
X/4062
X<CB34
X4934
X4735
X4638
X4649
X4749
XCB34
X4B35
X4935
X4736
XC835
X4738
X4749
XC33B
X4A3B
X4A3C
XC33B
X433C
X4A3C
XD934
X5734
X5535
X5438
X5449
X5549
XD934
X5935
X5735
X5536
XD635
X5538
X5549
XD13B
X583B
X583C
XD13B
X513C
X583C
XE034
X5F35
X5F36
X6037
X6137
X6236
X6235
X6134
X6034
XE035
X6036
X6136
X6135
X6035
XE03B
X6049
X6149
XE03B
X613B
X6149
X>
Xput
XMetrics
X/4062
X[-3
X37]
Xput
XCharStrings
X/4063
X<CB34
X4934
X4735
X4638
X4649
X4749
XCB34
X4B35
X4935
X4736
XC835
X4738
X4749
XC33B
X4A3B
X4A3C
XC33B
X433C
X4A3C
XD934
X5734
X5535
X5438
X5449
X5549
XD934
X5935
X5735
X5536
XD635
X5538
X5549
XD13B
X583B
X583C
XD13B
X513C
X583C
XE034
X6049
X6149
XE034
X6134
X6149
X>
Xput
XMetrics
X/4063
X[-3
X37]
Xput
XCharStrings
X/4064
X<CB34
X4934
X4735
X4638
X4649
X4749
XCB34
X4B35
X4935
X4736
XC835
X4738
X4749
XC33B
X4A3B
X4A3C
XC33B
X433C
X4A3C
XD234
X5135
X5136
X5237
X5337
X5436
X5435
X5334
X5234
XD235
X5236
X5336
X5335
X5235
XD23B
X5249
X5349
XD23B
X533B
X5349
X>
Xput
XMetrics
X/4064
X[-2
X23]
Xput
XCharStrings
X/4065
X<CB34
X4934
X4735
X4638
X4649
X4749
XCB34
X4B35
X4935
X4736
XC835
X4738
X4749
XC33B
X4A3B
X4A3C
XC33B
X433C
X4A3C
XD234
X5249
X5349
XD234
X5334
X5349
X>
Xput
XMetrics
X/4065
X[-2
X23]
Xput
XCharStrings
X/4071
X<CC36
X4C35
X4B35
X4B37
X4D37
X4D35
X4C34
X4934
X4735
X4636
X4539
X4549
XC736
X4639
X4648
XC934
X4835
X4737
X4749
XC23B
X4B3B
XC249
X4A49
XC548
X4349
XC547
X4449
XC747
X4849
XC748
X4949
XDA36
X5A35
X5935
X5937
X5B37
X5B35
X5A34
X5734
X5535
X5436
X5339
X5349
XD536
X5439
X5448
XD734
X5635
X5537
X5549
XD03B
X593B
XD049
X5849
XD348
X5149
XD347
X5249
XD547
X5649
XD548
X5749
X>
Xput
XMetrics
X/4071
X[-2
X28]
Xput
XCharStrings
X/4072
X<CC36
X4C35
X4B35
X4B37
X4D37
X4D35
X4C34
X4934
X4735
X4636
X4539
X4549
XC736
X4639
X4648
XC934
X4835
X4737
X4749
XC23B
X4B3B
XC249
X4A49
XC548
X4349
XC547
X4449
XC747
X4849
XC748
X4949
XDA36
X5A35
X5935
X5937
X5B37
X5B35
X5A34
X5734
X5535
X5436
X5339
X5349
XD536
X5439
X5448
XD734
X5635
X5537
X5549
XD03B
X593B
XD049
X5849
XD348
X5149
XD347
X5249
XD547
X5649
XD548
X5749
XE134
X6136
X6336
X6334
X6134
XE234
X6236
XE135
X6335
XE13B
X6149
XE23C
X6248
XDE3B
X633B
X6349
XDE49
X6649
XDF3B
X613C
XE03B
X613D
XE148
X5F49
XE147
X6049
XE347
X6449
XE348
X6549
X>
Xput
XMetrics
X/4072
X[-2
X40]
Xput
XCharStrings
X/4073
X<CC36
X4C35
X4B35
X4B37
X4D37
X4D35
X4C34
X4934
X4735
X4636
X4539
X4549
XC736
X4639
X4648
XC934
X4835
X4737
X4749
XC23B
X4B3B
XC249
X4A49
XC548
X4349
XC547
X4449
XC747
X4849
XC748
X4949
XDA36
X5A35
X5935
X5937
X5B37
X5B35
X5A34
X5734
X5535
X5436
X5339
X5349
XD536
X5439
X5448
XD734
X5635
X5537
X5549
XD03B
X593B
XD049
X5849
XD348
X5149
XD347
X5249
XD547
X5649
XD548
X5749
XE134
X6149
XE235
X6248
XDE34
X6334
X6349
XDE49
X6649
XDF34
X6135
XE034
X6136
XE148
X5F49
XE147
X6049
XE347
X6449
XE348
X6549
X>
Xput
XMetrics
X/4073
X[-2
X40]
Xput
XCharStrings
X/4074
X<CC36
X4C35
X4B35
X4B37
X4D37
X4D35
X4C34
X4934
X4735
X4636
X4539
X4549
XC736
X4639
X4648
XC934
X4835
X4737
X4749
XC23B
X4B3B
XC249
X4A49
XC548
X4349
XC547
X4449
XC747
X4849
XC748
X4949
XD334
X5336
X5536
X5534
X5334
XD434
X5436
XD335
X5535
XD33B
X5349
XD43C
X5448
XD03B
X553B
X5549
XD049
X5849
XD13B
X533C
XD23B
X533D
XD348
X5149
XD347
X5249
XD547
X5649
XD548
X5749
X>
Xput
XMetrics
X/4074
X[-2
X26]
Xput
XCharStrings
X/4075
X<CC36
X4C35
X4B35
X4B37
X4D37
X4D35
X4C34
X4934
X4735
X4636
X4539
X4549
XC736
X4639
X4648
XC934
X4835
X4737
X4749
XC23B
X4B3B
XC249
X4A49
XC548
X4349
XC547
X4449
XC747
X4849
XC748
X4949
XD334
X5349
XD435
X5448
XD034
X5534
X5549
XD049
X5849
XD134
X5335
XD234
X5336
XD348
X5149
XD347
X5249
XD547
X5649
XD548
X5749
X>
Xput
XMetrics
X/4075
X[-2
X26]
Xput
XCharStrings
X/4081
X<D036
X5035
X4F35
X4F37
X5137
X5135
X5034
X4E34
X4C35
X4A37
X4939
X483C
X4740
X4549
X444C
X434E
X4150
XCA38
X493B
X4840
X4649
X454C
XCE34
X4C36
X4B38
X4A3B
X4940
X4748
X464B
X454D
X434F
X4150
X3F50
X3E4F
X3E4D
X404D
X404F
X3F4F
X3F4E
XC43B
X4F3B
XE036
X6035
X5F35
X5F37
X6137
X6135
X6034
X5E34
X5C35
X5A37
X5939
X583C
X5740
X5549
X544C
X534E
X5150
XDA38
X593B
X5840
X5649
X554C
XDE34
X5C36
X5B38
X5A3B
X5940
X5748
X564B
X554D
X534F
X5150
X4F50
X4E4F
X4E4D
X504D
X504F
X4F4F
X4F4E
XD43B
X5F3B
X>
Xput
XMetrics
X/4081
X[2
X32]
Xput
XCharStrings
X/4082
X<D036
X5035
X4F35
X4F37
X5137
X5135
X5034
X4E34
X4C35
X4A37
X4939
X483C
X4740
X4549
X444C
X434E
X4150
XCA38
X493B
X4840
X4649
X454C
XCE34
X4C36
X4B38
X4A3B
X4940
X4748
X464B
X454D
X434F
X4150
X3F50
X3E4F
X3E4D
X404D
X404F
X3F4F
X3F4E
XC43B
X4F3B
XE036
X6035
X5F35
X5F37
X6137
X6135
X6034
X5E34
X5C35
X5A37
X5939
X583C
X5740
X5549
X544C
X534E
X5150
XDA38
X593B
X5840
X5649
X554C
XDE34
X5C36
X5B38
X5A3B
X5940
X5748
X564B
X554D
X534F
X5150
X4F50
X4E4F
X4E4D
X504D
X504F
X4F4F
X4F4E
XD43B
X5F3B
XE834
X6836
X6A36
X6A34
X6834
XE934
X6936
XE835
X6A35
XE13F
X623D
X643B
X663B
X673C
X683E
X6841
X6646
XE73C
X6740
X6644
X6648
XE73E
X6543
X6546
X6648
X6749
X6949
X6B47
X6C45
X>
Xput
XMetrics
X/4082
X[2
X45]
Xput
XCharStrings
X/4083
X<D036
X5035
X4F35
X4F37
X5137
X5135
X5034
X4E34
X4C35
X4A37
X4939
X483C
X4740
X4549
X444C
X434E
X4150
XCA38
X493B
X4840
X4649
X454C
XCE34
X4C36
X4B38
X4A3B
X4940
X4748
X464B
X454D
X434F
X4150
X3F50
X3E4F
X3E4D
X404D
X404F
X3F4F
X3F4E
XC43B
X4F3B
XE036
X6035
X5F35
X5F37
X6137
X6135
X6034
X5E34
X5C35
X5A37
X5939
X583C
X5740
X5549
X544C
X534E
X5150
XDA38
X593B
X5840
X5649
X554C
XDE34
X5C36
X5B38
X5A3B
X5940
X5748
X564B
X554D
X534F
X5150
X4F50
X4E4F
X4E4D
X504D
X504F
X4F4F
X4F4E
XD43B
X5F3B
XE834
X653F
X6443
X6446
X6548
X6649
X6849
X6A47
X6B45
XE934
X663F
X6543
X6548
XE534
X6A34
X6642
X6546
XE634
X6935
XE734
X6836
X>
Xput
XMetrics
X/4083
X[2
X44]
Xput
XCharStrings
X/4084
X<D036
X5035
X4F35
X4F37
X5137
X5135
X5034
X4E34
X4C35
X4A37
X4939
X483C
X4740
X4549
X444C
X434E
X4150
XCA38
X493B
X4840
X4649
X454C
XCE34
X4C36
X4B38
X4A3B
X4940
X4748
X464B
X454D
X434F
X4150
X3F50
X3E4F
X3E4D
X404D
X404F
X3F4F
X3F4E
XC43B
X4F3B
XD834
X5836
X5A36
X5A34
X5834
XD934
X5936
XD835
X5A35
XD13F
X523D
X543B
X563B
X573C
X583E
X5841
X5646
XD73C
X5740
X5644
X5648
XD73E
X5543
X5546
X5648
X5749
X5949
X5B47
X5C45
X>
Xput
XMetrics
X/4084
X[2
X29]
Xput
XCharStrings
X/4085
X<D036
X5035
X4F35
X4F37
X5137
X5135
X5034
X4E34
X4C35
X4A37
X4939
X483C
X4740
X4549
X444C
X434E
X4150
XCA38
X493B
X4840
X4649
X454C
XCE34
X4C36
X4B38
X4A3B
X4940
X4748
X464B
X454D
X434F
X4150
X3F50
X3E4F
X3E4D
X404D
X404F
X3F4F
X3F4E
XC43B
X4F3B
XD834
X553F
X5443
X5446
X5548
X5649
X5849
X5A47
X5B45
XD934
X563F
X5543
X5548
XD534
X5A34
X5642
X5546
XD634
X5935
XD734
X5836
X>
Xput
XMetrics
X/4085
X[2
X28]
Xput
XCharStrings
X/4101
X<C442
X4441
X5C41
X5C42
X4442
X>
Xput
XMetrics
X/4101
X[-4
X32]
Xput
XCharStrings
X/4102
X<C342
X4341
X4B41
X4B42
X4342
X>
Xput
XMetrics
X/4102
X[-3
X14]
Xput
XCharStrings
X/4103
X<C048
X4049
X5049
X5048
X4048
X>
Xput
XMetrics
X/4103
X[0
X16]
Xput
XCharStrings
X/4109
X<CF3E
X4D3C
X4B3B
X483B
X463C
X443E
X4341
X4343
X4446
X4648
X4849
X4B49
X4D48
X4F46
XCF3E
X4E3F
X4D3D
X4B3C
X483C
X463D
X453E
X4441
X4443
X4546
X4647
X4848
X4B48
X4D47
X4E45
X4F46
XC450
X4F34
X4E34
X4350
X4450
X>
Xput
XMetrics
X/4109
X[3
X18]
Xput
XCharStrings
X/4110
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XD23A
X4F38
X4C38
X493A
X483D
X4840
X4943
X4C45
X4F45
X5243
XD243
X5142
X4F44
X4C44
X4A43
X4940
X493D
X4A3A
X4C39
X4F39
X513B
X523A
X>
Xput
XMetrics
X/4110
X[-2
X27]
Xput
XCharStrings
X/4111
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XCA45
X4945
X4938
X5038
X523A
X523D
X503F
X4A3F
XCA45
X4A39
X5039
X513A
X513D
X503E
X4A3E
XCE3F
X5145
X5245
X4F3F
X>
Xput
XMetrics
X/4111
X[-2
X27]
Xput
XCharStrings
X/4204
X<C649
X5234
XC337
X4634
X4641
XC535
X4541
XC241
X4A41
XD240
X524B
XD33E
X534B
XD33E
X4C47
X5747
XD04B
X554B
X>
Xput
XMetrics
X/4204
X[0
X24]
Xput
XCharStrings
X/4205
X<C649
X5234
XC337
X4634
X4641
XC535
X4541
XC241
X4941
XCE40
X4E41
X4D41
X4D40
X4E3F
X503E
X533E
X553F
X5641
X5543
X5344
X5045
X4E46
X4D48
X4D4B
XD33E
X543F
X5541
X5443
X5344
XCD4A
X4E49
X4F49
X524A
X554A
X5649
XCF49
X524B
X554B
X5649
X5648
X>
Xput
XMetrics
X/4205
X[0
X24]
Xput
XCharStrings
X/4206
X<C749
X5334
XC336
X4337
X4237
X4236
X4335
X4534
X4834
X4A35
X4B37
X4A39
X483A
XC834
X4935
X4A37
X4939
X483A
XC63A
X483A
X4A3B
X4B3D
X4B3E
X4A40
X4841
X4541
X4340
X423F
X423E
X433E
X433F
XC83A
X493B
X4A3D
X4A3E
X4940
X4841
XD340
X534B
XD43E
X544B
XD43E
X4D47
X5847
XD14B
X564B
X>
Xput
XMetrics
X/4206
X[-1
X25]
Xput
XCharStrings
X/4209
X<C350
X5034
XCF3E
X4E3F
X4F40
X503F
X503E
X4E3C
X4C3B
X493B
X463C
X443E
X4341
X4343
X4446
X4648
X4949
X4B49
X4E48
X5046
XC93B
X473C
X453E
X4441
X4443
X4546
X4748
X4949
X>
Xput
XMetrics
X/4209
X[2
X19]
Xput
XCharStrings
X/4210
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XD239
X5338
X533C
X5239
X5038
X4D38
X4B39
X4A3A
X493D
X4940
X4A43
X4B44
X4D45
X5045
X5244
X5342
XCD38
X4B3A
X4A3D
X4A40
X4B43
X4D45
X>
Xput
XMetrics
X/4210
X[-2
X27]
Xput
XCharStrings
X/4211
X<CC34
X4935
X4637
X443A
X433D
X4340
X4443
X4646
X4948
X4C49
X4F49
X5248
X5546
X5743
X5840
X583D
X573A
X5537
X5235
X4F34
X4C34
XCA38
X4A45
XCB38
X4B45
XC838
X4F38
X5239
X533B
X533C
X523E
X4F3F
X4B3F
XCF38
X5139
X523B
X523C
X513E
X4F3F
XC845
X4D45
XCF3F
X5040
X5144
X5245
X5345
X5444
XCF3F
X5140
X5244
X5345
X>
Xput
XMetrics
X/4211
X[-2
X27]
Xput
XCharStrings
X/4212
X<C930
X4050
XCA30
X4150
XD030
X4930
XC750
X4050
X>
Xput
XMetrics
X/4212
X[8
X16]
Xput
XCharStrings
X/4213
X<CF30
X4650
XD030
X4750
XD030
X4930
XC750
X4050
X>
Xput
XMetrics
X/4213
X[8
X16]
Xput
XCharStrings
X/5001
X<C44C
X4434
X>
Xput
XMetrics
X/5001
X[8
X8]
Xput
XCharStrings
X/5002
X<C050
X5050
X>
Xput
XMetrics
X/5002
X[0
X16]
Xput
XCharStrings
X/5003
X<C435
X4B35
X4F36
X5137
X5339
X543C
X543E
X5341
X5143
X4F44
X4B45
X4445
XC449
X5449
X>
Xput
XMetrics
X/5003
X[-1
X24]
Xput
XCharStrings
X/5004
X<C030
X5030
X>
Xput
XMetrics
X/5004
X[8
X16]
Xput
XCharStrings
X/5005
X<C341
X433F
X443C
X463B
X483B
X4A3C
X4E3F
X5040
X5240
X543F
X553D
XC33F
X443D
X463C
X483C
X4A3D
X4E40
X5041
X5241
X5440
X553D
X553B
XC345
X5545
X>
Xput
XMetrics
X/5005
X[-3
X24]
Xput
XCharStrings
X/5006
X<C43D
X563D
X5643
X>
Xput
XMetrics
X/5006
X[-4
X26]
Xput
XCharStrings
X/5007
X<C230
X4930
X4950
X4850
X4830
X>
Xput
XMetrics
X/5007
X[8
X17]
Xput
XCharStrings
X/5008
X<CF30
X4E30
X4C31
X4A33
X4935
X4839
X4850
X4950
X4939
X4A35
X4C31
X>
Xput
XMetrics
X/5008
X[8
X17]
Xput
XCharStrings
X/5009
X<C850
X4830
X4930
X4950
X4850
X>
Xput
XMetrics
X/5009
X[8
X17]
Xput
XCharStrings
X/5010
X<C541
X4745
X4849
X4850
X4950
X4949
X4845
X4743
X4541
X4340
X453F
X473D
X483B
X4937
X4930
X4830
X4837
X473B
X453F
X>
Xput
XMetrics
X/5010
X[8
X17]
Xput
XCharStrings
X/5011
X<CF50
X4E50
X4C4F
X4A4D
X494B
X4847
X4830
X4930
X4947
X4A4B
X4C4F
X>
Xput
XMetrics
X/5011
X[8
X17]
Xput
XCharStrings
X/5012
X<C230
X4330
X4531
X4733
X4835
X4939
X4950
X4850
X4839
X4735
X4531
X>
Xput
XMetrics
X/5012
X[8
X17]
Xput
XCharStrings
X/5013
X<CC41
X4A45
X4949
X4950
X4850
X4849
X4945
X4A43
X4C41
X4E40
X4C3F
X4A3D
X493B
X4837
X4830
X4930
X4937
X4A3B
X4C3F
X>
Xput
XMetrics
X/5013
X[8
X17]
Xput
XCharStrings
X/5014
X<C250
X4350
X454F
X474D
X484B
X4947
X4930
X4830
X4847
X474B
X454F
X>
Xput
XMetrics
X/5014
X[8
X17]
Xput
XCharStrings
X/5015
X<C250
X4950
X4930
X4830
X4850
X>
Xput
XMetrics
X/5015
X[8
X17]
Xput
XCharStrings
X/5016
X<CF50
X4850
X4830
X4930
X4950
X>
Xput
XMetrics
X/5016
X[8
X17]
Xput
XCharStrings
X/5017
X<CF30
X4830
X4850
X4950
X4930
X>
Xput
XMetrics
X/5017
X[8
X17]
Xput
XCharStrings
X/5018
X<C338
X4835
X4D38
XC338
X4836
X4D38
X>
Xput
XMetrics
X/5018
X[3
X16]
Xput
XCharStrings
X/5019
X<C239
X4237
X4335
X4535
X4B38
X4D38
X4E37
XC237
X4336
X4536
X4B39
X4D39
X4E37
X4E35
X>
Xput
XMetrics
X/5019
X[3
X16]
Xput
XCharStrings
X/5020
X<C939
X463A
X443C
X433F
X4341
X4444
X4646
X4947
X4B47
X4E46
X5044
X5141
X513F
X503C
X4E3A
X4B39
X4939
XC347
X5139
X>
Xput
XMetrics
X/5020
X[-3
X20]
Xput
XCharStrings
X/5021
X<C050
X4030
X>
Xput
XMetrics
X/5021
X[16
X0]
Xput
XCharStrings
X/5022
X<D435
X4D35
X4936
X4737
X4539
X443C
X443E
X4541
X4743
X4944
X4D45
X5445
XC449
X5449
X>
Xput
XMetrics
X/5022
X[-1
X24]
Xput
XCharStrings
X/5023
X<C646
X4A46
X514E
XCA47
X514F
XC947
X5150
XD730
X5150
X>
Xput
XMetrics
X/5023
X[-1
X23]
Xput
XCharStrings
X/5024
X<C949
X4648
X4446
X4343
X4341
X443E
X463C
X493B
X4B3B
X4E3C
X503E
X5746
X5948
X5B49
X5D49
X6048
X6246
X6343
X6341
X623E
X603C
X5D3B
X5B3B
X583C
X563E
X5046
X4E48
X4B49
X4949
X4748
X4546
X4443
X4441
X453E
X473C
X493B
XCB3B
X4D3C
X4F3E
X5646
X5848
X5B49
XDD49
X5F48
X6146
X6243
X6241
X613E
X5F3C
X5D3B
X>
Xput
XMetrics
X/5024
X[-3
X38]
Xput
END_OF_FILE
if test 13017 -ne `wc -c <'postscript/fonts/extra/extra.r'`; then
    echo shar: \"'postscript/fonts/extra/extra.r'\" unpacked with wrong size!
fi
# end of 'postscript/fonts/extra/extra.r'
fi
if test -f 'source/string.c' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'source/string.c'\"
else
echo shar: Extracting \"'source/string.c'\" \(14328 characters\)
sed "s/^X//" >'source/string.c' <<'END_OF_FILE'
X/*
X * Copyright (C) Rutherford Appleton Laboratory 1987
X * 
X * This source may be copied, distributed, altered or used, but not sold for profit
X * or incorporated into a product except under licence from the author.
X * It is not in the public domain.
X * This notice should remain in the source unaltered, and any changes to the source
X * made by persons other than the author should be marked as such.
X * 
X *	Crispin Goswell @ Rutherford Appleton Laboratory caag@uk.ac.rl.vd
X */
X#include "main.h"
X
Xstatic Object OpForString, Make ();
X
Xint putIString ();
X
XObject ParseString (), ParseHexString (), StringFrom ();
Xstatic unsigned char *Body ();
Xstatic int forString ();
X	
Xstatic int Exec (), Token (), PString (), Search (), AnchorSearch (), Copy (), EqEq ();
Xstatic int Length (), ForAll (), Get (), Put (), GetInterval (), PutInterval (), Eq (), Lt (), Le (), Gt (), Ge (), PrCheck (), PwCheck ();
Xstatic int Cvi (), Cvr (), Cvs (), PReadOnly (), PExecOnly ();
X
XInitString ()
X {
X 	OpForString = MakeOp ("(forallstring)", forString, 0, 0, 3, 5);
X 	
X	TypeInstallOp (String, "cvi", 		Cvi, 		1, 1, 0, 0, String);
X 	TypeInstallOp (String, "cvr", 		Cvr, 		1, 1, 0, 0, String);
X  	TypeInstallOp (String, "cvs", 		Cvs, 		2, 1, 0, 0, String, String);
X	TypeInstallOp (String, "==", 		EqEq, 		1, 0, 0, 0, String);
X 	TypeInstallOp (String, "exec", 		Exec,		1, 0, 0, 1, String);
X  	TypeInstallOp (String, "token", 	Token,		1, 3, 0, 2, String);
X	TypeInstallOp (String, "eq", 		Eq, 		2, 1, 0, 0, String, String);
X 	TypeInstallOp (String, "lt", 		Lt, 		2, 1, 0, 0, String, String);
X  	TypeInstallOp (String, "le", 		Le, 		2, 1, 0, 0, String, String);
X 	TypeInstallOp (String, "gt", 		Gt, 		2, 1, 0, 0, String, String);
X 	TypeInstallOp (String, "ge", 		Ge, 		2, 1, 0, 0, String, String);
X 	TypeInstallOp (String, "length", 	Length,		1, 1, 0, 0, String);
X 	TypeInstallOp (String, "forall", 	ForAll,		2, 0, 0, 4, String, Array);
X 	TypeInstallOp (String, "copy",		Copy,		2, 1, 0, 0, String, String);
X  	TypeInstallOp (String, "get", 		Get,		2, 1, 0, 0, String, Integer);
X 	TypeInstallOp (String, "put", 		Put,		3, 0, 0, 0, String, Integer, Integer);
X 	TypeInstallOp (String, "getinterval", 	GetInterval,	3, 1, 0, 0, String, Integer, Integer);
X 	TypeInstallOp (String, "putinterval", 	PutInterval,	3, 0, 0, 0, String, Integer, String);
X 	TypeInstallOp (String, "executeonly", 	PExecOnly,	1, 1, 0, 0, String);
X 	TypeInstallOp (String, "readonly", 	PReadOnly,	1, 1, 0, 0, String);
X 	TypeInstallOp (String, "rcheck", 	PrCheck,	1, 1, 0, 0, String);
X 	TypeInstallOp (String, "wcheck", 	PwCheck,	1, 1, 0, 0, String);
X 	TypeInstallOp (String, "token", 	Token,		1, 3, 0, 0, String);
X
X	InstallOp ("string",		PString,	1, 1, 0, 0, Integer);
X 	InstallOp ("search",		Search,		2, 4, 0, 0, String, String);
X 	InstallOp ("anchorsearch",	AnchorSearch,	2, 3, 0, 0, String, String);
X }
X
Xstatic int Cvi (rep) Object rep;
X {
X 	Object v;
X 	
X	v = ParseNumber (BodyString (rep), lengthString (rep));
X	if (TypeOf (v) == Integer)
X		return Push (OpStack, v);
X	else if (TypeOf (v) == Real)
X		return Push (OpStack, IntReal (v));
X	else if (TypeOf (v) == Condition)
X		return Error (PUnResult);
X	else
X		return Error (PSyntaxError);
X }
X
Xstatic int Cvr (rep) Object rep;
X {
X	Object v;
X	
X	v = ParseNumber (BodyString (rep), lengthString (rep));
X	if (TypeOf (v) == Real)
X		return Push (OpStack, v);
X	else if (TypeOf (v) == Integer)
X		return Push (OpStack, RealInteger (v));
X	else if (TypeOf (v) == Condition)
X		return Push (OpStack, rep), Error (PUnResult);
X	else
X		return Push (OpStack, rep), Error (PSyntaxError);
X }
X
Xstatic int Cvs (v, string) Object v, string;
X {
X 	int length;
X 	
X	if (lengthString (string) < (length = lengthString (v)))
X		return Error (PRangeCheck);
X	VOID Bcopy (BodyString (string), BodyString (v), length);
X	return Push (OpStack, getIString (string, 0, length));
X }
X
Xstatic int EqEq (v) Object v;
X {
X 	int c, i, l = lengthString (v);
X 	unsigned char *s = BodyString (v);
X 	
X	putchar ('(');
X	for (i = 0; i < l && !Interrupted (); i++)
X		switch (c = s[i])
X		 {
X			default:
X				if (c < ' ' || c > 126)
X					printf ("\\%o", c);
X				else
X					putchar (c);
X	   			break;
X	
X			case '\n':	printf ("\\n"); break;
X			case '\r':	printf ("\\r"); break;
X			case '\t':	printf ("\\t"); break;
X			case '\b':	printf ("\\b"); break;
X			case '\f':	printf ("\\f"); break;
X		 }
X	printf (")");
X	return TRUE;
X }
X
Xstatic int Exec (item) Object item;
X {
X 	return Push (ExecStack, Cvx (FileString (item)));
X }
X
Xstatic int Token (f) Object f;
X {
X 	Object res, fs;
X 	
X 	res = Parse (fs = FileString (f));
X 	if (TypeOf (res) == Condition)
X	 	return Error (PSyntaxError);
X	else if (TypeOf (res) == Null)
X		return Error (PUnResult);
X	else if (TypeOf (res) != Boolean)
X	 {
X		VOID Push (OpStack, Cvx (SameFlags (f, getIString (f,
X						lengthString (f) - BodyFile (fs)->available,
X						BodyFile (fs)->available))));
X		VOID Push (OpStack, res);
X		VOID Push (OpStack, True);
X	 }
X	else if (BodyBoolean (res))
X	 {
X	 	VOID Push (OpStack, f);
X		VOID Push (OpStack, False);
X	 }
X	else
X		return Error (PSyntaxError);
X	return TRUE;
X }
X
XObject MakeString (s, length) unsigned char *s; int length;
X {
X 	Object res;
X  	char *new;
X	
X 	res = MakeObject (String);
X	res.u.String = (unsigned char *) (new = Malloc ((unsigned) length));
X 	bcopy (s, new, length);
X 	res.Length = length;
X 	
X 	return res;
X }
X
Xstatic Object Make (s, length) unsigned char *s; int length;
X {
X 	Object res;
X 	char *new;
X 	
X 	res = MakeObject (String);
X 	res.u.String = (unsigned char *) (new = Malloc ((unsigned) length));
X 	bcopy (s, new, length);
X 	res.Length = length;
X 	
X 	return res;
X }
X
XObject StringFrom (s) unsigned char *s;
X {
X	Object res;
X	
X	res = MakeObject (String);
X	res.u.String = s;
X	res.Length = strlen ((char *) s);
X	
X	return res;
X }
X
Xstatic int Eq (a, b) Object a, b;
X {
X	return Push (OpStack, MakeBoolean (EqString (a, b)));
X }
X
Xint EqString (a, b) Object a, b;
X {
X 	int 	al = lengthString (a),
X 		bl = lengthString (b);
X	
X	return al == bl && 0 == strncmp ((char *) Body (a), (char *) Body (b), al);
X }
X
Xstatic int Lt (a, b) Object a, b;
X {
X 	int 	al = lengthString (a),
X 		bl = lengthString (b),
X		cmp = strncmp ((char *) Body (a), (char *) Body (b), min (al, bl));
X	
X	return Push (OpStack, MakeBoolean (cmp < 0 || cmp == 0 && al < bl));
X }
X
Xstatic int Le (a, b) Object a, b;
X {
X	return Push (OpStack,
X		MakeBoolean (
X			strncmp ((char *) Body (a),
X				 (char *) Body (b),
X				 min (lengthString (a), lengthString (b))) <= 0));
X }
X
Xstatic int Gt (a, b) Object a, b;
X {
X 	int 	al = lengthString (a),
X 		bl = lengthString (b),
X		cmp = strncmp ((char *) Body (a), (char *) Body (b), min (al, bl));
X	
X	return Push (OpStack, MakeBoolean (cmp > 0 || cmp == 0 && al > bl));
X }
X
Xstatic int Ge (a, b) Object a, b;
X {
X	return Push (OpStack,
X		MakeBoolean (
X			strncmp ((char *) Body (a),
X				 (char *) Body (b),
X				 min (lengthString (a), lengthString (b))) >= 0));
X }
X
Xint lengthString (object) Object object;
X {
X 	return object.Length;
X }
X
Xstatic int Length (object) Object object;
X {
X 	return Push (OpStack, MakeInteger (lengthString (object)));
X }
X
Xunsigned char *BodyString (object) Object object;
X {
X 	return object.u.String;
X }
X
Xstatic unsigned char *Body (object) Object object;
X {
X 	return object.u.String;
X }
X
Xstatic int Get (object, key) Object object, key;
X {
X 	int index;
X 	
X	if (TypeOf (key) == Integer)
X		index = BodyInteger (key);
X	else if (TypeOf (key) == Real)
X		index = (int) BodyReal (key);
X	else
X	 	return Error (PTypeCheck);
X	if (index >= 0 && index < lengthString (object))
X		return Push (OpStack, MakeInteger ((int) Body (object)[index]));
X	else
X		return Error (PRangeCheck);
X }
X
Xint getString (object, index) Object object; int index;
X {
X	return Body (object)[index];
X }
X
Xstatic int GetInterval (object, begin, length) Object object, begin, length;
X {
X 	int b = BodyInteger (begin), l = BodyInteger (length);
X 	
X	if (l < 0 || b < 0 || b + l > lengthString (object))
X		return Error (PRangeCheck);
X	return Push (OpStack, getIString (object, b, l));
X }
X
XObject getIString (object, begin, length) Object object; int begin, length;
X {
X 	return Make (Body (object) + begin, length);
X }
X
Xstatic int Put (object, key, value) Object object, key, value;
X {
X 	int index;
X 	
X	if (TypeOf (key) == Integer)
X		index = BodyInteger (key);
X	else if (TypeOf (key) == Real)
X		index = (int) BodyReal (key);
X	else
X	 	return Error (PTypeCheck);
X	if (index < 0 || index >= lengthString (object))
X		return Error (PRangeCheck);
X	else if (TypeOf (value) != Integer)
X		return Error (PTypeCheck);
X	Body (object)[index] = BodyInteger (value);
X	return TRUE;
X }
X
XputString (object, index, value) Object object; int index, value;
X {
X 	Body (object)[index] = value;
X }
X 
Xstatic int PutInterval (object1, begin, object2) Object object1, begin, object2;
X {
X 	int b = BodyInteger (begin);
X 	
X	if (lengthString (object2) + b > lengthString (object1))
X		return Error (PRangeCheck);
X	VOID putIString (object1, b, object2);
X	return TRUE;
X }
X
Xint putIString (object1, begin, object2) Object object1, object2; int begin;
X {
X 	int l = lengthString (object2);
X 	unsigned char *from = Body (object2), *to = Body (object1) + begin;
X 	
X 	while (l--)
X 		*to++ = *from++;
X 	
X 	return TRUE;
X }
X
Xstatic int Copy (object1, object2) Object object1, object2;
X {
X	if (lengthString (object1) <= lengthString (object2))
X	 {
X		VOID putIString (object2, 0, object1);
X		VOID Push (OpStack, getIString (object2, 0, lengthString (object1)));
X		return TRUE;
X	 }
X	else
X		return Error (PRangeCheck);
X }
X
Xstatic int match (a, b, max) unsigned char *a, *b; int max;
X {
X 	int i;
X 	
X 	for (i = 0; i < max && *a++ == *b++; i++)
X 		;
X 	return i;
X }
X
Xstatic ForAll (string, proc) Object string, proc;
X {
X  	VOID Push (ExecStack, string);
X 	VOID Push (ExecStack, MakeInteger (0));
X 	VOID Push (ExecStack, proc);
X	VOID Push (ExecStack, OpForString);
X 	
X	return TRUE;
X }
X
Xstatic int forString ()
X {
X 	Object string, index, proc;
X 	
X 	proc   = Pop (ExecStack);
X 	index  = Pop (ExecStack);
X 	string = Pop (ExecStack);
X 	
X 	if (BodyInteger (index) >= lengthString (string))
X 		return TRUE;
X 	
X 	VOID Push (ExecStack, string);
X 	VOID Push (ExecStack, MakeInteger (BodyInteger (index) + 1));
X 	VOID Push (ExecStack, proc);
X 	VOID Push (ExecStack, OpForString);
X 	VOID Push (ExecStack, proc);
X 	
X 	VOID Push (OpStack, MakeInteger (getString (string, BodyInteger (index))));
X 	return TRUE;
X }
X
XObject ParseString (o) Object o;
X {
X 	unsigned char buf[BUFSIZE], *p = buf;
X 	int c, length = 0, level = 0, foo;
X 	
X  	for (;;)
X  	 {
X		if (length == BUFSIZE)
X			return Absent;
X 	 	switch (c = Getch (o))
X 		 {
X  			default:	*p++ = c; ++length;    continue;
X  			
X 		 	case EOF:     return Nil;
X  		 	
X			case '(':	++level; *p++ = c; ++length;	    continue;
X			
X 			case ')':
X 				if (--level < 0)
X 					break;
X 				else
X 				 {
X				   	*p++ = c;
X 				   	++length;
X 				 }
X 			    continue;
X			
X		 	case '\\':
X 		 		if (BodyFile (o)->file_type != StringFile)
X 		 			switch (c = Getch (o))
X 	 				 {
X 	 				 	default:  *p++ = c; ++length;			break;
X 	 				 	
X 	 				 	case EOF: 					return Nil;
X 	 			 		
X 						case '\n': /* nothing */			break;
X	 		 			case 'n': c = '\n'; *p++ = c; ++length;		break;
X 	 		 			case 'r': c = '\r'; *p++ = c; ++length;		break;
X 	 		 			case 't': c = '\t'; *p++ = c; ++length;		break;
X 	 		 			case 'b': c = '\b'; *p++ = c; ++length;		break;
X 	 		 			case 'f': c = '\f'; *p++ = c; ++length;		break;
X 	 				 	
X 	 			 		case '0': case '1': case '2': case '3':
X						case '4': case '5': case '6': case '7':
X							c = c - '0';
X							foo = Getch (o);	/* breaks PNX C compiler when inline */
X							c = (c << 3) + foo - '0';
X							foo = Getch (o);	/* breaks PNX C compiler when inline */
X							c = (c << 3) + foo - '0';
X							*p++ = c; ++length;
X						    break;
X					 }
X				else
X					*p++ = c, ++length;
X		 	   continue;
X  		 }
X  		break;
X  	 }
X 	
X 	return Make (buf, length);
X }
X
XObject ParseHexString (o) Object o;
X {
X 	unsigned char buf [BUFSIZE], *p = buf;
X 	int c, count = 0, val = 0, length = 0;
X 	
X 	while ((c = Getch (o)) != '>' && c != EOF && length < BUFSIZE)
X 	 {
X		if (c >= '0' && c <= '9')
X 			val = val * 16 + c - '0';
X 		else if (c >= 'A' && c <= 'F')
X 			val = val * 16 + 10 + c - 'A';
X 		else if (c >= 'a' && c <= 'z')
X 			val = val * 16 + 10 + c - 'a';
X 		else
X 			--count;
X		if (++count == 2)
X 		 {
X 			*p++ = val; ++length;
X 			count = val = 0;
X 		 }
X  	 }
X 	if (length == BUFSIZE)
X 		return Absent;
X 	return c == EOF ? Nil : Make (buf, length);
X }
X
Xstatic int PString (length) Object length;
X {
X 	int l;
X 	unsigned char *body, *p;
X 	
X 	if ((l = BodyInteger (length)) < 0)
X 		return Error (PRangeCheck);
X 	body = (unsigned char *) Malloc ((unsigned) l);
X 	
X 	for (p = body; p < &body[l]; p++)
X 		*p = '\0';
X 	return Push (OpStack, Make (body, l));
X }
X
Xstatic int AnchorSearch (string, seek) Object string, seek;
X {
X	unsigned char *str = Body (string), *see = Body (seek);
X	int m, lstr = lengthString (string), lsee = lengthString (seek);
X	
X 	if (lsee > lstr || (m = match (str, see, lsee)) != lsee)
X 	 	VOID Push (OpStack, string),
X 	 	VOID Push (OpStack, False);
X 	else
X 	 {
X	 	VOID Push (OpStack, Make (str + m, lstr - m));
X	 	VOID Push (OpStack, Make (str, m));
X		VOID Push (OpStack, True);
X	 }
X	return TRUE;
X }
X
Xstatic int Search (string, seek) Object string, seek;
X {
X	unsigned char *str = Body (string), *body = str, *see = Body (seek);
X	int i, m, lstr = lengthString (string), lsee = lengthString (seek);
X	
X	for (i = lstr - lsee; i >= 0; i--)
X		if ((m = match (str, see, lsee)) == lsee)
X		 {
X		 	VOID Push (OpStack, Make (body + (str - body) + m, lstr - (str - body + m)));
X		 	VOID Push (OpStack, Make (body + (str - body), m));
X	 		VOID Push (OpStack, Make (body, str - body));
X		 	VOID Push (OpStack, True);
X		 	return TRUE;
X		 }
X		else
X			++str;
X	VOID Push (OpStack, string);
X	VOID Push (OpStack, False);
X	
X	return TRUE;
X }
X
Xstatic int PExecOnly (item) Object item;
X {
X 	return Push (OpStack, ExecOnly (item));
X }
X
Xstatic int PReadOnly (item) Object item;
X {
X 	return Push (OpStack, ReadOnly (item));
X }
X
Xstatic int PrCheck (v) Object v;
X {
X 	return Push (OpStack, MakeBoolean (rCheck (v)));
X }
X
Xstatic int PwCheck (v) Object v;
X {
X 	return Push (OpStack, MakeBoolean (wCheck (v)));
X }
X
Xunsigned char *Bcopy (a, b, n) unsigned char *a, *b; int n;
X {
X 	unsigned char *res = a;
X 	
X 	while (n--)
X 		*a++ = *b++;
X 	return res;
X }
END_OF_FILE
if test 14328 -ne `wc -c <'source/string.c'`; then
    echo shar: \"'source/string.c'\" unpacked with wrong size!
fi
# end of 'source/string.c'
fi
echo shar: End of archive 11 \(of 18\).
cp /dev/null ark11isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 18 archives.
    rm -f ark[1-9]isdone ark[1-9][0-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
