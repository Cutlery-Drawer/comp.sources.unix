Subject:  v18i072:  A ray-tracing package, Part03/03
Newsgroups: comp.sources.unix
Sender: sources
Approved: rsalz@uunet.UU.NET

Submitted-by: Mark VandeWettering <markv@drizzle.cs.uoregon.edu>
Posting-number: Volume 18, Issue 72
Archive-name: mtvraytrace/part03

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 3 (of 3)."
# Contents:  BIBLIO
# Wrapped by markv@tillamook on Mon Nov 14 12:50:28 1988
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'BIBLIO' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'BIBLIO'\"
else
echo shar: Extracting \"'BIBLIO'\" \(8958 characters\)
sed "s/^X//" >'BIBLIO' <<'END_OF_FILE'
X
X
X
X
X%A Dana H. Ballard
X%T Strip Trees: A Hierarchal Representation for Curves
X%J Communications of the ACM
X%V 24-5
X%P 310-321
X%D May 1981
X%K strip trees, curves, intersection
X%X Ballard uses two dimensional extents in a hierarchy to define a two
Xdimensional curve at varying resolution.  Algorithms are presented to
Xdetermine intersection of two strip trees, inside-outside tests etc...
X
X%A Sabine Coquillart
X%A Michael Gangnet
X%T Shaded Display of Digital Maps
X%J IEEE Computer Graphics and Applications
X%P 35-42
X%D July, 1984
X%K maps, terrain, ray tracing, priority list
X%X Several methods for displaying height fields are presented.  
XBilinear interpolation of patches is used to define the surface.
XEfficient algorithms, and quite elegant.  Reminiscent of Kajiya's
Xcut planes for surfaces of revolution.
X
X%A Wm. Randolph Franklin
X%A Varol Akman
X%T Building an Octree from a Set of Parallelpipeds
X%J IEEE Computer Graphics and Applications
X%P 58-64
X%D October 1985
X%K octrees
X%X A rather elegant algorithm is presented for building up 
Xan octree from a collection of parallelpipeds.
X
X%A Andrew S. Glassner
X%T Space Subdivision for Fast Ray Tracing
X%J IEEE Computer Graphics and Applications
X%P 15-22
X%D October 1984
X%K ray tracing, octree, heirarchy
X%X Glassner proposes an octree as structure to partition space for faster ray
Xtracing.  The solution is interesting, but non-intuitive.  It also has
Xthe problem of splitting objects among many octree nodes.  Hence, the
Xsame object may be intersected multiple times per ray.  Bleh!
X
X%A Paul S. Heckbert
X%A Pat Hanrahan
X%T Beam Tracing Polygonal Objects
X%J Computer Graphics
X%V 18-3
X%P 119-127
X%D July 1984
X%K beam tracing, weiler-atherton polygon clipping
X%X Heckbert and Hanrahan present an elegant image space algorithm for 
Xrendering objects composed of polygonal facets.  It utilizes image coherence
Xand generates a final picture consisting of polygons.
X
X%A David S. Immel
X%A Michael F. Cohen
X%A Donald P. Greenburg
X%T A Radiosity Method for Non-diffuse Environments
X%J Proceedings of Siggraph '86
X%V 20
X%P 133-142
X%I Cornell University
X%C Ithaca, New York
X%K radiosity method, matrix methods, lighting models
X%X This method generalizes the radiosity method as presented earlier by
Xthe authors to include more general environments with specular reflection.
XIt seems rather silly however, the computational effort for a single simple
Xframe is enormous (two cubes translates to 192 hours of Cray time!).
X
X%A James T. Kajiya
X%T The Rendering Equation
X%J Proceedings of Siggraph '86
X%P 143-150
X%K ray tracing, radiosity, distributed ray tracing, lighting models
X%X Kajiya proposes a general rendering equation that tries to provide a general
Xsolution to rendering problems previously addressed by distributed ray tracing
Xand the radiosity method.  He proposes monte-carlo methods for solution, and
Xpresents several simple images which demonstrate the improved lighting model
Xof objects.
X
X%A James T. Kajiya
X%T New Techniques for Ray Tracing Procedurally Defined Objects
X%J Computer Graphics
X%V 17-3
X%P 91-102
X%D July 1983
X%K ray tracing, procedural models, fractals, revolution, prisms
X%X Kajiya presents good solid methods for ray tracing various models which
Xare represented procedurally.  Fractals are ray traced as they are built,
Xwhich keeps unseen fractal surfaces from being evolved.  Prisms are 
Xray traced in a fairly simple fashion.  A clever use of geometric transforms
Xis used to ray trace surfaces of revolution.  Makes good use of strip 
Xtrees (see Ballard).
X
X%A Timothy L. Kay
X%A James T. Kajiya
X%T Ray Tracing Complex Scenes
X%J Siggraph 86
X%V 20
X%P 269-278
X%K ray tracing, extent, heirarchy, planes
X%X Kajiya and Kay present an interesting form of extent called a slab.
XIt is a set of at least three linearly independant planes with enclose
Xthe convex hull of an object.  Intersection with this extent is very cheap.
XGenerally, it seems three times faster than the scheme proposed by
XGlassner.
X
X%A Joshua Levin
X%T A Parametric Algorithm for Drawing Pictures of Solid Objects Composed of Quadric Surfaces
X%J Communications of the ACM
X%V 19-10
X%P 555-563
X%D October 1976
X%K quadrics, scanline algorithms, intersections
X%X Interesting classifications of quadric curves plus quadric surface
Xintersection curves.  Good theory which can applied toward many applications
Xusing quadrics.
X
X%A Ivan E. Sutherland
X%A Gary W. Hodgman
X%T Reentrant Polygon Clipping
X%J Communications of the ACM
X%V 17-1
X%P 32-42
X%D January 1974
X%K polygon clipping
X%X Classic paper in polygon clipping.  
X
X%A Nelson L. Max
X%T Vectorized Procedural Models for Natural Terrain:
XWaves and Islands in the Sunset
X%J Computer Graphics
X%V 15-3
X%P 317-324
X%D August 1981
X%K ocean, ray tracing, procedural models
X%X A simple model for ocean waves and islands is presented using 
XFourier transforms.  These techniques were used to produce an
Xanimated film of the ocean.  Not too spectacular, but has some
Xfairly practical ideas for rendering films.  
X
X%A Alvy Ray Smith
X%T Plants, Fractals and Formal Languages
X%J Computer Graphics
X%V 18-3
X%P 1-10
X%D July 1984
X%K plants, fractals, automata theory
X%X Methods for displaying natural objects based on formal language models
Xare presented.  In particular, deterministic models are shown to exhibit 
Xsufficient variety to be used in production graphic systems.
X
X
X%A Geoffrey Y. Gardner
X%T Simulation of Natural Scenes Using Textured Quadric Surfaces
X%J Computer Graphics
X%V 18-3
X%P 11-20
X%D July 1984
X%K quadrics, texturing, natural scenes
X%X While not as complex as the partical systems proposed by Reeves, these
Xtechniques produce images of reasonable complexity.  Clouds and trees
Xare slightly cartoonlike, but also display interesting features.
X
X
X%A Loren Carpenter
X%T The A-buffer, an Antialiased Hidden Surface Method
X%J Computer Graphics
X%V 18-3
X%P 103-108
X%D July 1984
X%K z-buffer, a-buffer, antialiasing
X%X Carpenter presents a method of constructing antialiased images in a 
Xmethod which allows transparency.  If flavor, it is very similar to
Xz-buffer, but subsamples pixels and maintains coverage masks to 
Xallow effective antialiasing.
X
X%A Edwin Catmull
X%T An Analytic Visible Surface Algorithm for Independant Pixel Processing
X%J Computer Graphics
X%V 18-3
X%P 109-115
X%D July 1984
X%K motion blur, scanline algorithms, patches
X%X Catmull presents algorithms for displaying objects, including filters 
Xwhich create the illusion of motion blur.  While not as effective (in my 
Xmind anyway) as distributed ray tracing, the technique probably is quite
Xefficient and can be used effectively.
X
X%A John Amanatides
X%T Ray Tracing with Cones
X%J Computer Graphics
X%V 18-3
X%P 129-135
X%D July 1984
X%X A technique for antialiasing in ray tracing is presented which utilizes cones
Xinstead of rays.  Cones prevent problems generally associated with point 
Xsampling, and therefore allow for more natural images.  The mathematics 
Xinvolved seem only "pretty" for spherical objects, so an acid test has yet
Xto be performed.
X
X%A Robert L. Cook
X%A Thomas Porter
X%A Loren Carpenter
X%T Distributed Ray Tracing
X%J Computer Graphics
X%V 1803
X%P 137-145
X%D July 1984
X%K ray tracing, distributed ray tracing, motion blur
X%X Distributed ray tracing usings super sampling of each pixel to create
Xeffects such as motion blur, penumbras, translucency, and gloss.  Very
Xnice effects.  Pictures presented are very impressive.  
X
X%A James T. Kajiya
X%A Brian P. Von Herzen
X%T Raytracing Volume Densities
X%J Computer Graphics
X%V 18-3
X%P 165-173
X%D July, 1984
X%K ray tracing, clouds, atmosphere
X%X Complex but interesting model for volume densities such as clouds.  Shadows
Xand lighting are both created most realistically.  It may not be practical
Xto use their methods in practice however, due to the high overhead of 
Xcomputation.
X
X
X%A Cindy M. Goral
X%A Kenneth K. Torrance
X%A Donald P. Greenburg
X%A Bennett Battaile
X%T Modelling the Interaction of Light Between Diffuse Surfaces
X%J Computer Graphics
X%V 18-3
X%P 213-222
X%D July 1984
X%K radiosity method, diffuse surfaces
X%X Early work on radiosity method.  See Hemi Cube paper for more in
Xdepth description of implementation.
X
X%A Robert L. Cook
X%T Shade Trees
X%J Computer Graphics
X%V 18-3
X%P 223-231
X%D July 1984
X%K texturing, procedural models, languages
X%X Cook developed a special shade tree language for defining textures and
Xcoloration for objects.  Interesting because it separates shading from
Xthe rest of rendering, and allows a library of surface types to be built
Xup gradually.
X
X%A Thomas Porter
X%A Tom Duff
X%A Compositing Digital Images
X%J Computer Graphics
X%V 18-3
X%P 253-259
X%D July 1984
X%K compositing, antialiasing, tools
X%X A set of utilities for compositing images is described.  Matting images
Xtogether has been used in motion pictures for years.  Why not do the same with
Xcomputer graphics?  The use of an "alpha" or coverage channel in
Xaddition to the "red-green-blue" allows effective, antialiased matting of 
Xdigital images at low cost.
END_OF_FILE
if test 8958 -ne `wc -c <'BIBLIO'`; then
    echo shar: \"'BIBLIO'\" unpacked with wrong size!
fi
# end of 'BIBLIO'
fi
echo shar: End of archive 3 \(of 3\).
cp /dev/null ark3isdone
MISSING=""
for I in 1 2 3 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 3 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0

