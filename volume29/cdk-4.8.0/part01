Newsgroups: comp.sources.unix
From: glover@credit.erin.utoronto.ca (Mike Glover)
Subject: v29i096: cdk-4.8.0 - Curses Development Kit, V4.8.0, Part01/06
Message-id: <1.839541522.22466@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: glover@credit.erin.utoronto.ca (Mike Glover)
Posting-Number: Volume 29, Issue 96
Archive-Name: cdk-4.8.0/part01

Cdk Readme Guide
Copyright Mike Glover, 1995, 1996
-------------------------------------------------------------------------------

Overview:
---------
Cdk stands for 'Curses Development Kit' and it currently contains 17 ready
to use widgets which facilitate the speedy development of full screen
curses programs. This little project of mine started as a test to see how
compatible my Linux machine was to other UNIX breeds. While doing this I 
discovered Ncurses, and played with it. These widgets are the result of a
years worth of playing. The current complement of widgets are:

Widget Type           Quick Description
===========================================================================
Alphalist             Allows a user to select from a list of words, with
                      the ability to narrow the search list by typing in a
                      few characters of the desired word.
Calendar              Creates a little simple calendar widget.
Dialog                Prompts the user with a message, and the user
                      can pick an answer from the buttons provided.
Entry                 Allows the user to enter information.
File Selector         A file selector built from Cdk base widgets. This
                      example shows how to create more complicated widgets
                      using the Cdk widget library.
Graph                 Draws a graph.
Histogram             Draws a histogram.
Item List             Creates a pop up field which allows the user to select
                      one of several choices in a small field. Very useful
                      for things like days of the week or month names.
Label                 Displays messages in a pop up box, or the label can be
                      considered part of the screen.
Marquee               Displays a message in a scrolling marquee.
Matrix                Creates a complex matrix with lots of options.
Menu                  Creates a pull-down menu interface.
Multiple Line Entry   A multiple line entry field. Very useful
                      for long fields. (like a description
                      field)
Radio List            Creates a radio button list.
Scale                 Creates a numeric scale. Used for allowing a user to
                      pick a numeric value and restrict them to a range of 
                      values.
Scrolling List        Creates a scrolling list/menu list.
Scrolling Window      Creates a scrolling log file viewer. Can add 
                      information into the window while its running. 
                      A good widget for displaying the progress of
                      something. (akin to a console window)
Selection List        Creates a multiple option selection list.
Slider                Akin to the scale widget, this widget provides a
                      visual slide bar to represent the numeric value.
Template              Creates a entry field with character sensitive 
                      positions. Used for pre-formatted fields like
                      dates and phone numbers.
Viewer                This is a file/information viewer. Very useful
                      when you need to display loads of information.
===========================================================================

Each widget has the ability to display color, or other character attributes.
Cdk comes with a attribute/color format command set which allows a programmer
to add colors and characters attributes simply.

The code has been cleaned using both Purify(TM) and Sun's Testcenter(TM),
so it is as clean as a babies butt. :) Any leaks I have seen are in the curses
libraries; there is nothing I can do about that, sorry. There should be no
memory leaks within the code, it shouldn't core dump, and it shouldn't do 
anything unexpected. Unfortunatly this probably is not the case. If you do 
see something like this tell me after you read the BUGS file.

Distribution:
-------------
This distribution has a full complement of manual pages, so any specifics to
the widgets will not be addressed in this read me. If you want to get right in
there, nroff the cdk.3x file in the man directory. It is the starting point
for all the manual pages.

There are some other files to look at if you want to get anywhere. They are:

INSTALL - This will show you how to build Cdk and install it on your system.
          If there are any personal modifications that you think may be
          needed, read this file. In fact read it regardless. :)

COPYING - The legal stuff to protect my butt and all of the hard work that I
          have put into this library.

EXPANDING - You feel creative enough to add a widget, here are my requirements
            that you have to follow to make the integration of a new widget
            seamless.

BUGS - What to do when you find a bug. It also lists all of the bugs found,
       who found then, who fixed them, and when they were fixed. If you think
       you have found a bug look at this file. If you do not think you have
       the most up to date version of Cdk, go get it and try to replicate the
       problem. Then look at the BUGS file again. If it is NOT there, then you
       can mail me notifying me of a possible bug. I will try my hardest to get
       back to you, but I have a pretty busy schedule so don't expect an instant
       reply. This file will also explain how I would like any bug fixes sent to
       me.

NOTES - Misc babblings of myself somewhat related to this distribution.

VERSION - Contains the current rev level, when it was released, and
          what is different from the previous release. (I promise
          to make sure I keep this up to date. :) )

TODO - A list of things I plan to do in the future. (sleep)

CHANGES - A list of changes from one release to another.

If you have any comments, questions, or complaints mail me at
glover@tuzo.erin.utoronto.ca

ttfn,
	Mike

PS: There is also a Perl5 extension of this library for you Perl5 fans.
    Look under any CPAN site under the directory CPAN/authors/id/GLOVER.

                   ------------ [SNIP HERE] -------------
#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1996-07-09 11:16 EDT by <glover@slingshot>.
# Source directory was `/opt/glover/tmp'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This is part 1 of a multipart archive.                                   
# Do not concatenate these parts, unpack them in order with `/bin/sh'.     
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   1849 -r--r--r-- cdk4.8.0/exam/alphalist_ex.c
#   4050 -r--r--r-- cdk4.8.0/exam/calendar_ex.c
#   2258 -r--r--r-- cdk4.8.0/exam/dialog_ex.c
#   2135 -r--r--r-- cdk4.8.0/exam/entry_ex.c
#   2363 -r--r--r-- cdk4.8.0/exam/graph_ex.c
#   3753 -r--r--r-- cdk4.8.0/exam/fselect_ex.c
#   3940 -r--r--r-- cdk4.8.0/exam/histogram_ex.c
#   2548 -r--r--r-- cdk4.8.0/exam/itemlist_ex.c
#   1359 -r--r--r-- cdk4.8.0/exam/label_ex.c
#   1357 -r--r--r-- cdk4.8.0/exam/marquee_ex.c
#   2775 -r--r--r-- cdk4.8.0/exam/matrix_ex.c
#   1388 -r--r--r-- cdk4.8.0/exam/mentry_ex.c
#   2128 -r--r--r-- cdk4.8.0/exam/menu_ex.c
#   1937 -r--r--r-- cdk4.8.0/exam/radio_ex.c
#   2295 -r--r--r-- cdk4.8.0/exam/scale_ex.c
#   1958 -r--r--r-- cdk4.8.0/exam/scroll_ex.c
#   2154 -r--r--r-- cdk4.8.0/exam/selection_ex.c
#   2359 -r--r--r-- cdk4.8.0/exam/slider_ex.c
#   2885 -r--r--r-- cdk4.8.0/exam/swindow_ex.c
#   2119 -r--r--r-- cdk4.8.0/exam/template_ex.c
#   3753 -r--r--r-- cdk4.8.0/exam/viewer_ex.c
#   1569 -r--r--r-- cdk4.8.0/exam/subwindow_ex.c
#   4237 -r--r--r-- cdk4.8.0/exam/bind_ex.c
#   1148 -r--r--r-- cdk4.8.0/exam/hello_ex.c
#    271 -r--r--r-- cdk4.8.0/exam/Makefile.examples
#   3753 -r--r--r-- cdk4.8.0/demo/fileview.c
#  50540 -r--r--r-- cdk4.8.0/demo/rolodex.c
#   8242 -r--r--r-- cdk4.8.0/demo/command.c
#   1654 -r--r--r-- cdk4.8.0/demo/clock.c
#   3225 -r--r--r-- cdk4.8.0/demo/rolodex.h
#    265 -r--r--r-- cdk4.8.0/demo/Makefile.demos
#  10467 -r--r--r-- cdk4.8.0/man/alphalist.3
#  11536 -r--r--r-- cdk4.8.0/man/calendar.3
#   9532 -r--r--r-- cdk4.8.0/man/dialog.3
#  13322 -r--r--r-- cdk4.8.0/man/entry.3
#   4105 -r--r--r-- cdk4.8.0/man/graph.3
#   9626 -r--r--r-- cdk4.8.0/man/fselect.3
#   5406 -r--r--r-- cdk4.8.0/man/histogram.3
#  10275 -r--r--r-- cdk4.8.0/man/itemlist.3
#   4058 -r--r--r-- cdk4.8.0/man/label.3
#   3703 -r--r--r-- cdk4.8.0/man/marquee.3
#  14618 -r--r--r-- cdk4.8.0/man/matrix.3
#  13710 -r--r--r-- cdk4.8.0/man/mentry.3
#   8873 -r--r--r-- cdk4.8.0/man/menu.3
#   9898 -r--r--r-- cdk4.8.0/man/radio.3
#  11047 -r--r--r-- cdk4.8.0/man/scale.3
#  10822 -r--r--r-- cdk4.8.0/man/scroll.3
#  10001 -r--r--r-- cdk4.8.0/man/selection.3
#  11140 -r--r--r-- cdk4.8.0/man/slider.3
#  12691 -r--r--r-- cdk4.8.0/man/swindow.3
#  11955 -r--r--r-- cdk4.8.0/man/template.3
#   8730 -r--r--r-- cdk4.8.0/man/viewer.3
#   5563 -r--r--r-- cdk4.8.0/man/cdk.3
#   4609 -r--r--r-- cdk4.8.0/man/screen.3
#   8742 -r--r--r-- cdk4.8.0/man/binding.3
#   9965 -r--r--r-- cdk4.8.0/man/display.3
#   8484 -r--r--r-- cdk4.8.0/man/misc.3
#   9340 -r--r--r-- cdk4.8.0/draw.c
#  30354 -r--r--r-- cdk4.8.0/cdk.c
#  50203 -r--r--r-- cdk4.8.0/cdkscreen.c
#  17509 -r--r--r-- cdk4.8.0/binding.c
#    854 -r--r--r-- cdk4.8.0/debug.c
#  15745 -r--r--r-- cdk4.8.0/alphalist.c
#  22297 -r--r--r-- cdk4.8.0/calendar.c
#  10914 -r--r--r-- cdk4.8.0/dialog.c
#  21580 -r--r--r-- cdk4.8.0/entry.c
#   7991 -r--r--r-- cdk4.8.0/graph.c
#  28018 -r--r--r-- cdk4.8.0/fselect.c
#  18611 -r--r--r-- cdk4.8.0/histogram.c
#  11380 -r--r--r-- cdk4.8.0/itemlist.c
#   4959 -r--r--r-- cdk4.8.0/label.c
#   5909 -r--r--r-- cdk4.8.0/marquee.c
#  44021 -r--r--r-- cdk4.8.0/matrix.c
#  27935 -r--r--r-- cdk4.8.0/mentry.c
#  15383 -r--r--r-- cdk4.8.0/menu.c
#  15639 -r--r--r-- cdk4.8.0/radio.c
#  10260 -r--r--r-- cdk4.8.0/scale.c
#  22218 -r--r--r-- cdk4.8.0/scroll.c
#  17152 -r--r--r-- cdk4.8.0/selection.c
#  11589 -r--r--r-- cdk4.8.0/slider.c
#  23731 -r--r--r-- cdk4.8.0/swindow.c
#  18906 -r--r--r-- cdk4.8.0/template.c
#  27746 -r--r--r-- cdk4.8.0/viewer.c
#   4530 -r--r--r-- cdk4.8.0/BUGS
#   2686 -r--r--r-- cdk4.8.0/EXPANDING
#   2805 -r--r--r-- cdk4.8.0/INSTALL
#   2173 -r--r--r-- cdk4.8.0/NOTES
#   6088 -r--r--r-- cdk4.8.0/README
#    945 -r--r--r-- cdk4.8.0/TODO
#    446 -r--r--r-- cdk4.8.0/VERSION
#  20520 -r--r--r-- cdk4.8.0/COPYING
#  45193 -r--r--r-- cdk4.8.0/cdk.h
#  10137 -r--r--r-- cdk4.8.0/curdefs.h
#   6858 -rw-r--r-- cdk4.8.0/Makefile
#
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  echo 'WARNING: not restoring timestamps.  Consider getting and'
  echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if test -r _sharseq.tmp; then
  echo 'Must unpack archives in sequence!'
  echo Please unpack part `cat _sharseq.tmp` next
  exit 1
fi
# ============= cdk4.8.0/exam/alphalist_ex.c ==============
if test ! -d 'cdk4.8.0'; then
  echo 'x - creating directory cdk4.8.0'
  mkdir 'cdk4.8.0'
fi
if test ! -d 'cdk4.8.0/exam'; then
  echo 'x - creating directory cdk4.8.0/exam'
  mkdir 'cdk4.8.0/exam'
fi
if test -f 'cdk4.8.0/exam/alphalist_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/alphalist_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/alphalist_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/alphalist_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="alphalist_ex";
#endif
X
/*
X * This program demonstrates the Cdk alphalist widget.
X */
#define	MAXINFOLINES	10000
X
int getUserList (char **list, int maxItems);
X
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN	*cdkscreen;
X   CDKALPHALIST	*alphaList;
X   WINDOW	*cursesWin;
X   char		*info[MAXINFOLINES], *word, *mesg[5], temp[256];
X   int		count;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.						*/
X   initCDKColor();
X
X   /* Get the user list.		*/
X   count = getUserList (info, MAXINFOLINES);
X
X   /* Create the alpha list widget.				*/
X   alphaList = newCDKAlphalist (cdkscreen, CENTER, CENTER, 
X				10, 40, "</B/24>Alpha List:", info, count,
X				'_', A_REVERSE, TRUE, FALSE);
X
X   /* Let them play with the alpha list.			*/
X   word = activateCDKAlphalist (alphaList, NULL);
X
X   /* Determine what the user did.				*/
X   if (alphaList->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No word was selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (alphaList->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You selected the following";
X      sprintf (temp, "<C>(%s)", word);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "";
X      mesg[3] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 4);
X   }
X
X   /* Clean up				*/
X   destroyCDKAlphalist (alphaList);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
X
/*
X * This reads the passwd file and retrieves user information.
X */
int getUserList (char **list, int maxItems)
{
X   struct passwd *ent;
X   int x = 0;
X
X   while ( (ent = getpwent ()) != NULL)
X   {
X      list[x++] = copyChar (ent->pw_name);
X   }
X   return x;
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/alphalist_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/alphalist_ex.c' ||
  echo 'restore of cdk4.8.0/exam/alphalist_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/alphalist_ex.c'`"
  test 1849 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/alphalist_ex.c: original size 1849, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/calendar_ex.c ==============
if test -f 'cdk4.8.0/exam/calendar_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/calendar_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/calendar_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/calendar_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="calendar_ex";
#endif
X
void createCalendarMarkCB (EObjectType objectType, void *object, void *clientData);
void removeCalendarMarkCB (EObjectType objectType, void *object, void *clientData);
X
/*
X * This program demonstrates the Cdk calendar widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKCALENDAR *calendar	= (CDKCALENDAR *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   int day, month, year, ret;
X   char *mesg[5], temp[256];
X   struct tm *dateInfo;
X   time_t clck, retVal;
X
X   /*
X    * Get the current dates and set the default values for
X    * the day/month/year values for the calendar.
X    */ 
X    time (&clck);
X    dateInfo	= localtime (&clck);
X    day		= dateInfo->tm_mday;
X    month	= dateInfo->tm_mon + 1;
X    year	= dateInfo->tm_year + 1900;
X
X   /* Check the command line for options.			*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "d:m:y:");
X
X      /* Are there any more command line options to parse.	*/
X      if (ret == -1)
X      {
X         break;
X      }
X
X      switch (ret)
X      {
X         case 'd':
X              day = atoi (optarg);
X              break;
X
X         case 'm':
X              month = atoi (optarg);
X              break;
X
X         case 'y':
X              year = atoi (optarg);
X              break;
X      }
X   }
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors						*/
X   initCDKColor();
X
X   /* Create the calendar widget.				*/
X   calendar = newCDKCalendar (cdkscreen, CENTER, CENTER,
X				day, month, year,
X				COLOR_PAIR(16)|A_BOLD,
X				COLOR_PAIR(24)|A_BOLD,
X				COLOR_PAIR(32)|A_BOLD,
X				COLOR_PAIR(40)|A_BOLD,
X				TRUE, FALSE);
X
X   /* Is the widget NULL???					*/
X   if (calendar == (CDKCALENDAR *)NULL)
X   {
X      /* Clean up the memory.					*/
X      destroyCDKScreen (cdkscreen);
X
X      /* End curses...						*/
X      endCDK();
X
X      /* Spit out a message.					*/
X      printf ("Oops. Can't seem to create the calendar. Is the window too small?\n");
X      exit (1);
X   }
X
X
X   /* Create a key binding to mark days on the calendar.	*/
X   bindCDKObject (vCALENDAR, calendar, 'm', createCalendarMarkCB, calendar);
X   bindCDKObject (vCALENDAR, calendar, 'M', createCalendarMarkCB, calendar);
X   bindCDKObject (vCALENDAR, calendar, 'r', removeCalendarMarkCB, calendar);
X   bindCDKObject (vCALENDAR, calendar, 'R', removeCalendarMarkCB, calendar);
X
X   /* Draw the calendar widget.					*/
X   drawCDKCalendar (calendar, calendar->box);
X
X   /* Let the user play with the widget.			*/
X   retVal = activateCDKCalendar (calendar, NULL);
X
X   /* Check which day they selected.				*/
X   if (calendar->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No date selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (calendar->exitType == vNORMAL)
X   {
X      mesg[0] = "You selected the following date";
X      sprintf (temp, "<C></B/16>%02d/%02d/%d (dd/mm/yyyy)", calendar->day, calendar->month, calendar->year);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up and exit.					*/
X   destroyCDKCalendar (calendar);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   fflush (stdout);
X   printf ("Selected Time: %s\n", ctime(&retVal));
}
X
void createCalendarMarkCB (EObjectType objectType, void *object, void *clientData)
{
X   CDKCALENDAR *calendar = (CDKCALENDAR *)object;
X   setCDKCalendarMarker (calendar, calendar->day, calendar->month, calendar->year, COLOR_PAIR (5) | A_BOLD);
X   drawCDKCalendar (calendar, calendar->box);
}
void removeCalendarMarkCB (EObjectType objectType, void *object, void *clientData)
{
X   CDKCALENDAR *calendar = (CDKCALENDAR *)object;
X   removeCDKCalendarMarker (calendar, calendar->day, calendar->month, calendar->year);
X   drawCDKCalendar (calendar, calendar->box);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/calendar_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/calendar_ex.c' ||
  echo 'restore of cdk4.8.0/exam/calendar_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/calendar_ex.c'`"
  test 4050 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/calendar_ex.c: original size 4050, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/dialog_ex.c ==============
if test -f 'cdk4.8.0/exam/dialog_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/dialog_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/dialog_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/dialog_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="dialog_ex";
#endif
X
/*
X * This program demonstrates the Cdk dialog widget.
X */
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKDIALOG *question	= (CDKDIALOG *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *buttons[]	= {"</B/24>Ok", "</B16>Cancel"};
X   char *message[10], *mesg[3], temp[100];
X   int selection;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.              				*/
X   initCDKColor();
X
X   /* Create the message within the dialog box.			*/
X   message[0]	= "<C></U>Dialog Widget Demo";
X   message[1]	= "<C>The dialog widget allows the programmer to create";
X   message[2]	= "<C>a popup dialog box with buttons. The dialog box";
X   message[3]	= "<C>can contain </B/32>colors<!B!32>, </R>character attributes<!R>";
X   message[4]	= "<R>and even be justified.";
X   message[5]	= "<C>Even the buttons can have colors";
X
X   /* Create the dialog box.					*/
X   question = newCDKDialog (cdkscreen, CENTER, CENTER,
X				message, 6, buttons, 2, 
X				COLOR_PAIR(2)|A_REVERSE,
X				TRUE, TRUE, FALSE);
X
X   /* Check if we got a null value back.			*/
X   if (question == (CDKDIALOG *)NULL)
X   {
X      /* Shut down Cdk.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Spit out a message.					*/
X      printf ("Oops. Can't seem to create the dialog box. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Activate the dialog box.					*/
X   selection = activateCDKDialog (question, (chtype *)NULL);
X
X   /* Tell them what was selected.				*/
X   if (question->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No button selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (question->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected button #%d", selection);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up							*/
X   destroyCDKDialog (question);
X   destroyCDKScreen (cdkscreen);
X   endCDK();
X   delwin (cursesWin);
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/dialog_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/dialog_ex.c' ||
  echo 'restore of cdk4.8.0/exam/dialog_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/dialog_ex.c'`"
  test 2258 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/dialog_ex.c: original size 2258, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/entry_ex.c ==============
if test -f 'cdk4.8.0/exam/entry_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/entry_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/entry_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/entry_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="entry_ex";
#endif
X
/*
X * This demonstrates the Cdk entry field widget.
X */
void main(int argc, char **argv)
{
X   /* Declare local variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKENTRY *directory	= (CDKENTRY *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *label		= "</U/5>Directory:<!U!5>";
X   char	*info, *mesg[3], temp[256];
X
X   /* Set up CDK 						*/
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK colors.						*/
X   initCDKColor();
X
X   /* Create the entry field widget.				*/
X   directory	= newCDKEntry (cdkscreen, CENTER, CENTER, LEFT,
X				label, A_NORMAL, '.', vMIXED, 
X				40, 0, 256, TRUE, FALSE);
X
X   /* Is the widget NULL??					*/
X   if (directory == (CDKENTRY *)NULL)
X   {
X      /* Clean up						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a little message.				*/
X      printf ("Oops. Can't seem to create the entry box. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the screen.						*/
X   refreshCDKScreen (cdkscreen);
X
X   /*
X    * Pass in what ever was given off of the command line. Notice we
X    * don't check if argv[1] is NULL or not. The function setCDKEntry
X    * already performs any needed checks.
X    */
X   setCDKEntry (directory, argv[1], 0, 256, TRUE);
X
X   /* Activate the entry field.					*/
X   info	= activateCDKEntry (directory, (chtype *)NULL);
X   
X   /* Tell them what they typed.				*/
X   if (directory->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No information passed back.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (directory->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You typed in the following";
X      sprintf (temp, "<C>(%s)", info);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "";
X      mesg[3] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 4);
X   }
X
X   /* Clean up and exit.					*/
X   destroyCDKEntry (directory);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/entry_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/entry_ex.c' ||
  echo 'restore of cdk4.8.0/exam/entry_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/entry_ex.c'`"
  test 2135 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/entry_ex.c: original size 2135, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/graph_ex.c ==============
if test -f 'cdk4.8.0/exam/graph_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/graph_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/graph_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/graph_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="graph_ex";
#endif
X
void main()
{
X   /* Declare vars			*/
X   CDKSCREEN	*cdkscreen;
X   CDKGRAPH	*graph;
X   CDKLABEL	*pause;
X   WINDOW	*cursesWin;
X   char	*mesg[2], *title, *xtitle, *ytitle, *graphChars;
X   int values[20], colors[20];
X   int count;
X
X   /* Set up CDK			*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors			*/
X   initCDKColor();
X
X   /* Create the graph values.		*/
X   values[0]	= 10;	colors[0]	= 5;
X   values[1]	= 15;	colors[1]	= 5;
X   values[2]	= 20;	colors[2]	= 5;
X   values[3]	= 25;	colors[3]	= 5;
X   values[4]	= 30;	colors[4]	= 5;
X   values[5]	= 35;	colors[5]	= 5;
X   values[6]	= 40;	colors[6]	= 5;
X   values[7]	= 45;	colors[7]	= 5;
X   values[8]	= 50;	colors[8]	= 5;
X   values[9]	= 55;	colors[9]	= 5;
X   count	= 10;
X   title	= "<C>Test Graph";
X   xtitle	= "<C>X AXIS TITLE";
X   ytitle	= "<C>Y AXIS TITLE";
X   graphChars	= "0123456789";
X  
X   /* Create the label values.		*/
X   mesg[0]	= "Press Any Key When Done Viewing The Graph.";
X
X   /* Create the graph widget		*/
X   graph = newCDKGraph (cdkscreen, CENTER, CENTER, 10, 20, 
X			title, xtitle, ytitle);
X
X   /* Is the graph NULL???		*/
X   if (graph == (CDKGRAPH *)NULL)
X   {
X      /* Shut down CDK.			*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.	*/
X      printf ("Oops. Can not make the graph widget. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Create the label widget.		*/
X   pause = newCDKLabel (cdkscreen, CENTER, BOTTOM, mesg, 1, TRUE, FALSE);
X   if (pause == (CDKLABEL *)NULL)
X   {
X      /* Shut down CDK.			*/
X      destroyCDKGraph (graph);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.	*/
X      printf ("Oops. Can not make the label widget. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Set the graph values.		*/
X   setCDKGraph (graph, values, count, graphChars, FALSE, vPLOT);
X
X   /* Draw the screen.			*/
X   refreshCDKScreen (cdkscreen);
X   drawCDKGraph (graph, BOX);
X   drawCDKLabel (pause, BOX);
X
X   /* Pause until the user says so...	*/
X   waitCDKLabel (pause, (char)NULL);
X
X   /* Clean up.                         */
X   destroyCDKGraph (graph);
X   destroyCDKLabel (pause);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/graph_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/graph_ex.c' ||
  echo 'restore of cdk4.8.0/exam/graph_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/graph_ex.c'`"
  test 2363 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/graph_ex.c: original size 2363, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/fselect_ex.c ==============
if test -f 'cdk4.8.0/exam/fselect_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/fselect_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/fselect_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/fselect_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="fselect_ex";
#endif
X
#define	MAXINFOLINES	10000
X
/*
X * This program demonstrates the file selector and the viewer widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKVIEWER *example	= (CDKVIEWER *)NULL;
X   CDKFSELECT *fSelect	= (CDKFSELECT *)NULL;	
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *directory	= ".";
X   char *info[MAXINFOLINES];
X   char *button[5], *filename, title[256], *mesg[4], temp[256];
X   int selected, lines, ret;
X
X   /* Parse up the command line.				*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "d:");
X      if (ret == -1)
X      {
X         break;
X      }
X      switch (ret)
X      {
X         case 'd' :
X              directory = strdup (optarg);
X      }
X   }
X
X   /* Create the viewer buttons.				*/
X   button[0]	= "</5><OK><!5>";
X   button[1]	= "</5><Cancel><!5>";
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.						*/
X   initCDKColor();
X
X   /* Get the filename.						*/
X   fSelect = newCDKFselect (cdkscreen, CENTER, CENTER, 20, 65,
X				"Directory: ", A_NORMAL, '_', A_REVERSE,
X				"</5>", "</48>", "</N>", "</N>", TRUE, FALSE);
X 
X   /*
X    * Set the starting directory. This is not neccessary because when
X    * the file selector starts it uses the present directory as a default.
X    */
X   setCDKFselect (fSelect, directory, A_NORMAL, '.', A_REVERSE, 
X			"</5>", "</48>", "</N>", "</N>", fSelect->box);
X
X   /* Activate the file selector.				*/
X   filename = activateCDKFselect (fSelect, NULL);
X
X   /* Check how the person exited from the widget.		*/
X   if (fSelect->exitType == vESCAPE_HIT)
X   {
X      /* Pop up a message for the user.				*/
X      mesg[0] = "<C>Escape hit. No file selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X   }
X
X   /* Create the file viewer to view the file selected.		*/
X   example = newCDKViewer (cdkscreen, CENTER, CENTER, 20, COLS-1,
X				button, 2, A_REVERSE, TRUE, FALSE);
X
X   /* Could we create the viewer widget??			*/
X   if (example == (CDKVIEWER *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can't seem to create viewer. Is the window too small?\n");
X      exit (0);
X   }
X
X   /* Open the file and read the contents.			*/
X   lines = readFile (filename, info, MAXINFOLINES);
X   if (lines == -1)
X   {
X      printf ("Could not open %s\n", filename);
X      exit (1);
X   }
X
X   /* Set up the viewer title, and the contents to the widget.	*/
X   sprintf (title, "<C></B/21>Filename:<!21></22>%20s<!22!B>", filename);
X   setCDKViewer (example, title, info, lines, A_REVERSE, TRUE, TRUE);
X
X   /* Activate the viewer widget.				*/
X   selected = activateCDKViewer (example);
X
X   /* Check how the person exited from the widget.		*/
X   if (example->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>Escape hit. No Button selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (example->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected button %d", selected);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKViewer (example);
X   destroyCDKFselect (fSelect);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/fselect_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/fselect_ex.c' ||
  echo 'restore of cdk4.8.0/exam/fselect_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/fselect_ex.c'`"
  test 3753 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/fselect_ex.c: original size 3753, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/histogram_ex.c ==============
if test -f 'cdk4.8.0/exam/histogram_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/histogram_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/histogram_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/histogram_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="histogram_ex";
#endif
X
void main()
{
X   /* Declare vars			*/
X   CDKSCREEN	*cdkscreen;
X   CDKHISTOGRAM	*volume;
X   CDKHISTOGRAM	*bass;
X   CDKHISTOGRAM	*treble;
X   WINDOW	*cursesWin;
X   char *volumeLabel, *bassLabel, *trebleLabel;
X
X   /* Set up CDK 			*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Color			*/
X   initCDKColor();
X
X   /* Set up the histogram labels.	*/
X   volumeLabel	= "</5>Volume<!5>";
X   bassLabel	= "</5>Bass  <!5>";
X   trebleLabel	= "</5>Treble<!5>";
X
X   /* Create the histogram objects.	*/
X   volume = newCDKHistogram (cdkscreen, 10, 10, LEFT, 1, 20, 
X		HORIZONTAL, volumeLabel, TRUE, FALSE);
X   if (volume == (CDKHISTOGRAM *)NULL)
X   {
X      /* Exit CDK.			*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X      
X      /* Print out a message and exit.	*/
X      printf ("Oops. Can not make volume histogram. Is the window big enough??\n");
X      exit (1);
X   }
X
X   bass = newCDKHistogram (cdkscreen, 10, 12, LEFT, 1, 20, 
X		HORIZONTAL, bassLabel, TRUE, FALSE);
X   if (bass == (CDKHISTOGRAM *)NULL)
X   {
X      /* Exit CDK.			*/
X      destroyCDKHistogram (volume);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.	*/
X      printf ("Oops. Can not make bass histogram. Is the window big enough??\n");
X      exit (1);
X   }
X
X   treble = newCDKHistogram (cdkscreen, 10, 14, LEFT, 1, 20, 
X		HORIZONTAL, trebleLabel, TRUE, FALSE);
X   if (treble == (CDKHISTOGRAM *)NULL)
X   {
X      /* Exit CDK.			*/
X      destroyCDKHistogram (volume);
X      destroyCDKHistogram (bass);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.	*/
X      printf ("Oops. Can not make treble histogram. Is the window big enough??\n");
X      exit (1);
X   }
X
X   /* Set the histogram values.		*/
X   setCDKHistogram (volume, vPERCENT, CENTER, A_BOLD, 0, 10, 6, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (bass  , vPERCENT, CENTER, A_BOLD, 0, 10, 3, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (treble, vPERCENT, CENTER, A_BOLD, 0, 10, 7, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   refreshCDKScreen (cdkscreen);
X   sleep (4);
X
X   /* Set the histogram values.		*/
X   setCDKHistogram (volume, vPERCENT, CENTER, A_BOLD, 0, 10, 8, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (bass  , vPERCENT, CENTER, A_BOLD, 0, 10, 1, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (treble, vPERCENT, CENTER, A_BOLD, 0, 10, 9, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   refreshCDKScreen (cdkscreen);
X   sleep (4);
X
X   /* Set the histogram values.		*/
X   setCDKHistogram (volume, vPERCENT, CENTER, A_BOLD, 0, 10, 10, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (bass  , vPERCENT, CENTER, A_BOLD, 0, 10, 7, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (treble, vPERCENT, CENTER, A_BOLD, 0, 10, 10, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   refreshCDKScreen (cdkscreen);
X   sleep (4);
X
X   /* Set the histogram values.		*/
X   setCDKHistogram (volume, vPERCENT, CENTER, A_BOLD, 0, 10, 1, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (bass  , vPERCENT, CENTER, A_BOLD, 0, 10, 8, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (treble, vPERCENT, CENTER, A_BOLD, 0, 10, 3, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   refreshCDKScreen (cdkscreen);
X   sleep (4);
X
X   /* Set the histogram values.		*/
X   setCDKHistogram (volume, vPERCENT, CENTER, A_BOLD, 0, 10, 3, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (bass  , vPERCENT, CENTER, A_BOLD, 0, 10, 3, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   setCDKHistogram (treble, vPERCENT, CENTER, A_BOLD, 0, 10, 3, ' '|A_REVERSE|COLOR_PAIR(3), BOX);
X   refreshCDKScreen (cdkscreen);
X   sleep (4);
X
X   /* Clean up.				*/
X   destroyCDKHistogram (volume);
X   destroyCDKHistogram (bass);
X   destroyCDKHistogram (treble);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/histogram_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/histogram_ex.c' ||
  echo 'restore of cdk4.8.0/exam/histogram_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/histogram_ex.c'`"
  test 3940 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/histogram_ex.c: original size 3940, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/itemlist_ex.c ==============
if test -f 'cdk4.8.0/exam/itemlist_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/itemlist_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/itemlist_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/itemlist_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="itemlist_ex";
#endif
X
/*
X * This program demonstrates the Cdk itemlist widget.
X */
void main()
{
X   /* Declare local variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKITEMLIST *monthlist	= (CDKITEMLIST *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   char *info[MAXITEMS], temp[256], *mesg[4];
X   int choice, startMonth;
X   struct tm *dateInfo;
X   time_t clck;
X
X   /*
X    * Get the current date and set the default month to the
X    * current month.
X    */ 
X    time (&clck);
X    dateInfo	= localtime (&clck);
X    startMonth	= dateInfo->tm_mon;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK colors.						*/
X   initCDKColor();
X
X   /* Create the choice list.					*/
X   info[0]	= "<C></5>January";
X   info[1]	= "<C></5>Feburary";
X   info[2]	= "<C></B/19>March";
X   info[3]	= "<C></5>April";
X   info[4]	= "<C></5>May";
X   info[5]	= "<C></K/5>June";
X   info[6]	= "<C></12>July";
X   info[7]	= "<C></5>August";
X   info[8]	= "<C></5>September";
X   info[9]	= "<C></32>October";
X   info[10]	= "<C></5>November";
X   info[11]	= "<C></11>December";
X
X   /* Create the itemlist widget.				*/
X   monthlist	= newCDKItemlist (cdkscreen, CENTER, CENTER, LEFT,
X   					"</U/5>Pick a Month:",
X					info, 12, startMonth, TRUE, FALSE);
X
X   /* Is the widget NULL??					*/
X   if (monthlist == (CDKITEMLIST *)NULL)
X   {
X      /* Clean up						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a little message.				*/
X      printf ("Oops. Can't seem to create the entry box. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the CDK screen.					*/
X   refreshCDKScreen (cdkscreen);
X
X   /* Activate the widget.					*/
X   choice = activateCDKItemlist (monthlist, (chtype *)NULL);
X
X   /* Check how they exited from the widget.			*/
X   if (monthlist->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No item selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (monthlist->screen, mesg, 3);
X   }
X   else if (monthlist->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected the %dth item which is", choice);
X      mesg[0] = copyChar (temp);
X      mesg[1] = info[choice];
X      mesg[2] = "";
X      mesg[3] = "<C>Press any key to continue.";
X      popupLabel (monthlist->screen, mesg, 4);
X   }
X
X   /* Clean up.							*/
X   destroyCDKItemlist (monthlist);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/itemlist_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/itemlist_ex.c' ||
  echo 'restore of cdk4.8.0/exam/itemlist_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/itemlist_ex.c'`"
  test 2548 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/itemlist_ex.c: original size 2548, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/label_ex.c ==============
if test -f 'cdk4.8.0/exam/label_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/label_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/label_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/label_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="label_ex";
#endif
X
void main()
{
X   /* Declare variables.	*/
X   CDKSCREEN	*cdkscreen;
X   CDKLABEL	*demo;
X   WINDOW 	*cursesWin;
X   char		*mesg[4];
X
X   /* Set up CDK 		*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors		*/
X   initCDKColor();
X
X   /* Set the labels up.	*/
X   mesg[0] = "</1/B>This line should have a yellow foreground and a blue background.";
X   mesg[1] = "</2/B>This line should have a white  foreground and a blue background.";
X   mesg[2] = "</3/B>This line should have a yellow foreground and a red  background.";
X   mesg[3] = "<C>This line should be set to whatever the screen default is.";
X
X   /* Declare the labels.	*/
X   demo	= newCDKLabel (cdkscreen, CENTER, CENTER, mesg, 4, TRUE, TRUE);
X
X   /* Is the label NULL???	*/
X   if (demo == (CDKLABEL *)NULL)
X   {
X      /* Clean up the memory.	*/
X      destroyCDKScreen (cdkscreen);
X
X      /* End curses...		*/
X      endCDK();
X
X      /* Spit out a message.	*/
X      printf ("Oops. Can't seem to create the label. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the CDK screen.	*/
X   refreshCDKScreen (cdkscreen);
X   waitCDKLabel (demo, ' ');
X
X   /* Clean up			*/
X   destroyCDKLabel (demo);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/label_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/label_ex.c' ||
  echo 'restore of cdk4.8.0/exam/label_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/label_ex.c'`"
  test 1359 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/label_ex.c: original size 1359, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/marquee_ex.c ==============
if test -f 'cdk4.8.0/exam/marquee_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/marquee_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/marquee_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/marquee_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="marquee_ex";
#endif
X
void main(int argc, char **argv)
{
X   /* Declare vars			*/
X   CDKSCREEN	*cdkscreen;
X   CDKMARQUEE	*scrollMessage;
X   WINDOW	*cursesWin;
X   char 	message[400];
X   int delay	= 5;
X   int repeat	= 3;
X
X   /* Check the command line.		*/
X   if (argc <= 1)
X   {
X      fprintf (stderr, "Usage: %s Message\n", argv[0]);
X      exit (1);
X   }
X
X   /* Set up CDK			*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors			*/
X   initCDKColor();
X
X   /* Create the marquee.		*/
X   scrollMessage = newCDKMarquee (cdkscreen, CENTER, TOP, 30, FALSE);
X
X   /* Check if the marquee is NULL.	*/
X   if (scrollMessage == (CDKMARQUEE *)NULL)
X   {
X      /* Exit Cdk.			*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message.		*/
X      printf ("Oops. Can't seem to create the marquee window. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the CDK screen.		*/
X   refreshCDKScreen (cdkscreen);
X
X   /* Run the marquee.			*/
X   sprintf (message, "</B/U>%s<!B!U></K>This should be blinking...<!K> ", argv[1]);
X   activateCDKMarquee (scrollMessage, message, delay, repeat, TRUE);
X
X   /* Clean up.				*/
X   destroyCDKMarquee (scrollMessage);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/marquee_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/marquee_ex.c' ||
  echo 'restore of cdk4.8.0/exam/marquee_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/marquee_ex.c'`"
  test 1357 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/marquee_ex.c: original size 1357, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/matrix_ex.c ==============
if test -f 'cdk4.8.0/exam/matrix_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/matrix_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/matrix_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/matrix_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="matrix_ex";
#endif
X
/*
X * This program demonstrates the Cdk matrix widget.
X */
void main()
{
X   /* Declare local variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKMATRIX *courseList	= (CDKMATRIX *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   int rows			= 8;
X   int cols			= 5;
X   int vrows			= 3;
X   int vcols			= 5;
X   char *coltitle[10], *rowtitle[10], *mesg[100];
X   int colwidth[10], colvalue[10];
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors.						*/
X   initCDKColor();
X
X   /* Create the horizontal and vertical matrix labels.		*/
X   coltitle[1] = "</B/5>Course";   colwidth[1] = 7 ; colvalue[1] = vUMIXED;
X   coltitle[2] = "</B/33>Lec 1";   colwidth[2] = 7 ; colvalue[2] = vUMIXED;
X   coltitle[3] = "</B/33>Lec 2";   colwidth[3] = 7 ; colvalue[3] = vUMIXED;
X   coltitle[4] = "</B/33>Lec 3";   colwidth[4] = 7 ; colvalue[4] = vUMIXED;
X   coltitle[5] = "</B/7>Flag";     colwidth[5] = 1 ; colvalue[5] = vUMIXED;
X   rowtitle[1] = "</B/6>Course 1"; rowtitle[2] = "<C></B/6>Course 2";
X   rowtitle[3] = "</B/6>Course 3"; rowtitle[4] = "<L></B/6>Course 4";
X   rowtitle[5] = "</B/6>Course 5"; rowtitle[6] = "<R></B/6>Course 6"; 
X   rowtitle[7] = "</B/6>Course 7"; rowtitle[8] = "<R></B/6>Course 8"; 
X
X   /* Create the matrix object.					*/
X   courseList = newCDKMatrix (cdkscreen,
X				CENTER, CENTER,
X				rows, cols, vrows, vcols,
X				rowtitle, coltitle,
X				colwidth, colvalue, 
X				1, 1, '.',
X				COL, TRUE, TRUE, TRUE);
X
X   /* Check to see if the matrix is NULL.			*/
X   if (courseList == (CDKMATRIX *)NULL)
X   {
X      /* Clean up.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X 
X      /* Print out a little message.				*/
X      printf ("Oops. Can't seem to create the matrix widget. Is the window too small ?\n");
X      exit (1);
X   }
X
X   /* Activate the matrix.					*/
X   activateCDKMatrix (courseList, (chtype *)NULL);
X
X
X   /* Check if the user hit escape or not.			*/
X   if (courseList->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No information passed back.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (courseList->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You exited the matrix normally.";
X      mesg[1] = "<C>To get the contents of the matrix cell, you can";
X      mesg[2] = "<C>dereference the info array off of the matrix widget.";
X      mesg[3] = "";
X      mesg[4] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 5);
X   }
X
X   /* Clean up.			*/
X   destroyCDKMatrix (courseList);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/matrix_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/matrix_ex.c' ||
  echo 'restore of cdk4.8.0/exam/matrix_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/matrix_ex.c'`"
  test 2775 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/matrix_ex.c: original size 2775, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/mentry_ex.c ==============
if test -f 'cdk4.8.0/exam/mentry_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/mentry_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/mentry_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/mentry_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="mentry_ex";
#endif
X
void main(int argc, char **argv)
{
X   /* Declare variables.	*/
X   CDKSCREEN	*cdkscreen;
X   CDKMENTRY	*filename;
X   WINDOW	*cursesWin;
X   char		*info;
X   char		*label	= "</5>Filename:<!5>";
X
X   /* Set up CDK 		*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors.		*/
X   initCDKColor();
X
X   /* Set up the multi-line entry field.	*/
X   filename	= newCDKMentry (cdkscreen, CENTER, CENTER, LEFT,
X			label, A_BOLD, '.', vMIXED,
X			20, 5, 20, 0, TRUE, FALSE);
X
X   /* Is the object NULL?	*/
X   if (filename == (CDKMENTRY *)NULL)
X   {
X      /* Shut down CDK.		*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message.	*/
X      printf ("Oops. Can not create CDK object. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the CDK screen.	*/
X   refreshCDKScreen (cdkscreen);
X
X   /* Set what ever was given from the command line.	*/
X   setCDKMentry (filename, argv[1], 0, TRUE);
X
X   /* Activate this thing.	*/
X   activateCDKMentry (filename, (chtype *)NULL);
X   info	= strdup (filename->info);
X
X   /* Clean up.	*/
X   destroyCDKMentry (filename);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X
X   /* Spit out the results.	*/
X   printf ("\n\n\n");
X   printf ("Filename : <%s>\n", info);
X   free(info);
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/mentry_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/mentry_ex.c' ||
  echo 'restore of cdk4.8.0/exam/mentry_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/mentry_ex.c'`"
  test 1388 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/mentry_ex.c: original size 1388, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/menu_ex.c ==============
if test -f 'cdk4.8.0/exam/menu_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/menu_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/menu_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/menu_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="menu_ex";
#endif
X
/*
X * This program demonstratres the Cdk menu widget.
X */
void main()
{
X   /* Declare variables.						*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKMENU*menu		= (CDKMENU *)NULL;
X   WINDOW*cursesWin	= (WINDOW *)NULL;
X   char *menulist[MAXMENUITEMS][MAXSUBITEMS];
X   int submenusize[3], menuloc[4];
X   char *mesg[5], temp[256];
X   int selection;
X
X   /* Set up CDK 							*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK color.							*/
X   initCDKColor();
X
X   /* Set up the menu.							*/
X   menulist[0][0] = "</5>File" ; menulist[1][0] = "</5>Edit";  menulist[2][0] = "</5>Help";
X   menulist[0][1] = "</5>Save" ; menulist[1][1] = "</5>Cut  "; menulist[2][1] = "</5>On Edit ";
X   menulist[0][2] = "</5>Exit" ; menulist[1][2] = "</5>Copy "; menulist[2][2] = "</5>On File ";
X                                 menulist[1][3] = "</5>Paste"; menulist[2][3] = "</5>About...";
X   submenusize[0] = 3;	menuloc[0] = LEFT;
X   submenusize[1] = 4;	menuloc[1] = LEFT;
X   submenusize[2] = 4;	menuloc[2] = RIGHT;
X
X   /* Create the menu.							*/
X   menu = newCDKMenu (cdkscreen, menulist, 3, submenusize, menuloc, 
X				TOP, COLOR_PAIR(9), COLOR_PAIR(44));
X   
X   /* Draw the CDK screen.						*/
X   refreshCDKScreen (cdkscreen);
X    
X   /* Activate the menu							*/
X   selection = activateCDKMenu (menu, (chtype *)NULL);
X
X   /* Determine how the user exitted from the widget.			*/
X   if (menu->exitType == vEARLY_EXIT)
X   {
X      mesg[0] = "<C>You hit escape. No menu item was selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (menu->exitType == vNORMAL) 
X   {
X      sprintf (temp, "<C>You selected menu #%d, submenu #%d", selection/100, selection%100);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.								*/
X   destroyCDKMenu (menu);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/menu_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/menu_ex.c' ||
  echo 'restore of cdk4.8.0/exam/menu_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/menu_ex.c'`"
  test 2128 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/menu_ex.c: original size 2128, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/radio_ex.c ==============
if test -f 'cdk4.8.0/exam/radio_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/radio_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/radio_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/radio_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="radio_ex";
#endif
X
/*
X * This program demonstrates the Cdk radio widget.
X */
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKRADIO *radio	= (CDKRADIO *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *item[200], *title, *mesg[5], temp[100];
X   int selection, count;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Set up CDK Colors.					*/
X   initCDKColor();
X
X   /* Use the current diretory list to fill the radio list.	*/
X   count = getDirectoryContents (".", item, 200);
X
X   /* Create the radio list					*/
X   title = "<C></5>Select a filename";
X   radio = newCDKRadio (cdkscreen, CENTER, CENTER, 10, 40, title,
X			item, count, '#'|A_REVERSE, 1,
X			A_REVERSE, TRUE, FALSE);
X
X   /* Check if the radio list is NULL.				*/
X   if (radio == (CDKRADIO *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Ooops. Can't seem to create the raiod widget. Is the window too small??\n");
X      exit (1);
X   }
X
X   /* Activate the radio list.					*/
X   selection = activateCDKRadio (radio, (chtype *)NULL);
X
X   /* Check the exit status of the widget.			*/
X   if (radio->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No item selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (radio->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You selected the filename";
X      sprintf (temp, "<C>%s", item[selection]);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "";
X      mesg[3] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 4);
X   }
X
X   /* Clean up.							*/
X   destroyCDKRadio (radio);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/radio_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/radio_ex.c' ||
  echo 'restore of cdk4.8.0/exam/radio_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/radio_ex.c'`"
  test 1937 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/radio_ex.c: original size 1937, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/scale_ex.c ==============
if test -f 'cdk4.8.0/exam/scale_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/scale_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/scale_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/scale_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="scale_ex";
#endif
X
/*
X * This program demonstrates the Cdk scale widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKSCALE *scale	= (CDKSCALE *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *label		= "</5>Select a value";
X   int low		= 0;
X   int high		= 100;
X   int inc		= 1;
X   char temp[256], *mesg[5];
X   int selection, ret;
X
X   /* Parse up the command line.				*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "l:h:i:");
X
X      /* Are there any more command line options to parse.	*/
X      if (ret == -1)
X      {
X         break;
X      }
X
X      switch (ret)
X      {
X         case 'l':
X              low = atoi (optarg);
X              break;
X
X         case 'h':
X              high = atoi (optarg);
X              break;
X
X         case 'i':
X              inc = atoi (optarg);
X              break;
X      }
X   }
X
X   /* Set up CDK		 				*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors.						*/
X   initCDKColor();
X
X   /* Create the scale.						*/
X   scale = newCDKScale (cdkscreen, CENTER, CENTER, CENTER, 
X			label, A_NORMAL, 5, low, low, high,
X			inc, (inc*2), TRUE, FALSE);
X
X   /* Is the scale NULL?					*/
X   if (scale == (CDKSCALE *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X      
X      /* Print out a message.					*/
X      printf ("Oops. Can't make the scale widget. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Activate the scale.					*/
X   selection = activateCDKScale (scale, (chtype *)NULL);
X
X   /* Check the exit value of the scale widget.			*/
X   if (scale->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No value selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (scale->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected %d", selection);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKScale (scale);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/scale_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/scale_ex.c' ||
  echo 'restore of cdk4.8.0/exam/scale_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/scale_ex.c'`"
  test 2295 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/scale_ex.c: original size 2295, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/scroll_ex.c ==============
if test -f 'cdk4.8.0/exam/scroll_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/scroll_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/scroll_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/scroll_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="scroll_ex";
#endif
X
/*
X * This program demonstrates the Cdk scrolling list widget.
X */
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKSCROLL *scrollList	= (CDKSCROLL *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   char *title			= "<C></5>Pick a file";
X   char *item[200], *mesg[5], temp[256];
X   int selection, count;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Set up CDK Colors.					*/
X   initCDKColor();
X
X   /* Use the current diretory list to fill the radio list.	*/
X   count = getDirectoryContents (".", item, 200);
X
X   /* Create the scrolling list.				*/
X   scrollList = newCDKScroll (cdkscreen, CENTER, CENTER, 10, 50, title,
X				item, count, NUMBERS, A_REVERSE, TRUE, FALSE);
X
X   /* Is the scrolling list NULL??				*/
X   if (scrollList == (CDKSCROLL *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X      
X      /* Print out a message and exit.				*/
X      printf ("Oops. Could not make scrolling list. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Activate the scrolling list.				*/
X   selection = activateCDKScroll (scrollList, (chtype *)NULL);
X
X   /* Determine how the widget was exited.			*/
X   if (scrollList->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No file selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (scrollList->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You selected the following file";
X      sprintf (temp, "<C>%s", item[selection]);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKScroll (scrollList);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/scroll_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/scroll_ex.c' ||
  echo 'restore of cdk4.8.0/exam/scroll_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/scroll_ex.c'`"
  test 1958 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/scroll_ex.c: original size 1958, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/selection_ex.c ==============
if test -f 'cdk4.8.0/exam/selection_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/selection_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/selection_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/selection_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="selection_ex";
#endif
X
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKSELECTION	*selection	= (CDKSELECTION *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   char *title			= "<C></5>Pick one or more accounts.";
X   char *choices[]		= {"</B/5>--->", "    "};
X   char *item[400], temp[256], *mesg[200];
X   struct passwd *ent;
X   int count, x, y;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Set up CDK Colors.					*/
X   initCDKColor();
X
X   /* Use the account names to create a list.			*/
X   count = 0;
X   while ((ent = getpwent ()) != NULL)
X   {
X      item[count++] = copyChar (ent->pw_name);
X   }
X   count--;
X
X   /* Create the selection list					*/
X   selection = newCDKSelection (cdkscreen, CENTER, CENTER, 
X					10, 50, title, item, count, choices, 2,
X					A_REVERSE, TRUE, FALSE);
X
X   /* Is the selection list NULL??				*/
X   if (selection == (CDKSELECTION *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can;t seem to create the selection list. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Activate the selection list.				*/
X   activateCDKSelection (selection, (chtype *)NULL);
X
X   /* Check the exit status of the widget.			*/
X   if (selection->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No items selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (selection->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>Here are the accounts you selected.";
X      y = 1;
X      for (x=0; x < count; x++)
X      {
X         if (selection->selections[x] == 0)
X         {
X            sprintf (temp, "<C></5>%s", item[x]);
X            mesg[y++] = copyChar (temp);
X         }
X      }
X      popupLabel (cdkscreen, mesg, y);
X   }
X
X   /* Clean up.							*/
X   destroyCDKSelection (selection);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/selection_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/selection_ex.c' ||
  echo 'restore of cdk4.8.0/exam/selection_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/selection_ex.c'`"
  test 2154 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/selection_ex.c: original size 2154, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/slider_ex.c ==============
if test -f 'cdk4.8.0/exam/slider_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/slider_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/slider_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/slider_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="slider_ex";
#endif
X
/*
X * This program demonstrates the Cdk slider widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKSLIDER *slider	= (CDKSLIDER *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *label		= "</B>Enter a value:";
X   int low		= 1;
X   int high		= 100;
X   int inc		= 1;
X   int fieldWidth	= 50;
X   char temp[256], *mesg[5];
X   int selection, ret;
X
X   /* Set up CDK						 */ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Parse up the command line.				*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "l:h:i:");
X
X      /* Are there any more command line options to parse.	*/
X      if (ret == -1)
X      {
X         break;
X      }
X
X      switch (ret)
X      {
X         case 'l':
X              low = atoi (optarg);
X              break;
X
X         case 'h':
X              high = atoi (optarg);
X              break;
X
X         case 'i':
X              inc = atoi (optarg);
X              break;
X      }
X   }
X
X   /* Start CDK Colors.						*/
X   initCDKColor();
X
X   /* Create the slider.					*/
X   slider = newCDKSlider (cdkscreen, CENTER, CENTER, LEFT, label,
X				COLOR_PAIR (29) | ' ', fieldWidth, low, 
X				low, high, inc, (inc*2), TRUE, FALSE);
X
X   /* Is the slider NULL?					*/
X   if (slider == (CDKSLIDER *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X      
X      /* Print out a message.					*/
X      printf ("Oops. Can't make the slider widget. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Activate the slider.					*/
X   selection = activateCDKSlider (slider, (chtype *)NULL);
X
X   /* Check the exit value of the slider widget.		*/
X   if (slider->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No value selected.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (slider->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected %d", selection);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKSlider (slider);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/slider_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/slider_ex.c' ||
  echo 'restore of cdk4.8.0/exam/slider_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/slider_ex.c'`"
  test 2359 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/slider_ex.c: original size 2359, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/swindow_ex.c ==============
if test -f 'cdk4.8.0/exam/swindow_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/swindow_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/swindow_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/swindow_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="swindow_ex";
#endif
X
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKSWINDOW *swindow	= (CDKSWINDOW *)NULL;
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *title		= "<C></5>Error Log";
X   char *mesg[5];
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK colors						*/
X   initCDKColor();
X
X   /* Create the scrolling window				*/
X   swindow = newCDKSwindow (cdkscreen, CENTER, CENTER, 6, 65,
X				title, 100, TRUE, FALSE);
X
X   /* Is the window NULL.					*/
X   if (swindow == (CDKSWINDOW *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can not seem to create the scrolling window. Is the window too small??\n");
X      exit (1);
X   }
X
X   /* Load up the scrolling window.				*/
X   addCDKSwindow (swindow, "<C></11>TOP: This is the first line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<L></11>1: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<C></11>2: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<R></11>3: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<C></11>4: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<L></11>5: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<C></11>6: This is another line.", BOTTOM);
X   addCDKSwindow (swindow, "<C>Sleeping for 1 second.", BOTTOM);
X   sleep (1);
X
X   addCDKSwindow (swindow, "<C>Done. You can now play.", BOTTOM);
X
X   addCDKSwindow (swindow, "<C>This is being added to the top.", TOP);
X
X   /* Activate the scrolling window.					*/
X   activateCDKSwindow (swindow, (chtype *)NULL);
X
X   /* Check how the user exited this widget.				*/
X   if (swindow->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape to leave this widget.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (swindow->exitType == vNORMAL)
X   {
X      mesg[0] = "<C>You hit return to exit this widget.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.								*/
X   destroyCDKSwindow (swindow);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/swindow_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/swindow_ex.c' ||
  echo 'restore of cdk4.8.0/exam/swindow_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/swindow_ex.c'`"
  test 2885 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/swindow_ex.c: original size 2885, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/template_ex.c ==============
if test -f 'cdk4.8.0/exam/template_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/template_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/template_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/template_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="template_ex";
#endif
X
/*
X * This program demonstrates the Cdk template widget.
X */
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen		= (CDKSCREEN *)NULL;
X   CDKTEMPLATE *phoneNumber	= (CDKTEMPLATE *)NULL;
X   WINDOW *cursesWin		= (WINDOW *)NULL;
X   char *label			= "</5>Phone Number:<!5>";
X   char *overlay		= "</B/6>(___) ___-____<!6>";
X   char *plate			= "(###) ###-####";
X   char *info, *mixed, temp[256], *mesg[5];
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors.						*/
X   initCDKColor();
X
X   /* Declare the template.					*/
X   phoneNumber = newCDKTemplate (cdkscreen, CENTER, CENTER, LEFT, 
X					label, plate, overlay, TRUE, TRUE);
X
X   /* Is the template pointer NULL				*/
X   if (phoneNumber == (CDKTEMPLATE *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can;'t seem to create template. Is the window too small?");
X      exit (1);
X   }
X
X   /* Activate the template 					*/
X   info = activateCDKTemplate (phoneNumber, (chtype *)NULL);
X
X   /* Tell them what they typed.				*/
X   if (phoneNumber->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>You hit escape. No information typed in.";
X      mesg[1] = "",
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (phoneNumber->exitType == vNORMAL)
X   {
X      /* Mix the plate and the number.				*/
X      mixed = mixCDKTemplate (phoneNumber);
X
X      /* Create the message to display.				*/
X      sprintf (temp, "Phone Number with out plate mixing  : %s", info);
X      mesg[0] = copyChar (temp);
X      sprintf (temp, "Phone Number with the plate mixed in: %s", mixed);
X      mesg[1] = copyChar (temp);
X      mesg[2] = "";
X      mesg[3] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 4);
X   }
X   
X   /* Clean up.							*/
X   destroyCDKTemplate (phoneNumber);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/template_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/template_ex.c' ||
  echo 'restore of cdk4.8.0/exam/template_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/template_ex.c'`"
  test 2119 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/template_ex.c: original size 2119, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/viewer_ex.c ==============
if test -f 'cdk4.8.0/exam/viewer_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/viewer_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/viewer_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/viewer_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="fselect_ex";
#endif
X
#define	MAXINFOLINES	10000
X
/*
X * This program demonstrates the file selector and the viewer widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKVIEWER *example	= (CDKVIEWER *)NULL;
X   CDKFSELECT *fSelect	= (CDKFSELECT *)NULL;	
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *directory	= ".";
X   char *info[MAXINFOLINES];
X   char *button[5], *filename, title[256], *mesg[4], temp[256];
X   int selected, lines, ret;
X
X   /* Parse up the command line.				*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "d:");
X      if (ret == -1)
X      {
X         break;
X      }
X      switch (ret)
X      {
X         case 'd' :
X              directory = strdup (optarg);
X      }
X   }
X
X   /* Create the viewer buttons.				*/
X   button[0]	= "</5><OK><!5>";
X   button[1]	= "</5><Cancel><!5>";
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.						*/
X   initCDKColor();
X
X   /* Get the filename.						*/
X   fSelect = newCDKFselect (cdkscreen, CENTER, CENTER, 20, 65,
X				"Directory: ", A_NORMAL, '_', A_REVERSE,
X				"</5>", "</48>", "</N>", "</N>", TRUE, FALSE);
X 
X   /*
X    * Set the starting directory. This is not neccessary because when
X    * the file selector starts it uses the present directory as a default.
X    */
X   setCDKFselect (fSelect, directory, A_NORMAL, '.', A_REVERSE, 
X			"</5>", "</48>", "</N>", "</N>", fSelect->box);
X
X   /* Activate the file selector.				*/
X   filename = activateCDKFselect (fSelect, NULL);
X
X   /* Check how the person exited from the widget.		*/
X   if (fSelect->exitType == vESCAPE_HIT)
X   {
X      /* Pop up a message for the user.				*/
X      mesg[0] = "<C>Escape hit. No file selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X   }
X
X   /* Create the file viewer to view the file selected.		*/
X   example = newCDKViewer (cdkscreen, CENTER, CENTER, 20, COLS-1,
X				button, 2, A_REVERSE, TRUE, FALSE);
X
X   /* Could we create the viewer widget??			*/
X   if (example == (CDKVIEWER *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can't seem to create viewer. Is the window too small?\n");
X      exit (0);
X   }
X
X   /* Open the file and read the contents.			*/
X   lines = readFile (filename, info, MAXINFOLINES);
X   if (lines == -1)
X   {
X      printf ("Could not open %s\n", filename);
X      exit (1);
X   }
X
X   /* Set up the viewer title, and the contents to the widget.	*/
X   sprintf (title, "<C></B/21>Filename:<!21></22>%20s<!22!B>", filename);
X   setCDKViewer (example, title, info, lines, A_REVERSE, TRUE, TRUE);
X
X   /* Activate the viewer widget.				*/
X   selected = activateCDKViewer (example);
X
X   /* Check how the person exited from the widget.		*/
X   if (example->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>Escape hit. No Button selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (example->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected button %d", selected);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKViewer (example);
X   destroyCDKFselect (fSelect);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/viewer_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/viewer_ex.c' ||
  echo 'restore of cdk4.8.0/exam/viewer_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/viewer_ex.c'`"
  test 3753 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/viewer_ex.c: original size 3753, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/subwindow_ex.c ==============
if test -f 'cdk4.8.0/exam/subwindow_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/subwindow_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/subwindow_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/subwindow_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="subwindow_ex";
#endif
X
/*
X * This demo displays the ability to put widgets within a curses subwindow.
X */
X
void main()
{
X   /* Declare vars						*/
X   CDKSCREEN *cdkscreen;
X   CDKSCROLL *dowList;
X   CDKLABEL *title;
X   WINDOW *mainWindow, *subWindow;
X   char *dow[] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
X   char *mesg[5];
X   int pick;
X
X   /* Start curses.						*/
X   mainWindow = initscr();
X
X   /* Create a basic window.					*/
X   subWindow = newwin (20, 40, 3, 3);
X  
X   /* Start Cdk.						*/
X   cdkscreen = initCDKScreen (subWindow);
X
X   /* Box our window.						*/
X   box (subWindow, ACS_VLINE, ACS_HLINE);
X   wrefresh (subWindow);
X
X   /* Create a basic scrolling list inside the window.		*/
X   dowList = newCDKScroll (cdkscreen, CENTER, CENTER, 10, 15,
X			"<C></U>Pick a Day", dow, 7, NONUMBERS,
X			A_REVERSE, TRUE, FALSE);
X
X   /* Put a title within the window.				*/
X   mesg[0] = "<C><#HL(30)>";
X   mesg[1] = "<C>This is a Cdk scrolling list";
X   mesg[2] = "<C>inside a curses window.";
X   mesg[3] = "<C><#HL(30)>";
X   title = newCDKLabel (cdkscreen, CENTER, TOP, mesg, 4, FALSE, FALSE);
X
X   /* Refresh the screen.					*/
X   refreshCDKScreen (cdkscreen);
X
X   /* Let the user play.					*/
X   pick = activateCDKScroll (dowList, NULL);
X
X   /* Clean up.							*/
X   destroyCDKScroll (dowList);
X   destroyCDKLabel (title);
X   werase (subWindow);
X   delwin (subWindow);
X   endCDK();
X
X   /* Tell them what they picked.				*/
X   printf ("You picked %s\n", dow[pick]);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/subwindow_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/subwindow_ex.c' ||
  echo 'restore of cdk4.8.0/exam/subwindow_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/subwindow_ex.c'`"
  test 1569 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/subwindow_ex.c: original size 1569, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/bind_ex.c ==============
if test -f 'cdk4.8.0/exam/bind_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/bind_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/bind_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/bind_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="bind_ex";
#endif
X
void dialogHelpCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKDIALOG *dialog = (CDKDIALOG *)object;
X   char *mesg[5];
X
X   /* Check which button we are on.		*/
X   if (dialog->currentButton == 0)
X   {
X      mesg[0] = "<C></U>Help for </U>Who<!U>.";
X      mesg[1] = "<C>When this button is picked the name of the current";
X      mesg[2] = "<C>user is displayed on the screen in a popup window.";
X      popupLabel (dialog->screen, mesg, 3);
X   }
X   else if (dialog->currentButton == 1)
X   {
X      mesg[0] = "<C></U>Help for </U>Time<!U>.";
X      mesg[1] = "<C>When this button is picked the current time is";
X      mesg[2] = "<C>displayed on the screen in a popup window.";
X      popupLabel (dialog->screen, mesg, 3);
X   }
X   else if (dialog->currentButton == 2)
X   {
X      mesg[0] = "<C></U>Help for </U>Date<!U>.";
X      mesg[1] = "<C>When this button is picked the current date is";
X      mesg[2] = "<C>displayed on the screen in a popup window.";
X      popupLabel (dialog->screen, mesg, 3);
X   }
X   else if (dialog->currentButton == 3)
X   {
X      mesg[0] = "<C></U>Help for </U>Quit<!U>.";
X      mesg[1] = "<C>When this button is picked the dialog box is exited.";
X      popupLabel (dialog->screen, mesg, 2);
X   }
}
X
void main()
{
X   /* Declare variables.			*/
X   CDKSCREEN	*cdkscreen;
X   CDKDIALOG	*question;
X   WINDOW	*cursesWin;
X   char		*buttons[40];
X   char		*message[40], *info[5], *loginName;
X   char		temp[256];
X   int		selection;
X   time_t	clck;
X   struct tm	*currentTime;
X
X   /* Set up CDK 				*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.              		*/
X   initCDKColor();
X
X   /* Set up the dialog box.			*/
X   message[0] = "<C></U>Simple Command Interface";
X   message[1] = "Pick the command you wish to run.";
X   message[2] = "<C>Press </R>?<!R> for help.";
X   buttons[0] = "Who";
X   buttons[1] = "Time";
X   buttons[2] = "Date";
X   buttons[3] = "Quit";
X
X   /* Create the dialog box.			*/
X   question	= newCDKDialog (cdkscreen, CENTER, CENTER,
X				message, 3, buttons, 4, A_REVERSE,
X				TRUE, TRUE, FALSE);
X
X   /* Check if we got a null value back.	*/
X   if (question == (CDKDIALOG *)NULL)
X   {
X      destroyCDKScreen (cdkscreen);
X
X      /* End curses...				*/
X      endCDK();
X
X      /* Spit out a message.			*/
X      printf ("Oops. Can't seem to create the dialog box. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Create the key binding.			*/
X   bindCDKObject (vDIALOG, question, '?', dialogHelpCB, NULL);
X
X   /* Activate the dialog box.			*/
X   selection = 0;
X   while (selection != 3)
X   {
X      /* Get the users button selection.	*/
X      selection = activateCDKDialog (question, (chtype *)NULL);
X
X      /* Check the results.			*/
X      if (selection == 0)
X      {
X         /* Get the users login name.		*/
X         info[0] = "<C>     </U>Login Name<!U>     ";
X         loginName = getlogin();
X         if (loginName == (char *)NULL)
X         {
X            info[1] = "<C></R>Unknown";
X         }
X         else
X         {
X             sprintf (temp, "<C><%s>", loginName); info[1] = strdup (temp);
X         }
X         popupLabel (question->screen, info, 2);
X         free (info[1]);
X      }
X      else if (selection == 1)
X      {
X         /* Print out the time.			*/
X         time(&clck);
X         currentTime = localtime(&clck);
X         sprintf (temp, "<C>%d:%d:%d", currentTime->tm_hour,
X					currentTime->tm_min,
X					currentTime->tm_sec);
X         info[0] = "<C>   </U>Current Time<!U>   ";
X         info[1] = strdup (temp);
X         popupLabel (question->screen, info, 2);
X         free (info[1]);
X      }
X      else if (selection == 2)
X      {
X         /* Print out the date.			*/
X         time(&clck);
X         currentTime = localtime(&clck);
X         sprintf (temp, "<C>%d/%d/%d", currentTime->tm_mday,
X					currentTime->tm_mon,
X					currentTime->tm_year);
X         info[0] = "<C>   </U>Current Date<!U>   ";
X         info[1] = strdup (temp);
X         popupLabel (question->screen, info, 2);
X         free (info[1]);
X      }
X   }
X
X   /* Clean up					*/
X   destroyCDKDialog (question);
X   destroyCDKScreen (cdkscreen);
X   endCDK();
X   delwin (cursesWin);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/bind_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/bind_ex.c' ||
  echo 'restore of cdk4.8.0/exam/bind_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/bind_ex.c'`"
  test 4237 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/bind_ex.c: original size 4237, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/hello_ex.c ==============
if test -f 'cdk4.8.0/exam/hello_ex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/hello_ex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/hello_ex.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/hello_ex.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="hello_ex";
#endif
X
void main()
{
X   /* Declare variables.	*/
X   CDKSCREEN	*cdkscreen;
X   CDKLABEL	*demo;
X   WINDOW 	*cursesWin;
X   char		*mesg[4];
X
X   /* Set up CDK 		*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors		*/
X   initCDKColor();
X
X   /* Set the labels up.	*/
X   mesg[0] = "                               ";
X   mesg[1] = "<C>Hello World!";
X   mesg[2] = "                               ";
X
X   /* Declare the labels.	*/
X   demo	= newCDKLabel (cdkscreen, CENTER, CENTER, mesg, 3, TRUE, TRUE);
X
X   /* Is the label NULL???	*/
X   if (demo == (CDKLABEL *)NULL)
X   {
X      /* Clean up the memory.	*/
X      destroyCDKScreen (cdkscreen);
X
X      /* End curses...		*/
X      endCDK();
X
X      /* Spit out a message.	*/
X      printf ("Oops. Can't seem to create the label. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Draw the CDK screen.	*/
X   refreshCDKScreen (cdkscreen);
X   waitCDKLabel (demo, ' ');
X
X   /* Clean up			*/
X   destroyCDKLabel (demo);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/hello_ex.c' &&
  chmod 0444 'cdk4.8.0/exam/hello_ex.c' ||
  echo 'restore of cdk4.8.0/exam/hello_ex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/hello_ex.c'`"
  test 1148 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/hello_ex.c: original size 1148, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/exam/Makefile.examples ==============
if test -f 'cdk4.8.0/exam/Makefile.examples' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/exam/Makefile.examples (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/exam/Makefile.examples (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/exam/Makefile.examples' &&
default:
X	@for i in $(CDKEXAMBIN); do \
X	   echo "$(CC) $(CFLAGS) -o $$i $${i}_ex.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB)"; \
X	   $(CC) $(CFLAGS) -o $$i $${i}_ex.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB); \
X	done
X
clean:
X	rm -f *.o core $(CDKEXAMBIN)
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/exam/Makefile.examples' &&
  chmod 0444 'cdk4.8.0/exam/Makefile.examples' ||
  echo 'restore of cdk4.8.0/exam/Makefile.examples failed'
  shar_count="`wc -c < 'cdk4.8.0/exam/Makefile.examples'`"
  test 271 -eq "$shar_count" ||
    echo "cdk4.8.0/exam/Makefile.examples: original size 271, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/fileview.c ==============
if test ! -d 'cdk4.8.0/demo'; then
  echo 'x - creating directory cdk4.8.0/demo'
  mkdir 'cdk4.8.0/demo'
fi
if test -f 'cdk4.8.0/demo/fileview.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/fileview.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/fileview.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/demo/fileview.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="fselect_ex";
#endif
X
#define	MAXINFOLINES	10000
X
/*
X * This program demonstrates the file selector and the viewer widget.
X */
void main(int argc, char **argv)
{
X   /* Declare variables.					*/
X   CDKSCREEN *cdkscreen	= (CDKSCREEN *)NULL;
X   CDKVIEWER *example	= (CDKVIEWER *)NULL;
X   CDKFSELECT *fSelect	= (CDKFSELECT *)NULL;	
X   WINDOW *cursesWin	= (WINDOW *)NULL;
X   char *directory	= ".";
X   char *info[MAXINFOLINES];
X   char *button[5], *filename, title[256], *mesg[4], temp[256];
X   int selected, lines, ret;
X
X   /* Parse up the command line.				*/
X   while (1)
X   {
X      ret = getopt (argc, argv, "d:");
X      if (ret == -1)
X      {
X         break;
X      }
X      switch (ret)
X      {
X         case 'd' :
X              directory = strdup (optarg);
X      }
X   }
X
X   /* Create the viewer buttons.				*/
X   button[0]	= "</5><OK><!5>";
X   button[1]	= "</5><Cancel><!5>";
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.						*/
X   initCDKColor();
X
X   /* Get the filename.						*/
X   fSelect = newCDKFselect (cdkscreen, CENTER, CENTER, 20, 65,
X				"Directory: ", A_NORMAL, '_', A_REVERSE,
X				"</5>", "</48>", "</N>", "</N>", TRUE, FALSE);
X 
X   /*
X    * Set the starting directory. This is not neccessary because when
X    * the file selector starts it uses the present directory as a default.
X    */
X   setCDKFselect (fSelect, directory, A_NORMAL, '.', A_REVERSE, 
X			"</5>", "</48>", "</N>", "</N>", fSelect->box);
X
X   /* Activate the file selector.				*/
X   filename = activateCDKFselect (fSelect, NULL);
X
X   /* Check how the person exited from the widget.		*/
X   if (fSelect->exitType == vESCAPE_HIT)
X   {
X      /* Pop up a message for the user.				*/
X      mesg[0] = "<C>Escape hit. No file selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X   }
X
X   /* Create the file viewer to view the file selected.		*/
X   example = newCDKViewer (cdkscreen, CENTER, CENTER, 20, COLS-1,
X				button, 2, A_REVERSE, TRUE, FALSE);
X
X   /* Could we create the viewer widget??			*/
X   if (example == (CDKVIEWER *)NULL)
X   {
X      /* Exit CDK.						*/
X      destroyCDKFselect (fSelect);
X      destroyCDKScreen (cdkscreen);
X      endCDK();
X
X      /* Print out a message and exit.				*/
X      printf ("Oops. Can't seem to create viewer. Is the window too small?\n");
X      exit (0);
X   }
X
X   /* Open the file and read the contents.			*/
X   lines = readFile (filename, info, MAXINFOLINES);
X   if (lines == -1)
X   {
X      printf ("Could not open %s\n", filename);
X      exit (1);
X   }
X
X   /* Set up the viewer title, and the contents to the widget.	*/
X   sprintf (title, "<C></B/21>Filename:<!21></22>%20s<!22!B>", filename);
X   setCDKViewer (example, title, info, lines, A_REVERSE, TRUE, TRUE);
X
X   /* Activate the viewer widget.				*/
X   selected = activateCDKViewer (example);
X
X   /* Check how the person exited from the widget.		*/
X   if (example->exitType == vESCAPE_HIT)
X   {
X      mesg[0] = "<C>Escape hit. No Button selected.";
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X   else if (example->exitType == vNORMAL)
X   {
X      sprintf (temp, "<C>You selected button %d", selected);
X      mesg[0] = copyChar (temp);
X      mesg[1] = "";
X      mesg[2] = "<C>Press any key to continue.";
X      popupLabel (cdkscreen, mesg, 3);
X   }
X
X   /* Clean up.							*/
X   destroyCDKViewer (example);
X   destroyCDKFselect (fSelect);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/demo/fileview.c' &&
  chmod 0444 'cdk4.8.0/demo/fileview.c' ||
  echo 'restore of cdk4.8.0/demo/fileview.c failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/fileview.c'`"
  test 3753 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/fileview.c: original size 3753, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/rolodex.c ==============
if test -f 'cdk4.8.0/demo/rolodex.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/rolodex.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/rolodex.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/demo/rolodex.c
M(VEN8VQU9&4@(G)O;&]D97@N:"(*"B\J"B`J(%1H:7,@:7,@=&AE(&UA:6X@
M<&%R="!O9B!T:&4@;&]O<"X*("HO"G9O:60@;6%I;BAI;G0@87)G8RP@8VAA
M<B`J*F%R9W8I"GL*("`@+RH@1&5C;&%R92!V87)I86)L97,N"0D)"0DJ+PH@
M("!#1$M30U)%14X@*F-D:W-C<F5E;CL*("`@0T1+345.52`J<F]L;V1E>$UE
M;G4["B`@($-$2TQ!0D5,("IR;VQO9&5X5&ET;&4["B`@(%-2;VQO9&5X(&=R
M;W5P3&ES=%M-05A'4D]54%-=.PH@("!724Y$3U<@*F-U<G-E<U=I;CL*("`@
M8VAA<B`J;65N=6QI<W1;34%8345.54E414U375M-05A354))5$5-4UTL("IT
M:71L95LU73L*("`@8VAA<B`J:&]M92P@=&5M<%LR-39=+"`J;65S9ULQ-5T[
M"B`@(&EN="!S=6)-96YU4VEZ95LS72P@;65N=4QO8V%T:6]N<ULT72P@<V5L
M96-T:6]N.PH@("!I;G0@9W)O=7`L(')E=#L*("`@:6YT(&=R;W5P0V]U;G0@
M/2`P.PH*("`@+RH@4V5T('5P($-$2R`)"0D)"0DJ+R`*("`@8W5R<V5S5VEN
M(#T@:6YI='-C<B@I.PH@("!C9&MS8W)E96X@/2!I;FET0T1+4V-R965N("AC
M=7)S97-7:6XI.PH*("`@+RH@4W1A<G0@0T1+(&-O;&]R+@D)"0D)"2HO"B`@
M(&EN:71#1$M#;VQO<B@I.PH*("`@+RH@0W)E871E('1H92!M96YU(&QI<W1S
M+@D)"0D)*B\*("`@;65N=6QI<W1;,%U;,%T@/2`B/"]5/D9I;&4B.PD);65N
M=6QI<W1;,5U;,%T@/2`B/"]5/D=R;W5P<R(["B`@(&UE;G5L:7-T6S!=6S%=
M(#T@(CPO0B\U/D]P96X@("`B.PEM96YU;&ES=%LQ75LQ72`]("(\+T(O-3Y.
M97<@("`B.PH@("!M96YU;&ES=%LP75LR72`]("(\+T(O-3Y3879E("`@(CL)
M;65N=6QI<W1;,5U;,ET@/2`B/"]"+S4^3W!E;B`@(CL*("`@;65N=6QI<W1;
M,%U;,UT@/2`B/"]"+S4^4V%V92!!<R(["6UE;G5L:7-T6S%=6S-=(#T@(CPO
M0B\U/D1E;&5T92(["B`@(&UE;G5L:7-T6S!=6S1=(#T@(CPO0B\U/E%U:70@
M("`B.PH*("`@;65N=6QI<W1;,EU;,%T@/2`B/"]5/E!R:6YT(CL);65N=6QI
M<W1;,UU;,%T@/2`B/"]5/DAE;'`B.PH@("!M96YU;&ES=%LR75LQ72`]("(\
M+T(O-3Y0<FEN="!'<F]U<',B.PEM96YU;&ES=%LS75LQ72`]("(\+T(O-3Y!
M8F]U="!2;VQO9&5X("`@("`B.PH@("`)"0D)"0EM96YU;&ES=%LS75LR72`]
M("(\+T(O-3Y2;VQO9&5X(%-T871I<W1I8W,B.PH*("`@+RH@4V5T('5P('1H
M92!S=6(M;65N=2!S:7IE<R!A;F0@=&AE:7(@;&]C871I;VYS+@D)*B\*("`@
M<W5B365N=5-I>F5;,%T@/2`U.PEM96YU3&]C871I;VYS6S!=(#T@3$5&5#L*
M("`@<W5B365N=5-I>F5;,5T@/2`T.PEM96YU3&]C871I;VYS6S%=(#T@3$5&
M5#L*("`@<W5B365N=5-I>F5;,ET@/2`R.PEM96YU3&]C871I;VYS6S)=(#T@
M3$5&5#L*("`@<W5B365N=5-I>F5;,UT@/2`S.PEM96YU3&]C871I;VYS6S-=
M(#T@4DE'2%0["@H@("`O*B!#<F5A=&4@=&AE(&UE;G4N"0D)"0D)*B\*("`@
M<F]L;V1E>$UE;G4@/2!N97=#1$M-96YU("AC9&MS8W)E96XL(&UE;G5L:7-T
M+"`T+`H)"0D)<W5B365N=5-I>F4L(&UE;G5,;V-A=&EO;G,L(%1/4"P*"0D)
M"4%?0D],1'Q!7U5.1$523$E.12P@05]2159%4E-%*3L*("`@"B`@("\J($-R
M96%T92!T:&4@=&ET;&4N"0D)"0D)*B\*("`@=&ET;&5;,%T)/2`B/$,^/"]5
M/D-D:R!2;VQO9&5X(CL*("`@=&ET;&5;,5T)/2`B/$,^/"]"+S(T/E=R:71T
M96X@8GD@36EK92!';&]V97(B.PH@("!R;VQO9&5X5&ET;&4@/2!N97=#1$M,
M86)E;"`H8V1K<V-R965N+"!#14Y415(L($-%3E1%4BP@=&ET;&4L(#(L($9!
M3%-%+"!&04Q312D["@H@("`O*B!$969I;F4@=&AE(&AE;'`@:V5Y(&)I;F1I
M;F<N"0D)"2HO"B`@(&)I;F1#1$M/8FIE8W0@*'9-14Y5+"!R;VQO9&5X365N
M=2P@)S\G+"!H96QP0T(L($Y53$PI.PH*("`@+RH@1')A=R!T:&4@0T1+('-C
M<F5E;BX)"0D)"2HO"B`@(')E9G)E<VA#1$M38W)E96X@*&-D:W-C<F5E;BD[
M"B`@("`*("`@+RH@0VAE8VL@=&AE('9A;'5E(&]F('1H92!(3TU%(&5N=B!V
M87(N"0D)*B\*("`@:&]M92`](&=E=&5N=B`H(DA/344B*3L*("`@:68@*&AO
M;64@(3T@*&-H87(@*BE.54Q,*0H@("!["B`@("`@("\J($UA:V4@<W5R92!T
M:&4@)$A/344O+G)O;&]D97@@9&ER96-T;W)Y(&5X:7-T<RX)"2HO"B`@("`@
M('-P<FEN=&8@*'1E;7`L("(E<R\N<F]L;V1E>"(L(&AO;64I.PH*("`@("`@
M+RH@4V5T('1H92!V86QU92!O9B!T:&4@9VQO8F%L(')O;&]D97@@1$)-(&1I
M<F5C=&]R>2X)*B\*("`@("`@1T1"341I<B`](&-O<'E#:&%R("AT96UP*3L*
M"B`@("`@("\J(%-E="!T:&4@=F%L=64@;V8@=&AE(&=L;V)A;"!20R!F:6QE
M;F%M92X)"2HO"B`@("`@('-P<FEN=&8@*'1E;7`L("(E<R\N<F]L;W)C(BP@
M:&]M92D["B`@("`@($=20T9I;&4@/2!C;W!Y0VAA<B`H=&5M<"D["B`@('T*
M("`@96QS90H@("!["B`@("`@("\J(%-E="!T:&4@=F%L=64@;V8@=&AE(&=L
M;V)A;"!R;VQO9&5X($1"32!D:7)E8W1O<GDN"2HO"B`@("`@($=$0DU$:7(@
M/2!C;W!Y0VAA<B`H(BYR;VQO9&5X(BD["@H@("`@("`O*B!3970@=&AE('9A
M;'5E(&]F('1H92!G;&]B86P@4D,@9FEL96YA;64N"0DJ+PH@("`@("!'4D-&
M:6QE(#T@8V]P>4-H87(@*"(N<F]L;W)C(BD["B`@('T*"B`@("\J($UA:V4@
M=&AE(')O;&]D97@@9&ER96-T;W)Y+@D)"0DJ+PH@("!M:V1I<B`H1T1"341I
M<BP@,#<U-2D["@H@("`O*B!/<&5N('1H92!R;VQO9&5X(%)#(&9I;&4N"0D)
M"0DJ+PH@("!G<F]U<$-O=6YT(#T@<F5A9%)#1FEL92`H1U)#1FEL92P@9W)O
M=7!,:7-T*3L*"B`@("\J($-H96-K('1H92!V86QU92!O9B!G<F]U<$-O=6YT
M+@D)"0DJ+PH@("!I9B`H9W)O=7!#;W5N="`\(#`I"B`@('L*("`@("`@+RH@
M5&AE(%)#(&9I;&4@<V5E;7,@=&\@8F4@8V]R<G5P="X)"0DJ+PH@("`@("!S
M<')I;G1F("AT96UP+"`B/$,^/"]"+S$V/E1H92!20R!F:6QE("@E<RD@<V5E
M;7,@=&\@8F4@8V]R<G5P="XB+"!'4D-&:6QE*3L*("`@("`@;65S9ULP72`]
M(&-O<'E#:&%R("AT96UP*3L*("`@("`@;65S9ULQ72`]("(\0SX\+T(O,38^
M3F\@<F]L;V1E>"!G<F]U<',@=V5R92!L;V%D960N(CL*("`@("`@;65S9ULR
M72`]("(\0SY0<F5S<R!A;GD@:V5Y('1O(&-O;G1I;G5E+B(["B`@("`@('!O
M<'5P3&%B96P@*&-D:W-C<F5E;BP@;65S9RP@,RD["B`@("`@(&9R965#:&%R
M("AM97-G6S!=*3L*("`@("`@9W)O=7!#;W5N="`](#`["B`@('T*("`@96QS
M92!I9B`H9W)O=7!#;W5N="`]/2`P*0H@("!["B`@("`@(&UE<V=;,%T@/2`B
M/$,^/"]"+S(T/D5M<'1Y(')O;&]D97@@4D,@9FEL92X@3F\@9W)O=7!S(&QO
M861E9"XB.PH@("`@("!M97-G6S%=(#T@(CQ#/E!R97-S(&%N>2!K97D@=&\@
M8V]N=&EN=64N(CL*("`@("`@<&]P=7!,86)E;"`H8V1K<V-R965N+"!M97-G
M+"`R*3L*("`@?0H@("!E;'-E"B`@('L*("`@("`@:68@*&=R;W5P0V]U;G0@
M/3T@,2D*("`@("`@>PH@("`@("`@("!S<')I;G1F("AT96UP+"`B/$,^/"\R
M-#Y4:&5R92!W87,@,2!G<F]U<"!L;V%D960@9G)O;2!T:&4@4D,@9FEL92XB
M*3L*("`@("`@?0H@("`@("!E;'-E"B`@("`@('L*("`@("`@("`@<W!R:6YT
M9B`H=&5M<"P@(CQ#/CPO,C0^5&AE<F4@=V5R92`E9"!G<F]U<',@;&]A9&5D
M(&9R;VT@=&AE(%)#(&9I;&4N(BP@9W)O=7!#;W5N="D["B`@("`@('T*("`@
M("`@;65S9ULP72`](&-O<'E#:&%R("AT96UP*3L*("`@("`@;65S9ULQ72`]
M("(\0SY0<F5S<R!A;GD@:V5Y('1O(&-O;G1I;G5E+B(["B`@("`@('!O<'5P
M3&%B96P@*&-D:W-C<F5E;BP@;65S9RP@,BD["B`@("`@(&9R965#:&%R("AM
M97-G6S!=*3L*("`@?0H*("`@+RH@3&]O<"!U;G1I;"!W92!A<F4@9&]N92X)
M"0D)"2HO"B`@(&9O<B`H.SLI"B`@('L*("`@("`@+RH@06-T:79A=&4@=&AE
M(&UE;G4)"0D)"2HO"B`@("`@('-E;&5C=&EO;@D](&%C=&EV871E0T1+365N
M=2`H<F]L;V1E>$UE;G4L("AC:'1Y<&4@*BE.54Q,*3L*"B`@("`@("\J($-H
M96-K('1H92!R971U<FX@=F%L=64@;V8@=&AE('-E;&5C=&EO;BX)"2HO"B`@
M("`@(&EF("AS96QE8W1I;VX@/3T@,"D*("`@("`@>PH@("`@("`@("`O*B!/
M<&5N('1H92!R;VQO9&5X(%)#(&9I;&4N"0D)"0DJ+PH@("`@("`@("!G<F]U
M<$-O=6YT(#T@;W!E;DYE=U)#1FEL92`H8V1K<V-R965N+"!G<F]U<$QI<W0L
M(&=R;W5P0V]U;G0I.PH@("`@("!]"B`@("`@(&5L<V4@:68@*'-E;&5C=&EO
M;B`]/2`Q*0H@("`@("!["B`@("`@("`@("\J(%=R:71E(&]U="!T:&4@4D,@
M9FEL92X)"0D)*B\*("`@("`@("`@<F5T(#T@=W)I=&520T9I;&4@*&-D:W-C
M<F5E;BP@1U)#1FEL92P@9W)O=7!,:7-T+"!G<F]U<$-O=6YT*3L*"B`@("`@
M("`@("\J(%)E<V5T('1H92!S879E9"!F;&%G(&EF('1H92!R8R!F:6QE('-A
M=F5D(&]K+@DJ+PH@("`@("`@("!I9B`H<F5T("$](#`I"B`@("`@("`@('L*
M("`@("`@("`@("`@1T=R;W5P36]D:69I960@/2`P.PH@("`@("`@("!]"B`@
M("`@('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T](#(I"B`@("`@('L*
M("`@("`@("`@+RH@4V%V92!A<RX)"0D)"0DJ+PH@("`@("`@("!R970@/2!W
M<FET95)#1FEL94%S("AC9&MS8W)E96XL(&=R;W5P3&ES="P@9W)O=7!#;W5N
M="D["@D)"0H@("`@("`@("`O*B!297-E="!T:&4@<V%V960@9FQA9R!I9B!T
M:&4@<F,@9FEL92!S879E9"!O:RX)*B\*("`@("`@("`@:68@*')E="`A/2`P
M*0H@("`@("`@("!["B`@("`@("`@("`@($='<F]U<$UO9&EF:65D(#T@,#L*
M("`@("`@("`@?0H@("`@("!]"B`@("`@(&5L<V4@:68@*'-E;&5C=&EO;B`]
M/2`S*0H@("`@("!["B`@("`@("`@("\J($AA<R!A;GET:&EN9R!C:&%N9V5D
M/S\_"0D)"2HO"B`@("`@("`@(&EF("A'1W)O=7!-;V1I9FEE9"`A/2`P*0H@
M("`@("`@("!["B`@("`@("`@("`@("\J(%=R:71E(&]U="!T:&4@4D,@9FEL
M92X)"0D)*B\*("`@("`@("`@("`@=W)I=&520T9I;&4@*&-D:W-C<F5E;BP@
M1U)#1FEL92P@9W)O=7!,:7-T+"!G<F]U<$-O=6YT*3L*("`@("`@("`@?0H*
M("`@("`@("`@+RH@4F5M;W9E('1H92!#1$L@=VED9V5T('!O:6YT97)S+@D)
M"2HO"B`@("`@("`@(&1E<W1R;WE#1$M-96YU("AR;VQO9&5X365N=2D["B`@
M("`@("`@(&1E<W1R;WE#1$M,86)E;"`H<F]L;V1E>%1I=&QE*3L*("`@("`@
M("`@9&5S=')O>4-$2U-C<F5E;B`H8V1K<V-R965N*3L*"B`@("`@("`@("\J
M($9R964@=7`@;W1H97(@<&]I;G1E<G,N"0D)"2HO"B`@("`@("`@(&9R965#
M:&%R("A'0W5R<F5N=$=R;W5P*3L*("`@("`@("`@9G)E94-H87(@*$=20T9I
M;&4I.PH@("`@("`@("!F<F5E0VAA<B`H1T1"341I<BD["B`@("`@("`@(&1E
M;'=I;B`H8W5R<V5S5VEN*3L*"B`@("`@("`@("\J(%-H=71D;W=N($-$2RX)
M"0D)"2HO"B`@("`@("`@(&5N9$-$2R@I.PH*("`@("`@("`@+RH@17AI="!C
M;&5A;FQY+@D)"0D)*B\*("`@("`@("`@97AI="`H,"D["B`@("`@('T*("`@
M("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,"D*("`@("`@>PH@("`@("`@
M("`O*B!!9&0@82!N97<@9W)O=7`@=&\@=&AE(&QI<W0N"0D)*B\*("`@("`@
M("`@9W)O=7!#;W5N="`](&%D9%)O;&]D97A'<F]U<"`H8V1K<V-R965N+"!G
M<F]U<$QI<W0L(&=R;W5P0V]U;G0I.PH@("`@("!]"B`@("`@(&5L<V4@:68@
M*'-E;&5C=&EO;B`]/2`Q,#$I"B`@("`@('L*("`@("`@("`@+RH@1V5T('1H
M92!N=6UB97(@;V8@=&AE(&=R;W5P('1O(&]P96XN"0DJ+PH@("`@("`@("!G
M<F]U<"`]('!I8VM2;VQO9&5X1W)O=7`@*&-D:W-C<F5E;BP@(CQ#/CPO0B\R
M.3Y/<&5N(%)O;&]D97@@1W)O=7`B+"`*"0D)"0EG<F]U<$QI<W0L(&=R;W5P
M0V]U;G0I.PH*("`@("`@("`@+RH@36%K92!S=7)E(&$@9W)O=7`@=V%S('!I
M8VME9"X)"0DJ+PH@("`@("`@("!I9B`H9W)O=7`@/CT@,"D*("`@("`@("`@
M>PH@("`@("`@("`@("`O*B!3970@=&AE(&=L;V)A;"!V87)I86)L92!'0W5R
M<F5N=$=R;W5P"0DJ+PH@("`@("`@("`@("!F<F5E0VAA<B`H1T-U<G)E;G1'
M<F]U<"D["B`@("`@("`@("`@($=#=7)R96YT1W)O=7`@/2!C;W!Y0VAA<B`H
M9W)O=7!,:7-T6V=R;W5P72YN86UE*3L*"B`@("`@("`@("`@("\J(%1R>2!T
M;R!O<&5N('1H92!$0DT@9FEL92!A;F0@<F5A9"!T:&4@8V]N=&5N=',N"2HO
M"B`@("`@("`@("`@('5S95)O;&]D97A'<F]U<"`H8V1K<V-R965N+`H)"0D)
M9W)O=7!,:7-T6V=R;W5P72YN86UE+`H)"0D)9W)O=7!,:7-T6V=R;W5P72YD
M97-C+`H)"0D)9W)O=7!,:7-T6V=R;W5P72YD8FTI.PH@("`@("`@("!]"B`@
M("`@('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,BD*("`@("`@
M>PH@("`@("`@("`O*B!$96QE=&4@=&AE(&=R;W5P(&-H;W-E;BX)"0D)*B\*
M("`@("`@("`@9W)O=7!#;W5N="`](&1E;&5T95)O;&]D97A'<F]U<"`H8V1K
M<V-R965N+"!G<F]U<$QI<W0L(&=R;W5P0V]U;G0I.PH@("`@("!]"B`@("`@
M(&5L<V4@:68@*'-E;&5C=&EO;B`]/2`R,#`I"B`@("`@('L*("`@("`@("`@
M+RH@4')I;G0@4&AO;F4@3G5M8F5R($=R;W5P+@D)"0DJ+PH@("`@("`@("!P
M<FEN=$=R;W5P3G5M8F5R<R`H8V1K<V-R965N+"!G<F]U<$QI<W0L(&=R;W5P
M0V]U;G0I.PH@("`@("!]"B`@("`@(&5L<V4@:68@*'-E;&5C=&EO;B`]/2`S
M,#`I"B`@("`@('L*("`@("`@("`@+RH@06)O=70@4F]L;V1E>"X)"0D)"2HO
M"B`@("`@("`@(&%B;W5T0V1K4F]L;V1E>"AC9&MS8W)E96XI.PH@("`@("!]
M"B`@("`@(&5L<V4@:68@*'-E;&5C=&EO;B`]/2`S,#$I"B`@("`@('L*("`@
M("`@("`@9&ES<&QA>5)O;&]D97A3=&%T<R`H<F]L;V1E>$UE;G4M/G-C<F5E
M;BP@9W)O=7!#;W5N="D["B`@("`@('T*("`@?0I]"@HO*@H@*B!4:&ES('=R
M:71E<R!O=70@=&AE(&YE=R!20R!F:6QE+@H@*B\*:6YT('=R:71E4D-&:6QE
M("A#1$M30U)%14X@*G-C<F5E;BP@8VAA<B`J9FEL96YA;64L(%-2;VQO9&5X
M("IG<F]U<$QI<W0L(&EN="!G<F]U<$-O=6YT*0I["B`@("\J($1E8VQA<F4@
M;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@8VAA<B`J;65S9ULU72P@=&5M
M<%LR-39=.PH@("!T:6UE7W0@8VQC:SL*("`@1DE,12`J9F0["B`@(&EN="!X
M.PH*("`@+RH@0V%N('=E(&]P96X@=&AE(&9I;&4_("`@("`@("`@("`@("`@
M("`@("`@("`@("`@("`@("`@("`@("HO"B`@(&EF("@H9F0@/2!F;W!E;B`H
M9FEL96YA;64L(")W(BDI(#T]($Y53$PI"B`@('L*("`@("`@+RH@4&]P('5P
M(&$@;65S<V%G92X)"0D)"2HO"B`@("`@('-P<FEN=&8@*'1E;7`L("(\+T(O
M,38^5&AE(&9I;&4@/"5S/B!C;W5L9"!N;W0@8F4@;W!E;F5D+B(L(&9I;&5N
M86UE*3L*("`@("`@;65S9ULP72`](&-O<'E#:&%R("AT96UP*3L*(VEF9&5F
M($Y/4U1215)2"B`@("`@('-P<FEN=&8@*'1E;7`L("(\0SX\+T(O,38^56YK
M;F]W;B!R96%S;VXN(BD["B-E;'-E"B`@("`@('-P<FEN=&8@*'1E;7`L("(\
M0SX\+T(O,38^)7,B+"!S=')E<G)O<BAE<G)N;RDI.PHC96YD:68*("`@("`@
M;65S9ULQ72`](&-O<'E#:&%R("AT96UP*3L*("`@("`@;65S9ULR72`]("(\
M0SY0<F5S<R!A;GD@:V5Y('1O(&-O;G1I;G5E+B(["@H@("`@("!P;W!U<$QA
M8F5L("AS8W)E96XL(&UE<V<L(#,I.PH*("`@("`@9G)E94-H87(@*&UE<V=;
M,%TI.PH@("`@("!F<F5E0VAA<B`H;65S9ULQ72D["@H@("`@("!R971U<FX@
M*#`I.PH@("!]"@H@("`O*B!'970@=&AE(&-U<G)E;G0@=&EM92X)"0D)"2HO
M"B`@('1I;64H)F-L8VLI.PH*("`@+RH@4'5T('-O;64@8V]M;65N=',@870@
M=&AE('1O<"!O9B!T:&4@:&5A9&5R+@D)*B\*("`@9G!R:6YT9B`H9F0L("(C
M7&XB*3L*("`@9G!R:6YT9B`H9F0L("(C(%1H:7,@9FEL92!W87,@875T;VUA
M=&EC86QL>2!G96YE<F%T960@;VX@)7,B+"!C=&EM92@F8VQC:RDI.PH@("!F
M<')I;G1F("AF9"P@(B-<;B(I.PH*("`@+RH@4W1A<G0@=W)I=&EN9R!T:&4@
M4D,@9FEL92X)"0D)*B\*("`@9F]R("AX/3`[('@@/"!G<F]U<$-O=6YT.R!X
M*RLI"B`@('L*("`@("`@9G!R:6YT9B`H9F0L("(E<Q8E<Q8E<UQN(BP@9W)O
M=7!,:7-T6WA=+FYA;64L(&=R;W5P3&ES=%MX72YD97-C+"!G<F]U<$QI<W1;
M>%TN9&)M*3L*("`@?0H@("!F8VQO<V4@*&9D*3L*"B`@("\J(%!O<"!U<"!A
M(&UE<W-A9V4@<W1A=&EN9R!T:&%T(&ET(&AA<R!B965N('-A=F5D+@D)*B\*
M("`@:68@*&=R;W5P0V]U;G0@/3T@,2D*("`@>PH@("`@("!S<')I;G1F("AT
M96UP+"`B5&AE<F4@=V%S(#$@9W)O=7`@<V%V960@=&\@9FEL92(I.PH@("`@
M("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("!]"B`@(&5L<V4*("`@
M>PH@("`@("!S<')I;G1F("AT96UP+"`B5&AE<F4@=V5R92`E9"!G<F]U<',@
M<V%V960@=&\@9FEL92(L(&=R;W5P0V]U;G0I.PH@("`@("!M97-G6S!=(#T@
M8V]P>4-H87(@*'1E;7`I.PH@("!]"@H@("!S<')I;G1F("AT96UP+"`B/$,^
M)7,B+"!F:6QE;F%M92D["B`@(&UE<V=;,5T@/2!C;W!Y0VAA<B`H=&5M<"D[
M"B`@(&UE<V=;,ET@/2`B/$,^4')E<W,@86YY(&ME>2!T;R!C;VYT:6YU92XB
M.PH*("`@<&]P=7!,86)E;"`H<V-R965N+"!M97-G+"`S*3L*("`@9G)E94-H
M87(@*&UE<V=;,%TI.R!F<F5E0VAA<B`H;65S9ULQ72D["B`@(')E='5R;B`H
M,2D["GT*"B\J"B`J(%1H:7,@86QL;W=S('1H92!U<V5R('1O('!I8VL@82!$
M0DT@9FEL92!T;R!O<&5N+@H@*B\*:6YT('!I8VM2;VQO9&5X1W)O=7`@*$-$
M2U-#4D5%3B`J<V-R965N+"!C:&%R("IT:71L92P@4U)O;&]D97@@*F=R;W5P
M3&ES="P@:6YT(&=R;W5P0V]U;G0I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V
M87)I86)L97,N"0D)"0DJ+PH@("!#1$M30U)/3$P@*G)O;&],:7-T"3T@*$-$
M2U-#4D],3"`J*4Y53$P["B`@(&-H87(@*FUE<V=;34%81U)/55!372P@=&5M
M<%LR-39=.PH@("!I;G0@:&5I9VAT(#T@9W)O=7!#;W5N=#L*("`@:6YT('-E
M;&5C=&EO;BP@>#L*"B`@("\J($1E=&5R;6EN92!T:&4@:&5I9VAT(&]F('1H
M92!S8W)O;&QI;F<@;&ES="X)"2HO"B`@(&EF("AG<F]U<$-O=6YT(#X@-2D*
M("`@>PH@("`@("!H96EG:'0@/2`U.PH@("!]"B`@(&AE:6=H="`K/2`S.PH*
M("`@+RH@0V]P>2!T:&4@;F%M97,@;V8@=&AE('-C<F]L;&EN9R!L:7-T(&EN
M=&\@86X@87)R87DN"2HO"B`@(&9O<B`H>#TP.R!X(#P@9W)O=7!#;W5N=#L@
M>"LK*0H@("!["B`@("`@('-P<FEN=&8@*'1E;7`L("(\0SX\+T(O,CD^)7,B
M+"!G<F]U<$QI<W1;>%TN;F%M92D["B`@("`@(&UE<V=;>%T@/2!C;W!Y0VAA
M<B`H=&5M<"D["B`@('T*"B`@("\J($-R96%T92!T:&4@<V-R;VQL:6YG(&QI
M<W0N"0D)"2HO"B`@(')O;&],:7-T(#T@;F5W0T1+4V-R;VQL("AS8W)E96XL
M($-%3E1%4BP@0T5.5$52+`H)"0D):&5I9VAT+"`U,"P@=&ET;&4L(&UE<V<L
M(&=R;W5P0V]U;G0L"@D)"0E.3TY534)%4E,L($%?4D5615)312P@5%)512P@
M1D%,4T4I.PH*("`@+RH@0W)E871E(&$@8V%L;&)A8VL@=&\@=&AE('-C<F]L
M;&EN9R!L:7-T+@D)"2HO"B`@(&)I;F1#1$M/8FIE8W0@*'930U)/3$PL(')O
M;&],:7-T+"`G/R<L(&=R;W5P26YF;T-"+"!G<F]U<$QI<W0I.PH*("`@+RH@
M06-T:79A=&4@=&AE('-C<F]L;&EN9R!L:7-T+@D)"0DJ+PH@("!S96QE8W1I
M;VX@/2!A8W1I=F%T94-$2U-C<F]L;"`H<F]L;TQI<W0L("AC:'1Y<&4@*BE.
M54Q,*3L*"B`@("\J($1E<W1R;WD@=&AE('-C<F]L;&EN9R!L:7-T+@D)"0DJ
M+PH@("!D97-T<F]Y0T1+4V-R;VQL("AR;VQO3&ES="D["B`@(&9O<B`H>#TP
M.R!X(#P@9W)O=7!#;W5N=#L@>"LK*0H@("!["B`@("`@(&9R965#:&%R("AM
M97-G6WA=*3L*("`@?0H*("`@+RH@4F5T=7)N('1H92!I=&5M('-E;&5C=&5D
M+@D)"0D)*B\*("`@<F5T=7)N('-E;&5C=&EO;CL*?0H*+RH*("H@5&AI<R!A
M;&QO=W,@=&AE('5S97(@=&\@861D(&$@<F]L;R!G<F]U<"!T;R!T:&4@;&ES
M="X*("HO"FEN="!A9&12;VQO9&5X1W)O=7`@*$-$2U-#4D5%3B`J<V-R965N
M+"!34F]L;V1E>"`J9W)O=7!,:7-T+"!I;G0@9W)O=7!#;W5N="D*>PH@("`O
M*B!$96-L87)E(&QO8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@($-$2T5.5%)9
M("IN97=.86UE"3T@*$-$2T5.5%)9("HI3E5,3#L*("`@0T1+14Y44ED@*FYE
M=T1E<V,)/2`H0T1+14Y44ED@*BE.54Q,.PH@("!C:&%R("IM97-G6S1=+"`J
M9&5S8RP@*FYE=T=R;W5P3F%M92P@=&5M<%LR-39=.PH@("!I;G0@>#L*"B`@
M("\J($-R96%T92!T:&4@;F%M92!W:61G970N"0D)"0DJ+PH@("!N97=.86UE
M(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52+"`X+"!,1494+`H)"0D)
M(CPO0B\R.3X@("!.97<@1W)O=7`@3F%M92(L"@D)"0E!7TY/4DU!3"P@)U\G
M+"!V34E8140L"@D)"0DR,"P@,BP@,C4V+`H)"0D)5%)512P@1D%,4T4I.PH*
M"B`@("\J($=E="!T:&4@;F%M92X)"0D)"0DJ+PH@("!N97='<F]U<$YA;64@
M/2!A8W1I=F%T94-$2T5N=')Y("AN97=.86UE+"`H8VAT>7!E("HI3E5,3"D[
M"@H@("`O*B!-86ME('-U<F4@=&AE>2!D:61N)W0@:&ET(&5S8V%P92X)"0D)
M*B\*("`@:68@*&YE=TYA;64M/F5X:714>7!E(#T]('9%4T-!4$5?2$E4*0H@
M("!["B`@("`@(&UE<V=;,%T@/2`B/$,^/"]"+S$V/D%D9"!'<F]U<"!#86YC
M96QE9"XB.PH@("`@("!D97-T<F]Y0T1+16YT<GD@*&YE=TYA;64I.PH@("`@
M("!P;W!U<$QA8F5L("AS8W)E96XL(&UE<V<L(#$I.PH@("`@("!R971U<FX@
M9W)O=7!#;W5N=#L*("`@?0H*("`@+RH@36%K92!S=7)E('1H870@9W)O=7`@
M;F%M92!D;V5S(&YO="!A;')E861Y(&5X:7-T+@D)*B\*("`@9F]R("AX/3`[
M('@@/"!G<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@:68@*'-T<F-M<"`H
M;F5W1W)O=7!.86UE+"!G<F]U<$QI<W1;>%TN;F%M92D@/3T@,"D*("`@("`@
M>PH@("`@("`@("!S<')I;G1F("AT96UP+"`B/$,^/"]"+S$V/E-O<G)Y('1H
M92!G<F]U<"`H)7,I(&%L<F5A9'D@97AI<W1S+B(L(&YE=T=R;W5P3F%M92D[
M"B`@("`@("`@(&UE<V=;,%T@/2`@8V]P>4-H87(@*'1E;7`I.PH@("`@("`@
M("!P;W!U<$QA8F5L("AS8W)E96XL(&UE<V<L(#$I.PH@("`@("`@("!F<F5E
M0VAA<B`H;65S9ULP72D["B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H;F5W
M3F%M92D["B`@("`@("`@(')E='5R;B!G<F]U<$-O=6YT.PH@("`@("!]"B`@
M('T*"B`@("\J($ME97`@=&AE(&YA;64N"0D)"0D)*B\*("`@9W)O=7!,:7-T
M6V=R;W5P0V]U;G1=+FYA;64@/2!C;W!Y0VAA<B`H;F5W1W)O=7!.86UE*3L*
M"B`@("\J($-R96%T92!T:&4@9&5S8W)I<'1I;VX@=VED9V5T+@D)"0DJ+PH@
M("!N97=$97-C(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52+"`Q,2P@
M3$5&5"P*"0D)"2(\+T(O,CD^1W)O=7`@1&5S8W)I<'1I;VXB+`H)"0D)05].
M3U)-04PL("=?)RP@=DU)6$5$+`H)"0D),C`L(#(L(#(U-BP*"0D)"512544L
M($9!3%-%*3L*("`@+RH@1V5T('1H92!D97-C<FEP=&EO;BX)"0D)"2HO"B`@
M(&1E<V,@/2!A8W1I=F%T94-$2T5N=')Y("AN97=$97-C+"`H8VAT>7!E("HI
M3E5,3"D["@H@("`O*B!#:&5C:R!I9B!T:&5Y(&AI="!E<V-A<&4@;W(@;F]T
M+@D)"0DJ+PH@("!I9B`H;F5W1&5S8RT^97AI=%1Y<&4@/3T@=D530T%015](
M250I"B`@('L*("`@("`@9W)O=7!,:7-T6V=R;W5P0V]U;G1=+F1E<V,@/2!C
M;W!Y0VAA<B`H(DYO($1E<V-R:7!T:6]N(%!R;W9I9&5D+B(I.PH@("!]"B`@
M(&5L<V4*("`@>PH@("`@("!G<F]U<$QI<W1;9W)O=7!#;W5N=%TN9&5S8R`]
M(&-O<'E#:&%R("AD97-C*3L*("`@?0H*("`@+RH@0W)E871E('1H92!$0DT@
M9FEL96YA;64N"0D)"0DJ+PH@("!S<')I;G1F("AT96UP+"`B)7,O)7,N<&AL
M(BP@1T1"341I<BP@9W)O=7!,:7-T6V=R;W5P0V]U;G1=+FYA;64I.PH@("!G
M<F]U<$QI<W1;9W)O=7!#;W5N=%TN9&)M(#T@8V]P>4-H87(@*'1E;7`I.PH*
M("`@+RH@26YR96UE;G0@=&AE(&=R;W5P(&-O=6YT+@D)"0D)*B\*("`@9W)O
M=7!#;W5N="LK.PH@("!'1W)O=7!-;V1I9FEE9"`](#$["@H@("`O*B!$97-T
M<F]Y('1H92!W:61G971S+@D)"0D)*B\*("`@9&5S=')O>4-$2T5N=')Y("AN
M97=.86UE*3L*("`@9&5S=')O>4-$2T5N=')Y("AN97=$97-C*3L*("`@<F5T
M=7)N(&=R;W5P0V]U;G0["GT*"B\J"B`J(%1H:7,@9&ES<&QA>7,@<F]L;V1E
M>"!I;F9O<FUA=&EO;BX*("HO"G9O:60@9&ES<&QA>5)O;&]D97A3=&%T<R`H
M0T1+4T-2145.("IS8W)E96XL(&EN="!G<F]U<$-O=6YT*0I["B`@("\J($1E
M8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@8VAA<B`J;65S9ULV
M72P@=&5M<%LR-39=.PH*("`@+RH@0W)E871E('1H92!I;F9O<FUA=&EO;B!T
M;R!D:7-P;&%Y+@D)"2HO"B`@('-P<FEN=&8@*'1E;7`L("(\0SX\+U4^4F]L
M;V1E>"!3=&%T:7-T:6-S(BD["B`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M
M<"D["B`@('-P<FEN=&8@*'1E;7`L("(\+T(O-3Y296%D($-O;6UA;F0@1FEL
M96YA;64\(4(A-3X@/"]5/B5S/"%5/B(L($=20T9I;&4I.PH@("!M97-G6S%=
M(#T@8V]P>4-H87(@*'1E;7`I.PH@("!S<')I;G1F("AT96UP+"`B/"]"+S4^
M1W)O=7`@0V]U;G0@("`@("`@("`@/"%"(34^(#PO53XE9#PA53XB+"!G<F]U
M<$-O=6YT*3L*("`@;65S9ULR72`](&-O<'E#:&%R("AT96UP*3L*"B`@("\J
M($1I<W!L87D@=&AE(&UE<W-A9V4N"0D)"0DJ+PH@("!P;W!U<$QA8F5L("AS
M8W)E96XL(&UE<V<L(#,I.PH@"B`@("\J($-L96%N('5P+@D)"0D)"0DJ+PH@
M("!F<F5E0VAA<B`H;65S9ULP72D["B`@(&9R965#:&%R("AM97-G6S%=*3L*
M?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!G971S(&$@;F5W(')C(&9I;&5N86UE
M(&%N9"!S879E<R!T:&4@8V]N=&5N=',@;V8@=&AE"B`J(&=R;W5P<R!U;F1E
M<B!T:&%T(&YA;64N"B`J+PII;G0@=W)I=&520T9I;&5!<R`H0T1+4T-2145.
M("IS8W)E96XL(%-2;VQO9&5X("IG<F]U<$QI<W0L(&EN="!G<F]U<$-O=6YT
M*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@
M0T1+14Y44ED@*FYE=U)#1FEL93L*("`@8VAA<B`J;F5W1FEL96YA;64["B`@
M(&EN="!R970["@H@("`O*B!#<F5A=&4@=&AE(&5N=')Y(&9I96QD+@D)"0D)
M*B\*("`@;F5W4D-&:6QE(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52
M+"!#14Y415(L($Q%1E0L"@D)"0DB/"]2/E-A=F4@07,B+"!!7TY/4DU!3"P@
M)U\G+"!V34E8140L(`H)"0D),C`L(#(L(#(U-BP@5%)512P@1D%,4T4I.PH*
M("`@+RH@061D(&$@<')E+7!R;V-E<W,@9G5N8W1I;VX@<V\@;F\@<W!A8V5S
M(&%R92!I;G1R;V1U8V5D+@DJ+PH@("!S971#1$M%;G1R>5!R95!R;V-E<W,@
M*&YE=U)#1FEL92P@96YT<GE0<F50<F]C97-S0T(L($Y53$PI.PH*("`@+RH@
M1V5T('1H92!F:6QE;F%M92X)"0D)"0DJ+PH@("!N97=&:6QE;F%M92`](&%C
M=&EV871E0T1+16YT<GD@*&YE=U)#1FEL92P@3E5,3"D["@H@("`O*B!#:&5C
M:R!I9B!T:&5Y(&AI="!E<V-A<&4@;W(@;F]T+@D)"0DJ+PH@("!I9B`H;F5W
M4D-&:6QE+3YE>&ET5'EP92`]/2!V15-#05!%7TA)5"D*("`@>PH@("`@("!D
M97-T<F]Y0T1+16YT<GD@*&YE=U)#1FEL92D["B`@("`@(')E='5R;B`Q.PH@
M("!]"@H@("`O*B!#86QL('1H92!F=6YC=&EO;B!T;R!S879E('1H92!20R!F
M:6QE+@D)"2HO"B`@(')E="`]('=R:71E4D-&:6QE("AS8W)E96XL(&YE=T9I
M;&5N86UE+"!G<F]U<$QI<W0L(&=R;W5P0V]U;G0I.PH@"B`@("\J(%)E<V5T
M('1H92!S879E9"!F;&%G(&EF('1H92!R8R!F:6QE('-A=F5D(&]K+@D)*B\*
M("`@:68@*')E="`A/2`P*0H@("!["B`@("`@("\J($-H86YG92!T:&4@9&5F
M875L="!F:6QE;F%M92X)"0D)*B\*("`@("`@9G)E94-H87(@*$=20T9I;&4I
M.PH@("`@("!'4D-&:6QE(#T@8V]P>4-H87(@*&YE=T9I;&5N86UE*3L*("`@
M("`@1T=R;W5P36]D:69I960@/2`P.PH@("!]"@H@("`O*B!#;&5A;B!U<"X)
M"0D)"0D)*B\*("`@9&5S=')O>4-$2T5N=')Y("AN97=20T9I;&4I.PH@("!R
M971U<FX@,3L*?0H*+RH@"B`J(%1H:7,@;W!E;G,@82!N97<@4D,@9FEL92X*
M("HO"FEN="!O<&5N3F5W4D-&:6QE("A#1$M30U)%14X@*G-C<F5E;BP@4U)O
M;&]D97@@*F=R;W5P3&ES="P@:6YT(&=R;W5P0V]U;G0I"GL*("`@+RH@1&5C
M;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M&4T5,14-4("IF
M:6QE4V5L96-T;W(["B`@(&-H87(@*F9I;&5N86UE+"`J;65S9ULS72P@=&5M
M<%LR-39=.PH@("!I;G0@>#L*"B`@("\J($=E="!T:&4@9FEL96YA;64N"0D)
M"0D)*B\*("`@9FEL95-E;&5C=&]R(#T@;F5W0T1+1G-E;&5C="`H<V-R965N
M+"!#14Y415(L($-%3E1%4BP@,C`L(#4U+`H)"0D)"2)&:6QE;F%M93H@(BP@
M05].3U)-04PL("<N)RP@05]2159%4E-%+`H)"0D)"2(\+S4^(BP@(CPO-#@^
M(BP@(CPO3CXB+"`B/"]./B(L"@D)"0D)5%)512P@1D%,4T4I.PH@"B`@("\J
M($%C=&EV871E('1H92!F:6QE('-E;&5C=&]R+@D)"0DJ+PH@("!F:6QE;F%M
M92`](&%C=&EV871E0T1+1G-E;&5C="`H9FEL95-E;&5C=&]R+"!.54Q,*3L*
M"B`@("\J($-H96-K(&EF('1H92!F:6QE('-E;&5C=&]R(&QE9G0@96%R;'DN
M"0D)*B\*("`@:68@*&9I;&5396QE8W1O<BT^97AI=%1Y<&4@/3T@=D530T%0
M15](250I"B`@('L*("`@("`@9&5S=')O>4-$2T9S96QE8W0@*&9I;&5396QE
M8W1O<BD["B`@("`@(&UE<V=;,%T@/2`B3W!E;B!.97<@4D,@1FEL92!!8F]R
M=&5D+B(["B`@("`@('!O<'5P3&%B96P@*'-C<F5E;BP@;65S9RP@,2D["B`@
M("`@(')E='5R;B!G<F]U<$-O=6YT.PH@("!]"@H@("`O*B!#;&5A;B!O=70@
M=&AE(&]L9"!I;F9O<FUA=&EO;BX)"0D)*B\*("`@9F]R("AX/3`[('@@/"!G
M<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@9G)E94-H87(@*&=R;W5P3&ES
M=%MX72YN86UE*3L*("`@("`@9G)E94-H87(@*&=R;W5P3&ES=%MX72YD97-C
M*3L*("`@("`@9G)E94-H87(@*&=R;W5P3&ES=%MX72YD8FTI.PH@("!]"@H@
M("`O*B!/<&5N('1H92!20R!F:6QE+@D)"0D)"2HO"B`@(&=R;W5P0V]U;G0@
M/2!R96%D4D-&:6QE("AF:6QE;F%M92P@9W)O=7!,:7-T*3L*"B`@("\J($-H
M96-K('1H92!R971U<FX@=F%L=64N"0D)"0DJ+PH@("!I9B`H9W)O=7!#;W5N
M="`\(#`I"B`@('L*("`@("`@+RH@5&AI<R!F:6QE(&1O97,@;F]T(&%P<&5A
M<B!T;R!B92!A(')O;&]D97@@9FEL92X)*B\*("`@("`@<W!R:6YT9B`H=&5M
M<"P@(CQ#/CPO0B\Q-CY4:&4@9FEL92`H)7,I(&1O97,@;F]T('-E96T@=&\@
M8F4@82!R;VQO9&5X(%)#(&9I;&4N(BP@9FEL96YA;64I.PH@("`@("!M97-G
M6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("`@("!M97-G6S%=(#T@(CQ#/E!R
M97-S(&%N>2!K97D@=&\@8V]N=&EN=64N(CL*("`@("`@<&]P=7!,86)E;"`H
M<V-R965N+"!M97-G+"`R*3L*("`@("`@9G)E94-H87(@*&UE<V=;,%TI.PH@
M("`@("!G<F]U<$-O=6YT(#T@,#L*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)
M"0D)"2HO"B`@(&1E<W1R;WE#1$M&<V5L96-T("AF:6QE4V5L96-T;W(I.PH@
M("!R971U<FX@9W)O=7!#;W5N=#L*?0H*+RH*("H@5&AI<R!R96%D<R!T:&4@
M=7-E<G,@<F,@9FEL92X*("HO"FEN="!R96%D4D-&:6QE("AC:&%R("IF:6QE
M;F%M92P@4U)O;&]D97@@*F=R;W5P3&ES="D*>PH@("`O*B!$96-L87)E('9A
M<FEA8FQE<RX)"0D)"2HO"B`@(&EN="!G<F]U<'-&;W5N9`D](#`["B`@(&EN
M="!E<G)O<G-&;W5N9`D](#`["B`@(&-H87(@*FQI;F5S6TU!6$Q)3D5372P@
M*FET96US6S$P,%T["B`@(&EN="!L:6YE<U)E860L(&-H=6YK<RP@>#L*"B`@
M("\J($]P96X@=&AE(&9I;&4@86YD('-T87)T(')E861I;F<N"0D)"2HO"B`@
M(&QI;F5S4F5A9"`](')E861&:6QE("AF:6QE;F%M92P@;&EN97,L($U!6$Q)
M3D53*3L*"B`@("\J($-H96-K('1H92!N=6UB97(@;V8@;&EN97,@<F5A9"X)
M"0D)*B\*("`@:68@*&QI;F5S4F5A9"`]/2`P*0H@("!["B`@("`@(')E='5R
M;B`H,"D["B`@('T*"B`@+RH*("`@*B!#>6-L92!T:')O=6=H('=H870@=V%S
M(&=I=F5N('1O('5S(&%N9"!S879E(&ET+@H@("`J+PH@("!F;W(@*'@],#L@
M>"`\(&QI;F5S4F5A9#L@>"LK*0H@("!["B`@("`@("\J(%-T<FEP('=H:71E
M('-P86-E(&9R;VT@=&AE(&QI;F4N"0D)*B\*("`@("`@<W1R:7!7:&ET95-P
M86-E("AV0D]42"P@;&EN97-;>%TI.PH*("`@("`@+RH@3VYL>2!S<&QI="!L
M:6YE<R!W:&EC:"!D;R!N;W0@<W1A<G0@=VET:"!A(",)"2HO"B`@("`@(&EF
M("AL:6YE<UMX75LP72`A/2`G(R<I"B`@("`@('L*("`@("`@("`@+RH@4W!L
M:70@=&AE(&QI;F4@;VX@=&AE(#T@<VEG;BX)"0DJ+PH@("`@("`@("!C:'5N
M:W,@/2!S<&QI=%-T<FEN9R`H;&EN97-;>%TL(&ET96US+"`G%B<I.PH*("`@
M("`@("`@+RH@3VYL>2!T86ME('1H92!O;F5S('=H:6-H(&9I="!T:&4@9F]R
M;6%T+@D)*B\*("`@("`@("`@:68@*&-H=6YK<R`]/2`S*0H@("`@("`@("![
M"B`@("`@("`@("`@("\J($-L96%N(&]F9B!T:&4@;F%M92!A;F0@1$(@;F%M
M92X)"0DJ+PH@("`@("`@("`@("!S=')I<%=H:71E4W!A8V4@*'9"3U1(+"!I
M=&5M<ULP72D["B`@("`@("`@("`@('-T<FEP5VAI=&53<&%C92`H=D)/5$@L
M(&ET96US6S%=*3L*("`@("`@("`@("`@<W1R:7!7:&ET95-P86-E("AV0D]4
M2"P@:71E;7-;,ETI.PH*("`@("`@("`@("`@+RH@4V5T('1H92!G<F]U<"!N
M86UE(&%N9"!$0B!N86UE+@D)"2HO"B`@("`@("`@("`@(&=R;W5P3&ES=%MG
M<F]U<'-&;W5N9%TN;F%M92`](&ET96US6S!=.PH@("`@("`@("`@("!G<F]U
M<$QI<W1;9W)O=7!S1F]U;F1=+F1E<V,@/2!I=&5M<ULQ73L*("`@("`@("`@
M("`@9W)O=7!,:7-T6V=R;W5P<T9O=6YD72YD8FT@/2!I=&5M<ULR73L*("`@
M("`@("`@("`@9W)O=7!S1F]U;F0K*SL*("`@("`@("`@?0H@("`@("`@("!E
M;'-E"B`@("`@("`@('L*("`@("`@("`@("`@97)R;W)S1F]U;F0K*SL*("`@
M("`@("`@?0H@("`@("!]"B`@('T*"B`@("\J($-H96-K('1H92!N=6UB97(@
M;V8@9W)O=7!S('1O('1H92!N=6UB97(@;V8@97)R;W)S+@DJ+PH@("!I9B`H
M97)R;W)S1F]U;F0@/B`P("8F(&=R;W5P<T9O=6YD(#T](#`I"B`@('L*("`@
M("`@+RH@5&AI<R!D;V5S($Y/5"!L;V]K(&QI:V4@=&AE(')O;&]D97@@4D,@
M9FEL92X)"2HO"B`@("`@(')E='5R;B`M,3L*("`@?0H@("!R971U<FX@9W)O
M=7!S1F]U;F0["GT*"B\J"B`J(%1H:7,@9G5N8W1I;VX@86QL;W=S('1H92!U
M<V5R('1O(&%D9"]D96QE=&4O;6]D:69Y+W-A=F4@=&AE"B`J(&-O;G1E;G1S
M(&]F(&$@<F]L;V1E>"!G<F]U<"X*("HO"G9O:60@=7-E4F]L;V1E>$=R;W5P
M("A#1$M30U)%14X@*G-C<F5E;BP@8VAA<B`J9W)O=7!.86UE+"!C:&%R("IG
M<F]U<$1E<V,L(&-H87(@*F=R;W5P1$)-*0I["B`@("\J($1E8VQA<F4@;&]C
M86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@0T1+4T-23TQ,("IN86UE3&ES=`D]
M("A#1$M30U)/3$P@*BE.54Q,.PH@("!#1$M,04)%3"`J:&5L<%=I;F1O=R`]
M("A#1$M,04)%3"`J*4Y53$P["B`@(%-0:&]N941A=&$@<&AO;F5$871A.PH@
M("!34&AO;F5296-O<F0@*G!H;VYE4F5C;W)D.PH@("!C:&%R("II;F1E>%M-
M05A)5$5-4UTL("IT:71L95LS72P@*FUE<V=;,UTL('1E;7!;,C4V73L*("`@
M:6YT('!H;VYE0V]U;G0L('-E;&5C=&EO;BP@:&5I9VAT+"!X.PH*("`@+RH@
M4V5T('5P('1H92!H96QP('=I;F1O=R!A="!T:&4@8F]T=&]M(&]F('1H92!S
M8W)E96XN"2HO"B`@('1I=&QE6S!=("`@("`]("(\0SX\(TA,*#,P*3XB.PH@
M("!T:71L95LQ72`@("`@/2`B/$,^4')E<W,@/"]"/C\\(4(^('1O(&=E="!D
M971A:6QE9"!H96QP+B(["B`@('1I=&QE6S)=("`@("`]("(\0SX\(TA,*#,P
M*3XB.PH@("!H96QP5VEN9&]W"3T@;F5W0T1+3&%B96P@*'-C<F5E;BP@0T5.
M5$52+"!"3U143TTL('1I=&QE+"`S+"!&04Q312P@1D%,4T4I.PH@("!D<F%W
M0T1+3&%B96P@*&AE;'!7:6YD;W<L($9!3%-%*3L*"B`@("\J($]P96X@=&AE
M($1"32!F:6QE(&%N9"!R96%D(&EN('1H92!C;VYT96YT<R!O9B!T:&4@9FEL
M90DJ+PH@("!P:&]N94-O=6YT(#T@<F5A9%!H;VYE1&%T849I;&4@*&=R;W5P
M1$)-+"`F<&AO;F5$871A*3L*("`@<&AO;F5$871A+G)E8V]R9$-O=6YT(#T@
M<&AO;F5#;W5N=#L*"B`@("\J($-H96-K('1H92!N=6UB97(@;V8@96YT<FEE
M<R!R971U<FYE9"X)"0DJ+PH@("!I9B`H<&AO;F5#;W5N="`]/2`P*0H@("![
M"B`@("`@("\J"B`@("`@("`J(%1H97D@=')I960@=&\@;W!E;B!A;B!E;7!T
M>2!G<F]U<"P@;6%Y8F4@=&AE>2!W86YT('1O"B`@("`@("`J(&%D9"!A(&YE
M=R!E;G1R>2!T;R!T:&ES(&YU;6)E<BX*("`@("`@("HO(`H@("`@("!C:&%R
M("IB=71T;VYS6UT@/2![(CP\665S/CXB+"`B/#Q.;SX^(GT["B`@("`@(&UE
M<V=;,%T@/2`B/$,^5&AE<F4@=V5R92!N;R!E;G1R:65S(&EN('1H:7,@9W)O
M=7`N(CL*("`@("`@;65S9ULQ72`]("(\0SY$;R!Y;W4@=V%N="!T;R!A9&0@
M82!N97<@;&ES=&YG/R(["B`@("`@(&EF("AP;W!U<$1I86QO9R`H<V-R965N
M+"!M97-G+"`R+"!B=71T;VYS+"`R*2`]/2`Q*0H@("`@("!["B`@("`@("`@
M(&1E<W1R;WE#1$M,86)E;"`H:&5L<%=I;F1O=RD["B`@("`@("`@(')E='5R
M;CL*("`@("`@?0H*("`@("`@+RH@1V5T('1H92!I;F9O<FUA=&EO;B!F;W(@
M82!N97<@;G5M8F5R+@D)"2HO"B`@("`@(&EF("AA9&10:&]N95)E8V]R9"`H
M<V-R965N+"`F<&AO;F5$871A*2`A/2`P*0H@("`@("!["B`@("`@("`@(')E
M='5R;CL*("`@("`@?0H@("!]"B`@(&5L<V4@:68@*'!H;VYE0V]U;G0@/"`P
M*0H@("!["B`@("`@(&UE<V=;,%T@/2`B/$,^0V]U;&0@;F]T(&]P96X@=&AE
M(&1A=&%B87-E(&9O<B!T:&ES(&=R;W5P+B(["B`@("`@('!O<'5P3&%B96P@
M*'-C<F5E;BP@;65S9RP@,2D["B`@("`@(&1E<W1R;WE#1$M,86)E;"`H:&5L
M<%=I;F1O=RD["B`@("`@(')E='5R;CL*("`@?0H*("`@+RH@4V5T('5P('1H
M92!D871A(&YE961E9"!F;W(@=&AE('-C<F]L;&EN9R!L:7-T+@D)*B\*("`@
M9F]R("AX/3`[('@@/"!P:&]N94-O=6YT.R!X*RLI"B`@('L*("`@("`@<&AO
M;F5296-O<F0@/2`F<&AO;F5$871A+G)E8V]R9%MX73L*("`@("`@<W!R:6YT
M9B`H=&5M<"P@(CPO0B\R.3XE<R`H)7,I(BP@<&AO;F5296-O<F0M/FYA;64L
M($=,:6YE5'EP95MP:&]N95)E8V]R9"T^;&EN951Y<&5=*3L*("`@("`@:6YD
M97A;>%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@('T*("`@<W!R:6YT9B`H=&5M
M<"P@(CQ#/DQI<W1I;F<@;V8@1W)O=7`@/"]5/B5S(BP@9W)O=7!.86UE*3L*
M("`@:&5I9VAT(#T@*'!H;VYE1&%T82YR96-O<F1#;W5N="`^(#4@/R`X(#H@
M<&AO;F5$871A+G)E8V]R9$-O=6YT*S,I.PH*("`@+RH@0W)E871E('1H92!S
M8W)O;&QI;F<@;&ES="X)"0D)*B\*("`@;F%M94QI<W0@/2!N97=#1$M38W)O
M;&P@*'-C<F5E;BP@0T5.5$52+"!#14Y415(L(&AE:6=H="P@-3`L"@D)"0ET
M96UP+"!I;F1E>"P@<&AO;F5$871A+G)E8V]R9$-O=6YT+`H)"0D)3E5-0D52
M4RP@05]2159%4E-%+"!44E5%+"!&04Q312D["@H@("`O*B!#<F5A=&4@:V5Y
M(&)I;F1I;F=S+@D)"0D)*B\*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],3"P@
M;F%M94QI<W0L("=I)RP@:6YS97)T4&AO;F5%;G1R>4-"+"`F<&AO;F5$871A
M*3L*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],3"P@;F%M94QI<W0L("=D)RP@
M9&5L971E4&AO;F5%;G1R>4-"+"`F<&AO;F5$871A*3L*("`@8FEN9$-$2T]B
M:F5C="`H=E-#4D],3"P@;F%M94QI<W0L($1%3$5412P@9&5L971E4&AO;F5%
M;G1R>4-"+"`F<&AO;F5$871A*3L*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],
M3"P@;F%M94QI<W0L("<_)RP@<&AO;F5%;G1R>4AE;'!#0BP@3E5,3"D["@H@
M("`O*B!,970@=&AE;2!P;&%Y+@D)"0D)"2HO"B`@('-E;&5C=&EO;B`](#`[
M"B`@('=H:6QE("AS96QE8W1I;VX@/CT@,"D*("`@>PH@("`@("`O*B!'970@
M=&AE(&EN9F]R;6%T:6]N('1H97D@=V%N="!T;R!V:65W+@D)"2HO"B`@("`@
M('-E;&5C=&EO;B`](&%C=&EV871E0T1+4V-R;VQL("AN86UE3&ES="P@*&-H
M='EP92`J*4Y53$PI.PH*("`@("`@+RH@1&ES<&QA>2!T:&4@:6YF;W)M871I
M;VXN"0D)"2HO"B`@("`@(&EF("AS96QE8W1I;VX@/CT@,"D*("`@("`@>PH@
M("`@("`@("!D:7-P;&%Y4&AO;F5);F9O("AS8W)E96XL('!H;VYE1&%T82YR
M96-O<F1;<V5L96-T:6]N72D["B`@("`@('T*("`@?0H*("`@+RH@4V%V92!T
M:&4@<F]L;V1E>"!I;F9O<FUA=&EO;B!T;R!F:6QE+@D)"2HO"B`@(&EF("AS
M879E4&AO;F5$871A1FEL92`H9W)O=7!$0DTL("9P:&]N941A=&$I(#T](#`I
M"B`@('L*("`@("`@+RH@4V]M971H:6YG(&AA<'!E;F5D+@D)"0D)*B\*("`@
M("`@;65S9ULP72`]("(\0SY#;W5L9"!N;W0@<V%V92!P:&]N92!D871A('1O
M(&1A=&$@9FEL92XB.PH@("`@("!M97-G6S%=(#T@(CQ#/D%L;"!C:&%N9V5S
M(&AA=F4@8F5E;B!L;W-T+B(["B`@("`@('!O<'5P3&%B96P@*'-C<F5E;BP@
M;65S9RP@,BD["B`@('T*"B`@("\J($-L96%N('5P+@D)"0D)"0DJ+PH@("!F
M;W(@*'@],#L@>"`\('!H;VYE0V]U;G0[('@K*RD*("`@>PH@("`@("!F<F5E
M0VAA<B`H:6YD97A;>%TI.PH@("!]"B`@(&1E<W1R;WE#1$M38W)O;&P@*&YA
M;65,:7-T*3L*("`@9&5S=')O>4-$2TQA8F5L("AH96QP5VEN9&]W*3L*?0H*
M+RH*("H@5&AI<R!O<&5N<R!A('!H;VYE(&1A=&$@9FEL92!A;F0@<F5T=7)N
M<R!T:&4@;G5M8F5R(&]F(&5L96UE;G1S(')E860N"B`J+PII;G0@<F5A9%!H
M;VYE1&%T849I;&4@*&-H87(@*F1A=&%&:6QE+"!34&AO;F5$871A("IP:&]N
M941A=&$I"GL*("`@+RH@1&5C;&%R92!V87)I86)L97,N"0D)"0DJ+PH@("!C
M:&%R("IL:6YE<UM-05A,24Y%4UTL("II=&5M<ULS,%T["B`@(&EN="!L:6YE
M<U)E860)/2`P.PH@("!I;G0@8VAU;FMS"0D](#`["B`@(&EN="!L:6YE<T9O
M=6YD"3T@,#L*("`@:6YT('@L('D["B`*("`@+RH@3W!E;B!T:&4@9FEL92!A
M;F0@<W1A<G0@<F5A9&EN9RX)"0D)*B\*("`@;&EN97-296%D(#T@<F5A9$9I
M;&4@*&1A=&%&:6QE+"!L:6YE<RP@34%83$E.15,I.PH@"B`@("\J($-H96-K
M('1H92!N=6UB97(@;V8@;&EN97,@<F5A9"X)"0D)*B\*("`@:68@*&QI;F5S
M4F5A9"`]/2`P*0H@("!["B`@("`@(')E='5R;B`H,"D["B`@('T*(`H@("\J
M"B`@("H@0WEC;&4@=&AR;W5G:"!W:&%T('=A<R!G:79E;B!T;R!U<R!A;F0@
M<V%V92!I="X*("`@*B\*("`@9F]R("AX/3`[('@@/"!L:6YE<U)E860[('@K
M*RD*("`@>PH@("`@("!I9B`H;&EN97-;>%U;,%T@(3T@)R,G*0H@("`@("![
M"B`@("`@("`@("\J(%-P;&ET('1H92!S=')I;F<N"0D)"0DJ+PH@("`@("`@
M("!C:'5N:W,@/2!S<&QI=%-T<FEN9R`H;&EN97-;>%TL(&ET96US+"`G%B<I
M.PH*("`@("`@("`@+RH@0V]P>2!T:&4@8VAU;FMS+@D)"0D)*B\*("`@("`@
M("`@:68@*&-H=6YK<R`]/2`X*0H@("`@("`@("!["B`@("`@("`@("`@('!H
M;VYE1&%T82T^<F5C;W)D6VQI;F5S1F]U;F1=+FYA;64)"3T@:71E;7-;,%T[
M"B`@("`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D6VQI;F5S1F]U;F1=+FQI
M;F54>7!E"3T@871O:2`H:71E;7-;,5TI.PH@("`@("`@("`@("!P:&]N941A
M=&$M/G)E8V]R9%ML:6YE<T9O=6YD72YP:&]N94YU;6)E<@D](&ET96US6S)=
M.PH@("`@("`@("`@("!P:&]N941A=&$M/G)E8V]R9%ML:6YE<T9O=6YD72YA
M9&1R97-S"3T@:71E;7-;,UT["B`@("`@("`@("`@('!H;VYE1&%T82T^<F5C
M;W)D6VQI;F5S1F]U;F1=+F-I='D)"3T@:71E;7-;-%T["B`@("`@("`@("`@
M('!H;VYE1&%T82T^<F5C;W)D6VQI;F5S1F]U;F1=+G!R;W9I;F-E"3T@:71E
M;7-;-5T["B`@("`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D6VQI;F5S1F]U
M;F1=+G!O<W1A;$-O9&4)/2!I=&5M<ULV73L*("`@("`@("`@("`@<&AO;F5$
M871A+3YR96-O<F1;;&EN97-&;W5N9%TN9&5S8PD)/2!I=&5M<ULW73L*("`@
M("`@("`@("`@9G)E94-H87(@*&ET96US6S%=*3L*("`@("`@("`@("`@;&EN
M97-&;W5N9"LK.PH@("`@("`@("!]"B`@("`@("`@(&5L<V4*("`@("`@("`@
M>PH@("`@("`@("`@("`O*B!"860@;&EN92P@<F5C;W9E<B!T:&4@;65M;W)Y
M+@D)"2HO"B`@("`@("`@("`@(&9O<B`H>3TP.R!Y(#P@8VAU;FMS.R!Y*RLI
M"B`@("`@("`@("`@('L*("`@("`@("`@("`@("`@9G)E94-H87(@*&ET96US
M6WE=*3L*("`@("`@("`@("`@?0H@("`@("`@("!]"B`@("`@('T*("`@?0H@
M("!P:&]N941A=&$M/G)E8V]R9$-O=6YT(#T@;&EN97-&;W5N9#L*("`@<F5T
M=7)N(&QI;F5S1F]U;F0["GT*"B\J"B`J(%1H:7,@;W!E;G,@82!P:&]N92!D
M871A(&9I;&4@86YD(')E='5R;G,@=&AE(&YU;6)E<B!O9B!E;&5M96YT<R!R
M96%D+@H@*B\*:6YT('-A=F50:&]N941A=&%&:6QE("AC:&%R("IF:6QE;F%M
M92P@4U!H;VYE1&%T82`J<&AO;F5$871A*0I["B`@("\J($1E8VQA<F4@=F%R
M:6%B;&5S+@D)"0D)*B\*("`@4U!H;VYE4F5C;W)D("IP:&]N95)E8V]R9#L*
M("`@=&EM95]T(&-L8VL["B`@($9)3$4@*F9D.PH@("!I;G0@>#L*(`H@("`O
M*B!#86X@=V4@;W!E;B!T:&4@9FEL93\)"0D)"2HO"B`@(&EF("@H9F0@/2!F
M;W!E;B`H9FEL96YA;64L(")W(BDI(#T]($Y53$PI"B`@('L*("`@("`@<F5T
M=7)N(#`["B`@('T*"B`@("\J($=E="!T:&4@8W5R<F5N="!T:6UE+@D)"0D)
M*B\*("`@=&EM92@F8VQC:RD["@H@("`O*B!!9&0@=&AE(&AE861E<B!T;R!T
M:&4@9FEL92X)"0D)*B\*("`@9G!R:6YT9B`H9F0L("(C7&XB*3L*("`@9G!R
M:6YT9B`H9F0L("(C(%1H:7,@9FEL92!W87,@875T;VUA=&EC86QL>2!S879E
M9"!O;B`E<R(L(&-T:6UE*"9C;&-K*2D["B`@(&9P<FEN=&8@*&9D+"`B(R!4
M:&5R92!S:&]U;&0@8F4@)60@<&AO;F4@;G5M8F5R<R!I;B!T:&ES(&9I;&4N
M7&XB+"!P:&]N941A=&$M/G)E8V]R9$-O=6YT*3L*("`@9G!R:6YT9B`H9F0L
M("(C7&XB*3L*"B`@("\J($-Y8VQE('1H<F]U9V@@=&AE(&1A=&$@86YD('-T
M87)T('=R:71I;F<@:70@=&\@=&AE(&9I;&4N"2HO"B`@(&9O<B`H>#TP.R!X
M(#P@<&AO;F5$871A+3YR96-O<F1#;W5N=#L@>"LK*0H@("!["B`@("`@("\J
M($=E="!A('!O:6YT97(@=&\@=&AE(&]B:F5C="X)"0D)*B\*("`@("`@<&AO
M;F5296-O<F0@/2`F<&AO;F5$871A+3YR96-O<F1;>%T["@H@("`@("`O*B!#
M:&5C:R!T:&4@<&AO;F4@='EP92X)"0D)"2HO"B`@("`@(&EF("AP:&]N95)E
M8V]R9"T^;&EN951Y<&4@/3T@=D-E;&P@?'P@<&AO;F5296-O<F0M/FQI;F54
M>7!E(#T]('9086=E<BD*("`@("`@>PH@("`@("`@("!F<')I;G1F("AF9"P@
M(B5S%B5D%B5S%BT6+18M%BT6)7-<;B(L"@D)<&AO;F5296-O<F0M/FYA;64L
M"@D)<&AO;F5296-O<F0M/FQI;F54>7!E+`H)"7!H;VYE4F5C;W)D+3YP:&]N
M94YU;6)E<BP*"0EP:&]N95)E8V]R9"T^9&5S8RD["B`@("`@('T*("`@("`@
M96QS90H@("`@("!["B`@("`@("`@(&9P<FEN=&8@*&9D+"`B)7,6)606)7,6
M)7,6)7,6)7,6)7,6)7-<;B(L"@D)<&AO;F5296-O<F0M/FYA;64L"@D)<&AO
M;F5296-O<F0M/FQI;F54>7!E+`H)"7!H;VYE4F5C;W)D+3YP:&]N94YU;6)E
M<BP*"0EP:&]N95)E8V]R9"T^861D<F5S<RP*"0EP:&]N95)E8V]R9"T^8VET
M>2P*"0EP:&]N95)E8V]R9"T^<')O=FEN8V4L"@D)<&AO;F5296-O<F0M/G!O
M<W1A;$-O9&4L"@D)<&AO;F5296-O<F0M/F1E<V,I.PH@("`@("!]"B`@('T*
M("`@9F-L;W-E("AF9"D["B`@(')E='5R;B`Q.PI]"@HO*@H@*B!4:&ES(&1I
M<W!L87ES('1H92!I;F9O<FUA=&EO;B!A8F]U="!T:&4@<&AO;F4@<F5C;W)D
M+@H@*B\*=F]I9"!D:7-P;&%Y4&AO;F5);F9O("A#1$M30U)%14X@*G-C<F5E
M;BP@4U!H;VYE4F5C;W)D(')E8V]R9"D*>PH@("`O*B!$96-L87)E(&QO8V%L
M('9A<FEA8FQE<RX)"0D)"2HO"B`@(&-H87(@*FUE<V=;,3!=+"!T96UP6S(U
M-ET["@H@("`O*B!#:&5C:R!T:&4@='EP92!O9B!L:6YE(&ET(&ES+@D)"0DJ
M+PH@("!I9B`H<F5C;W)D+FQI;F54>7!E(#T]('96;VEC92!\?"!<"@ER96-O
M<F0N;&EN951Y<&4@/3T@=D1A=&$Q('Q\(%P*"7)E8V]R9"YL:6YE5'EP92`]
M/2!V1&%T83(@?'P@7`H)<F5C;W)D+FQI;F54>7!E(#T]('9$871A,R!\?"!<
M"@ER96-O<F0N;&EN951Y<&4@/3T@=D9!6#$@?'P@7`H)<F5C;W)D+FQI;F54
M>7!E(#T]('9&05@R('Q\(%P*"7)E8V]R9"YL:6YE5'EP92`]/2!V1D%8,RD*
M("`@>PH@("`@("`O*B!#<F5A=&4@=&AE(&EN9F]R;6%T:6]N('1O(&1I<W!L
M87DN"0D)*B\*("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/CPO53XE<R!0:&]N
M92!296-O<F0B+"!'3&EN951Y<&5;<F5C;W)D+FQI;F54>7!E72D["B`@("`@
M(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`@("!S<')I;G1F("AT
M96UP+"`B/"]"+S(Y/DYA;64@("`@("`@(#PA0B$R.3XE<R(L(')E8V]R9"YN
M86UE*3L*("`@("`@;65S9ULQ72`](&-O<'E#:&%R("AT96UP*3L*"B`@("`@
M('-P<FEN=&8@*'1E;7`L("(\+T(O,CD^4&AO;F4@3G5M8F5R/"%"(3(Y/B5S
M(BP@<F5C;W)D+G!H;VYE3G5M8F5R*3L*("`@("`@;65S9ULR72`](&-O<'E#
M:&%R("AT96UP*3L*"B`@("`@('-P<FEN=&8@*'1E;7`L("(\+T(O,CD^061D
M<F5S<R`@("`@/"%"(3(Y/B5S(BP@<F5C;W)D+F%D9')E<W,I.PH@("`@("!M
M97-G6S-=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@<W!R:6YT9B`H=&5M
M<"P@(CPO0B\R.3Y#:71Y("`@("`@("`\(4(A,CD^)7,B+"!R96-O<F0N8VET
M>2D["B`@("`@(&UE<V=;-%T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`@("!S
M<')I;G1F("AT96UP+"`B/"]"+S(Y/E!R;W9I;F-E("`@(#PA0B$R.3XE<R(L
M(')E8V]R9"YP<F]V:6YC92D["B`@("`@(&UE<V=;-5T@/2!C;W!Y0VAA<B`H
M=&5M<"D["@H@("`@("!S<')I;G1F("AT96UP+"`B/"]"+S(Y/E!O<W1A;"!#
M;V1E(#PA0B$R.3XE<R(L(')E8V]R9"YP;W-T86Q#;V1E*3L*("`@("`@;65S
M9ULV72`](&-O<'E#:&%R("AT96UP*3L*"B`@("`@('-P<FEN=&8@*'1E;7`L
M("(\+T(O,CD^0V]M;65N="`@("`@/"%"(3(Y/B5S(BP@<F5C;W)D+F1E<V,I
M.PH@("`@("!M97-G6S==(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@+RH@
M4&]P('1H92!I;F9O<FUA=&EO;B!U<"!O;B!T:&4@<V-R965N+@D)"2HO"B`@
M("`@('!O<'5P3&%B96P@*'-C<F5E;BP@;65S9RP@."D["@H@("`@("`O*B!#
M;&5A;B!U<"X)"0D)"0DJ+PH@("`@("!F<F5E0VAA<B`H;65S9ULP72D[(&9R
M965#:&%R("AM97-G6S%=*3L@9G)E94-H87(@*&UE<V=;,ETI.PH@("`@("!F
M<F5E0VAA<B`H;65S9ULS72D[(&9R965#:&%R("AM97-G6S1=*3L@9G)E94-H
M87(@*&UE<V=;-5TI.PH@("`@("!F<F5E0VAA<B`H;65S9ULV72D[(&9R965#
M:&%R("AM97-G6S==*3L*("`@?0H@("!E;'-E(&EF("AR96-O<F0N;&EN951Y
M<&4@/3T@=E!A9V5R('Q\(')E8V]R9"YL:6YE5'EP92`]/2!V0V5L;"D*("`@
M>PH@("`@("`O*B!#<F5A=&4@=&AE(&EN9F]R;6%T:6]N('1O(&1I<W!L87DN
M"0D)*B\*("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/CPO53XE<R!0:&]N92!2
M96-O<F0B+"!'3&EN951Y<&5;<F5C;W)D+FQI;F54>7!E72D["B`@("`@(&UE
M<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`@("!S<')I;G1F("AT96UP
M+"`B/"]"+S(Y/DYA;64@("`@("`@(#PA0B$R.3XE<R(L(')E8V]R9"YN86UE
M*3L*("`@("`@;65S9ULQ72`](&-O<'E#:&%R("AT96UP*3L*"B`@("`@('-P
M<FEN=&8@*'1E;7`L("(\+T(O,CD^4&AO;F4@3G5M8F5R/"%"(3(Y/B5S(BP@
M<F5C;W)D+G!H;VYE3G5M8F5R*3L*("`@("`@;65S9ULR72`](&-O<'E#:&%R
M("AT96UP*3L*"B`@("`@('-P<FEN=&8@*'1E;7`L("(\+T(O,CD^0V]M;65N
M="`@("`@/"%"(3(Y/B5S(BP@<F5C;W)D+F1E<V,I.PH@("`@("!M97-G6S-=
M(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@+RH@4&]P('1H92!I;F9O<FUA
M=&EO;B!U<"!O;B!T:&4@<V-R965N+@D)"2HO"B`@("`@('!O<'5P3&%B96P@
M*'-C<F5E;BP@;65S9RP@-"D["@H@("`@("`O*B!#;&5A;B!U<"X)"0D)"0DJ
M+PH@("`@("!F<F5E0VAA<B`H;65S9ULP72D[(&9R965#:&%R("AM97-G6S%=
M*3L*("`@("`@9G)E94-H87(@*&UE<V=;,ETI.R!F<F5E0VAA<B`H;65S9ULS
M72D["B`@('T*("`@96QS90H@("!["B`@("`@(&UE<V=;,%T@/2`B/$,^/"]2
M/D5R<F]R/"%2/B`\+U4^56YK;F]W;B!0:&]N92!,:6YE(%1Y<&4B.PH@("`@
M("!M97-G6S%=(#T@(CQ#/D-A;B!N;W0@9&ES<&QA>2!I;F9O<FUA=&EO;BXB
M.PH@("`@("!P;W!U<$QA8F5L("AS8W)E96XL(&UE<V<L(#(I.PH@("!]"GT*
M"B\J"B`J(%1H:7,@9G5N8W1I;VX@9&ES<&QA>7,@82!L:71T;&4@<&]P('5P
M('=I;F1O=R!D:7-C=7-S:6YG('1H:7,@9&5M;RX*("HO"G9O:60@86)O=71#
M9&M2;VQO9&5X("A#1$M30U)%14X@*G-C<F5E;BD*>PH@("!C:&%R("IM97-G
M6S$U73L*"B`@(&UE<V=;,%T@/2`B/$,^/"]5/D%B;W5T($-D:R!2;VQO9&5X
M(CL*("`@;65S9ULQ72`]("(@(CL*("`@;65S9ULR72`]("(\+T(O,C0^5&AI
M<R!D96UO('=A<R!W<FET=&5N('1O(&1E;6]N<W1R871E('1H92!W:61G971S
M(CL*("`@;65S9ULS72`]("(\+T(O,C0^879A:6QA8FQE('=I=&@@=&AE($-D
M:R!L:6)R87)Y+B!.;W0@86QL(&]F('1H92(["B`@(&UE<V=;-%T@/2`B/"]"
M+S(T/D-D:R!W:61G971S(&%R92!U<V5D+"!B=70@;6]S="!O9B!T:&5M(&AA
M=F4@8F5E;BXB.PH@("!M97-G6S5=(#T@(CPO0B\R-#Y)(&AO<&4@=&AI<R!L
M:71T;&4@9&5M;VYS=')A=&EO;B!H96QP<R!G:79E('EO=2!A;B(["B`@(&UE
M<V=;-ET@/2`B/"]"+S(T/G5N9&5R<W1A;F1I;F<@;V8@=VAA="!T:&4@0V1K
M(&QI8G)A<GD@;V9F97)S+B(["B`@(&UE<V=;-UT@/2`B("(["B`@(&UE<V=;
M.%T@/2`B/$,^/"]"+S(T/DAA=F4@9G5N('=I=&@@:70N(CL*("`@;65S9ULY
M72`]("(@(CL*("`@;65S9ULQ,%T@/2`B/"]"+S(T/G1T9FXL(CL*("`@;65S
M9ULQ,5T@/2`B/$,^/"]"+S(T/DUI:V4B.PH@("!M97-G6S$R72`]("(\0SX\
M(TA,*#,U*3XB.PH@("!M97-G6S$S72`]("(\4CX\+T(O,C0^36%R8V@@,3DY
M-B(["@H@("!P;W!U<$QA8F5L("AS8W)E96XL(&UE<V<L(#$T*3L*?0H*+RH*
M("H@5&AI<R!D96QE=&5S(&$@<F]L;V1E>"!G<F]U<"X*("HO"FEN="!D96QE
M=&52;VQO9&5X1W)O=7`@*$-$2U-#4D5%3B`J<V-R965N+"!34F]L;V1E>"`J
M9W)O=7!,:7-T+"!I;G0@9W)O=7!#;W5N="D*>PH@("`O*B!$96-L87)E(&QO
M8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@(&-H87(@*FUE<V=;,3!=+"`J8G5T
M=&]N<ULU72P@=&5M<%LR-39=.PH@("!I;G0@<V5L96-T:6]N+"!C:&]I8V4L
M('@["@H@("`O*B!'970@=&AE(&YU;6)E<B!O9B!T:&4@9W)O=7`@=&\@9&5L
M971E+@D)"2HO"B`@('-E;&5C=&EO;B`]('!I8VM2;VQO9&5X1W)O=7`@*'-C
M<F5E;BP@(CQ#/CPO53Y$96QE=&4@5VAI8V@@4F]L;V1E>"!'<F]U<#\B+"!G
M<F]U<$QI<W0L(&=R;W5P0V]U;G0I.PH*("`@+RH@0VAE8VL@=&AE(')E<W5L
M=',N"0D)"0DJ+PH@("!I9B`H<V5L96-T:6]N(#P@,"D*("`@>PH@("`@("!M
M97-G6S!=(#T@(CQ#/B`@($1E;&5T92!#86YC96QE9"`@("(["B`@("`@(&UE
M<V=;,5T@/2`B/$,^3F\@1W)O=7`@1&5L971E9"(["B`@("`@('!O<'5P3&%B
M96P@*'-C<F5E;BP@;65S9RP@,BD["B`@("`@(')E='5R;B!G<F]U<$-O=6YT
M.PH@("!]"@H@("`O*B!,970G<R!M86ME('-U<F4@=&AE>2!W86YT('1O(&1E
M;&5T92!T:&4@9W)O=7`N"0DJ+PH@("!M97-G6S!=(#T@(CQ#/CPO53Y#;VYF
M:7)M($1E;&5T92(["B`@(&UE<V=;,5T@/2`B/$,^07)E('EO=2!S=7)E('EO
M=2!W86YT('1O(&1E;&5T92!T:&4@9W)O=7`B.PH@("!S<')I;G1F("AT96UP
M+"`B/$,^/"]2/B5S/"%2/C\B+"!G<F]U<$QI<W1;<V5L96-T:6]N72YN86UE
M*3L*("`@;65S9ULR72`](&-O<'E#:&%R("AT96UP*3L*("`@8G5T=&]N<ULP
M72`]("(\/$YO/CXB.PH@("!B=71T;VYS6S%=(#T@(CP\665S/CXB.PH@("!C
M:&]I8V4@/2!P;W!U<$1I86QO9R`H<V-R965N+"!M97-G+"`S+"!B=71T;VYS
M+"`R*3L*"B`@("\J($-H96-K('1H92!R97-U;'1S(&]F('1H92!C;VYF:7)M
M871I;VXN"0D)*B\*("`@:68@*&-H;VEC92`]/2`P*0H@("!["B`@("`@(&UE
M<V=;,%T@/2`B/$,^("`@1&5L971E($-A;F-E;&5D("`@(CL*("`@("`@;65S
M9ULQ72`]("(\0SY.;R!'<F]U<"!$96QE=&5D(CL*("`@("`@<&]P=7!,86)E
M;"`H<V-R965N+"!M97-G+"`R*3L*("`@?0H*("`@+RH@5V4@;F5E9"!T;R!D
M96QE=&4@=&AE(&=R;W5P(&9I;&4@9FER<W0N"0D)*B\*("`@=6YL:6YK("AG
M<F]U<$QI<W1;<V5L96-T:6]N72YD8FTI.PH*("`@+RH@3TLL(&QE=',@9&5L
M971E('1H92!G<F]U<"X)"0D)*B\*("`@9G)E94-H87(@*&=R;W5P3&ES=%MS
M96QE8W1I;VY=+FYA;64I.PH@("!F<F5E0VAA<B`H9W)O=7!,:7-T6W-E;&5C
M=&EO;ETN9&5S8RD["B`@(&9R965#:&%R("AG<F]U<$QI<W1;<V5L96-T:6]N
M72YD8FTI.PH@("!F;W(@*'@]<V5L96-T:6]N.R!X(#P@9W)O=7!#;W5N="TQ
M.R!X*RLI"B`@('L*("`@("`@9W)O=7!,:7-T6WA=+FYA;64@/2!G<F]U<$QI
M<W1;>"LQ72YN86UE.PH@("`@("!G<F]U<$QI<W1;>%TN9&5S8R`](&=R;W5P
M3&ES=%MX*S%=+F1E<V,["B`@("`@(&=R;W5P3&ES=%MX72YD8FT@/2!G<F]U
M<$QI<W1;>"LQ72YD8FT["B`@('T*("`@9W)O=7!#;W5N="TM.PH@("!'1W)O
M=7!-;V1I9FEE9"`](#$["@H@("`O*B!#;&5A;B!U<"X)"0D)"0D)*B\*("`@
M<F5T=7)N(&=R;W5P0V]U;G0["GT*"B\J"B`J(%1H:7,@9G5N8W1I;VX@9V5T
M<R!I;F9O<FUA=&EO;B!A8F]U="!A(&YE=R!P:&]N92!N=6UB97(N"B`J+PII
M;G0@861D4&AO;F5296-O<F0@*$-$2U-#4D5%3B`J<V-R965N+"!34&AO;F5$
M871A("IP:&]N941A=&$I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L
M97,N"0D)"0DJ+PH@("!#1$M,04)%3"`J=&ET;&4["B`@($-$2TE414U,25-4
M("II=&5M3&ES=#L*("`@4U!H;VYE4F5C;W)D("IP:&]N95)E8V]R9#L*("`@
M8VAA<B`J=&ET;&5-97-G6S-=+"`J='EP97-;1TQ)3D5465!%0T]53E1=+"!T
M96UP6S(U-ET["B`@(&EN="!R970L('@["@H@("`O*B!'970@=&AE('!H;VYE
M(')E8V]R9"!P;VEN=&5R+@D)"0DJ+PH@("!P:&]N95)E8V]R9"`]("9P:&]N
M941A=&$M/G)E8V]R9%MP:&]N941A=&$M/G)E8V]R9$-O=6YT73L*"B`@("\J
M($-R96%T92!A('1I=&QE(&QA8F5L('1O(&1I<W!L87DN"0D)"2HO"B`@('1I
M=&QE365S9ULP72`]("(\0SX\+T(O,38^061D($YE=R!0:&]N92!296-O<F0B
M.PH@("!T:71L92`](&YE=T-$2TQA8F5L("AS8W)E96XL($-%3E1%4BP@5$]0
M+"!T:71L94UE<V<L(#$L($9!3%-%+"!&04Q312D["B`@(&1R87=#1$M,86)E
M;"`H=&ET;&4L($9!3%-%*3L*"B`@("\J($-R96%T92!T:&4@<&AO;F4@;&EN
M92!T>7!E(&QI<W0N"0D)"2HO"B`@(&9O<B`H>#TP.R!X(#P@1TQ)3D5465!%
M0T]53E0[('@K*RD*("`@>PH@("`@("!S<')I;G1F("AT96UP+"`B/$,^/"]5
M/B5S(BP@1TQI;F54>7!E6WA=*3L*("`@("`@='EP97-;>%T@/2!C;W!Y0VAA
M<B`H=&5M<"D["B`@('T*"B`@("\J($=E="!T:&4@<&AO;F4@;&EN92!T>7!E
M+@D)"0D)*B\*("`@:71E;4QI<W0@/2!N97=#1$M)=&5M;&ES="`H<V-R965N
M+"!#14Y415(L($-%3E1%4BP@3$5&5"P*"0DB5VAA="!4>7!E($]F($QI;F4@
M27,@270_(BP@='EP97,L($=,24Y%5%E014-/54Y4+"`P+`H)"512544L($9!
M3%-%*3L*("`@<&AO;F5296-O<F0M/FQI;F54>7!E(#T@86-T:79A=&5#1$M)
M=&5M;&ES="`H:71E;4QI<W0L($Y53$PI.PH@("!D97-T<F]Y0T1+271E;6QI
M<W0@*&ET96U,:7-T*3L*"B`@("\J($-H96-K('1H92!R971U<FX@8V]D92!O
M9B!T:&4@;&EN92!T>7!E('%U97-T:6]N+@D)*B\*("`@:68@*'!H;VYE4F5C
M;W)D+3YL:6YE5'EP92`]/2`M,2D*("`@>PH@("`@("!P:&]N95)E8V]R9"T^
M;&EN951Y<&4@/2`P.PH@("`@("!R971U<FX@,3L*("`@?0H@("!E;'-E(&EF
M("AP:&]N95)E8V]R9"T^;&EN951Y<&4@/3T@=E!A9V5R('Q\('!H;VYE4F5C
M;W)D+3YL:6YE5'EP92`]/2!V0V5L;"D*("`@>PH@("`@("!R970@/2!G9713
M;6%L;%!H;VYE4F5C;W)D("AS8W)E96XL('!H;VYE4F5C;W)D*3L*("`@?0H@
M("!E;'-E"B`@('L*("`@("`@<F5T(#T@9V5T3&%R9V50:&]N95)E8V]R9"`H
M<V-R965N+"!P:&]N95)E8V]R9"D["B`@('T*"B`@("\J($-H96-K('1H92!R
M971U<FX@=F%L=64@9G)O;2!T:&4@9V5T6%A84&AO;F5296-O<F0@9G5N8W1I
M;VXN*B\*("`@:68@*')E="`]/2`P*0H@("!["B`@("`@('!H;VYE1&%T82T^
M<F5C;W)D0V]U;G0K*SL*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)"0D)"2HO
M"B`@(&1E<W1R;WE#1$M,86)E;"`H=&ET;&4I.PH@("!F;W(@*'@],#L@>"`\
M($=,24Y%5%E014-/54Y4.R!X*RLI"B`@('L*("`@("`@9G)E94-H87(@*'1Y
M<&5S6WA=*3L*("`@?0H*("`@+RH@4F5T=7)N('1H92!N97<@<&AO;F4@;&ES
M="!C;W5N="X)"0D)*B\*("`@<F5T=7)N(')E=#L*?0H*+RH*("H@5&AI<R!G
M971S(&$@<&AO;F4@<F5C;W)D('=I=&@@86QL(&]F('1H92!D971A:6QS+@H@
M*B\*:6YT(&=E=$QA<F=E4&AO;F5296-O<F0@*$-$2U-#4D5%3B`J<V-R965N
M+"!34&AO;F5296-O<F0@*G!H;VYE4F5C;W)D*0I["B`@("\J($1E8VQA<F4@
M;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@0T1+14Y44ED@*FYA;65%;G1R
M>2P@*F%D9')E<W-%;G1R>2P@*F-I='E%;G1R>3L*("`@0T1+14Y44ED@*G!R
M;W9%;G1R>2P@*G!O<W1A;$5N=')Y+"`J9&5S8T5N=')Y.PH@("!#1$M414U0
M3$%412`J<&AO;F5496UP;&%T93L*("`@8VAA<B`J8G5T=&]N<ULU72P@*FUE
M<V=;,35=.PH@("!I;G0@<F5T.PH*("`@+RH@1&5F:6YE('1H92!W:61G971S
M+@D)"0D)*B\*("`@;F%M945N=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@
M3$5&5"P@-2P@3$5&5"P*"0D)"2(\+T(O-3Y.86UE(BP@05].3U)-04PL"@D)
M"0DG7R<L('9-25A%1"P@,C`L(#(L(#(U-BP*"0D)"512544L($9!3%-%*3L*
M("`@861D<F5S<T5N=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@4DE'2%0L
M(#4L($Q%1E0L"@D)"0DB/"]"+S4^061D<F5S<R(L($%?3D]234%,+`H)"0D)
M)U\G+"!V34E8140L(#0P+"`R+"`R-38L"@D)"0E44E5%+"!&04Q312D["B`@
M(&-I='E%;G1R>2`](&YE=T-$2T5N=')Y("AS8W)E96XL($Q%1E0L(#@L($Q%
M1E0L"@D)"0DB/"]"+S4^0VET>2(L($%?3D]234%,+`H)"0D))U\G+"!V34E8
M140L(#(P+"`R+"`R-38L"@D)"0E44E5%+"!&04Q312D["B`@('!R;W9%;G1R
M>2`](&YE=T-$2T5N=')Y("AS8W)E96XL(#(Y+"`X+"!,1494+`H)"0D)(CPO
M0B\U/E!R;W9I;F-E(BP@05].3U)-04PL"@D)"0DG7R<L('9-25A%1"P@,34L
M(#(L(#(U-BP*"0D)"512544L($9!3%-%*3L*("`@<&]S=&%L16YT<GD@/2!N
M97=#1$M%;G1R>2`H<V-R965N+"!224=(5"P@."P@3$5&5"P*"0D)"2(\+T(O
M-3Y0;W-T86P@0V]D92(L($%?3D]234%,+`H)"0D))U\G+"!V54U)6$5$+"`X
M+"`R+"`R-38L"@D)"0E44E5%+"!&04Q312D["B`@('!H;VYE5&5M<&QA=&4@
M/2!N97=#1$M496UP;&%T92`H<V-R965N+"!,1494+"`Q,2P@3$5&5"P*"0D)
M"2(\+T(O-3Y.=6UB97(B+"`*"0D)"2(H(R,C*2`C(R,M(R,C(R(L(`H)"0D)
M(BA?7U\I(%]?7RU?7U]?(BP*"0D)"512544L($9!3%-%*3L*("`@9&5S8T5N
M=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@4DE'2%0L(#$Q+"!,1494+`H)
M"0D)(CPO0B\U/D1E<V-R:7!T:6]N(BP@05].3U)-04PL"@D)"0DG7R<L('9-
M25A%1"P@,C`L(#(L(#(U-BP*"0D)"512544L($9!3%-%*3L*"B`@("\J($=E
M="!T:&4@<&AO;F4@:6YF;W)M871I;VXN"0D)"2HO"B`@(&9O<B`H.SLI"B`@
M('L*("`@("`@+RH@1')A=R!T:&4@=VED9V5T<R!O;B!T:&4@<V-R965N+@D)
M"2HO"B`@("`@(&1R87=#1$M%;G1R>2`H;F%M945N=')Y+"!N86UE16YT<GDM
M/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H861D<F5S<T5N=')Y+"!A9&1R
M97-S16YT<GDM/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H8VET>45N=')Y
M+"!C:71Y16YT<GDM/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H<')O=D5N
M=')Y+"!P<F]V16YT<GDM/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H<&]S
M=&%L16YT<GDL('!O<W1A;$5N=')Y+3YB;W@I.PH@("`@("!D<F%W0T1+5&5M
M<&QA=&4@*'!H;VYE5&5M<&QA=&4L('!H;VYE5&5M<&QA=&4M/F)O>"D["B`@
M("`@(&1R87=#1$M%;G1R>2`H9&5S8T5N=')Y+"!D97-C16YT<GDM/F)O>"D[
M"@H@("`@("`O*B!!8W1I=F%T92!T:&4@96YT<FEE<R!T;R!G970@=&AE(&EN
M9F]R;6%T:6]N+@D)*B\*("`@("`@<&AO;F5296-O<F0M/FYA;64@/2!C;W!Y
M0VAA<B`H86-T:79A=&5#1$M%;G1R>2`H;F%M945N=')Y+"!.54Q,*2D["B`@
M("`@('!H;VYE4F5C;W)D+3YA9&1R97-S(#T@8V]P>4-H87(@*&%C=&EV871E
M0T1+16YT<GD@*&%D9')E<W-%;G1R>2P@3E5,3"DI.PH@("`@("!P:&]N95)E
M8V]R9"T^8VET>2`](&-O<'E#:&%R("AA8W1I=F%T94-$2T5N=')Y("AC:71Y
M16YT<GDL($Y53$PI*3L*("`@("`@<&AO;F5296-O<F0M/G!R;W9I;F-E(#T@
M8V]P>4-H87(@*&%C=&EV871E0T1+16YT<GD@*'!R;W9%;G1R>2P@3E5,3"DI
M.PH@("`@("!P:&]N95)E8V]R9"T^<&]S=&%L0V]D92`](&-O<'E#:&%R("AA
M8W1I=F%T94-$2T5N=')Y("AP;W-T86Q%;G1R>2P@3E5,3"DI.PH@("`@("!A
M8W1I=F%T94-$2U1E;7!L871E("AP:&]N951E;7!L871E+"!.54Q,*3L*("`@
M("`@<&AO;F5296-O<F0M/G!H;VYE3G5M8F5R(#T@8V]P>4-H87(@*&UI>$-$
M2U1E;7!L871E("AP:&]N951E;7!L871E*2D["B`@("`@('!H;VYE4F5C;W)D
M+3YD97-C(#T@8V]P>4-H87(@*&%C=&EV871E0T1+16YT<GD@*&1E<V-%;G1R
M>2P@3E5,3"DI.PH*("`@("`@+RH@1&5T97)M:6YE(&EF('1H92!U<V5R('=A
M;G1S('1O('-U8FUI="!T:&4@:6YF;RX)*B\*("`@("`@;65S9ULP72`]("(\
M0SX\+U4^0V]N9FER;2!.97<@4&AO;F4@16YT<GDB.PH@("`@("!M97-G6S%=
M(#T@(CQ#/D1O('EO=2!W86YT('1O(&%D9"!T:&ES('!H;VYE(&YU;6)E<C\B
M.PH@("`@("!B=71T;VYS6S!=(#T@(CPO0B\R-#X\/$%D9"!0:&]N92!.=6UB
M97(^/B(["B`@("`@(&)U='1O;G-;,5T@/2`B/"]"+S$V/CP\0V%N8V5L/CXB
M.PH@("`@("!B=71T;VYS6S)=(#T@(CPO0B\X/CP\36]D:69Y($EN9F]R;6%T
M:6]N/CXB.PH@("`@("!R970@/2!P;W!U<$1I86QO9R`H<V-R965N+"!M97-G
M+"`R+"!B=71T;VYS+"`S*3L*"B`@("`@("\J($-H96-K('1H92!R97-P;VYS
M92!O9B!T:&4@<&]P=7`@9&EA;&]G(&)O>"X)"2HO"B`@("`@(&EF("AR970@
M/3T@,"D*("`@("`@>PH@("`@("`@("`O*B!4:&4@=7-E<B!W86YT<R!T;R!S
M=6)M:70@=&AE(&EN9F]R;6%T:6]N+@D)*B\*("`@("`@("`@9&5S=')O>4-$
M2T5N=')Y("AN86UE16YT<GDI.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@
M*&%D9')E<W-%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H8VET
M>45N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2T5N=')Y("AP<F]V16YT<GDI
M.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*'!O<W1A;$5N=')Y*3L*("`@
M("`@("`@9&5S=')O>4-$2T5N=')Y("AD97-C16YT<GDI.PH@("`@("`@("!D
M97-T<F]Y0T1+5&5M<&QA=&4@*'!H;VYE5&5M<&QA=&4I.PH@("`@("`@("!R
M971U<FX@<F5T.PH@("`@("!]"B`@("`@(&5L<V4@:68@*')E="`]/2`Q*0H@
M("`@("!["B`@("`@("`@("\J(%1H92!U<V5R(&1O97,@;F]T('=A;G0@=&\@
M<W5B;6ET('1H92!I;F9O<FUA=&EO;BX)*B\*("`@("`@("`@9G)E94-H87(@
M*'!H;VYE4F5C;W)D+3YN86UE*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE
M4F5C;W)D+3YA9&1R97-S*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C
M;W)D+3YC:71Y*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YP
M<F]V:6YC92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^<&]S
M=&%L0V]D92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^<&AO
M;F5.=6UB97(I.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M/F1E
M<V,I.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*&YA;65%;G1R>2D["B`@
M("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H861D<F5S<T5N=')Y*3L*("`@("`@
M("`@9&5S=')O>4-$2T5N=')Y("AC:71Y16YT<GDI.PH@("`@("`@("!D97-T
M<F]Y0T1+16YT<GD@*'!R;W9%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#1$M%
M;G1R>2`H<&]S=&%L16YT<GDI.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@
M*&1E<V-%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#1$M496UP;&%T92`H<&AO
M;F5496UP;&%T92D["B`@("`@("`@(')E='5R;B!R970["B`@("`@('T*("`@
M("`@96QS90H@("`@("!["B`@("`@("`@("\J(%1H92!U<V5R('=A;G1S('1O
M(&5D:70@=&AE(&EN9F]R;6%T:6]N(&%G86EN+@D)*B\*("`@("`@("`@9G)E
M94-H87(@*'!H;VYE4F5C;W)D+3YN86UE*3L*("`@("`@("`@9G)E94-H87(@
M*'!H;VYE4F5C;W)D+3YA9&1R97-S*3L*("`@("`@("`@9G)E94-H87(@*'!H
M;VYE4F5C;W)D+3YC:71Y*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C
M;W)D+3YP<F]V:6YC92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R
M9"T^<&]S=&%L0V]D92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R
M9"T^<&AO;F5.=6UB97(I.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O
M<F0M/F1E<V,I.PH@("`@("!]"B`@('T*?0H*+RH*("H@5&AI<R!G971S(&$@
M<VUA;&P@<&AO;F4@<F5C;W)D+@H@*B\*:6YT(&=E=%-M86QL4&AO;F5296-O
M<F0@*$-$2U-#4D5%3B`J<V-R965N+"!34&AO;F5296-O<F0@*G!H;VYE4F5C
M;W)D*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*
M("`@0T1+14Y44ED@*FYA;65%;G1R>2P@*F1E<V-%;G1R>3L*("`@0T1+5$5-
M4$Q!5$4@*G!H;VYE5&5M<&QA=&4["B`@(&-H87(@*F)U='1O;G-;-5TL("IM
M97-G6S$U73L*("`@:6YT(')E=#L*"B`@("\J($1E9FEN92!T:&4@=VED9V5T
M<RX)"0D)"2HO"B`@(&YA;65%;G1R>2`](&YE=T-$2T5N=')Y("AS8W)E96XL
M($-%3E1%4BP@."P@3$5&5"P*"0D)"2(\+T(O-3Y.86UE(BP@05].3U)-04PL
M"@D)"0DG7R<L('9-25A%1"P@,C`L(#(L(#(U-BP*"0D)"512544L($9!3%-%
M*3L*("`@<&AO;F5496UP;&%T92`](&YE=T-$2U1E;7!L871E("AS8W)E96XL
M($-%3E1%4BP@,3$L($Q%1E0L"@D)"0DB/"]"+S4^3G5M8F5R(BP@"@D)"0DB
M*",C(RD@(R,C+2,C(R,B+"`*"0D)"2(H7U]?*2!?7U\M7U]?7R(L"@D)"0E4
M4E5%+"!&04Q312D["B`@(&1E<V-%;G1R>2`](&YE=T-$2T5N=')Y("AS8W)E
M96XL($-%3E1%4BP@,30L($Q%1E0L"@D)"0DB/"]"+S4^1&5S8W)I<'1I;VXB
M+"!!7TY/4DU!3"P*"0D)"2=?)RP@=DU)6$5$+"`R,"P@,BP@,C4V+`H)"0D)
M5%)512P@1D%,4T4I.PH*("`@+RH@1V5T('1H92!P:&]N92!I;F9O<FUA=&EO
M;BX)"0D)*B\*("`@9F]R("@[.RD*("`@>PH@("`@("`O*B!$<F%W('1H92!W
M:61G971S(&]N('1H92!S8W)E96XN"0D)*B\*("`@("`@9')A=T-$2T5N=')Y
M("AN86UE16YT<GDL(&YA;65%;G1R>2T^8F]X*3L*("`@("`@9')A=T-$2U1E
M;7!L871E("AP:&]N951E;7!L871E+"!P:&]N951E;7!L871E+3YB;W@I.PH@
M("`@("!D<F%W0T1+16YT<GD@*&1E<V-%;G1R>2P@9&5S8T5N=')Y+3YB;W@I
M.PH*("`@("`@+RH@06-T:79A=&4@=&AE(&5N=')I97,@=&\@9V5T('1H92!I
M;F9O<FUA=&EO;BX)"2HO"B`@("`@('!H;VYE4F5C;W)D+3YN86UE(#T@8V]P
M>4-H87(@*&%C=&EV871E0T1+16YT<GD@*&YA;65%;G1R>2P@3E5,3"DI.PH@
M("`@("!A8W1I=F%T94-$2U1E;7!L871E("AP:&]N951E;7!L871E+"!.54Q,
M*3L*("`@("`@<&AO;F5296-O<F0M/G!H;VYE3G5M8F5R(#T@8V]P>4-H87(@
M*&UI>$-$2U1E;7!L871E("AP:&]N951E;7!L871E*2D["B`@("`@('!H;VYE
M4F5C;W)D+3YD97-C(#T@8V]P>4-H87(@*&%C=&EV871E0T1+16YT<GD@*&1E
M<V-%;G1R>2P@3E5,3"DI.PH*("`@("`@+RH@1&5T97)M:6YE(&EF('1H92!U
M<V5R('=A;G1S('1O('-U8FUI="!T:&4@:6YF;RX)*B\*("`@("`@;65S9ULP
M72`]("(\0SX\+T(O-3Y#;VYF:7)M($YE=R!0:&]N92!%;G1R>2(["B`@("`@
M(&UE<V=;,5T@/2`B/$,^1&\@>6]U('=A;G0@=&\@861D('1H:7,@<&AO;F4@
M;G5M8F5R/R(["B`@("`@(&)U='1O;G-;,%T@/2`B/"]"+S(T/CP\061D(%!H
M;VYE($YU;6)E<CX^(CL*("`@("`@8G5T=&]N<ULQ72`]("(\+T(O,38^/#Q#
M86YC96P^/B(["B`@("`@(&)U='1O;G-;,ET@/2`B/"]"+S@^/#Q-;V1I9GD@
M26YF;W)M871I;VX^/B(["B`@("`@(')E="`]('!O<'5P1&EA;&]G("AS8W)E
M96XL(&UE<V<L(#(L(&)U='1O;G,L(#,I.PH*("`@("`@+RH@0VAE8VL@=&AE
M(')E<W!O;G-E(&]F('1H92!P;W!U<"!D:6%L;V<@8F]X+@D)*B\*("`@("`@
M:68@*')E="`]/2`P*0H@("`@("!["B`@("`@("`@("\J(%1H92!U<V5R('=A
M;G1S('1O('-U8FUI="!T:&4@:6YF;W)M871I;VXN"0DJ+PH@("`@("`@("!D
M97-T<F]Y0T1+16YT<GD@*&YA;65%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#
M1$M%;G1R>2`H9&5S8T5N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2U1E;7!L
M871E("AP:&]N951E;7!L871E*3L*("`@("`@("`@<F5T=7)N(')E=#L*("`@
M("`@?0H@("`@("!E;'-E(&EF("AR970@/3T@,2D*("`@("`@>PH@("`@("`@
M("`O*B!4:&4@=7-E<B!D;V5S(&YO="!W86YT('1O('-U8FUI="!T:&4@:6YF
M;W)M871I;VXN"2HO"B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^
M;F%M92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^<&AO;F5.
M=6UB97(I.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M/F1E<V,I
M.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*&YA;65%;G1R>2D["B`@("`@
M("`@(&1E<W1R;WE#1$M%;G1R>2`H9&5S8T5N=')Y*3L*("`@("`@("`@9&5S
M=')O>4-$2U1E;7!L871E("AP:&]N951E;7!L871E*3L*("`@("`@("`@<F5T
M=7)N(')E=#L*("`@("`@?0H@("`@("!E;'-E"B`@("`@('L*("`@("`@("`@
M+RH@5&AE('5S97(@=V%N=',@=&\@961I="!T:&4@:6YF;W)M871I;VX@86=A
M:6XN"0DJ+PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M/FYA;64I
M.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M/G!H;VYE3G5M8F5R
M*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YD97-C*3L*("`@
M("`@?0H@("!]"GT*"B\J"B`J(%1H:7,@<')I;G1S(&$@9W)O=7!S('!H;VYE
M(&YU;6)E<G,N"B`J+PIV;VED('!R:6YT1W)O=7!.=6UB97)S("A#1$M30U)%
M14X@*G-C<F5E;BP@4U)O;&]D97@@*F=R;W5P3&ES="P@:6YT(&=R;W5P0V]U
M;G0I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*
M("`@0T1+4T5,14-424].("IS96QE8W1I;VY,:7-T.PH@("!#1$M%3E1262`J
M96YT<GD["B`@($-$2TQ!0D5,("IT:71L93L*("`@8VAA<B`J:71E;4QI<W1;
M34%8251%35-=+"`J;65S9ULQ,%TL('1E;7!;,C4V73L*("`@8VAA<B`J8VAO
M:6-E<UM=(#T@>R)0<FEN="!T;R!0<FEN=&5R("(L(")0<FEN="!T;R!&:6QE
M(BP@(D1O;B=T(%!R:6YT(GT["B`@(&-H87(@*F9I;&5N86UE(#T@*&-H87(@
M*BE.54Q,.PH@("!C:&%R("IP<FEN=&5R(#T@*&-H87(@*BE.54Q,.PH@("!C
M:&%R("ID969A=6QT4')I;G1E<B`]("AC:&%R("HI3E5,3#L*("`@:6YT(&AE
M:6=H="`](&=R;W5P0V]U;G0["B`@(&EN="!X.PH*("`@+RH@0W)E871E('1H
M92!G<F]U<"!L:7-T+@D)"0D)"2HO"B`@(&9O<B`H>#TP.R!X(#P@9W)O=7!#
M;W5N=#L@>"LK*0H@("!["B`@("`@(&ET96U,:7-T6WA=(#T@8V]P>4-H87(@
M*&=R;W5P3&ES=%MX72YN86UE*3L*("`@?0H*("`@+RH@4V5T('1H92!H96EG
M:'0@;V8@=&AE('-E;&5C=&EO;B!L:7-T+@D)"0DJ+PH@("!I9B`H9W)O=7!#
M;W5N="`^(#4I"B`@('L*("`@("`@:&5I9VAT(#T@-3L*("`@?0H@("!H96EG
M:'0@*ST@,SL*"B`@("\J($-R96%T92!T:&4@<V5L96-T:6]N(&QI<W0N"0D)
M"0DJ+PH@("!S96QE8W1I;VY,:7-T(#T@;F5W0T1+4V5L96-T:6]N("AS8W)E
M96XL($-%3E1%4BP@0T5.5$52+`H)"0D)"6AE:6=H="P@-#`L"@D)"0D)(CQ#
M/CPO53Y396QE8W0@5VAI8V@@1W)O=7!S(%1O(%!R:6YT(BP*"0D)"0EI=&5M
M3&ES="P@9W)O=7!#;W5N="P*"0D)"0EC:&]I8V5S+"`R+`H)"0D)"4%?4D56
M15)312P@5%)512P@1D%,4T4I.PH*("`@+RH@06-T:79A=&4@=&AE('-E;&5C
M=&EO;B!L:7-T+@D)"0D)*B\*("`@:68@*&%C=&EV871E0T1+4V5L96-T:6]N
M("AS96QE8W1I;VY,:7-T+"!.54Q,*2`]/2`M,2D*("`@>PH@("`@("!D97-T
M<F]Y0T1+4V5L96-T:6]N("AS96QE8W1I;VY,:7-T*3L*("`@("`@;65S9ULP
M72`]("(\0SY0<FEN="!#86YC96QE9"XB.PH@("`@("!P;W!U<$QA8F5L("AS
M8W)E96XL(&UE<V<L(#$I.PH@("`@("!R971U<FX["B`@('T*("`@97)A<V5#
M1$M396QE8W1I;VX@*'-E;&5C=&EO;DQI<W0I.PH*("`@+RH@1&5T97)M:6YE
M('=H:6-H(&=R;W5P<R!W92!W86YT('1O('!R:6YT+@D)"0DJ+PH@("!F;W(@
M*'@],#L@>"`\(&=R;W5P0V]U;G0[('@K*RD*("`@>PH@("`@("!I9B`H<V5L
M96-T:6]N3&ES="T^<V5L96-T:6]N<UMX72`]/2`P*0H@("`@("!["B`@("`@
M("`@("\J($-R96%T92!A('1I=&QE+@D)"0D)"2HO"B`@("`@("`@('-P<FEN
M=&8@*'1E;7`L("(\0SX\+U(^4')I;G1I;F<@1W)O=7`@6R5S72!T;R!0<FEN
M=&5R(BP@9W)O=7!,:7-T6WA=+FYA;64I.PH@("`@("`@("!M97-G6S!=(#T@
M8V]P>4-H87(@*'1E;7`I.PH@("`@("`@("!T:71L92`](&YE=T-$2TQA8F5L
M("AS8W)E96XL($-%3E1%4BP@5$]0+"!M97-G+"`Q+"!&04Q312P@1D%,4T4I
M.PH@("`@("`@("!D<F%W0T1+3&%B96P@*'1I=&QE+"!&04Q312D["B`@("`@
M("`@(&9R965#:&%R("AM97-G6S!=*3L*"B`@("`@("`@("\J($=E="!T:&4@
M<')I;G1E<B!N86UE('1O('!R:6YT('1O+@D)"0DJ+PH@("`@("`@("!E;G1R
M>2`](&YE=T-$2T5N=')Y("AS8W)E96XL($-%3E1%4BP@."P@3$5&5"P*"0D)
M"2(\+U(^4')I;G1E<B!.86UE(BP@05].3U)-04PL"@D)"0DG7R<L('9-25A%
M1"P@,C`L(#(L(#(U-BP@5%)512P@1D%,4T4I.PH*("`@("`@("`@+RH@4V5T
M('1H92!P<FEN=&5R(&YA;64@=&\@=&AE(&1E9F%U;'0@<')I;G1E<BX)"2HO
M"B`@("`@("`@(&1E9F%U;'10<FEN=&5R(#T@9V5T96YV*")04DE.5$52(BD[
M"B`@("`@("`@('-E=$-$2T5N=')Y("AE;G1R>2P@9&5F875L=%!R:6YT97(L
M(#(L(#(U-BP@5%)512D["B`@("`@("`@('!R:6YT97(@/2!C;W!Y0VAA<B`H
M86-T:79A=&5#1$M%;G1R>2`H96YT<GDL($Y53$PI*3L*("`@("`@("`@9&5S
M=')O>4-$2T5N=')Y("AE;G1R>2D["B`*("`@("`@("`@+RH@4')I;G0@=&AE
M(&=R;W5P+@D)"0D)"2HO"B`@("`@("`@(&EF("AP<FEN=$=R;W5P("AG<F]U
M<$QI<W1;>%TL("(O=&UP+W)O;&]D97@N=&UP(BP@<')I;G1E<BD@/3T@,"D*
M("`@("`@("`@>PH@("`@("`@("`@("`O*B!4:&4@9W)O=7`@8V]U;&0@;F]T
M(&)E('!R:6YT960N"0D)"2HO"B`@("`@("`@("`@('-P<FEN=&8@*'1E;7`L
M("(\0SY3;W)R>2!T:&4@9W)O=7`@)R5S)R!C;W5L9"!N;W0@8F4@<')I;G1E
M9"XB+"!G<F]U<$QI<W1;>%TN;F%M92D["B`@("`@("`@("`@(&UE<V=;,%T@
M/2!S=')D=7`@*'1E;7`I.PH@("`@("`@("`@("!P;W!U<$QA8F5L("AS8W)E
M96XL(&UE<V<L(#$I.PH@("`@("`@("`@("!F<F5E0VAA<B`H;65S9ULP72D[
M"B`@("`@("`@('T*"B`@("`@("`@("\J($-L96%N('5P+@D)"0D)"0DJ+PH@
M("`@("`@("!D97-T<F]Y0T1+3&%B96P@*'1I=&QE*3L*("`@("`@("`@9G)E
M94-H87(@*&1E9F%U;'10<FEN=&5R*3L*("`@("`@("`@9G)E94-H87(@*'!R
M:6YT97(I.PH@("`@("`@("!U;FQI;FL@*"(O=&UP+W)O;&]D97@N=&UP(BD[
M"B`@("`@('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N3&ES="T^<V5L96-T
M:6]N<UMX72`]/2`Q*0H@("`@("!["B`@("`@("`@("\J($-R96%T92!A('1I
M=&QE+@D)"0D)"2HO"B`@("`@("`@('-P<FEN=&8@*'1E;7`L("(\0SX\+U(^
M4')I;G1I;F<@1W)O=7`@6R5S72!T;R!&:6QE(BP@9W)O=7!,:7-T6WA=+FYA
M;64I.PH@("`@("`@("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("`@
M("`@("!T:71L92`](&YE=T-$2TQA8F5L("AS8W)E96XL($-%3E1%4BP@5$]0
M+"!M97-G+"`Q+"!&04Q312P@1D%,4T4I.PH@("`@("`@("!D<F%W0T1+3&%B
M96P@*'1I=&QE+"!&04Q312D["B`@("`@("`@(&9R965#:&%R("AM97-G6S!=
M*3L*"B`@("`@("`@("\J($=E="!T:&4@9FEL96YA;64@=&\@<')I;G0@=&\N
M"0D)"2HO"B`@("`@("`@(&5N=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@
M0T5.5$52+"`X+"!,1494+`H)"0D)(CPO4CY&:6QE;F%M92(L($%?3D]234%,
M+"`G7R<L('9-25A%1"P*"0D)"3(P+"`R+"`R-38L(%12544L($9!3%-%*3L*
M("`@("`@("`@9FEL96YA;64@/2!C;W!Y0VAA<B`H86-T:79A=&5#1$M%;G1R
M>2`H96YT<GDL($Y53$PI*3L*("`@("`@("`@9&5S=')O>4-$2T5N=')Y("AE
M;G1R>2D["@H@("`@("`@("`O*B!0<FEN="!T:&4@9W)O=7`N"0D)"0D)*B\*
M("`@("`@("`@:68@*'!R:6YT1W)O=7`@*&=R;W5P3&ES=%MX72P@9FEL96YA
M;64L('!R:6YT97(I(#T](#`I"B`@("`@("`@('L*("`@("`@("`@("`@+RH@
M5&AE(&=R;W5P(&-O=6QD(&YO="!B92!P<FEN=&5D+@D)"0DJ+PH@("`@("`@
M("`@("!S<')I;G1F("AT96UP+"`B/$,^4V]R<GD@=&AE(&=R;W5P("<E<R<@
M8V]U;&0@;F]T(&)E('!R:6YT960N(BP@9W)O=7!,:7-T6WA=+FYA;64I.PH@
M("`@("`@("`@("!M97-G6S!=(#T@<W1R9'5P("AT96UP*3L*("`@("`@("`@
M("`@<&]P=7!,86)E;"`H<V-R965N+"!M97-G+"`Q*3L*("`@("`@("`@("`@
M9G)E94-H87(@*&UE<V=;,%TI.PH@("`@("`@("!]"B`@("`@("`@(`H@("`@
M("`@("`O*B!#;&5A;B!U<"X)"0D)"0D)*B\*("`@("`@("`@9&5S=')O>4-$
M2TQA8F5L("AT:71L92D["B`@("`@("`@(&9R965#:&%R("AF:6QE;F%M92D[
M"B`@("`@('T*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)"0D)"0DJ+PH@("!D
M97-T<F]Y0T1+4V5L96-T:6]N("AS96QE8W1I;VY,:7-T*3L*?0H*+RH*("H@
M5&AI<R!A8W1U86QL>2!P<FEN=',@=&AE('!H;VYE(')E8V]R9"X*("HO"FEN
M="!P<FEN=$=R;W5P("A34F]L;V1E>"!G<F]U<%)E8V]R9"P@8VAA<B`J9FEL
M96YA;64L(&-H87(@*G!R:6YT97(I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V
M87)I86)L97,N"0D)"0D)*B\*("`@=6ED7W0@=6ED(#T@9V5T=6ED*"D["B`@
M(&-H87(@=&5M<$9I;&5N86UE6S(U-ETL(&-O;6UA;F1;,C4V73L*("`@4U!H
M;VYE1&%T82!P:&]N941A=&$["B`@(%-0:&]N95)E8V]R9"`J<&AO;F5296-O
M<F0["B`@(&EN="!P:&]N94-O=6YT+"!X.PH@("!&24Q%("IF9#L*"B`@("\J
M(%)E860@=&AE(&1A=&$@9FEL92X)"0D)"0DJ+PH@("!P:&]N94-O=6YT(#T@
M<F5A9%!H;VYE1&%T849I;&4@*&=R;W5P4F5C;W)D+F1B;2P@)G!H;VYE1&%T
M82D["@H@("`O*B!#<F5A=&4@=&AE('1E;7!O<F%R>2!F:6QE;F%M92X)"0D)
M"2HO"B`@(&EF("AF:6QE;F%M92`A/2`H8VAA<B`J*4Y53$PI"B`@('L*("`@
M("`@<W!R:6YT9B`H=&5M<$9I;&5N86UE+"`B)7,B+"!F:6QE;F%M92D["B`@
M('T*("`@96QS90H@("!["B`@("`@('-P<FEN=&8@*'1E;7!&:6QE;F%M92P@
M(B]T;7`O<F]L;V1E>"XE9"(L('5I9"D["B`@('T*"B`@("\J($]P96X@=&AE
M(&9I;&4N"0D)"0D)"2HO"B`@(&EF("@H9F0@/2!F;W!E;B`H=&5M<$9I;&5N
M86UE+"`B82LB*2D@/3T@3E5,3"D*("`@>PH@("`@("!R971U<FX@,#L*("`@
M?0H*("`@+RH@4W1A<G0@=W)I=&EN9R!T:&4@9W)O=7`@:6YF;W)M871I;VX@
M=&\@=&AE('1E;7`@9FEL92X)"2HO"B`@(&9P<FEN=&8@*&9D+"`B1W)O=7`@
M3F%M93H@)30P<UQN(BP@9W)O=7!296-O<F0N;F%M92D["B`@(&9P<FEN=&8@
M*&9D+"`B/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]
M/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]7&XB*3L*
M("`@9F]R("AX/3`[('@@/"!P:&]N94-O=6YT.R!X*RLI"B`@('L*("`@("`@
M<&AO;F5296-O<F0@/2`F<&AO;F5$871A+G)E8V]R9%MX73L*("`@("`@9G!R
M:6YT9B`H9F0L(").86UE("`@("`@("`Z("5S7&XB+"!P:&]N95)E8V]R9"T^
M;F%M92D["B`@("`@(&9P<FEN=&8@*&9D+"`B4&AO;F4@3G5M8F5R.B`E<R`H
M)7,I7&XB+"!P:&]N95)E8V]R9"T^<&AO;F5.=6UB97(L($=,:6YE5'EP95MP
M:&]N95)E8V]R9"T^;&EN951Y<&5=*3L*("`@("`@:68@*'!H;VYE4F5C;W)D
M+3YL:6YE5'EP92`A/2!V4&%G97(@)B8@<&AO;F5296-O<F0M/FQI;F54>7!E
M("$]('9#96QL*0H@("`@("!["B`@("`@("`@(&9P<FEN=&8@*&9D+"`B061D
M<F5S<R`@("`@.B`E+3(P<RP@)2TR,'-<;B(L('!H;VYE4F5C;W)D+3YA9&1R
M97-S+"!P:&]N95)E8V]R9"T^8VET>2D["B`@("`@("`@(&9P<FEN=&8@*&9D
M+"`B("`@("`@("`@("`@.B`E+3$P<RP@)2TQ,'-<;B(L('!H;VYE4F5C;W)D
M+3YP<F]V:6YC92P@<&AO;F5296-O<F0M/G!O<W1A;$-O9&4I.PH@("`@("!]
M"B`@("`@(&9P<FEN=&8@*&9D+"`B1&5S8W)I<'1I;VX@.B`E+3,P<UQN(BP@
M<&AO;F5296-O<F0M/F1E<V,I.PH@("`@("!F<')I;G1F("AF9"P@(BTM+2TM
M+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
M+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+5QN(BD["B`@('T*"B`@("\J
M($1E=&5R;6EN92!I9B!T:&4@:6YF;W)M871I;VX@:7,@9V]I;F<@=&\@82!F
M:6QE(&]R('!R:6YT97(N"2HO"B`@(&EF("AP<FEN=&5R("$]("AC:&%R("HI
M3E5,3"D*("`@>PH@("`@("`O*B!0<FEN="!T:&4@9FEL92!T;R!T:&4@9VEV
M96X@<')I;G1E<BX)"0D)*B\*("`@("`@<W!R:6YT9B`H8V]M;6%N9"P@(FQP
M<B`M4"5S("5S(BP@<')I;G1E<BP@=&5M<$9I;&5N86UE*3L*("`@("`@<WES
M=&5M("AC;VUM86YD*3L*"B`@("`@("\J(%=E(&AA=F4@=&\@=6YL:VEN:R!T
M:&4@=&5M<"!F:6QE+@D)"0DJ+PH@("`@("!U;FQI;FL@*'1E;7!&:6QE;F%M
M92D["B`@('T*"B`@("\J($-L;W-E('1H92!F:6QE;F%M92X)"0D)"0DJ+PH@
M("!F8VQO<V4@*&9D*3L*("`@<F5T=7)N(#$["GT*"B\J"B`J*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ"B`J(%A86"`@("`@("`@("`@("`@4W1A<G0@;V8@8V%L;&)A
M8VL@9G5N8W1I;VYS+@H@*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*@H@*B\*:6YT(&5N
M=')Y4')E4')O8V5S<T-"("A%3V)J96-T5'EP92!C9&M4>7!E+"!V;VED("IO
M8FIE8W0L('9O:60@*F-L:65N=$1A=&$L(&-H='EP92!I;G!U="D*>PH@("!I
M9B`H:6YP=70@/3T@)R`G*0H@("!["B`@("`@($)E97`H*3L*("`@("`@<F5T
M=7)N(#`["B`@('T*("`@<F5T=7)N(#$["GT*"B\J"B`J(%1H:7,@86QL;W=S
M('1H92!U<V5R('1O(&EN<V5R="!A(&YE=R!P:&]N92!E;G1R>2!I;G1O('1H
M92!D871A8F%S92X*("HO"G9O:60@:6YS97)T4&AO;F5%;G1R>4-"("A%3V)J
M96-T5'EP92!C9&M4>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A
M=&$I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@
M("!#1$M30U)/3$P@*G-C<F]L;`D)/2`H0T1+4T-23TQ,("HI;V)J96-T.PH@
M("!34&AO;F5$871A("IP:&]N941A=&$)/2`H4U!H;VYE1&%T82`J*6-L:65N
M=$1A=&$["B`@(%-0:&]N95)E8V]R9"`J<&AO;F5296-O<F0)/2`F<&AO;F5$
M871A+3YR96-O<F1;<&AO;F5$871A+3YR96-O<F1#;W5N=%T["B`@(&-H87(@
M=&5M<%LR-39=.PH*("`@+RH@36%K92!T:&4@<V-R;VQL:6YG(&QI<W0@9&ES
M87!P96%R+@D)"2HO"B`@(&5R87-E0T1+4V-R;VQL("AS8W)O;&PI.PH*("`@
M+RH@0V%L;"!T:&4@9G5N8W1I;VX@=VAI8V@@9V5T<R!P:&]N92!R96-O<F0@
M:6YF;W)M871I;VXN"2HO"B`@(&EF("AA9&10:&]N95)E8V]R9"`H<V-R;VQL
M+3YS8W)E96XL('!H;VYE1&%T82D@/3T@,"D*("`@>PH@("`@("!S<')I;G1F
M("AT96UP+"`B)7,@*"5S*2(L('!H;VYE4F5C;W)D+3YN86UE+"!'3&EN951Y
M<&5;<&AO;F5296-O<F0M/FQI;F54>7!E72D["B`@("`@(&%D9$-$2U-C<F]L
M;$ET96T@*'-C<F]L;"P@=&5M<"D["B`@('T*"B`@("\J(%)E9')A=R!T:&4@
M<V-R;VQL:6YG(&QI<W0N"0D)"2HO"B`@(&1R87=#1$M38W)O;&P@*'-C<F]L
M;"P@<V-R;VQL+3YB;W@I.PI]"@HO*@H@*B!4:&ES(&%L;&]W<R!T:&4@=7-E
M<B!T;R!D96QE=&4@82!P:&]N92!E;G1R>2!F<F]M('1H92!D871A8F%S92X*
M("HO"G9O:60@9&5L971E4&AO;F5%;G1R>4-"("A%3V)J96-T5'EP92!C9&M4
M>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I"GL*("`@+RH@
M1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M30U)/3$P@
M*G-C<F]L;"`]("A#1$M30U)/3$P@*BEO8FIE8W0["B`@(%-0:&]N941A=&$@
M*G!H;VYE1&%T82`]("A34&AO;F5$871A("HI8VQI96YT1&%T83L*("`@8VAA
M<B`J;65S9ULS72P@=&5M<%LR-39=+"`J:&]L9#L*("`@8VAA<B`J8G5T=&]N
M<UM=(#T@>R(\+T(O,38^/#Q.;SX^(BP@(CPO0B\R-#X\/%EE<SX^(GT["B`@
M(&EN="!P;W-I=&EO;B`]('-C<F]L;"T^8W5R<F5N=$ET96T["B`@(&EN="!X
M.PH*("`@+RH@36%K92!T:&4@<V-R;VQL:6YG(&QI<W0@9&ES87!P96%R+@D)
M"2HO"B`@(&5R87-E0T1+4V-R;VQL("AS8W)O;&PI.PH*("`@+RH@0VAE8VL@
M=&AE(&YU;6)E<B!O9B!E;G1R:65S(&QE9G0@:6X@=&AE(&QI<W0N"0DJ+PH@
M("!I9B`H<V-R;VQL+3YL:7-T4VEZ92`]/2`P*0H@("!["B`@("`@(&UE<V=;
M,%T@/2`B5&AE<F4@87)E(&YO(&UO<F4@;G5M8F5R<R!T;R!D96QE=&4N(CL*
M("`@("`@<&]P=7!,86)E;"`H<V-R;VQL+3YS8W)E96XL(&UE<V<L(#$I.PH@
M("`@("!R971U<FX["B`@('T*"B`@("\J($%S:R!T:&4@=7-E<B!I9B!T:&5Y
M(')E86QL>2!W86YT('1O(&1E;&5T92!T:&4@;&ES=&EN9RX)*B\*("`@;65S
M9ULP72`]("(\0SY$;R!Y;W4@<F5A;&QY('=A;G0@=&\@9&5L971E('1H92!P
M:&]N92!E;G1R>2(["B`@(&AO;&0@/2!C:'1Y<&4R0VAA<B`H<V-R;VQL+3YI
M=&5M6W-C<F]L;"T^8W5R<F5N=$ET96U=*3L*("`@<W!R:6YT9B`H=&5M<"P@
M(CQ#/CPO0B\Q-CXE<R(L(&AO;&0I.PH@("!M97-G6S%=(#T@8V]P>4-H87(@
M*'1E;7`I.PH@("!I9B`H<&]P=7!$:6%L;V<@*'-C<F]L;"T^<V-R965N+"!M
M97-G+"`R+"!B=71T;VYS+"`R*2`]/2`Q*0H@("!["B`@("`@("\J(%)E;6]V
M92!T:&4@:71E;2!F<F]M('1H92!P:&]N92!D871A(')E8V]R9"X)"2HO"B`@
M("`@(&9O<B`H>#UP;W-I=&EO;CL@>"`\('!H;VYE1&%T82T^<F5C;W)D0V]U
M;G0M,3L@>"LK*0H@("`@("!["B`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D
M6WA=+FYA;64@/2!P:&]N941A=&$M/G)E8V]R9%MX*S%=+FYA;64["B`@("`@
M("`@('!H;VYE1&%T82T^<F5C;W)D6WA=+FQI;F54>7!E(#T@<&AO;F5$871A
M+3YR96-O<F1;>"LQ72YL:6YE5'EP93L*("`@("`@("`@<&AO;F5$871A+3YR
M96-O<F1;>%TN<&AO;F5.=6UB97(@/2!P:&]N941A=&$M/G)E8V]R9%MX*S%=
M+G!H;VYE3G5M8F5R.PH@("`@("`@("!P:&]N941A=&$M/G)E8V]R9%MX72YA
M9&1R97-S(#T@<&AO;F5$871A+3YR96-O<F1;>"LQ72YA9&1R97-S.PH@("`@
M("`@("!P:&]N941A=&$M/G)E8V]R9%MX72YC:71Y(#T@<&AO;F5$871A+3YR
M96-O<F1;>"LQ72YC:71Y.PH@("`@("`@("!P:&]N941A=&$M/G)E8V]R9%MX
M72YP<F]V:6YC92`]('!H;VYE1&%T82T^<F5C;W)D6W@K,5TN<')O=FEN8V4[
M"B`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D6WA=+G!O<W1A;$-O9&4@/2!P
M:&]N941A=&$M/G)E8V]R9%MX*S%=+G!O<W1A;$-O9&4["B`@("`@("`@('!H
M;VYE1&%T82T^<F5C;W)D6WA=+F1E<V,@/2!P:&]N941A=&$M/G)E8V]R9%MX
M*S%=+F1E<V,["B`@("`@('T*("`@("`@<&AO;F5$871A+3YR96-O<F1#;W5N
M="TM.PH*("`@("`@+RH@3G5K92!T:&4@96YT<GDN"0D)"0DJ+PH@("`@("!D
M96QE=&5#1$M38W)O;&Q)=&5M("AS8W)O;&PL('!O<VET:6]N*3L*("`@?0H*
M("`@+RH@4F5D<F%W('1H92!S8W)O;&QI;F<@;&ES="X)"0D)*B\*("`@9')A
M=T-$2U-C<F]L;"`H<V-R;VQL+"!S8W)O;&PM/F)O>"D["GT*"B\J"B`J(%1H
M:7,@9G5N8W1I;VX@<')O=FEC97,@:&5L<"!F;W(@=&AE('!H;VYE(&QI<W0@
M961I=&]R+@H@*B\*=F]I9"!P:&]N945N=')Y2&5L<$-"("A%3V)J96-T5'EP
M92!C9&M4>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I"GL*
M("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M3
M0U)/3$P@*G-C<F]L;"`]("A#1$M30U)/3$P@*BEO8FIE8W0["B`@(&-H87(@
M*FUE<V=;,3!=+"!T96UP6S$P,%T["@H@("`O*B!#<F5A=&4@=&AE(&AE;'`@
M=&ET;&4N"0D)"0DJ+PH@("!S<')I;G1F("AT96UP+"`B/$,^/"]2/E)O;&]D
M97@@4&AO;F4@161I=&]R(BD["B`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M
M<"D["@H@("!S<')I;G1F("AT96UP+"`B/$(]:2`@("`@/B!);G-E<G1S(&$@
M;F5W('!H;VYE(&5N=')Y+B(I.PH@("!M97-G6S%=(#T@8V]P>4-H87(@*'1E
M;7`I.PH*("`@<W!R:6YT9B`H=&5M<"P@(CQ"/60@("`@(#X@1&5L971E<R!T
M:&4@8W5R<F5N=&QY('-E;&5C=&5D('!H;VYE(&5N=')Y+B(I.PH@("!M97-G
M6S)=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@<W!R:6YT9B`H=&5M<"P@(CQ"
M/45S8V%P93X@17AI=',@=&AE('-C<F]L;&EN9R!L:7-T+B(I.PH@("!M97-G
M6S-=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@<W!R:6YT9B`H=&5M<"P@(CQ"
M/3\@("`@(#X@4&]P<R!U<"!T:&ES(&AE;'`@=VEN9&]W+B(I.PH@("!M97-G
M6S1=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@+RH@4&]P('5P('1H92!M97-S
M86=E+@D)"0D)*B\*("`@<&]P=7!,86)E;"`H<V-R;VQL+3YS8W)E96XL(&UE
M<V<L(#4I.PH*("`@+RH@0VQE86X@=7`N"0D)"0D)"2HO"B`@(&9R965#:&%R
M("AM97-G6S!=*3L@9G)E94-H87(@*&UE<V=;,5TI.PH@("!F<F5E0VAA<B`H
M;65S9ULR72D[(&9R965#:&%R("AM97-G6S-=*3L*("`@9G)E94-H87(@*&UE
M<V=;-%TI.PI]"@HO*@H@*B!4:&ES(&ES(&$@8V%L;&)A8VL@=&\@=&AE(&UE
M;G4@=VED9V5T+B!)="!A;&QO=W,@=&AE('5S97(@=&\@"B`J(&%S:R!F;W(@
M:&5L<"!A8F]U="!A;GD@<W5B+6UE;G4@:71E;2X*("HO"G9O:60@:&5L<$-"
M("A%3V)J96-T5'EP92!C9&M4>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L
M:65N=$1A=&$I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)
M"0DJ+PH@("!#1$M-14Y5("IM96YU"3T@*$-$2TU%3E4@*BEO8FIE8W0["B`@
M(&EN="!M96YU3&ES=`D)/2!M96YU+3YC=7)R96YT5&ET;&4["B`@(&EN="!S
M=6)M96YU3&ES=`D](&UE;G4M/F-U<G)E;G13=6)T:71L93L*("`@:6YT('-E
M;&5C=&EO;@D]("@H;65N=4QI<W0@*B`Q,#`I("L@<W5B;65N=4QI<W0I.PH@
M("!C:&%R("IM97-G6S(P72P@*FYA;64L('1E;7!;,3`P73L*"B`@("\J($-R
M96%T92!T:&4@:&5L<"!T:71L92X)"0D)"2HO"B`@(&YA;64@/2!C:'1Y<&4R
M0VAA<B`H;65N=2T^<W5B;&ES=%MM96YU3&ES=%U;<W5B;65N=4QI<W1=*3L*
M("`@<W1R:7!7:&ET95-P86-E("AV0D]42"P@;F%M92D["B`@('-P<FEN=&8@
M*'1E;7`L("(\0SX\+U(^2&5L<#PA4CX@/"]5/B5S/"%5/B(L(&YA;64I.PH@
M("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("!F<F5E0VAA<B`H;F%M
M92D["@H@("`O*B!3970@=&AE(&1E9F%U;'0@=F%L=64@9F]R('1H92!M97-S
M86=E+@D)"2HO"B`@(&UE<V=;,5T@/2`B/$,^3F\@:&5L<"!D969I;F5D(&9O
M<B!T:&ES(&UE;G4N(CL*"B`@("\J($=I=F5N('1H92!C=7)R96YT(&UE;G4@
M:71E;2P@8W)E871E(&$@;65S<V%G92X)"2HO"B`@(&EF("AS96QE8W1I;VX@
M/3T@,"D*("`@>PH@("`@("!M97-G6S%=(#T@(CQ#/E1H:7,@<F5A9',@82!N
M97<@<F]L;V1E>"!20R!F:6QE+B(["B`@('T*("`@96QS92!I9B`H<V5L96-T
M:6]N(#T](#$I"B`@('L*("`@("`@;65S9ULQ72`]("(\0SY4:&ES('-A=F5S
M('1H92!C=7)R96YT(&=R;W5P(&EN9F]R;6%T:6]N(&EN('1H92!D969A=6QT
M(%)#(&9I;&4N(CL*("`@?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,BD*
M("`@>PH@("`@("!M97-G6S%=(#T@(CQ#/E1H:7,@<V%V97,@=&AE(&-U<G)E
M;G0@9W)O=7`@:6YF;W)M871I;VX@:6X@82!N97<@4D,@9FEL92XB.PH@("!]
M"B`@(&5L<V4@:68@*'-E;&5C=&EO;B`]/2`S*0H@("!["B`@("`@(&UE<V=;
M,5T@/2`B/$,^5&AI<R!E>&ET<R!T:&ES('!R;V=R86TN(CL*("`@?0H@("!E
M;'-E(&EF("AS96QE8W1I;VX@/3T@,3`P*0H@("!["B`@("`@(&UE<V=;,5T@
M/2`B/$,^5&AI<R!C<F5A=&5S(&$@;F5W(')O;&]D97@@9W)O=7`N(CL*("`@
M?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,3`Q*0H@("!["B`@("`@(&UE
M<V=;,5T@/2`B/$,^5&AI<R!O<&5N<R!A(')O;&]D97@@9W)O=7`N(CL*("`@
M?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,3`R*0H@("!["B`@("`@(&UE
M<V=;,5T@/2`B/$,^5&AI<R!D96QE=&5S(&$@<F]L;V1E>"!G<F]U<"XB.PH@
M("!]"B`@(&5L<V4@:68@*'-E;&5C=&EO;B`]/2`R,#`I"B`@('L*("`@("`@
M;65S9ULQ72`]("(\0SY4:&ES('!R:6YT<R!O=70@<V5L96-T960@9W)O=7!S
M('!H;VYE(&YU;6)E<G,N(CL*("`@?0H@("!E;'-E(&EF("AS96QE8W1I;VX@
M/3T@,S`P*0H@("!["B`@("`@(&UE<V=;,5T@/2`B/$,^5&AI<R!G:79E<R!A
M(&QI='1L92!H:7-T;W)Y(&]N('1H:7,@<')O9W)A;2XB.PH@("!]"B`@(&5L
M<V4@:68@*'-E;&5C=&EO;B`]/2`S,#$I"B`@('L*("`@("`@;65S9ULQ72`]
M("(\0SY4:&ES('!R;W9I9&5S(&EN9F]R;6%T:6]N(&%B;W5T('1H92!R;VQO
M9&5X+B(["B`@('T*"B`@("\J(%!O<"!U<"!T:&4@;65S<V%G92X)"0D)"2HO
M"B`@('!O<'5P3&%B96P@*&UE;G4M/G-C<F5E;BP@;65S9RP@,BD["B`@(&9R
M965#:&%R("AM97-G6S!=*3L*"B`@("\J(%)E9')A=R!T:&4@<W5B;65N=2!W
M:6YD;W<N"0D)"2HO"B`@(&1R87=#1$M-96YU4W5B=VEN("AM96YU*3L*?0H*
M+RH*("H@5&AI<R!I<R!A(&-A;&QB86-K('1O('1H92!G<F]U<"!L:7-T('-C
M<F]L;&EN9R!L:7-T+@H@*B\*=F]I9"!G<F]U<$EN9F]#0B`H14]B:F5C=%1Y
M<&4@8V1K5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I[
M"B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@0T1+
M4T-23TQ,("IS8W)O;&P)"3T@*$-$2U-#4D],3"`J*6]B:F5C=#L*("`@4U)O
M;&]D97@@*F=R;W5P3&ES=`D)/2`H4U)O;&]D97@@*BEC;&EE;G1$871A.PH@
M("!I;G0@<V5L96-T:6]N"0D]('-C<F]L;"T^8W5R<F5N=$ET96T["B`@(&-H
M87(@*FUE<V=;-5TL('1E;7!;,3`P73L*"B`@("\J($-R96%T92!T:&4@;65S
M<V%G92!T;R!B92!D:7-P;&%Y960N"0D)*B\*("`@;65S9ULP72`]("(\0SX\
M+U4^1&5T86EL960@1W)O=7`@26YF;W)M871I;VXN(CL*"B`@('-P<FEN=&8@
M*'1E;7`L("(\+U(^1W)O=7`@3F%M92`@("`@("`@(#PA4CX@)7,B+"!G<F]U
M<$QI<W1;<V5L96-T:6]N72YN86UE*3L*("`@;65S9ULQ72`](&-O<'E#:&%R
M("AT96UP*3L*"B`@('-P<FEN=&8@*'1E;7`L("(\+U(^1W)O=7`@1&5S8W)I
M<'1I;VX@(#PA4CX@)7,B+"!G<F]U<$QI<W1;<V5L96-T:6]N72YD97-C*3L*
M("`@;65S9ULR72`](&-O<'E#:&%R("AT96UP*3L*"B`@('-P<FEN=&8@*'1E
M;7`L("(\+U(^1W)O=7`@1&%T86)A<V4@1FEL93PA4CX@)7,B+"!G<F]U<$QI
M<W1;<V5L96-T:6]N72YD8FTI.PH@("!M97-G6S-=(#T@8V]P>4-H87(@*'1E
M;7`I.PH*("`@+RH@1&ES<&QA>64@=&AE(&UE<W-A9V4N"0D)"0DJ+PH@("!P
M;W!U<$QA8F5L("AS8W)O;&PM/G-C<F5E;BP@;65S9RP@-"D["B`@(&9R965#
M:&%R("AM97-G6S%=*3L@9G)E94-H87(@*&UE<V=;,ETI.PH@("!F<F5E0VAA
M<B`H;65S9ULS72D["@H@("`O*B!2961R87<@=&AE('-C<F]L;&EN9R!L:7-T
M+@D)"0DJ+PH@("!D<F%W0T1+4V-R;VQL("AS8W)O;&PL('-C<F]L;"T^8F]X
%*3L*?0HJ
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/demo/rolodex.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/demo/rolodex.c' &&
  chmod 0444 'cdk4.8.0/demo/rolodex.c' ||
  echo 'restore of cdk4.8.0/demo/rolodex.c failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/rolodex.c'`"
  test 50540 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/rolodex.c: original size 50540, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/command.c ==============
if test -f 'cdk4.8.0/demo/command.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/command.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/command.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/demo/command.c
M(VEN8VQU9&4@(F-D:RYH(@H*+RH@1&5F:6YE('-O;64@9VQO8F%L('9A<FEA
M8FQE<RX)"0D)*B\*(V1E9FEN92!-05A(25-43U)9"34P,`IC:&%R("II;G1R
M;V1U8W1I;VY-97-S86=E6UT@/2![(CQ#/CPO0B\Q-CY,:71T;&4@0V]M;6%N
M9"!);G1E<F9A8V4B+"`B(BP*"0D)"2(\0SY7<FET=&5N(&)Y($UI:V4@1VQO
M=F5R(BP@(B(L"@D)"0DB/$,^5'EP92`\+T(^:&5L<#PA0CX@=&\@9V5T(&AE
M;'`N(GT["@HO*B!4:&ES('-T<G5C='5R92!I<R!U<V5D(&9O<B!K965P:6YG
M(&-O;6UA;F0@:&ES=&]R>2X)"2HO"G-T<G5C="!H:7-T;W)Y7W-T('L*("`@
M:6YT(&-O=6YT.PH@("!I;G0@8W5R<F5N=#L*("`@8VAA<B`J8V]M;6%N9%M-
M05A(25-43U)973L*?3L*"B\J($1E9FEN92!S;VUE(&QO8V%L('!R;W1O='EP
M97,N"0D)"2HO"F-H87(@*G5C("AC:&%R("IW;W)D*3L*=F]I9"!H96QP("A#
M1$M%3E1262`J96YT<GDI.PIV;VED(&AI<W1O<GE5<$-"("A%3V)J96-T5'EP
M92!C9&MT>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I.PIV
M;VED(&AI<W1O<GE$;W=N0T(@*$5/8FIE8W14>7!E(&-D:W1Y<&4L('9O:60@
M*F]B:F5C="P@=F]I9"`J8VQI96YT1&%T82D["G9O:60@=FEE=TAI<W1O<GE#
M0B`H14]B:F5C=%1Y<&4@8V1K='EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC
M;&EE;G1$871A*3L*=F]I9"!L:7-T2&ES=&]R>4-"("A%3V)J96-T5'EP92!C
M9&MT>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I.PH*+RH*
M("H@5W)I='1E;B!B>3H)36EK92!';&]V97(*("H@4'5R<&]S93H*("H)"51H
M:7,@8W)E871E<R!A('9E<GD@<VEM<&QE(&-O;6UA;F0@:6YT97)F86-E+@H@
M*B\*"G9O:60@;6%I;BAI;G0@87)G8RP@8VAA<B`J*F%R9W8I"GL*("`@+RH@
M1&5C;&%R92!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M30U)%14X)*F-D:W-C
M<F5E;CL*("`@0T1+4U=)3D1/5PDJ8V]M;6%N9$]U='!U=#L*("`@0T1+14Y4
M4ED)*F-O;6UA;F1%;G1R>3L*("`@5TE.1$]7"2IC=7)S97-7:6X["B`@(&-H
M87()"2IC;VUM86YD+"`J=7!P97(L('1E;7!;-C`P73L*("`@8VAA<B`)*G!R
M;VUP="`]("(\+T(O,C0^0V]M;6%N9"`^(CL*("`@<W1R=6-T(&AI<W1O<GE?
M<W0@:&ES=&]R>3L*("`@:6YT('@L('=I9'1H.PH*("`@+RH@<V5T('5P('1H
M92!H:7-T;W)Y+@D)"0D)*B\*("`@:&ES=&]R>2YC;W5N="`](#`["B`@(&AI
M<W1O<GDN8W5R<F5N="`](#`["@H@("`O*B!#:&5C:R!T:&4@8V]M;6%N9"!L
M:6YE+@D)"0D)*B\*("`@9F]R("AX/3`[('@@/"!A<F=C.R!X*RLI"B`@('L*
M("`@("`@:68@*'-T<F-M<"`H87)G=EMX72P@(BUP(BD@/3T@,"D*("`@("`@
M>PH@("`@("`@("!X*RL["B`@("`@("`@('!R;VUP="`](&%R9W9;>%T["B`@
M("`@('T*("`@?0H*("`@+RH@4V5T('5P($-$2R`)"0D)"0DJ+R`*("`@8W5R
M<V5S5VEN(#T@:6YI='-C<B@I.PH@("!C9&MS8W)E96X@/2!I;FET0T1+4V-R
M965N("AC=7)S97-7:6XI.PH*("`@+RH@4W1A<G0@8V]L;W(N"0D)"0D)*B\*
M("`@:6YI=$-$2T-O;&]R*"D["@H@("`O*B!#<F5A=&4@=&AE('-C<F]L;&EN
M9R!W:6YD;W<N"0D)"2HO"B`@(&-O;6UA;F1/=71P=70@/2!N97=#1$M3=VEN
M9&]W("AC9&MS8W)E96XL($-%3E1%4BP@5$]0+"!,24Y%4RTX+"!#3TQ3+3(L
M"@D)"0D)(CQ#/CPO0B\U/D-O;6UA;F0@3W5T<'5T(%=I;F1O=R(L"@D)"0D)
M,3`P,"P@5%)512P@1D%,4T4I.PH*("`@+RH@0W)E871E('1H92!E;G1R>2!F
M:65L9"X)"0D)"2HO"B`@('=I9'1H"3T@0T],4RTQ-"`M('-T<FQE;B`H<')O
M;7!T*3L*("`@8V]M;6%N9$5N=')Y(#T@;F5W0T1+16YT<GD@*&-D:W-C<F5E
M;BP@0T5.5$52+"!"3U143TTL($Q%1E0L"@D)"0EP<F]M<'0L($%?0D],1'Q#
M3TQ/4E]004E2*#@I+"!#3TQ/4E]004E2*#(T*7PG7R<L"@D)"0EV34E8140L
M($-/3%,M,30L(#$L(#4Q,BP@1D%,4T4L($9!3%-%*3L*"B`@("\J($-R96%T
M92!T:&4@:V5Y(&)I;F1I;F=S+@D)"0D)*B\*("`@8FEN9$-$2T]B:F5C="`H
M=D5.5%)9+"!C;VUM86YD16YT<GDL($M%65]54"P@)FAI<W1O<GE5<$-"+"`F
M:&ES=&]R>2D["B`@(&)I;F1#1$M/8FIE8W0@*'9%3E1262P@8V]M;6%N9$5N
M=')Y+"!+15E?1$]73BP@)FAI<W1O<GE$;W=N0T(L("9H:7-T;W)Y*3L*("`@
M8FEN9$-$2T]B:F5C="`H=D5.5%)9+"!C;VUM86YD16YT<GDL(%1!0BP@)G9I
M97=(:7-T;W)Y0T(L(&-O;6UA;F1/=71P=70I.PH@("!B:6YD0T1+3V)J96-T
M("AV14Y44EDL(&-O;6UA;F1%;G1R>2P@)QXG+"`F;&ES=$AI<W1O<GE#0BP@
M)FAI<W1O<GDI.PH*("`@+RH@1')A=R!T:&4@<V-R965N+@D)"0D)"2HO"B`@
M(')E9G)E<VA#1$M38W)E96X@*&-D:W-C<F5E;BD["@H@("`O*B!3:&]W('1H
M96T@=VAO('=R;W1E('1H:7,@86YD(&AO=R!T;R!G970@:&5L<"X)"2HO"B`@
M('!O<'5P3&%B96P@*&-D:W-C<F5E;BP@:6YT<F]D=6-T:6]N365S<V%G92P@
M-2D["@H@("`O*B!$;R!T:&ES(&9O<F5V97(N"0D)"0D)*B\*("`@9F]R("@[
M.RD*("`@>PH@("`@("`O*B!'970@=&AE(&-O;6UA;F0N"0D)"0DJ+PH@("`@
M("!C;VUM86YD"3T@86-T:79A=&5#1$M%;G1R>2`H8V]M;6%N9$5N=')Y+"!.
M54Q,*3L*("`@("`@=7!P97()/2!U8R`H8V]M;6%N9"D["@H@("`@("`O*B!#
M:&5C:R!T:&4@;W5T<'5T(&]F('1H92!C;VUM86YD+@D)"2HO"B`@("`@(&EF
M("AS=')C;7`@*'5P<&5R+"`B455)5"(I(#T](#`@?'P*"0ES=')C;7`@*'5P
M<&5R+"`B15A)5"(I(#T](#`@?'P*"0ES=')C;7`@*'5P<&5R+"`B42(I(#T]
M(#`@?'P*"0ES=')C;7`@*'5P<&5R+"`B12(I(#T](#`@?'P*"0EC;VUM86YD
M16YT<GDM/F5X:714>7!E(#T]('9%4T-!4$5?2$E4*0H@("`@("!["B`@("`@
M("`@("\J($%L;"!D;VYE+@D)"0D)"2HO"B`@("`@("`@(&1E<W1R;WE#1$M%
M;G1R>2`H8V]M;6%N9$5N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2U-W:6YD
M;W<@*&-O;6UA;F1/=71P=70I.PH@("`@("`@("!D96QW:6X@*&-U<G-E<U=I
M;BD["B`@("`@("`@(&9R965#:&%R("AU<'!E<BD["B`@("`@("`@(&5N9$-$
M2R@I.PH@("`@("`@("!E>&ET("@P*3L*("`@("`@?0H@("`@("!E;'-E(&EF
M("AS=')C;7`@*&-O;6UA;F0L(")C;&5A<B(I(#T](#`I"B`@("`@('L*("`@
M("`@("`@+RH@2V5E<"!T:&4@:&ES=&]R>2X)"0D)"2HO"B`@("`@("`@(&AI
M<W1O<GDN8V]M;6%N9%MH:7-T;W)Y+F-O=6YT72`](&-O<'E#:&%R("AC;VUM
M86YD*3L*("`@("`@("`@:&ES=&]R>2YC;W5N="LK.PH@("`@("`@("!H:7-T
M;W)Y+F-U<G)E;G0@/2!H:7-T;W)Y+F-O=6YT.PH@("`@("`@("!C;&5A;D-$
M2U-W:6YD;W<@*&-O;6UA;F1/=71P=70I.PH@("`@("`@("!C;&5A;D-$2T5N
M=')Y("AC;VUM86YD16YT<GDI.PH@("`@("!]"B`@("`@(&5L<V4@:68@*'-T
M<F-M<"`H8V]M;6%N9"P@(FAE;'`B*2`]/2`P*0H@("`@("!["B`@("`@("`@
M("\J($ME97`@=&AE(&AI<W1O<GDN"0D)"0DJ+PH@("`@("`@("!H:7-T;W)Y
M+F-O;6UA;F1;:&ES=&]R>2YC;W5N=%T@/2!C;W!Y0VAA<B`H8V]M;6%N9"D[
M"B`@("`@("`@(&AI<W1O<GDN8V]U;G0K*SL*("`@("`@("`@:&ES=&]R>2YC
M=7)R96YT(#T@:&ES=&]R>2YC;W5N=#L*"B`@("`@("`@("\J($1I<W!L87D@
M=&AE(&AE;'`N"0D)"0DJ+PH@("`@("`@("!H96QP*&-O;6UA;F1%;G1R>2D[
M"@H@("`@("`@("`O*B!#;&5A;B!T:&4@96YT<GD@9FEE;&0N"0D)"2HO"B`@
M("`@("`@(&-L96%N0T1+16YT<GD@*&-O;6UA;F1%;G1R>2D["B`@("`@('T*
M("`@("`@96QS90H@("`@("!["B`@("`@("`@("\J($ME97`@=&AE(&AI<W1O
M<GDN"0D)"0DJ+PH@("`@("`@("!H:7-T;W)Y+F-O;6UA;F1;:&ES=&]R>2YC
M;W5N=%T@/2!C;W!Y0VAA<B`H8V]M;6%N9"D["B`@("`@("`@(&AI<W1O<GDN
M8V]U;G0K*SL*("`@("`@("`@:&ES=&]R>2YC=7)R96YT(#T@:&ES=&]R>2YC
M;W5N=#L*"B`@("`@("`@("\J($EN<V5R="!A(&QI;F4@<')O=FED:6YG('1H
M92!C;VUM86YD+@D)*B\*("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(D-O;6UA
M;F0Z(#PO4CXE<R(L(&-O;6UA;F0I.PH@("`@("`@("!A9&1#1$M3=VEN9&]W
M("AC;VUM86YD3W5T<'5T+"!T96UP+"!"3U143TTI.PH*("`@("`@("`@+RH@
M4G5N('1H92!C;VUM86YD+@D)"0D)*B\*("`@("`@("`@97AE8T-$2U-W:6YD
M;W<@*&-O;6UA;F1/=71P=70L(&-O;6UA;F0L($)/5%1/32D["B`@("`@("`@
M(&-L96%N0T1+16YT<GD@*&-O;6UA;F1%;G1R>2D["B`@("`@('T*("`@("`@
M9G)E94-H87(@*'5P<&5R*3L*("`@?0I]"@HO*@H@*B!4:&ES(&ES('1H92!C
M86QL8F%C:R!F;W(@=&AE(&1O=VX@87)R;W<N"B`J+PIV;VED(&AI<W1O<GE5
M<$-"("A%3V)J96-T5'EP92!C9&MT>7!E+"!V;VED("IO8FIE8W0L('9O:60@
M*F-L:65N=$1A=&$I"GL*("`@0T1+14Y44ED@*F5N=')Y(#T@*$-$2T5.5%)9
M("HI;V)J96-T.PH@("!S=')U8W0@:&ES=&]R>5]S="`J:&ES=&]R>2`]("AS
M=')U8W0@:&ES=&]R>5]S="`J*2!C;&EE;G1$871A.PH*("`@+RH@36%K92!S
M=7)E('=E(&1O;B=T(&=O(&]U="!O9B!B;W5N9',N"0D)*B\*("`@:68@*&AI
M<W1O<GDM/F-U<G)E;G0@/3T@,"D*("`@>PH@("`@("!"965P*"D["B`@("`@
M(')E='5R;CL*("`@?0H*("`@+RH@1&5C<F5M96YT('1H92!C;W5N=&5R"0D)
M"0DJ+PH@("!H:7-T;W)Y+3YC=7)R96YT+2T["@H@("`O*B!$:7-P;&%Y('1H
M92!C;VUM86YD+@D)"0D)*B\*("`@<V5T0T1+16YT<GD@*&5N=')Y+"!H:7-T
M;W)Y+3YC;VUM86YD6VAI<W1O<GDM/F-U<G)E;G1=+"!E;G1R>2T^;6EN+"!E
M;G1R>2T^;6%X+"!E;G1R>2T^8F]X*3L*("`@9')A=T-$2T5N=')Y("AE;G1R
M>2P@96YT<GDM/F)O>"D["GT*"B\J"B`J(%1H:7,@:7,@=&AE(&-A;&QB86-K
M(&9O<B!T:&4@9&]W;B!A<G)O=RX*("HO"G9O:60@:&ES=&]R>41O=VY#0B`H
M14]B:F5C=%1Y<&4@8V1K='EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE
M;G1$871A*0I["B`@($-$2T5.5%)9("IE;G1R>2`]("A#1$M%3E1262`J*6]B
M:F5C=#L*("`@<W1R=6-T(&AI<W1O<GE?<W0@*FAI<W1O<GD@/2`H<W1R=6-T
M(&AI<W1O<GE?<W0@*BD@8VQI96YT1&%T83L*"B`@("\J($UA:V4@<W5R92!W
M92!D;VXG="!G;R!O=70@;V8@8F]U;F1S+@D)"2HO"B`@(&EF("AH:7-T;W)Y
M+3YC=7)R96YT(#T](&AI<W1O<GDM/F-O=6YT*0H@("!["B`@("`@($)E97`H
M*3L*("`@("`@<F5T=7)N.PH@("!]"@H@("`O*B!);F-R96UE;G0@=&AE(&-O
M=6YT97(N+BX)"0D)"2HO"B`@(&AI<W1O<GDM/F-U<G)E;G0K*SL*"B`@("\J
M($EF('=E(&%R92!A="!T:&4@96YD+"!C;&5A<B!T:&4@96YT<GD@9FEE;&0N
M"0DJ+PH@("!I9B`H:&ES=&]R>2T^8W5R<F5N="`]/2!H:7-T;W)Y+3YC;W5N
M="D*("`@>PH@("`@("!C;&5A;D-$2T5N=')Y("AE;G1R>2D["B`@("`@(&1R
M87=#1$M%;G1R>2`H96YT<GDL(&5N=')Y+3YB;W@I.PH@("`@("!R971U<FX[
M"B`@('T*"B`@("\J($1I<W!L87D@=&AE(&-O;6UA;F0N"0D)"0DJ+PH@("!S
M971#1$M%;G1R>2`H96YT<GDL(&AI<W1O<GDM/F-O;6UA;F1;:&ES=&]R>2T^
M8W5R<F5N=%TL(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N=')Y+3YB;W@I
M.PH@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^8F]X*3L*?0H*+RH*
M("H@5&AI<R!C86QL8F%C:R!A;&QO=W,@=&AE('5S97(@=&\@<&QA>2!W:71H
M('1H92!S8W)O;&QI;F<@=VEN9&]W+@H@*B\*=F]I9"!V:65W2&ES=&]R>4-"
M("A%3V)J96-T5'EP92!C9&MT>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L
M:65N=$1A=&$I"GL*("`@0T1+14Y44ED@*F5N=')Y(#T@*$-$2T5.5%)9("HI
M;V)J96-T.PH@("!#1$M35TE.1$]7("IS=VEN9&]W(#T@*$-$2U-724Y$3U<@
M*BEC;&EE;G1$871A.PH*("`@+RH@3&5T('1H96T@<&QA>2XN+@D)"0D)"2HO
M"B`@(&%C=&EV871E0T1+4W=I;F1O=R`H<W=I;F1O=RP@3E5,3"D["@H@("`O
M*B!2961R87<@=&AE(&5N=')Y(&9I96QD+@D)"0D)*B\*("`@9')A=T-$2T5N
M=')Y("AE;G1R>2P@96YT<GDM/F)O>"D["GT*"B\J"B`J(%1H:7,@8V%L;&)A
M8VL@86QL;W=S('1H92!U<V5R('1O('!I8VL@9G)O;2!T:&4@:&ES=&]R>2!L
M:7-T(&9R;VT@80H@*B!S8W)O;&QI;F<@;&ES="X*("HO"G9O:60@;&ES=$AI
M<W1O<GE#0B`H14]B:F5C=%1Y<&4@8V1K='EP92P@=F]I9"`J;V)J96-T+"!V
M;VED("IC;&EE;G1$871A*0I["B`@($-$2T5.5%)9("IE;G1R>2`]("A#1$M%
M3E1262`J*6]B:F5C=#L*("`@<W1R=6-T(&AI<W1O<GE?<W0@*FAI<W1O<GD@
M/2`H<W1R=6-T(&AI<W1O<GE?<W0@*BD@8VQI96YT1&%T83L*("`@0T1+4T-2
M3TQ,("IS8W)O;&Q,:7-T.PH@("!I;G0@:&5I9VAT(#T@*&AI<W1O<GDM/F-O
M=6YT(#P@,3`@/R!H:7-T;W)Y+3YC;W5N="LS(#H@,3,I.PH@("!I;G0@<V5L
M96-T:6]N.PH*("`@+RH@3F\@:&ES=&]R>2P@;F\@;&ES="X)"0D)"2HO"B`@
M(&EF("AH:7-T;W)Y+3YC;W5N="`]/2`P*0H@("!["B`@("`@(&-H87(@*FUE
M<V=;72`]('LB/$,^/"]"+S$V/DYO($-O;6UA;F1S($5N=&5R960B+"`B/$,^
M3F\@2&ES=&]R>2)].PH@("`@("!P;W!U<$QA8F5L("AE;G1R>2T^<V-R965N
M+"!M97-G+"`R*3L*("`@("`@9')A=T-$2T5N=')Y("AE;G1R>2P@96YT<GDM
M/F)O>"D["B`@("`@(')E='5R;CL*("`@?0H*("`@+RH@0W)E871E('1H92!S
M8W)O;&QI;F<@;&ES="X)"0D)*B\*("`@<V-R;VQL3&ES="`](&YE=T-$2U-C
M<F]L;"`H96YT<GDM/G-C<F5E;BP@0T5.5$52+"!#14Y415(L"@D)"0EH96EG
M:'0L(#(P+"`B/$,^/"]"+S(Y/D-O;6UA;F0@2&ES=&]R>2(L"@D)"0EH:7-T
M;W)Y+3YC;VUM86YD+"!H:7-T;W)Y+3YC;W5N="P*"0D)"4Y534)%4E,L($%?
M4D5615)312P@5%)512P@1D%,4T4I.PH*("`@+RH@1V5T('1H92!C;VUM86YD
M('1O(&5X96-U=&4N"0D)"2HO"B`@('-E;&5C=&EO;B`](&%C=&EV871E0T1+
M4V-R;VQL("AS8W)O;&Q,:7-T+"!.54Q,*3L*("`@9&5S=')O>4-$2U-C<F]L
M;"`H<V-R;VQL3&ES="D["@H@("`O*B!#:&5C:R!T:&4@<F5S=6QT<R!O9B!T
M:&4@<V5L96-T:6]N+@D)"2HO"B`@(&EF("AS96QE8W1I;VX@/CT@,"D*("`@
M>PH@("`@("`O*B!'970@=&AE(&-O;6UA;F0@86YD('-T:6-J(&ET(&)A8VL@
M:6X@=&AE(&5N=')Y(&9I96QD+@DJ+PH@("`@("!S971#1$M%;G1R>2`H96YT
M<GDL(&AI<W1O<GDM/F-O;6UA;F1;<V5L96-T:6]N72P@96YT<GDM/FUI;BP@
M96YT<GDM/FUA>"P@96YT<GDM/F)O>"D["B`@('T*"B`@("\J(%)E9')A=R!T
M:&4@96YT<GD@9FEE;&0N"0D)"0DJ+PH@("!D<F%W0T1+16YT<GD@*&5N=')Y
M+"!E;G1R>2T^8F]X*3L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!D:7-P;&%Y
M<R!H96QP+@H@*B\*=F]I9"!H96QP("A#1$M%3E1262`J96YT<GDI"GL*("`@
M8VAA<B`J;65S9ULR,%T["@H@("`O*B!#<F5A=&4@=&AE(&AE;'`@;65S<V%G
M92X)"0D)"2HO"B`@(&UE<V=;,%T@/2`B/$,^/"]"+S(Y/DAE;'`B.PH@("!M
M97-G6S%=(#T@(B(["B`@(&UE<V=;,ET@/2`B/$(]0W1R;"U>("`@(#X@1&ES
M<&QA>7,@=&AE(&-O;6UA;F0@:&ES=&]R>2XB.PH@("!M97-G6S-=(#T@(CQ"
M/55P($%R<F]W("`^(%-C<F]L;',@8F%C:R!O;F4@8V]M;6%N9"XB.PH@("!M
M97-G6S1=(#T@(CQ"/41O=VX@07)R;W<^(%-C<F]L;',@9F]R=V%R9"!O;F4@
M8V]M;6%N9"XB.PH@("!M97-G6S5=(#T@(CQ"/6AE;'`@("`@("`^($1I<W!L
M87ES('1H:7,@:&5L<"!W:6YD;W<N(CL*("`@<&]P=7!,86)E;"`H96YT<GDM
M/G-C<F5E;BP@;65S9RP@-BD["GT*"B\J"B`J(%1H:7,@8V]N=F5R=',@82!W
M;W)D('1O('5P<&5R(&-A<V4N"B`J+PIC:&%R("IU8R`H8VAA<B`J=V]R9"D*
M>PH@("!I;G0@;&5N9W1H"3T@<W1R;&5N("AW;W)D*3L*("`@8VAA<B`J=7!P
M97()/2`H8VAA<B`J*6UA;&QO8R`H<VEZ96]F("AC:&%R("HI("H@*&QE;F=T
M:"LR*2D["B`@(&EN="!X.PH*("`@+RH@4W1A<G0@8V]N=F5R=&EN9R!T:&4@
M8V%S92X@*B\*("`@9F]R("AX/3`[('@@/"!L96YG=&@[('@K*RD*("`@>PH@
M("`@("!I9B`H:7-A;'!H82`H=V]R9%MX72DI"B`@("`@('L*("`@("`@("`@
M=7!P97);>%T@/2!T;W5P<&5R*'=O<F1;>%TI.PH@("`@("!]"B`@("`@(&5L
M<V4*("`@("`@>PH@("`@("`@("!U<'!E<EMX72`]('=O<F1;>%T["B`@("`@
M('T*("`@?0H@("!U<'!E<EML96YG=&A=(#T@)UPP)SL*("`@<F5T=7)N('5P
'<&5R.PI]"@H@
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/demo/command.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/demo/command.c' &&
  chmod 0444 'cdk4.8.0/demo/command.c' ||
  echo 'restore of cdk4.8.0/demo/command.c failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/command.c'`"
  test 8242 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/command.c: original size 8242, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/clock.c ==============
if test -f 'cdk4.8.0/demo/clock.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/clock.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/clock.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/demo/clock.c' &&
#include "cdk.h"
X
#ifdef XCURSES
char *XCursesProgramName="label_ex";
#endif
X
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN	*cdkscreen;
X   CDKLABEL	*demo;
X   WINDOW 	*cursesWin;
X   char		*mesg[4], temp[256];
X   time_t	clck;
X   struct tm	*currentTime;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start CDK Colors						*/
X   initCDKColor();
X
X   /* Set the labels up.					*/
X   mesg[0] = "</1/B>HH:MM:SS";
X
X   /* Declare the labels.					*/
X   demo	= newCDKLabel (cdkscreen, CENTER, CENTER, mesg, 1, FALSE, FALSE);
X
X   /* Is the label NULL???					*/
X   if (demo == (CDKLABEL *)NULL)
X   {
X      /* Clean up the memory.					*/
X      destroyCDKScreen (cdkscreen);
X
X      /* End curses...						*/
X      endCDK();
X
X      /* Spit out a message.					*/
X      printf ("Oops. Can't seem to create the label. Is the window too small?\n");
X      exit (1);
X   }
X
X   /* Do this for-ever...					*/
X   for (;;)
X   {
X      /* Get the current time.					*/
X      time(&clck);
X      currentTime = localtime (&clck);
X
X      /* Put the current time in a string.			*/
X      sprintf (temp, "<C></B/29>%02d:%02d:%02d", currentTime->tm_hour, currentTime->tm_min, currentTime->tm_sec);
X      mesg[0] = copyChar (temp);
X
X      /* Set the label contents.				*/
X      setCDKLabel (demo, mesg, 1, demo->box);
X
X      /* Clean up the memory used.				*/
X      freeChar (mesg[0]);
X
X      /* Draw the label, and sleep.				*/
X      drawCDKLabel (demo, demo->box);
X      sleep (1);
X   }
X
X   /* Clean up							*/
X   destroyCDKLabel (demo);
X   destroyCDKScreen (cdkscreen);
X   delwin (cursesWin);
X   endCDK();
X   exit (0);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/demo/clock.c' &&
  chmod 0444 'cdk4.8.0/demo/clock.c' ||
  echo 'restore of cdk4.8.0/demo/clock.c failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/clock.c'`"
  test 1654 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/clock.c: original size 1654, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/rolodex.h ==============
if test -f 'cdk4.8.0/demo/rolodex.h' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/rolodex.h (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/rolodex.h (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/demo/rolodex.h' &&
#include "cdk.h"
#include <time.h>
#include <ndbm.h>
#include <fcntl.h>
#include <unistd.h>
X
#define	MAXGROUPS	100
#define	GLINETYPECOUNT	9
X
/*
X * Declare some global variables.
X */
char *GCurrentGroup	= (char *)NULL;
char *GRCFile		= (char *)NULL;
char *GDBMDir		= (char *)NULL;
int GGroupModified	= FALSE;
int GPhoneListModified	= FALSE;
char *GLineType[]	= {"Voice", "Cell", "Pager", "First FAX", "Second FAX", "Third FAX", "First Data Line", "Second Data Line", "Third Data Line"};
X
/*
X * Create some definitions.
X */
typedef enum {vVoice, vCell, vPager, vFAX1, vFAX2, vFAX3, vData1, vData2, vData3} ELineType;
X
/*
X * Define the group record structure.
X */
struct _group_st {
X	char *name;
X	char *desc;
X	char *dbm;
};
typedef struct _group_st SRolodex;
X
/*
X * Define a phone record structure;
X */
struct _record_st {
X	char *name;
X	ELineType lineType;
X	char *phoneNumber;
X	char *address;
X	char *city;
X	char *province;
X	char *postalCode;
X	char *desc;
};
typedef struct _record_st SPhoneRecord;
X
struct _phone_data_st {
X	SPhoneRecord record[MAXITEMS];
X	int recordCount;
};
typedef struct _phone_data_st SPhoneData;
X
/* 
X * Define the callback prototypes.
X */
void helpCB (EObjectType cdkType, void *object, void *clientData);
void groupInfoCB (EObjectType cdkType, void *object, void *clientData);
void insertPhoneEntryCB (EObjectType cdkType, void *object, void *clientData);
void deletePhoneEntryCB (EObjectType cdkType, void *object, void *clientData);
void phoneEntryHelpCB (EObjectType cdkType, void *object, void *clientData);
int entryPreProcessCB (EObjectType cdkType, void *object, void *clientData, chtype input);
X
/* 
X * These functions use/modify the rolodex RC file.
X */
int readRCFile (char *filename, SRolodex *groupInfo);
int openNewRCFile (CDKSCREEN *screen, SRolodex *groups, int groupCount);
int writeRCFile (CDKSCREEN *screen, char *file, SRolodex *groups, int count);
int writeRCFileAs (CDKSCREEN *screen, SRolodex *groups, int count);
X
/*
X * These functions use/modify rolodex phone groups.
X */
int addRolodexGroup (CDKSCREEN *screen, SRolodex *groups, int count);
int deleteRolodexGroup (CDKSCREEN *screen, SRolodex *groups, int count);
int pickRolodexGroup (CDKSCREEN *screen, char *title, SRolodex *groups, int count);
void useRolodexGroup (CDKSCREEN *screen, char *name, char *desc, char *dbm);
X
/*
X * These functions display misc information about the rolodex program.
X */
void displayRolodexStats (CDKSCREEN *screen, int groupCount);
void aboutCdkRolodex (CDKSCREEN *screen);
void displayPhoneInfo (CDKSCREEN *screen, SPhoneRecord record);
X
/*
X * These functions use/modify phone data lists.
X */
int readPhoneDataFile (char *filename, SPhoneData *record);
int savePhoneDataFile (char *filename, SPhoneData *record);
int addPhoneRecord (CDKSCREEN *screen, SPhoneData *phoneData);
int deletePhoneRecord (CDKSCREEN *screen, SPhoneData *phoneData);
int getLargePhoneRecord (CDKSCREEN *screen, SPhoneRecord *phoneRecord);
int getSmallPhoneRecord (CDKSCREEN *screen, SPhoneRecord *phoneRecord);
X
/* 
X * These functions allow us to print out phone numbers.
X */
void printGroupNumbers (CDKSCREEN *screen, SRolodex *groups, int count);
int printGroup (SRolodex groupRecord, char *filename, char *printer);
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/demo/rolodex.h' &&
  chmod 0444 'cdk4.8.0/demo/rolodex.h' ||
  echo 'restore of cdk4.8.0/demo/rolodex.h failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/rolodex.h'`"
  test 3225 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/rolodex.h: original size 3225, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/demo/Makefile.demos ==============
if test -f 'cdk4.8.0/demo/Makefile.demos' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/demo/Makefile.demos (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/demo/Makefile.demos (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/demo/Makefile.demos' &&
default:
X	@for i in $(CDKDEMOBIN); do \
X	   echo "$(CC) $(CFLAGS) -o $$i $${i}.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB)"; \
X	   $(CC) $(CFLAGS) -o $$i $${i}.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB); \
X	done
X
clean:
X	rm -f *.o core $(CDKDEMOBIN)
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/demo/Makefile.demos' &&
  chmod 0444 'cdk4.8.0/demo/Makefile.demos' ||
  echo 'restore of cdk4.8.0/demo/Makefile.demos failed'
  shar_count="`wc -c < 'cdk4.8.0/demo/Makefile.demos'`"
  test 265 -eq "$shar_count" ||
    echo "cdk4.8.0/demo/Makefile.demos: original size 265, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/man/alphalist.3 ==============
if test ! -d 'cdk4.8.0/man'; then
  echo 'x - creating directory cdk4.8.0/man'
  mkdir 'cdk4.8.0/man'
fi
if test -f 'cdk4.8.0/man/alphalist.3' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/man/alphalist.3 (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/man/alphalist.3 (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/man/alphalist.3
M+F1E($ET"BYB<@HN:64@7%QN*"XD/CTS("YN92!<7"0S"BYE;"`N;F4@,PHN
M25`@(EQ<)#$B(%Q<)#(*+BX*+E1((&-D:U]A;'!H86QI<W0@,R`B,3D@2G5N
M92`Q.3DV(@HN4T@@3D%-10IN97=#1$M!;'!H86QI<W0L(&%C=&EV871E0T1+
M06QP:&%L:7-T+"!I;FIE8W1#1$M!;'!H86QI<W0L('-E=$-$2T%L<&AA;&ES
M="P*9')A=T-$2T%L<&AA;&ES="P@97)A<V5#1$M!;'!H86QI<W0L(&1E<W1R
M;WE#1$M!;'!H86QI<W0L(`IS971#1$M!;'!H86QI<W10<F50<F]C97-S+"!S
M971#1$M!;'!H86QI<W10;W-T4')O8V5S<R!<+0I#<F5A=&5S(&$@;6%N86=E
M9"!C=7)S97,@<V]R=&5D(&%L<&AA8F5T(&QI<W0@=VED9V5T+@HN4T@@4UE.
M3U!325,*+DQ0"BY"(&-C"BY222`B6R`B(")F;&%G(B`B(%Q\+EQ\+EQ\+B!=
M("(@(F9I;&4B("(@7'PN7'PN7'PN(@HN0B!<+6QC9&L*+E))(");("(@(FQI
M8G)A<GDB("(@7'PN7'PN7'PN(%TB"BY,4`HC:6YC;'5D92`\8V1K+F@^"BY,
M4`HN0DD@(D-$2T%,4$A!3$E35"`J;F5W0T1+06QP:&%L:7-T("A#1$M30U)%
M14X@*B(@(F-D:W-C<F5E;B(L"BY"22`B:6YT("(@(GAP;W,B+`HN0DD@(FEN
M="`B(")Y<&]S(BP*+D))(")I;G0@(B`B:&5I9VAT(BP*+D))(")I;G0@(B`B
M=VED=&@B+`HN0DD@(F-H87(@*B`B(")L86)E;"(L"BY"22`B8VAA<B`J*B`B
M(")L:7-T(BP*+D))(")I;G0@(B`B;&ES=%-I>F4B+`HN0DD@(F-H='EP92`B
M(")F:6QL97)#:&%R86-T97(B+`HN0DD@(F-H='EP92`B(")H:6=H;&EG:'0B
M+`HN0DD@(F)O;VQE86X@(B`B8F]X(BP*+D))(")B;V]L96%N("(@(G-H861O
M=R(I.PHN3%`*+D))(")C:&%R("IA8W1I=F%T94-$2T%L<&AA;&ES="`H0T1+
M04Q02$%,25-4("HB(")A;'!H86QI<W0B+`HN0DD@(F-H='EP92`J(B`B86-T
M:6]N<R(I.PHN3%`*+D))(")C:&%R("II;FIE8W1#1$M!;'!H86QI<W0@*$-$
M2T%,4$A!3$E35"`J(B`B86QP:&%L:7-T(BP*+D))(")C:'1Y<&4@(B`B:6YP
M=70B*3L*+DQ0"BY"22`B=F]I9"!S971#1$M!;'!H86QI<W0@*$-$2T%,4$A!
M3$E35"`J(B`B86QP:&%L:7-T(BP*+D))(")C:&%R("HJ("(@(FQI<W0B+`HN
M0DD@(FEN="`B(")L:7-T4VEZ92(L"BY"22`B8VAT>7!E("(@(F9I;&QE<D-H
M87)A8W1E<B(L"BY"22`B8VAT>7!E("(@(FAI9VAL:6=H="(L"BY"22`B8F]O
M;&5A;B`B(")B;W@B*3L*+DQ0"BY"22`B=F]I9"!D<F%W0T1+06QP:&%L:7-T
M("A#1$M!3%!(04Q)4U0@*B(@(F%L<&AA;&ES="(L"BY"22`B8F]O;&5A;B`B
M(")B;W@B*3L*+DQ0"BY"22`B=F]I9"!E<F%S94-$2T%L<&AA;&ES="`H0T1+
M04Q02$%,25-4("HB(")A;'!H86QI<W0B*3L*+DQ0"BY"22`B=F]I9"!D97-T
M<F]Y0T1+06QP:&%L:7-T("A#1$M!3%!(04Q)4U0@*B(@(F%L<&AA;&ES="(I
M.PHN3%`*+D))(")V;VED('-E=$-$2T%L<&AA;&ES=%!R95!R;V-E<W,@*$-$
M2T%,4$A!3$E35"`J(B`B86QP:&%L:7-T(BP*+D))(")04D]#15-31DX@(B`B
M8V%L;&)A8VLB+`HN0DD@(G9O:60@*B`B(")D871A(BD["BY,4`HN0DD@(G9O
M:60@<V5T0T1+06QP:&%L:7-T4&]S=%!R;V-E<W,@*$-$2T%,4$A!3$E35"`J
M(B`B86QP:&%L:7-T(BP*+D))(")04D]#15-31DX@(B`B8V%L;&)A8VLB+`HN
M0DD@(G9O:60@*B`B(")D871A(BD["BY,4`HN0DD@(G9O:60@8FEN9$-$2T]B
M:F5C="`H14]B:F5C=%1Y<&4@(B`B=VED9V5T5'EP92(L"BY"22`B=F]I9"`J
M(B`B;V)J96-T(BP*+D))(")C:'1Y<&4@(B`B:V5Y(BP*+D))(")"24Y$1DX@
M(B`B9G5N8W1I;VXB+`HN0DD@(G9O:60@*B(@(F1A=&$B*3L*+E-(($1%4T-2
M25!424]."E1H92!#9&L@86QP:&%L:7-T('=I9&=E="!I<R!A('=I9&=E="!W
M:&EC:"!A;&QO=W,@82!U<V5R('1O('-E;&5C="!F<F]M(&$@;&ES="`*;V8@
M86QP:&%B971I8V%L;'D@<V]R=&5D('=O<F1S+B!4:&4@=7-E<B!C86X@=7-E
M('1H92!A<G)O=R!K97ES('1O('1R879E<G-E"G1H<F]U9V@@=&AE(&QI<W0@
M;W(@='EP92!I;B!T:&4@8F5G:6YN:6YG(&]F('1H92!W;W)D(&%N9"!T:&4@
M;&ES="!W:6QL(`IA=71O;6%T:6-A;&QY(&%D:G5S="!I='-E;&8@:6X@=&AE
M(&-O<G)E8W0@<&QA8V4@:6X@=&AE('-C<F]L;&EN9R!L:7-T+B!4:&ES('=I
M9&=E="P*;&EK92!T:&4@9FEL92!S96QE8W1O<B!W:61G970L(&ES(&$@8V]M
M<&]U;F0@=VED9V5T(&]F(&)O=&@@=&AE(&5N=')Y(&9I96QD('=I9&=E=`IA
M;F0@=&AE('-C<F]L;&EN9R!L:7-T('=I9&=E="X*"BY32"!!5D%)3$%"3$4@
M1E5.0U1)3TY3"D-$2T%,4$A!3$E35"`J;F5W0T1+06QP:&%L:7-T("A#1$M3
M0U)%14X@*B!<9C)S8W)E96Y<9C$L(&EN="!<9C)X<&]S7&8Q+"!I;G0@7&8R
M>7!O<UQF,2P@:6YT(%QF,FAE:6=H=%QF,2P@:6YT(%QF,G=I9'1H7&8Q+"!C
M:&%R("I<9C)L86)E;%QF,2P@8VAA<B`J*EQF,FQI<W1<9C$L(&EN="!<9C)L
M:7-T4VEZ95QF,2P@8VAT>7!E(%QF,F9I;&QE<D-H87)<9C$L(&-H='EP92!<
M9C)H:6=H;&EG:'1<9C$L(&)O;VQE86X@7&8R8F]X7&8Q+"!B;V]L96%N(%QF
M,G-H861O=UQF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@8W)E871E<R!A('!O
M:6YT97(@=&\@86X@86QP:&%L:7-T('=I9&=E="X@5&AE(%QF,G-C<F5E;EQF
M,2!P87)A;65T97(*:7,@=&AE('-C<F5E;B!Y;W4@=VES:"!T:&ES('=I9&=E
M="!T;R!B92!P;&%C960@:6XN(%1H92!P87)A;65T97(@7&8R>'!O<UQF,2`*
M8V]N=')O;',@=&AE('!L86-E;65N="!O9B!T:&4@;V)J96-T(&%L;VYG('1H
M92!H;W)I>F]N=&%L(&%X:7,N(%1H:7,@<&%R86UE=&5R"F-A;B!T86ME(&%N
M(&EN=&5G97(@=F%L=64@;W(@;VYE(&]F('1H92!P<F4M9&5F:6YE9"!V86QU
M97,@;V8@7&8T3$5&5%QF,2P@"EQF-%))1TA47&8Q+"!A;F0@7&8T0T5.5$52
M7&8Q+B!4:&4@<&%R86UE=&5R(%QF,GEP;W-<9C$@8V]N=')O;',@=&AE('!L
M86-E;65N=`IO9B!T:&4@;V)J96-T(&%L;VYG('1H92!V97)T:6-A;"!A>&ES
M+B!4:&ES('!A<F%M971E<B!C86X@86-C97!T(&%N(&EN=&5G97(@"G9A;'5E
M(&]R(&]N92!O9B!T:&4@<')E+61E9FEN960@=F%L=65S(&]F(%QF-%1/4%QF
M,2P@7&8T0D]45$]-7&8Q+"!A;F0@"EQF-$-%3E1%4EQF,2X@5&AE('!A<F%M
M971E<G,@7&8R:&5I9VAT7&8Q(&%N9"!<9C)W:61T:%QF,2!C;VYT<F]L('1H
M92!H96EG:'0@"F%N9"!W:61T:"!O9B!T:&4@=VED9V5T+B!4:&4@7&8R;&%B
M96Q<9C$@<&%R86UE=&5R(&ES('1H92!S=')I;F<@=VAI8V@@=VEL;"!B92`*
M9&ES<&QA>65D(&EN('1H92!L86)E;"!O9B!T:&4@96YT<GD@9FEE;&0N(%1H
M92!P87)A;65T97(@7&8R;&ES=%QF,2!I<R!T:&4@;&ES=`IO9B!W;W)D<R!W
M:&EC:"!W:6QL(&)E(&1I<W!L87EE9"!I;B!T:&4@<V-R;VQL:6YG(&QI<W0N
M(%1H:7,@;&ES="!D;V5S(&YO="!H879E"G1O(&)E('-O<G1E9"P@=&AI<R!W
M:61G970@875T;VUA=&EC86QL>2!S;W)T<R!T:&4@;&ES="X@5&AE('!A<F%M
M971E<B!<9C)L:7-T4VEZ95QF,0IT96QL<R!T:&4@=VED9V5T(&AO=R!L87)G
M92!T:&4@=V]R9"!L:7-T(&ES+B`@5&AE(&9I96QD(%QF,F9I;&QE<D-H87)A
M8W1E<EQF,2`*:7,@=&AE(&-H87)A8W1E<B!W:&EC:"!I<R!T;R!B92!D:7-P
M;&%Y960@:6X@86X@96UP='D@<W!A8V4@:6X@=&AE(&5N=')Y(&9I96QD+@I4
M:&4@9FEE;&0@7&8R:&EG:&QI9VAT7&8Q(&ES('1H92!A='1R:6)U=&4@;V8@
M=&AE(&AI9VAL:6=H="!B87(@:6X@=&AE('-C<F]L;&EN9PIL:7-T+B!4:&4@
M7&8R8F]X7&8Q('!A<F%M971E<B!S=&%T97,@=VAE=&AE<B!T:&4@=VED9V5T
M('=I;&P@8F4@9')A=VX@=VET:"`*82!B;W@@87)O=6YD(&ET(&]R(&YO="X@
M5&AE(%QF,G-H861O=UQF,2!P87)A;65T97(@86-C97!T<R!A(&)O;VQE86X@
M=F%L=64*=&\@='5R;B!T:&4@<VAA9&]W(&]N(&]R(&]F9B!A<F]U;F0@=&AI
M<R!W:61G970N($EF('1H92!W:61G970@8V]U;&0@;F]T(&)E"F-R96%T960@
M=&AE;B!A(%QF-$Y53$Q<9C$@<&]I;G1E<B!I<R!R971U<FYE9"X*+E)%"@IC
M:&%R("IA8W1I=F%T94-$2T%L<&AA;&ES="`H0T1+04Q02$%,25-4("I<9C)A
M;'!H86QI<W1<9C$L(&-H='EP92`J7&8R86-T:6]N<UQF,2D["BY24R`S"E1H
M:7,@9G5N8W1I;VX@86-T:79A=&5S('1H92!A;'!H86QI<W0@=VED9V5T(&%N
M9"!L971S('1H92!U<V5R(&EN=&5R86-T('=I=&@@=&AE"G=I9&=E="X@5&AE
M('!A<F%M971E<B!<9C)A;'!H86QI<W1<9C$@:7,@82!P;VEN=&5R('1O(&$@
M;F]N+4Y53$P@86QP:&%L:7-T"G=I9&=E="X@268@=&AE(%QF,F%C=&EO;G-<
M9C$@<&%R86UE=&5R(&ES('!A<W-E9"!W:71H(&$@;F]N+4Y53$P@=F%L=64L
M('1H92`*8VAA<F%C=&5R<R!I;B!T:&4@87)R87D@=VEL;"!B92!I;FIE8W1E
M9"!I;G1O('1H92!W:61G970N(%1O(&%C=&EV871E('1H92!W:61G970*:6YT
M97)A8W1I=F5L>2!P87-S(&EN(&$@7&8T3E5,3%QF,2!P;VEN=&5R(&9O<B!<
M9C)A8W1I;VYS7&8Q+B!)9B!T:&4@8VAA<F%C=&5R(&5N=&5R960*:6YT;R!T
M:&ES('=I9&=E="!I<R!<9C1215154DY<9C$@=&AE;B!T:&ES(&9U;F-T:6]N
M('=I;&P@<F5T=7)N(&$@7&8T8VAA<B`J7&8Q(`IO9B!T:&4@:6YF;W)M871I
M;VX@=VAI8V@@=V%S('1Y<&5D(&EN('1H92!F:65L9"X@268@=&AE(%QF-%1!
M0EQF,2!C:&%R86-T97(@:7,@:&ET"G1H96X@=&AE('=I9&=E="!W:6QL('1R
M>2!T;R!C;VUP;&5T92!T:&4@=V]R9"!I;B!T:&4@96YT<GD@9FEE;&0N($EF
M('1H92!W:61G970*:7,@97AI=&5D('=I=&@@=&AE(%QF-%)%5%523EQF,2!C
M:&%R86-T97(@=&AE;B!T:&4@<W1R=6-T=7)E(&UE;6)E<B!<9C1E>&ET5'EP
M95QF,0IW:6QL(&)E('-E="!T;R!<9C1V3D]234%,7&8Q+B!)9B!T:&4@=VED
M9V5T('=A<R!E>&ET960@=VET:"!T:&4@7&8T15-#05!%7&8Q(&ME>0IT:&5N
M('1H92!S=')U8W1U<F4@;65M8F5R(%QF-&5X:714>7!E7&8Q('=I;&P@8F4@
M<V5T('1O(%QF-'9%4T-!4$5?2$E47&8Q(&%N9`IT:&4@=VED9V5T(')E='5R
M;G,@7&8T3E5,3%QF,2X*+E)%"@IC:&%R("II;FIE8W1#1$M!;'!H86QI<W0@
M*$-$2T%,4$A!3$E35"`J7&8R86QP:&%L:7-T7&8Q+"!C:'1Y<&4@7&8R8VAA
M<F%C=&5R7&8Q*3L*+E)3(#,*5&AI<R!F=6YC=&EO;B!I;FIE8W1S(&$@<VEN
M9VQE(&-H87)A8W1E<B!I;G1O('1H92!W:61G970N(%1H92!P87)A;65T97(@
M"EQF,F%L<&AA;&ES=%QF,2!I<R!A('!O:6YT97(@=&\@82!N;VXM3E5,3"!A
M;'!H86QI<W0@=VED9V5T+B!4:&4@<&%R86UE=&5R(`I<9C)C:&%R86-T97)<
M9C$@:7,@=&AE(&-H87)A8W1E<B!T;R!I;FIE8W0@:6YT;R!T:&4@=VED9V5T
M+B!)9B!T:&4@8VAA<F%C=&5R(`II;FIE8W1E9"!I;G1O('1H:7,@=VED9V5T
M('=A<R!<9C1215154DY<9C$@=&AE;B!T:&4@:6YF;W)M871I;VX@:6X@=&AE
M(&5N=')Y"F9I96QD(&]F('1H:7,@=VED9V5T('=I;&P@8F4@<F5T=7)N960@
M86YD('1H92!S=')U8W1U<F4@;65M8F5R(%QF-&5X:714>7!E7&8Q"G=I;&P@
M8F4@<V5T('1O(%QF-'9.3U)-04Q<9C$N($EF('1H92!C:&%R86-T97(@:6YJ
M96-T960@=V%S(%QF-$530T%015QF,2!T:&5N"G1H92!W:61G970@=VEL;"!E
M>&ET+"!R971U<FX@82!<9C1.54Q,7&8Q('!O:6YT97(L(&%N9"!S970@=&AE
M('-T<G5C='5R92!M96UB97(*7&8T97AI=%1Y<&5<9C$@=&\@7&8T=D530T%0
M15](251<9C$N($%N>2!O=&AE<B!C:&%R86-T97(@:6YJ96-T960@:6YT;R!T
M:&4@=VED9V5T"G=I;&P@<V5T('1H92!S=')U8W1U<F4@;65M8F5R(%QF-&5X
M:714>7!E7&8Q('1O(&$@=F%L=64@;V8@7&8T=D5!4DQ97T58251<9C$@86YD
M"F$@7&8T3E5,3%QF,2!P;VEN=&5R('=I;&P@8F4@<F5T=7)N960N"BY210H*
M=F]I9"!S971#1$M!;'!H86QI<W0@*$-$2T%,4$A!3$E35"`J7&8R86QP:&%L
M:7-T7&8Q+"!C:&%R("HJ7&8R;&ES=%QF,2P@:6YT(%QF,FQI<W13:7IE7&8Q
M+"!C:'1Y<&4@7&8R9FEL;&5R0VAA<F%C=&5R7&8Q+"!C:'1Y<&4@7&8R:&EG
M:&QI9VAT7&8Q+"!B;V]L96%N(%QF,F)O>%QF,2D["BY24R`S"E1H:7,@9G5N
M8W1I;VX@;&5T<R!T:&4@<')O9W)A;6UE<B!M;V1I9GD@8V5R=&%I;B!E;&5M
M96YT<R!O9B!A;B!A;')E861Y(`ID969I;F5D(&%L<&AA;&ES="!W:61G970N
M(%1H92!P87)A;65T97(@;F%M97,@8V]R<F5S<&]N9"!T;R!T:&4@<V%M92!P
M87)A;65T97(@"FYA;65S(&QI<W1E9"!I;B!T:&4@7&8T;F5W0T1+06QP:&%L
M:7-T7&8Q(&9U;F-T:6]N+@HN4D4*"G9O:60@9')A=T-$2T%L<&AA;&ES="`H
M0T1+04Q02$%,25-4("I<9C)A;'!H86QI<W1<9C$L(&)O;VQE86X@7&8R8F]X
M7&8Q*3L*+E)3(#,*5&AI<R!F=6YC=&EO;B!D<F%W<R!T:&4@86QP:&%L:7-T
M('=I9&=E="!O;B!T:&4@<V-R965N+B!4:&4@7&8R8F]X7&8Q(&]P=&EO;B`*
M9')A=W,@=&AE('=I9&=E="!W:71H(&]R('=I=&AO=70@82!B;W@N"BY210H*
M=F]I9"!E<F%S94-$2T%L<&AA;&ES="`H0T1+04Q02$%,25-4("I<9C)A;'!H
M86QI<W1<9C$I.PHN4E,@,PI4:&ES(&9U;F-T:6]N(')E;6]V97,@=&AE('=I
M9&=E="!F<F]M('1H92!S8W)E96XN(%1H:7,@9&]E<R!<9C1.3U1<9C$@9&5S
M=')O>0IT:&4@=VED9V5T+@HN4D4*"G9O:60@9&5S=')O>4-$2T%L<&AA;&ES
M="`H0T1+04Q02$%,25-4("I<9C)A;'!H86QI<W1<9C$I.PHN4E,@,PI4:&ES
M(&9U;F-T:6]N(')E;6]V97,@=&AE('=I9&=E="!F<F]M('1H92!S8W)E96X@
M86YD(&9R965S('5P(&%N>2!M96UO<GD@=&AE"F]B:F5C="!M87D@8F4@=7-I
M;F<N"BY210H*=F]I9"!S971#1$M!;'!H86QI<W10<F50<F]C97-S("A#1$M!
M3%!(04Q)4U0@*EQF,F%L<&AA;&ES=%QF,2P@4%)/0T534T9.(%QF,F9U;F-T
M:6]N7&8Q+"!V;VED("I<9C)D871A7&8Q*3L*+E)3(#,*5&AI<R!F=6YC=&EO
M;B!A;&QO=W,@=&AE('5S97(@=&\@:&%V92!T:&4@=VED9V5T(&-A;&P@82!F
M=6YC=&EO;B!A9G1E<B!A(&ME>0II<R!H:70@86YD(&)E9F]R92!T:&4@:V5Y
M(&ES(&%P<&QI960@=&\@=&AE('=I9&=E="X@5&AE('!A<F%M971E<B!<9C)F
M=6YC=&EO;EQF,0II9B!O9B!T>7!E(%QF-%!23T-%4U-&3EQF,2X@5&AE('!A
M<F%M971E<B!<9C)D871A7&8Q(&ES(&$@<&]I;G1E<B!T;R`*7&8T=F]I9%QF
M,2X@5&\@;&5A<FX@;6]R92!A8F]U="!P<F4M<')O8V5S<VEN9R!R96%D('1H
M92!<9C1C9&M?<')O8V5S<UQF,0IM86YU86P@<&%G92X*+E)%"B`*=F]I9"!S
M971#1$M!;'!H86QI<W10;W-T4')O8V5S<R`H0T1+04Q02$%,25-4("I<9C)A
M;'!H86QI<W1<9C$L(%!23T-%4U-&3B!<9C)F=6YC=&EO;EQF,2P@=F]I9"`J
M7&8R9&%T85QF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@86QL;W=S('1H92!U
M<V5R('1O(&AA=F4@=&AE('=I9&=E="!C86QL(&$@9G5N8W1I;VX@869T97(@
M=&AE"FME>2!H87,@8F5E;B!A<'!L:65D('1O('1H92!W:61G970N("!4:&4@
M<&%R86UE=&5R(%QF,F9U;F-T:6]N7&8Q(&EF(&]F('1Y<&4*7&8T4%)/0T53
M4T9.7&8Q+B!4:&4@<&%R86UE=&5R(%QF,F1A=&%<9C$@:7,@82!P;VEN=&5R
M('1O(%QF-'9O:61<9C$N(%1O"FQE87)N(&UO<F4@86)O=70@<&]S="UP<F]C
M97-S:6YG(')E860@=&AE(%QF-&-D:U]P<F]C97-S7&8Q(&UA;G5A;"!P86=E
M+@HN4D4*"G9O:60@8FEN9$-$2T]B:F5C="`H14]B:F5C=%1Y<&4@7&8R=VED
M9V5T5'EP95QF,2P@=F]I9"`J7&8R;V)J96-T7&8Q+"!C:&%R(%QF,FME>5QF
M,2P@0DE.1$9.(%QF,F9U;F-T:6]N7&8Q+"!V;VED("I<9C)D871A7&8Q*3L*
M+E)3(#,*5&AI<R!F=6YC=&EO;B!A;&QO=W,@=&AE('5S97(@=&\@8W)E871E
M('-P96-I86P@:V5Y(&)I;F1I;F=S+B!4:&4@"EQF,G=I9&=E=%1Y<&5<9C$@
M<&%R86UE=&5R(&ES(&$@9&5F:6YE9"!T>7!E('=H:6-H('-T871E<R!W:&%T
M($-D:R!O8FIE8W0@"G1Y<&4@:7,@8F5I;F<@=7-E9"X@5&\@;&5A<FX@;6]R
M92!A8F]U="!T:&4@='EP92!<9C1%3V)J96-T5'EP95QF,2!R96%D(`IT:&4@
M7&8R8V1K7V)I;F1I;F=<9C$@;6%N=6%L('!A9V4N(%1H92!<9C)O8FIE8W1<
M9C$@<&%R86UE=&5R(&ES('1H92!P;VEN=&5R"G1O('1H92!W:61G970@;V)J
M96-T+B!4:&4@7&8R:V5Y7&8Q(&ES('1H92!C:&%R86-T97(@=&\@8FEN9"X@
M5&AE(`I<9C)F=6YC=&EO;EQF,2!I<R!T:&4@9G5N8W1I;VX@='EP92X@5&\@
M;&5A<FX@;6]R92!A8F]U="!T:&4@:V5Y(&)I;F1I;F<@"F-A;&PM8F%C:R!F
M=6YC=&EO;B!T>7!E<R!R96%D('1H92!<9C1C9&M?8FEN9&EN9UQF,2!M86YU
M86P@<&%G92X@5&AE(&QA<W0@"G!A<F%M971E<B!<9C)D871A7&8Q(&ES(&$@
M<&]I;G1E<B!T;R!A;GD@9&%T82!T:&%T(&YE961S('1O(&=E="!P87-S960@
M=&\@"G1H92!C86QL+6)A8VL@9G5N8W1I;VXN"BY210H*+E-(($M%62!"24Y$
M24Y'4PI7:&5N('1H92!W:61G970@:7,@86-T:79A=&5D('1H97)E(&%R92!S
M979E<F%L(&1E9F%U;'0@:V5Y(&)I;F1I;F=S('=H:6-H('=I;&P*:&5L<"!T
M:&4@=7-E<B!E;G1E<B!O<B!M86YI<'5L871E('1H92!I;F9O<FUA=&EO;B!Q
M=6EC:VQY+B!3:6YC92!T:&ES('=I9&=E="!I<R`*8G5I;'0@9G)O;2!B;W1H
M('1H92!S8W)O;&QI;F<@;&ES="!W:61G970@86YD('1H92!E;G1R>2!F:65L
M9"!W:61G970L('1H92!K97D*8FEN9&EN9W,@87)E('1H92!S86UE(&9O<B!T
M:&4@<F5S<&5C=&EV92!F:65L9',N(%1H92!E>'1R82!K97D@8FEN9&EN9W,@
M87)E"FQI<W1E9"!B96QO=RX*+DQ0"BYN9@I<9C1+97D@0FEN9&EN9W-<9C$*
M+E)3(#,*7&8R2V5Y("`@("`@("`@($%C=&EO;EQF,0I5<"!!<G)O=R`@("`@
M4V-R;VQL<R!T:&4@<V-R;VQL:6YG(&QI<W0@=7`@;VYE(&QI;F4N"D1O=VX@
M07)R;W<@("!38W)O;&QS('1H92!S8W)O;&QI;F<@;&ES="!D;W=N(&]N92!L
M:6YE+@I086=E(%5P("`@("`@4V-R;VQL<R!T:&4@<V-R;VQL:6YG(&QI<W0@
M=7`@;VYE('!A9V4N"D-44DPM0B`@("`@("!38W)O;&QS('1H92!S8W)O;&QI
M;F<@;&ES="!U<"!O;F4@<&%G92X*4&%G92!$;W=N("`@(%-C<F]L;',@=&AE
M('-C<F]L;&EN9R!L:7-T(&1O=VX@;VYE('!A9V4N"D-44DPM1B`@("`@("!3
M8W)O;&QS('1H92!S8W)O;&QI;F<@;&ES="!D;W=N(&]N92!P86=E+@I486(@
M("`@("`@("`@5')I97,@=&\@8V]M<&QE=&4@=&AE('=O<F0@:6X@=&AE(&5N
M=')Y(&9I96QD+B`*("`@("`@("`@("`@($EF('1H92!W;W)D('-E9VUE;G0@
M:7,@;F]T('5N:7%U92!T:&5N('1H90H@("`@("`@("`@("`@=VED9V5T('=I
M;&P@8F5E<"!A;F0@<')E<V5N="!A(&QI<W0@;V8@8VQO<V4*("`@("`@("`@
M("`@(&UA=&-H97,N"E)E='5R;B`@("`@("!2971U<FYS('1H92!W;W)D(&EN
M('1H92!E;G1R>2!F:65L9"X@270@86QS;PH@("`@("`@("`@("`@<V5T<R!T
M:&4@<W1R=6-T=7)E(&UE;6)E<B!<9C1E>&ET5'EP95QF,2!I;@H@("`@("`@
M("`@("`@=&AE('=I9&=E="!P;VEN=&5R('1O('1H92!V86QU92!O9B!<9C1V
M3D]234%,7&8Q+@I%<V-A<&4@("`@("`@17AI=',@=&AE('=I9&=E="!A;F0@
M<F5T=7)N<R!A(%QF-$Y53$Q<9C$@<&]I;G1E<BX*("`@("`@("`@("`@($ET
M(&%L<V\@<V5T<R!T:&4@<W1R=6-T=7)E(&UE;6)E<B!<9C1E>&ET5'EP95QF
M,0H@("`@("`@("`@("`@:6X@=&AE('=I9&=E="!P;VEN=&5R('1O('1H92!V
M86QU92!O9B!<9C1V15-#05!%7TA)5%QF,2X*+E)%"@HN9FD*+E-((%-%12!!
M3%-/"BY"4B!C9&L@*#,I+`HN0E(@8V1K7V)I;F1I;F<@*#,I+`HN0E(@8V1K
M7V1I<W!L87D@*#,I+`HN0E(@8V1K7W-C<F5E;B`H,RD*+E-(($Y/5$53"BY0
M4`I4:&ES('=I9&=E="!I<R!C<F5A=&5D(&9R;VT@=&AE('-C<F]L;&EN9R!L
M:7-T('=I9&=E="!A;F0@=&AE(&5N=')Y(&9I96QD(`IW:61G970N("!4:&ES
M(&ES(&$@9V]O9"!E>&%M<&QE(&]N(&AO=R!T;R!B=6EL9"!Y;W5R(&]W;B!W
M:61G971S('5S:6YG('1H92`*8F%S92!W:61G971S('!R;W9I9&5D(&EN('1H
M:7,@9&ES=')I8G5T:6]N+@HN4%`*5&AE(&AE861E<B!F:6QE(%QF-#QC9&LN
M:#Y<9C$@875T;VUA=&EC86QL>2!I;F-L=61E<R!T:&4@:&5A9&5R(&9I;&5S
M"EQF-#QC=7)S97,N:#Y<9C$L(%QF-#QS=&1L:6(N:#Y<9C$L(%QF-#QS=')I
M;F<N:#Y<9C$L(%QF-#QC='EP92YH/EQF,2P*7&8T/'5N:7-T9"YH/EQF,2P@
M7&8T/&1I<F5N="YH/EQF,2P@7&8T/'1I;64N:#Y<9C$L(%QF-#QE<G)N;RYH
M/EQF,2P*7&8T/'!W9"YH/EQF,2P@7&8T/&=R<"YH/EQF,2P@7&8T/'-Y<R]S
M=&%T+F@^7&8Q+"!A;F0@7&8T/'-Y<R]T>7!E<RYH/EQF,2X*5&AE(%QF-#QC
M=7)S97,N:#Y<9C$@:&5A9&5R(&9I;&4@:6YC;'5D97,@7&8T/'-T9&EO+F@^
M7&8Q(&%N9"!<9C0\=6YC=')L+F@^7&8Q+@HN4%`*268@>6]U(&AA=F4@7&8T
M3F-U<G-E<UQF,2!I;G-T86QL960@;VX@>6]U<B!M86-H:6YE(&%D9"`M1$Y#
M55)315,@=&\@=&AE(`IC;VUP:6QE(&QI;F4@=&\@:6YC;'5D92!T:&4@3F-U
;<G-E<R!H96%D97(@9FEL97,@:6YS=&5A9"X*
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/man/alphalist.3' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/man/alphalist.3' &&
  chmod 0444 'cdk4.8.0/man/alphalist.3' ||
  echo 'restore of cdk4.8.0/man/alphalist.3 failed'
  shar_count="`wc -c < 'cdk4.8.0/man/alphalist.3'`"
  test 10467 -eq "$shar_count" ||
    echo "cdk4.8.0/man/alphalist.3: original size 10467, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/man/calendar.3 ==============
if test -f 'cdk4.8.0/man/calendar.3' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/man/calendar.3 (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/man/calendar.3 (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/man/calendar.3
M+F1E($ET"BYB<@HN:64@7%QN*"XD/CTS("YN92!<7"0S"BYE;"`N;F4@,PHN
M25`@(EQ<)#$B(%Q<)#(*+BX*+E1((&-D:U]C86QE;F1A<B`S("(R-B!*=6YE
M(#$Y.38B"BY32"!.04U%"FYE=T-$2T-A;&5N9&%R+"!A8W1I=F%T94-$2T-A
M;&5N9&%R+"!I;FIE8W1#1$M#86QE;F1A<BP@<V5T0T1+0V%L96YD87(L"G-E
M=$-$2T-A;&5N9&%R1&%T92P@<V5T0T1+0V%L96YD87)-87)K97(L(')E;6]V
M94-$2T-A;&5N9&%R36%R:V5R+`ID<F%W0T1+0V%L96YD87(L(&5R87-E0T1+
M0V%L96YD87(L(&1E<W1R;WE#1$M#86QE;F1A<BP@<V5T0T1+0V%L96YD87)0
M<F50<F]C97-S+"`*<V5T0T1+0V%L96YD87)0;W-T4')O8V5S<R!<+2!#<F5A
M=&5S(&$@;6%N86=E9"!C=7)S97,@8V%L96YD87(@=VED9V5T+@HN4T@@4UE.
M3U!325,*+DQ0"BY"(&-C"BY222`B6R`B(")F;&%G(B`B(%Q\+EQ\+EQ\+B!=
M("(@(F9I;&4B("(@7'PN7'PN7'PN(@HN0B!<+6QC9&L*+E))(");("(@(FQI
M8G)A<GDB("(@7'PN7'PN7'PN(%TB"BY,4`HN3%`*+D))(")#1$M#04Q%3D1!
M4B`J;F5W0T1+0V%L96YD87(@*$-$2U-#4D5%3B`J(B`B8V1K<V-R965N(BP*
M+D))(")I;G0@(B`B>'!O<R(L"BY"22`B:6YT("(@(GEP;W,B+`HN0DD@(FEN
M="`B(")D87DB+`HN0DD@(FEN="`B(")M;VYT:"(L"BY"22`B:6YT("(@(GEE
M87(B+`HN0DD@(F-H='EP92`B(")D87E!='1R:6(B+`HN0DD@(F-H='EP92`B
M(")M;VYT:$%T=')I8B(L"BY"22`B8VAT>7!E("(@(GEE87)!='1R:6(B+`HN
M0DD@(F-H='EP92`B(")H:6=H;&EG:'0B+`HN0DD@(F)O;VQE86X@(B`B8F]X
M(BP*+D))(")B;V]L96%N("(@(G-H861O=R(I.PHN3%`*+D))(")T:6UE7W0@
M86-T:79A=&5#1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@*B(@(F-A;&5N9&%R
M(BP*+D))(")C:'1Y<&4@(B`B*F%C=&EO;G,B*3L*+DQ0"BY"22`B=&EM95]T
M(&EN:F5C=$-$2T-A;&5N9&%R("A#1$M#04Q%3D1!4B`J(B`B8V%L96YD87(B
M+`HN0DD@(F-H='EP92`B(")I;G!U="(I.PHN3%`*+D))(")I;G0@<V5T0T1+
M0V%L96YD87(@*$-$2T-!3$5.1$%2("HB(")C86QE;F1A<B(L"BY"22`B:6YT
M("(@(F1A>2(L"BY"22`B:6YT("(@(FUO;G1H(BP*+D))(")I;G0@(B`B>65A
M<B(L"BY"22`B8VAT>7!E("(@(F1A>4%T=')I8B(L"BY"22`B8VAT>7!E("(@
M(FUO;G1H071T<FEB(BP*+D))(")C:'1Y<&4@(B`B>65A<D%T=')I8B(L"BY"
M22`B8F]O;&5A;B`B(")B;W@B*3L*+DQ0"BY"22`B=F]I9"!S971#1$M#86QE
M;F1A<D1A=&4@*$-$2T-!3$5.1$%2("HB(")C86QE;F1A<B(L"BY"22`B:6YT
M("(@(F1A>2(L"BY"22`B:6YT("(@(FUO;G1H(BP*+D))(")I;G0@(B`B>65A
M<B(I.PHN3%`*+D))(")V;VED('-E=$-$2T-A;&5N9&%R36%R:V5R("A#1$M#
M04Q%3D1!4B`J(B`B8V%L96YD87(B+`HN0DD@(FEN="`B(")D87DB+`HN0DD@
M(FEN="`B(")M;VYT:"(L"BY"22`B:6YT("(@(GEE87(B+`HN0DD@(F-H='EP
M92`B(")M87)K97(B*3L*+DQ0"BY"22`B=F]I9"!R96UO=F5#1$M#86QE;F1A
M<DUA<FME<B`H0T1+0T%,14Y$05(@*B(@(F-A;&5N9&%R(BP*+D))(")I;G0@
M(B`B9&%Y(BP*+D))(")I;G0@(B`B;6]N=&@B+`HN0DD@(FEN="`B(")Y96%R
M(BD["BY,4`HN0DD@(G9O:60@9')A=T-$2T-A;&5N9&%R("A#1$M#04Q%3D1!
M4B`J(B`B8V%L96YD87(B+`HN0DD@(F)O;VQE86X@(B`B8F]X(BD["BY,4`HN
M0DD@(G9O:60@97)A<V5#1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@*B(@(F-A
M;&5N9&%R(BD["BY,4`HN0DD@(G9O:60@9&5S=')O>4-$2T-A;&5N9&%R("A#
M1$M#04Q%3D1!4B`J(B`B8V%L96YD87(B*3L*+DQ0"BY"22`B=F]I9"!S971#
M1$M#86QE;F1A<E!R95!R;V-E<W,@*$-$2T-!3$5.1$%2("HB(")C86QE;F1A
M<B(L"BY"22`B4%)/0T534T9.("(@(F-A;&QB86-K(BP*+D))(")V;VED("H@
M(B`B9&%T82(I.PHN3%`*+D))(")V;VED('-E=$-$2T-A;&5N9&%R4&]S=%!R
M;V-E<W,@*$-$2T-!3$5.1$%2("HB(")C86QE;F1A<B(L"BY"22`B4%)/0T53
M4T9.("(@(F-A;&QB86-K(BP*+D))(")V;VED("H@(B`B9&%T82(I.PHN3%`*
M+D))(")V;VED(&)I;F1#1$M/8FIE8W0@*$5/8FIE8W14>7!E("(@(G=I9&=E
M=%1Y<&4B+`HN0DD@(G9O:60@*B(@(F]B:F5C="(L"BY"22`B8VAT>7!E("(@
M(FME>2(L"BY"22`B0DE.1$9.("(@(F9U;F-T:6]N(BP*+D))(")V;VED("HB
M(")D871A(BD["BY32"!$15-#4DE05$E/3@I4:&4@0V1K(&-A;&5N9&%R('=I
M9&=E="!C<F5A=&5S(&$@<&]P+75P(&-A;&5N9&%R+B!4:&4@8V%L96YD87(@
M=VED9V5T(&%L;&]W<PIT:&4@=7-E<B!T;R!T<F%V97)S92!T:')O=6=H(&UO
M;G1H<R]Y96%R<RX*"BY32"!!5D%)3$%"3$4@1E5.0U1)3TY3"D-$2T-!3$5.
M1$%2("IN97=#1$M#86QE;F1A<B`H0T1+4T-2145.("I<9C)S8W)E96Y<9C$L
M(&EN="!<9C)X<&]S7&8Q+"!I;G0@7&8R>7!O<UQF,2P@:6YT(%QF,F1A>5QF
M,2P@:6YT(%QF,FUO;G1H7&8Q+"!I;G0@7&8R>65A<EQF,2P@8VAT>7!E(%QF
M,F1A>4%T=')I8EQF,2P@8VAT>7!E(%QF,FUO;G1H071T<FEB7&8Q+"!C:'1Y
M<&4@7&8R>65A<D%T=')I8EQF,2P@8VAT>7!E(%QF,FAI9VAL:6=H=%QF,2P@
M8F]O;&5A;B!<9C)B;WA<9C$L(&)O;VQE86X@7&8R<VAA9&]W7&8Q*3L*+E)3
M(#,*5&AI<R!F=6YC=&EO;B!C<F5A=&5S(&$@<&]I;G1E<B!T;R!A(&-A;&5N
M9&%R('=I9&=E="X@5&AE(%QF,G-C<F5E;EQF,2`*<&%R86UE=&5R(&ES('1H
M92!S8W)E96X@>6]U('=I<V@@=&AI<R!W:61G970@=&\@8F4@<&QA8V5D(&EN
M+B!4:&4@<&%R86UE=&5R(`I<9C)X<&]S7&8Q(&-O;G1R;VQS('1H92!P;&%C
M96UE;G0@;V8@=&AE(&]B:F5C="!A;&]N9R!T:&4@:&]R:7IO;G1A;"!A>&ES
M+B`*5&AI<R!P87)A;65T97(@8V%N('1A:V4@:6YT96=E<B!V86QU92!O<B!O
M;F4@;V8@=&AE('!R92UD969I;F5D('9A;'5E<R!O9B`*7&8T3$5&5%QF,2P@
M7&8T4DE'2%1<9C$L(&%N9"!<9C1#14Y415)<9C$N(%1H92!P87)A;65T97(@
M7&8R>7!O<UQF,2!C;VYT<F]L<R`*=&AE('!L86-E;65N="!O9B!T:&4@;V)J
M96-T(&%L;VYG('1H92!V97)T:6-A;"!A>&ES+B!4:&ES('!A<F%M971E<B!C
M86X@86-C97!T"F%N(&EN=&5G97(@=F%L=64@;W(@82!P<F4M9&5F:6YE9"!V
M86QU92!O9B!<9C143U!<9C$L(%QF-$)/5%1/35QF,2P@86YD(`I<9C1#14Y4
M15)<9C$N(%1H92!P87)A;65T97)S(%QF,GEE87)<9C$L(%QF,FUO;G1H7&8Q
M+"!A;F0@7&8R9&%Y7&8Q('-E="!T:&4@"FEN:71I86P@9&%T92!O9B!T:&4@
M8V%L96YD87(N(%1H92!T:')E92!P87)A;65T97)S(&9O;&QO=VEN9R!<9C)Y
M96%R071T<FEB7&8Q+`I<9C)M;VYT:$%T=')I8EQF,2P@86YD(%QF,F1A>4%T
M=')I8EQF,2!R97!R97-E;G0@=&AE(&%T=')I8G5T97,@;V8@=&AE('EE87(L
M(`IM;VYT:"P@86YD(&1A>2!R97-P96-T9G5L;'DN(%1H92!<9C)H:6=H;&EG
M:'1<9C$@<&%R86UE=&5R('-E=',@=&AE(&AI9VAL:6=H="`*;V8@=&AE(&-U
M<G)E;G1L>2!S96QE8W1E9"!D87DN(%1H92!<9C)B;WA<9C$@<&%R86UE=&5R
M('-T871E<R!W:&5T:&5R('1H92!W:61G970*=VEL;"!B92!D<F%W;B!W:71H
M(&$@8F]X(&%R;W5N9"!I="!O<B!N;W0N(%1H92!<9C)S:&%D;W=<9C$@<&%R
M86UE=&5R(&%C8V5P=',@"F$@8F]O;&5A;B!V86QU92!T;R!T=7)N('1H92!S
M:&%D;W<@;VX@;W(@;V9F(&%R;W5N9"!T:&ES('=I9&=E="X@268@=&AE('=I
M9&=E=`IC;W5L9"!N;W0@8F4@8W)E871E9"!T:&5N(&$@7&8T3E5,3%QF,2!P
M;VEN=&5R(&ES(')E='5R;F5D+@HN4D4*"G1I;65?="!A8W1I=F%T94-$2T-A
M;&5N9&%R("A#1$M#04Q%3D1!4B`J7&8R8V%L96YD87)<9C$L(&-H='EP92`J
M7&8R86-T:6]N<UQF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@86-T:79A=&5S
M('1H92!C86QE;F1A<B!W:61G970@86YD(&QE=',@=&AE('5S97(@:6YT97)A
M8W0@=VET:"!T:&4*=VED9V5T+B!4:&4@7&8R8V%L96YD87)<9C$@=VED9V5T
M(&ES(&$@<&]I;G1E<B!T;R!A(&YO;BU.54Q,(&-A;&5N9&%R('=I9&=E="X*
M268@=&AE(%QF,F%C=&EO;G-<9C$@<&%R86UE=&5R(&ES('!A<W-E9"!W:71H
M(&$@;F]N+4Y53$P@=F%L=64L('1H92!C:&%R86-T97)S"FEN('1H92!A<G)A
M>2!W:6QL(&)E(&EN:F5C=&5D(&EN=&\@=&AE('=I9&=E="X@5&\@86-T:79A
M=&4@=&AE('=I9&=E=`II;G1E<F%C=&EV96QY('!A<W,@:6X@82!<9C1.54Q,
M7&8Q('!O:6YT97(@9F]R(%QF,F%C=&EO;G-<9C$N($EF('1H92!C:&%R86-T
M97(@"F5N=&5R960@:6YT;R!T:&ES('=I9&=E="!I<R!<9C1215154DY<9C$@
M=&AE;B!T:&ES(&9U;F-T:6]N('=I;&P@<F5T=7)N(&$@='EP90IO9B!<9C1T
M:6UE7W1<9C$N(%1H92!<9C1T:6UE7W1<9C$@='EP92!I<R!U<V5D(&EN('1H
M92!F=6YC=&EO;G,@9&5F:6YE9"!I;B!T:&4*=&EM92YH(&AE861E<B!F:6QE
M+B`H9&\@82!M86X@;VX@7&8T;&]C86QT:6UE7&8Q(&]R(%QF-&-T:6UE7&8Q
M(&9O<B!M;W)E(`II;F9O<FUA=&EO;BDN($EF('1H92!C:&%R86-T97(@96YT
M97)E9"!I;G1O('1H:7,@=VED9V5T('=A<R!<9C1%4T-!4$5<9C$@;W(*7&8T
M5$%"7&8Q('1H96X@=&AI<R!F=6YC=&EO;B!W:6QL(')E='5R;B!A('9A;'5E
M(&]F("AT:6UE7W0I+3$@86YD('1H92!S=')U8W1U<F4*;65M8F5R(%QF-&5X
M:714>7!E7&8Q('=I;&P@8F4@<V5T('1O(%QF-'9%4T-!4$5?2$E47&8Q+@HN
M4D4*"G1I;65?="!I;FIE8W1#1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@*EQF
M,F-A;&5N9&%R7&8Q+"!C:'1Y<&4@7&8R8VAA<F%C=&5R7&8Q*3L*+E)3(#,*
M5&AI<R!F=6YC=&EO;B!I;FIE8W1S(&$@<VEN9VQE(&-H87)A8W1E<B!I;G1O
M('1H92!W:61G970N(%1H92!P87)A;65T97(@"EQF,F-A;&5N9&%R7&8Q(&ES
M(&$@<&]I;G1E<B!T;R!A(&YO;BU.54Q,(&-A;&5N9&%R('=I9&=E="X@5&AE
M('!A<F%M971E<B`*7&8R8VAA<F%C=&5R7&8Q(&ES('1H92!C:&%R86-T97(@
M=&\@:6YJ96-T(&EN=&\@=&AE('=I9&=E="X@268@=&AE(&-H87)A8W1E<B`*
M96YT97)E9"!I;G1O('1H:7,@=VED9V5T(&ES(%QF-%)%5%523EQF,2!T:&5N
M('1H:7,@9G5N8W1I;VX@=VEL;"!R971U<FX@82!T>7!E"F]F(%QF-'1I;65?
M=%QF,2X@5&AE(%QF-'1I;65?=%QF,2!T>7!E(&ES('5S960@:6X@=&AE(&9U
M;F-T:6]N<R!D969I;F5D(&EN('1H90IT:6UE+F@@:&5A9&5R(&9I;&4N("AD
M;R!A(&UA;B!O;B!<9C1L;V-A;'1I;65<9C$@;W(@7&8T8W1I;65<9C$@9F]R
M(&UO<F4@"FEN9F]R;6%T:6]N*2X@268@=&AE(&-H87)A8W1E<B!E;G1E<F5D
M(&EN=&\@=&AI<R!W:61G970@=V%S(%QF-$530T%015QF,2!O<@I<9C1404)<
M9C$@=&AE;B!T:&ES(&9U;F-T:6]N('=I;&P@<F5T=7)N(&$@=F%L=64@;V8@
M*'1I;65?="DM,2!A;F0@=&AE('-T<G5C='5R90IM96UB97(@7&8T97AI=%1Y
M<&5<9C$@=VEL;"!B92!S970@=&\@7&8T=D530T%015](251<9C$N($%N>2!O
M=&AE<B!C:&%R86-T97(*:6YJ96-T960@:6YT;R!T:&4@=VED9V5T('=I;&P@
M<V5T('1H92!S=')U8W1U<F4@;65M8F5R(%QF-&5X:714>7!E7&8Q('1O"EQF
M-'9%05),65]%6$E47&8Q(&%N9"!T:&4@9G5N8W1I;VX@=VEL;"!R971U<FX@
M*'1I;65?="DM,2X*+E)%"@IV;VED('-E=$-$2T-A;&5N9&%R("A#1$M#04Q%
M3D1!4B`J7&8R8V%L96YD87)<9C$L(&EN="!<9C)D87E<9C$L(&EN="!<9C)M
M;VYT:%QF,2P@:6YT(%QF,GEE87)<9C$L(&-H='EP92!<9C)D87E!='1R:6)<
M9C$L(&-H='EP92!<9C)M;VYT:$%T=')I8EQF,2P@8VAT>7!E(%QF,GEE87)!
M='1R:6)<9C$L(&-H='EP92!<9C)H:6=H;&EG:'1<9C$L(&)O;VQE86X@7&8R
M8F]X7&8Q*3L*+E)3(#,*5&AI<R!F=6YC=&EO;B!L971S('1H92!P<F]G<F%M
M;65R(&UO9&EF>2!C97)T86EN(&5L96UE;G1S(&]F(&%N(&%L<F5A9'D@9&5F
M:6YE9`IC86QE;F1A<B!W:61G970N(%1H92!<9C)C86QE;F1A<EQF,2!P87)A
M;65T97(@<F5P<F5S96YT<R!A;B!A;')E861Y(&1E9FEN960@8V%L96YD87(*
M<&]I;G1E<BX@5&AE(&]T:&5R('!A<F%M971E<B!N86UE<R!C;W)R97-P;VYD
M('1O('1H92!S86UE('!A<F%M971E<B!N86UE<R!L:7-T960@"FEN('1H92!<
M9C1N97=#1$M#86QE;F1A<EQF,2!F=6YC=&EO;BX*+E)%(`H*=F]I9"!S971#
M1$M#86QE;F1A<DUA<FME<B`H0T1+0T%,14Y$05(@*EQF,F-A;&5N9&%R7&8Q
M+"!I;G0@7&8R9&%Y7&8Q+"!I;G0@7&8R;6]N=&A<9C$L(&EN="!<9C)Y96%R
M7&8Q+"!C:'1Y<&4@7&8R;6%R:V5R7&8Q*3L*+E)3(#,*5&AI<R!A;&QO=W,@
M=&AE('5S97(@=&\@<V5T(&$@;6%R:V5R('=H:6-H('=I;&P@8F4@9&ES<&QA
M>65D('=H96X@=&AE(&UO;G1H(&ES"F1R87=N+B!4:&4@7&8R;6%R:V5R7&8Q
M('!A<F%M971E<B!I<R!T:&4@871T<FEB=71E('1O('5S92!W:&5N(&1R87=I
M;F<@=&AE(`IM87)K97(N($EF(&UO<F4@=&AA;B!O;F4@;6%R:V5R(&ES('-E
M="!O;B!A('-I;F=L92!D87DL('1H96X@=&AE(&1A>2!W:6QL(&)L:6YK"G=I
M=&@@=&AE(&]R:6=I;F%L(&UA<FME<B!A='1R:6)U=&4N"BY212`*"G9O:60@
M<F5M;W9E0T1+0V%L96YD87)-87)K97(@*$-$2T-!3$5.1$%2("I<9C)C86QE
M;F1A<EQF,2P@:6YT(%QF,F1A>5QF,2P@:6YT(%QF,FUO;G1H7&8Q+"!I;G0@
M7&8R>65A<EQF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@<F5M;W9E<R!A(&UA
M<FME<B!F<F]M('1H92!C86QE;F1A<BX*+E)%(`H*=F]I9"!S971#1$M#86QE
M;F1A<D1A=&4@*$-$2T-!3$5.1$%2("I<9C)C86QE;F1A<EQF,2P@:6YT(%QF
M,F1A>5QF,2P@:6YT(%QF,FUO;G1H7&8Q+"!I;G0@7&8R>65A<EQF,2D["BY2
M4R`S"E1H:7,@9G5N8W1I;VX@<V5T<R!T:&4@8V%L96YD87(@=&\@=&AE(&=I
M=F5N(&1A=&4N($EF('1H92!V86QU92!O9B!T:&4@7&8R9&%Y7&8Q+`I<9C)M
M;VYT:%QF,2P@;W(@7&8R>65A<EQF,2!P87)A;65T97)S(&ES("TQ('1H96X@
M=&AE(&-U<G)E;G0@9&%Y+"!M;VYT:"P@;W(@>65A<@II<R!U<V5D('1O('-E
M="!T:&4@9&%T92X*+E)%(`H*=F]I9"!D<F%W0T1+0V%L96YD87(@*$-$2T-!
M3$5.1$%2("I<9C)C86QE;F1A<EQF,2P@8F]O;&5A;B!<9C)B;WA<9C$I.PHN
M4E,@,PI4:&ES(&9U;F-T:6]N(&1R87=S('1H92!L86)E;"!W:61G970@;VX@
M=&AE('-C<F5E;BX@5&AE(%QF,F)O>%QF,2!O<'1I;VX@"F1R87=S('1H92!W
M:61G970@=VET:"!O<B!W:71H;W5T(&$@8F]X+@HN4D4*"G9O:60@97)A<V5#
M1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@*EQF,F-A;&5N9&%R7&8Q*3L*+E)3
M(#,*5&AI<R!F=6YC=&EO;B!R96UO=F5S('1H92!W:61G970@9G)O;2!T:&4@
M<V-R965N+B!4:&ES(&1O97,@7&8T3D]47&8Q(&1E<W1R;WD*=&AE('=I9&=E
M="X*+E)%"@IV;VED(&1E<W1R;WE#1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@
M*EQF,F-A;&5N9&%R7&8Q*3L*+E)3(#,*5&AI<R!F=6YC=&EO;B!R96UO=F5S
M('1H92!W:61G970@9G)O;2!T:&4@<V-R965N(&%N9"!F<F5E<R!U<"!A;GD@
M;65M;W)Y('1H90IO8FIE8W0@;6%Y(&)E('5S:6YG+@HN4D4*"G9O:60@<V5T
M0T1+0V%L96YD87)0<F50<F]C97-S("A#1$M#04Q%3D1!4B`J7&8R8V%L96YD
M87)<9C$L(%!23T-%4U-&3B!<9C)F=6YC=&EO;EQF,2P@=F]I9"`J7&8R9&%T
M85QF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@86QL;W=S('1H92!U<V5R('1O
M(&AA=F4@=&AE('=I9&=E="!C86QL(&$@9G5N8W1I;VX@869T97(@82!K97D*
M:7,@:&ET(&%N9"!B969O<F4@=&AE(&ME>2!I<R!A<'!L:65D('1O('1H92!W
M:61G970N(%1H92!P87)A;65T97(@7&8R9G5N8W1I;VY<9C$*:68@;V8@='EP
M92!<9C104D]#15-31DY<9C$N(%1H92!P87)A;65T97(@7&8R9&%T85QF,2!I
M<R!A('!O:6YT97(@=&\@"EQF-'9O:61<9C$N(%1O(&QE87)N(&UO<F4@86)O
M=70@<')E+7!R;V-E<W-I;F<@<F5A9"!T:&4@7&8T8V1K7W!R;V-E<W-<9C$*
M;6%N=6%L('!A9V4N"BY210H@"G9O:60@<V5T0T1+0V%L96YD87)0;W-T4')O
M8V5S<R`H0T1+0T%,14Y$05(@*EQF,F-A;&5N9&%R7&8Q+"!04D]#15-31DX@
M7&8R9G5N8W1I;VY<9C$L('9O:60@*EQF,F1A=&%<9C$I.PHN4E,@,PI4:&ES
M(&9U;F-T:6]N(&%L;&]W<R!T:&4@=7-E<B!T;R!H879E('1H92!W:61G970@
M8V%L;"!A(&9U;F-T:6]N(&%F=&5R('1H90IK97D@:&%S(&)E96X@87!P;&EE
M9"!T;R!T:&4@=VED9V5T+B`@5&AE('!A<F%M971E<B!<9C)F=6YC=&EO;EQF
M,2!I9B!O9B!T>7!E"EQF-%!23T-%4U-&3EQF,2X@5&AE('!A<F%M971E<B!<
M9C)D871A7&8Q(&ES(&$@<&]I;G1E<B!T;R!<9C1V;VED7&8Q+B!4;PIL96%R
M;B!M;W)E(&%B;W5T('!O<W0M<')O8V5S<VEN9R!R96%D('1H92!<9C1C9&M?
M<')O8V5S<UQF,2!M86YU86P@<&%G92X*+E)%"@IV;VED(&)I;F1#1$M/8FIE
M8W0@*$5/8FIE8W14>7!E(%QF,G=I9&=E=%1Y<&5<9C$L('9O:60@*EQF,F]B
M:F5C=%QF,2P@8VAA<B!<9C)K97E<9C$L($))3D1&3B!<9C)F=6YC=&EO;EQF
M,2P@=F]I9"`J7&8R9&%T85QF,2D["BY24R`S"E1H:7,@9G5N8W1I;VX@86QL
M;W=S('1H92!U<V5R('1O(&-R96%T92!S<&5C:6%L(&ME>2!B:6YD:6YG<RX@
M5&AE(`I<9C)W:61G9714>7!E7&8Q('!A<F%M971E<B!I<R!A(&1E9FEN960@
M='EP92!W:&EC:"!S=&%T97,@=VAA="!#9&L@;V)J96-T(`IT>7!E(&ES(&)E
M:6YG('5S960N(%1H92!<9C)O8FIE8W1<9C$@<&%R86UE=&5R(&ES('1H92!P
M;VEN=&5R('1O('1H92!W:61G970@"F]B:F5C="X@5&AE(%QF,G=I9&=E=%1Y
M<&5<9C$@<&%R86UE=&5R(&ES(&$@9&5F:6YE9"!T>7!E('=H:6-H('-T871E
M<R!W:&%T(`I#9&L@;V)J96-T('1Y<&4@:7,@8F5I;F<@=7-E9"X@5&\@;&5A
M<FX@;6]R92!A8F]U="!T:&4@='EP92!<9C1%3V)J96-T5'EP95QF,2`*<F5A
M9"!T:&4@7&8T8V1K7V)I;F1I;F=<9C$@;6%N=6%L('!A9V4N(%1H92!<9C)O
M8FIE8W1<9C$@<&%R86UE=&5R(&ES('1H92`*<&]I;G1E<B!T;R!T:&4@=VED
M9V5T(&]B:F5C="X@5&AE(%QF,FME>5QF,2!I<R!T:&4@8VAA<F%C=&5R('1O
M(&)I;F0N(%1H92`*7&8R9G5N8W1I;VY<9C$@:7,@=&AE(&9U;F-T:6]N('1Y
M<&4N(%1O(&QE87)N(&UO<F4@86)O=70@=&AE(&ME>2!B:6YD:6YG(`IC86QL
M8F%C:R!F=6YC=&EO;B!T>7!E<R!R96%D('1H92!<9C1C9&M?8FEN9&EN9UQF
M,2!M86YU86P@<&%G92X@5&AE(&QA<W0@"G!A<F%M971E<B!<9C)D871A7&8Q
M(&ES(&$@<&]I;G1E<B!T;R!A;GD@9&%T82!T:&%T(&YE961S('1O(&=E="!P
M87-S960@=&\*=&AE(&-A;&QB86-K(&9U;F-T:6]N+@HN4D4*"BY32"!+15D@
M0DE.1$E.1U,*5VAE;B!T:&4@=VED9V5T(&ES(&%C=&EV871E9"!T:&5R92!A
M<F4@<V5V97)A;"!D969A=6QT(&ME>2!B:6YD:6YG<R!W:&EC:"!W:6QL"FAE
M;'`@=&AE('5S97(@96YT97(@;W(@;6%N:7!U;&%T92!T:&4@:6YF;W)M871I
M;VX@<75I8VML>2X@5&AE(&9O;&QO=VEN9R!T86)L90IO=71L:6YE<R!T:&4@
M:V5Y<R!A;F0@=&AE:7(@86-T:6]N<R!F;W(@=&AI<R!W:61G970N"BY,4`HN
M4E,@,PHN;F8*7&8R2V5Y("`@("`@("`@06-T:6]N7&8Q"DQE9G0@07)R;W<@
M($UO=F5S('1H92!C=7)S;W(@=&\@=&AE('!R979I;W5S(&1A>2X*4FEG:'0@
M07)R;W<@36]V97,@=&AE(&-U<G-O<B!T;R!T:&4@;F5X="!D87DN"E5P($%R
M<F]W("`@($UO=F5S('1H92!C=7)S;W(@=&\@=&AE(&YE>'0@=V5E:RX*1&]W
M;B!!<G)O=R`@36]V97,@=&AE(&-U<G-O<B!T;R!T:&4@<')E=FEO=7,@=V5E
M:RX*="`@("`@("`@("`@4V5T<R!T:&4@8V%L96YD87(@=&\@=&AE(&-U<G)E
M;G0@9&%T92X*5"`@("`@("`@("`@4V5T<R!T:&4@8V%L96YD87(@=&\@=&AE
M(&-U<G)E;G0@9&%T92X*;B`@("`@("`@("`@061V86YC97,@=&AE(&-A;&5N
M9&%R(&]N92!M;VYT:"!A:&5A9"X*3B`@("`@("`@("`@061V86YC97,@=&AE
M(&-A;&5N9&%R('-I>"!M;VYT:',@86AE860N"G`@("`@("`@("`@($%D=F%N
M8V5S('1H92!C86QE;F1A<B!O;F4@;6]N=&@@8F%C:RX*4"`@("`@("`@("`@
M061V86YC97,@=&AE(&-A;&5N9&%R('-I>"!M;VYT:',@8F%C:RX*+2`@("`@
M("`@("`@061V86YC97,@=&AE(&-A;&5N9&%R(&]N92!Y96%R(&%H96%D+@HK
M("`@("`@("`@("!!9'9A;F-E<R!T:&4@8V%L96YD87(@;VYE('EE87(@8F%C
M:RX*4F5T=7)N("`@("`@17AI=',@=&AE('=I9&=E="!A;F0@<F5T=7)N<R!A
M('9A;'5E(&]F"B`@("`@("`@("`@(%QF-'1I;65?=%QF,2!W:&EC:"!R97!R
M97-E;G1S('1H92!D87D@<V5L96-T960@"B`@("`@("`@("`@(&%T(#$@<V5C
M;VYD(&%F=&5R(&UI9&YI9VAT+B!4:&ES(&%L<V\@<V5T<PH@("`@("`@("`@
M("!T:&4@;65M8F5R(%QF-&5X:714>7!E7&8Q(&EN('1H92!W:61G970*("`@
M("`@("`@("`@<W1R=6-T=7)E('1O('1H92!V86QU92!O9B!<9C1V3D]234%,
M7&8Q+@I486(@("`@("`@("!%>&ET<R!T:&4@=VED9V5T(&%N9"!R971U<FYS
M(&$@=F%L=64@;V8*("`@("`@("`@("`@7&8T=&EM95]T7&8Q('=H:6-H(')E
M<')E<V5N=',@=&AE(&1A>2`*("`@("`@("`@("`@<V5L96-T960@870@,2!S
M96-O;F0@869T97(@;6ED;FEG:'0N"B`@("`@("`@("`@(%1H:7,@86QS;R!S
M971S('1H92!M96UB97(@7&8T97AI=%1Y<&5<9C$*("`@("`@("`@("`@:6X@
M=&AE('=I9&=E="!S=')U8W1U<F4@=&\@=&AE('9A;'5E(&]F"B`@("`@("`@
M("`@(%QF-'9.3U)-04Q<9C$N"D5S8V%P92`@("`@($5X:71S('1H92!W:61G
M970@86YD(')E='5R;G,@*'1I;65?*2TQ+@H@("`@("`@("`@("!4:&ES(&%L
M<V\@<V5T<R!T:&4@<W1R=6-T=7)E(&UE;6)E<B`*("`@("`@("`@("`@7&8T
SHAR_EOF
  : || echo 'restore of cdk4.8.0/man/calendar.3 failed'
fi
echo 'End of archive part 1'
echo 'File cdk4.8.0/man/calendar.3 is continued in part 2'
echo 2 > _sharseq.tmp
exit 0
