Newsgroups: comp.sources.unix
From: glover@credit.erin.utoronto.ca (Mike Glover)
Subject: v29i099: cdk-4.8.0 - Curses Development Kit, V4.8.0, Part04/06
References: <1.839541522.22466@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: glover@credit.erin.utoronto.ca (Mike Glover)
Posting-Number: Volume 29, Issue 99
Archive-Name: cdk-4.8.0/part04

#!/bin/sh
# This is `cdk_.04' (part 4 of a multipart archive).
# Do not concatenate these parts, unpack them in order with `/bin/sh'.
# File `cdk4.8.0/alphalist.c' is being continued...
#
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  echo 'WARNING: not restoring timestamps.  Consider getting and'
  echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if test ! -r _sharseq.tmp; then
  echo 'Please unpack part 1 first!'
  exit 1
fi
shar_sequence=`cat _sharseq.tmp`
if test "$shar_sequence" != 4; then
  echo "Please unpack part $shar_sequence next!"
  exit 1
fi
if test ! -f _sharnew.tmp; then
  echo 'x - still skipping cdk4.8.0/alphalist.c'
else
  echo 'x - continuing file cdk4.8.0/alphalist.c'
  sed 's/^X//' << 'SHAR_EOF' >> '_sharuue.tmp' &&
M(VEN8VQU9&4@(F-D:RYH(@H@"B\J"B`J("1!=71H;W(Z(&=L;W9E<B`D"B`J
M("1$871E.B`Q.3DV+S`W+S`U(#$Y.C,U.C`P("0*("H@)%)E=FES:6]N.B`Q
M+C$U("0*("HO"B`*+RH*("H@1&5C;&%R92!P<F]T;W1Y<&4@9G5N8W1I;VYS
M+@H@*B\*=F]I9"!A;'!H86QI<W138W)O;&Q5<$-"("A%3V)J96-T5'EP92!O
M8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I.PIV
M;VED(&%L<&AA;&ES=%-C<F]L;$1O=VY#0B`H14]B:F5C=%1Y<&4@;V)J96-T
M5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*3L*=F]I9"!A
M;'!H86QI<W1086=E57!#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I
M9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*3L*=F]I9"!A;'!H86QI<W10
M86=E1&]W;D-"("A%3V)J96-T5'EP92!O8FIE8W14>7!E+"!V;VED("IO8FIE
M8W0L('9O:60@*F-L:65N=$1A=&$I.PIV;VED(&-O;7!L971E5V]R9$-"("A%
M3V)J96-T5'EP92!O8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L
M:65N=$1A=&$I.PII;G0@<')E4')O8V5S<T5N=')Y1FEE;&0@*$5/8FIE8W14
M>7!E(&-D:W1Y<&4L('9O:60@*F]B:F5C="P@=F]I9"`J8VQI96YT1&%T82P@
M8VAT>7!E(&EN<'5T*3L*"B\J"B`J(%1H:7,@8W)E871E<R!A(&9I;&4@<V5L
M96-T:6]N('=I9&=E="X*("HO"D-$2T%,4$A!3$E35"`J;F5W0T1+06QP:&%L
M:7-T("A#1$M30U)%14X@*F-D:W-C<F5E;BP@:6YT('AP;&%C92P@:6YT('EP
M;&%C92P@:6YT(&AE:6=H="P@:6YT('=I9'1H+"!C:&%R("IL86)E;"P@8VAA
M<B`J;&ES=%M-05A)5$5-4UTL(&EN="!L:7-T4VEZ92P@8VAT>7!E(&9I;&QE
M<D-H87(L(&-H='EP92!H:6=H;&EG:'0L(&)O;VQE86X@8F]X+"!B;V]L96%N
M('-H861O=RD*>PH@("\J(%-E="!U<"!S;VUE('9A<FEA8FQE<RX@("`@("`@
M("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("HO"B`@($-$
M2T%,4$A!3$E35"`J86QP:&%L:7-T"3T@*$-$2T%,4$A!3$E35"`J*6UA;&QO
M8R`H<VEZ96]F("A#1$M!3%!(04Q)4U0I*3L*("`@8VAT>7!E("IC:'1Y<&5,
M86)E;`D)/2`H8VAT>7!E("HI3E5,3#L*("`@:6YT(&)O>%=I9'1H"0D)/2!W
M:61T:#L*("`@:6YT(&)O>$AE:6=H=`D)/2!H96EG:'0["B`@(&EN="!X<&]S
M"0D)/2!X<&QA8V4["B`@(&EN="!Y<&]S"0D)/2!Y<&QA8V4["B`@(&EN="!E
M;G1R>5=I9'1H"0D](#`["B`@(&EN="!L86)E;$QE;@D)"3T@,#L*("`@:6YT
M('1E;7`)"0D](#`["B`@(&EN="!X.PH*("`@+RH@5')A;G-L871E('1H92!L
M86)E;"!C:&%R("IP;VEN=&5R('1O(&$@8VAT>7!E('!O:6YT97(N"0DJ+PH@
M("!C:'1Y<&5,86)E;`D)"3T@8VAA<C)#:'1Y<&4@*&QA8F5L+"`F;&%B96Q,
M96XL("9T96UP*3L*("`@9G)E94-H='EP92`H8VAT>7!E3&%B96PI.PH*("`@
M+RH@4F5J=7-T:69Y('1H92!X(&%N9"!Y('!O<VET:6]N<R!I9B!W92!N965D
M('1O+@D)"2HO"B`@(&%L:6=N>'D@*&-D:W-C<F5E;BT^=VEN9&]W+"`F>'!O
M<RP@)GEP;W,L(&)O>%=I9'1H+"!B;WA(96EG:'0I.PH*("`@+RH@36%K92!T
M:&4@9FEL92!S96QE8W1O<B!W:6YD;W<N"0D)"0DJ+PH@("!A;'!H86QI<W0M
M/G=I;B`](&YE=W=I;B`H8F]X2&5I9VAT+"!B;WA7:61T:"P@>7!O<RP@>'!O
M<RD["@H@("`O*B!)<R!T:&4@=VEN9&]W($Y53$P_/S\)"0D)"0DJ+PH@("!I
M9B`H86QP:&%L:7-T+3YW:6X@/3T@*%=)3D1/5R`J*4Y53$PI"B`@('L*("`@
M("`@<F5T=7)N("@H0T1+04Q02$%,25-4("HI3E5,3"D["B`@('T*"B`@("\J
M($1O('=E('=A;G0@82!S:&%D;W<_/S\)"0D)"0DJ+PH@("!I9B`H<VAA9&]W
M*0H@("!["B`@("`@(&%L<&AA;&ES="T^<VAA9&]W5VEN(#T@;F5W=VEN("AB
M;WA(96EG:'0L(&)O>%=I9'1H+"!Y<&]S*S$L('AP;W,K,2D["B`@('T*"B`@
M("\J(%-E="!S;VUE('9A<FEA8FQE<RX)"0D)"0DJ+PH@("!A;'!H86QI<W0M
M/G-C<F5E;@D)/2!C9&MS8W)E96X["B`@(&%L<&AA;&ES="T^<&%R96YT"0D]
M(&-D:W-C<F5E;BT^=VEN9&]W.PH@("!A;'!H86QI<W0M/FAI9VAL:6=H=`D)
M/2!H:6=H;&EG:'0["B`@(&%L<&AA;&ES="T^9FEL;&5R0VAA<@D](&9I;&QE
M<D-H87(["B`@(&%L<&AA;&ES="T^:&5I9VAT"0D](&)O>$AE:6=H=#L*("`@
M86QP:&%L:7-T+3YW:61T:`D)/2!B;WA7:61T:#L*("`@86QP:&%L:7-T+3YE
M>&ET5'EP90D)/2!V3D5615)?04-4259!5$5$.PH@("!A;'!H86QI<W0M/F)O
M>`D)/2!B;W@["B`@(&%L<&AA;&ES="T^<VAA9&]W"0D]('-H861O=SL*"B`@
M("\J(%=E(&YE960@=&\@<V]R="!T:&4@;&ES="!B969O<F4@=V4@=7-E(&ET
M+@D)"2HO"B`@('%U:6-K4V]R="`H;&ES="P@,"P@;&ES=%-I>F4M,2D["@H@
M("`O*B!#;W!Y('1H92!L:7-T(&EN9F]R;6%T:6]N+@D)"0D)*B\*("`@9F]R
M("AX/3`[('@@/"!L:7-T4VEZ93L@>"LK*0H@("!["B`@("`@(&%L<&AA;&ES
M="T^;&ES=%MX72`](&-O<'E#:&%R("AL:7-T6WA=*3L*("`@?0H@("!A;'!H
M86QI<W0M/FQI<W13:7IE(#T@;&ES=%-I>F4["@H@("`O*B!#<F5A=&4@=&AE
M(&5N=')Y(&9I96QD+@D)"0D)"2HO"B`@(&5N=')Y5VED=&@@/2!B;WA7:61T
M:"`M("AL86)E;$QE;B`K(#,I.PH@("!A;'!H86QI<W0M/F5N=')Y1FEE;&0@
M/2!N97=#1$M%;G1R>2`H8V1K<V-R965N+`H)"0D)"2AA;'!H86QI<W0M/G=I
M;BDM/E]B96=X+`H)"0D)"2AA;'!H86QI<W0M/G=I;BDM/E]B96=Y+`H)"0D)
M"4Q%1E0L(&QA8F5L+`H)"0D)"4%?3D]234%,+"!F:6QL97)#:&%R+"`*"0D)
M"0EV34E8140L(&5N=')Y5VED=&@L(#`L(#4Q,BP*"0D)"0EB;W@L($9!3%-%
M*3L*"B`@("\J(%-E="!T:&4@:V5Y(&)I;F1I;F=S(&9O<B!T:&4@96YT<GD@
M9FEE;&0N"0D)"2HO"B`@(&)I;F1#1$M/8FIE8W0@*'9%3E1262P@86QP:&%L
M:7-T+3YE;G1R>49I96QD+"!+15E?55`L(&%L<&AA;&ES=%-C<F]L;%5P0T(L
M(&%L<&AA;&ES="D["B`@(&)I;F1#1$M/8FIE8W0@*'9%3E1262P@86QP:&%L
M:7-T+3YE;G1R>49I96QD+"!+15E?1$]73BP@86QP:&%L:7-T4V-R;VQL1&]W
M;D-"+"!A;'!H86QI<W0I.PH@("!B:6YD0T1+3V)J96-T("AV14Y44EDL(&%L
M<&AA;&ES="T^96YT<GE&:65L9"P@2T597TY004=%+"!A;'!H86QI<W1086=E
M1&]W;D-"+"!A;'!H86QI<W0I.PH@("!B:6YD0T1+3V)J96-T("AV14Y44EDL
M(&%L<&AA;&ES="T^96YT<GE&:65L9"P@)P8G+"!A;'!H86QI<W1086=E1&]W
M;D-"+"!A;'!H86QI<W0I.PH@("!B:6YD0T1+3V)J96-T("AV14Y44EDL(&%L
M<&AA;&ES="T^96YT<GE&:65L9"P@2T597U!004=%+"!A;'!H86QI<W1086=E
M57!#0BP@86QP:&%L:7-T*3L*("`@8FEN9$-$2T]B:F5C="`H=D5.5%)9+"!A
M;'!H86QI<W0M/F5N=')Y1FEE;&0L("<")RP@86QP:&%L:7-T4&%G955P0T(L
M(&%L<&AA;&ES="D["B`@(&)I;F1#1$M/8FIE8W0@*'9%3E1262P@86QP:&%L
M:7-T+3YE;G1R>49I96QD+"!+15E?5$%"+"!C;VUP;&5T95=O<F1#0BP@86QP
M:&%L:7-T*3L*"B`@("\J(%-E="!U<"!T:&4@<&]S="UP<F]C97-S(&9U;F-T
M:6]N(&9O<B!T:&4@96YT<GD@9FEE;&0N"0DJ+PH@("!S971#1$M%;G1R>5!R
M95!R;V-E<W,@*&%L<&AA;&ES="T^96YT<GE&:65L9"P@<')E4')O8V5S<T5N
M=')Y1FEE;&0L(&%L<&AA;&ES="D["@H@("`O*B!#<F5A=&4@=&AE('-C<F]L
M;&EN9R!L:7-T+@D)"0D)*B\*("`@86QP:&%L:7-T+3YS8W)O;&Q&:65L9"`]
M(&YE=T-$2U-C<F]L;"`H8V1K<V-R965N+"`*"0D)"0D)*&%L<&AA;&ES="T^
M=VEN*2T^7V)E9W@L"@D)"0D)"2AA;'!H86QI<W0M/G=I;BDM/E]B96=Y*S(L
M"@D)"0D)"6)O>$AE:6=H="TR+"!B;WA7:61T:"P*"0D)"0D)*&-H87(@*BE.
M54Q,+"!L:7-T+"!L:7-T4VEZ92P*"0D)"0D)3D].54U"15)3+"!!7U)%5D52
M4T4L"@D)"0D)"6)O>"P@1D%,4T4I.PH*("`@+RH@4F5G:7-T97(@=&AI<R!B
M86)Y+@D)"0D)"2HO"B`@(')E9VES=&5R0T1+3V)J96-T("AC9&MS8W)E96XL
M('9!3%!(04Q)4U0L(&%L<&AA;&ES="D["@H@("`O*B!2971U<FX@=&AE(&9I
M;&4@<V5L96-T;W(@<&]I;G1E<BX)"0D)"2HO"B`@(')E='5R;B`H86QP:&%L
M:7-T*3L*?0H*+RH*("H@5&AI<R!E<F%S97,@=&AE(&9I;&4@<V5L96-T;W(@
M9G)O;2!T:&4@<V-R965N+@H@*B\*=F]I9"!E<F%S94-$2T%L<&AA;&ES="`H
M0T1+04Q02$%,25-4("IA;'!H86QI<W0I"GL*("`@97)A<V5#1$M38W)O;&P@
M*&%L<&AA;&ES="T^<V-R;VQL1FEE;&0I.PH@("!E<F%S94-$2T5N=')Y("AA
M;'!H86QI<W0M/F5N=')Y1FEE;&0I.PH*("`@:68@*&%L<&AA;&ES="T^<VAA
M9&]W*0H@("!["B`@("`@('=E<F%S92`H86QP:&%L:7-T+3YS:&%D;W=7:6XI
M.PH@("`@("!W<F5F<F5S:"`H86QP:&%L:7-T+3YS:&%D;W=7:6XI.PH@("!]
M"B`@('=E<F%S92`H86QP:&%L:7-T+3YW:6XI.PI]"@HO*@H@*B!4:&ES(&1R
M87=S('1H92!F:6QE('-E;&5C=&]R('=I9&=E="X*("HO"G9O:60@9')A=T-$
M2T%L<&AA;&ES="`H0T1+04Q02$%,25-4("IA;'!H86QI<W0L(&)O;VQE86X@
M0F]X*0I["B`@("\J($1I9"!W92!A<VL@9F]R(&$@<VAA9&]W/S\_"0D)"0DJ
M+PH@("!I9B`H86QP:&%L:7-T+3YS:&%D;W<I"B`@('L*("`@("`@9')A=U-H
M861O=R`H86QP:&%L:7-T+3YS:&%D;W=7:6XI.PH@("!]"@H@("`O*B!$:60@
M=&AE('5S97(@87-K(&9O<B!A(&)O>#\_/PD)"0D)*B\*("`@:68@*$)O>"D*
M("`@>PH@("`@("!D<F%W0T1+16YT<GD@*&%L<&AA;&ES="T^96YT<GE&:65L
M9"P@5%)512D["B`@("`@(&1R87=#1$M38W)O;&P@*&%L<&AA;&ES="T^<V-R
M;VQL1FEE;&0L(%12544I.PH@("!]"B`@(&5L<V4*("`@>PH@("`@("!D<F%W
M0T1+16YT<GD@*&%L<&AA;&ES="T^96YT<GE&:65L9"P@1D%,4T4I.PH@("`@
M("!D<F%W0T1+4V-R;VQL("AA;'!H86QI<W0M/G-C<F]L;$9I96QD+"!&04Q3
M12D["B`@('T*?0H*+RH*("H@5&AI<R!A8W1I=F%T97,@=&AE(&9I;&4@<V5L
M96-T;W(N"B`J+PIC:&%R("IA8W1I=F%T94-$2T%L<&AA;&ES="`H0T1+04Q0
M2$%,25-4("IA;'!H86QI<W0L(&-H='EP92`J86-T:6]N<RD*>PH@("!C:&%R
M("IR970["@H@("`O*B!$<F%W('1H92!W:61G970N"0D)"0D)*B\*("`@9')A
M=T-$2T%L<&AA;&ES="`H86QP:&%L:7-T+"!A;'!H86QI<W0M/F)O>"D["@H@
M("`O*B!!8W1I=F%T92!T:&4@=VED9V5T+@D)"0D)*B\*("`@<F5T(#T@86-T
M:79A=&5#1$M%;G1R>2`H86QP:&%L:7-T+3YE;G1R>49I96QD+"!A8W1I;VYS
M*3L*"B`@("\J($-O<'D@=&AE(&5X:70@='EP92!F<F]M('1H92!E;G1R>2!F
M:65L9"X)"0DJ+PH@("!A;'!H86QI<W0M/F5X:714>7!E(#T@86QP:&%L:7-T
M+3YE;G1R>49I96QD+3YE>&ET5'EP93L*"B`@("\J($1E=&5R;6EN92!T:&4@
M97AI="!S=&%T=7,N"0D)"2HO"B`@(&EF("AA;'!H86QI<W0M/F5X:714>7!E
M("$]('9%05),65]%6$E4*0H@("!["B`@("`@(')E='5R;B!R970["B`@('T*
M("`@<F5T=7)N("AC:&%R("HI3E5,3#L*?0H*+RH*("H@5&AI<R!I;FIE8W1S
M(&$@<VEN9VQE(&-H87)A8W1E<B!I;G1O('1H92!A;'!H86QI<W0N"B`J+PIC
M:&%R("II;FIE8W1#1$M!;'!H86QI<W0@*$-$2T%,4$A!3$E35"`J86QP:&%L
M:7-T+"!C:'1Y<&4@:6YP=70I"GL*("`@8VAA<B`J<F5T.PH*("`@+RH@1')A
M=R!T:&4@=VED9V5T+@D)"0D)"2HO"B`@(&1R87=#1$M!;'!H86QI<W0@*&%L
M<&AA;&ES="P@86QP:&%L:7-T+3YB;W@I.PH*("`@+RH@26YJ96-T(&$@8VAA
M<F%C=&5R(&EN=&\@=&AE('=I9&=E="X)"0DJ+PH@("!R970@/2!I;FIE8W1#
M1$M%;G1R>2`H86QP:&%L:7-T+3YE;G1R>49I96QD+"!I;G!U="D["@H@("`O
M*B!#;W!Y('1H92!E>&ET('1Y<&4@9G)O;2!T:&4@96YT<GD@9FEE;&0N"0D)
M*B\*("`@86QP:&%L:7-T+3YE>&ET5'EP92`](&%L<&AA;&ES="T^96YT<GE&
M:65L9"T^97AI=%1Y<&4["@H@("`O*B!$971E<FUI;F4@=&AE(&5X:70@<W1A
M='5S+@D)"0DJ+PH@("!I9B`H86QP:&%L:7-T+3YE>&ET5'EP92`A/2!V14%2
M3%E?15A)5"D*("`@>PH@("`@("!R971U<FX@<F5T.PH@("!]"B`@(')E='5R
M;B`H8VAA<B`J*4Y53$P["GT*"B\J"B`J(%1H:7,@9G5N8W1I;VX@<V5T<R!T
M:&4@:6YF;W)M871I;VX@:6YS:61E('1H92!F:6QE('-E;&5C=&]R+@H@*B\*
M=F]I9"!S971#1$M!;'!H86QI<W0@*$-$2T%,4$A!3$E35"`J86QP:&%L:7-T
M+"!C:&%R("IL:7-T6TU!6$E414U372P@:6YT(&QI<W13:7IE+"!C:'1Y<&4@
M9FEL;&5R0VAA<BP@8VAT>7!E(&AI9VAL:6=H="P@8F]O;&5A;B!B;W@I"GL*
M("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@0T1+
M4T-23TQ,("IS8W)O;&P)/2`H0T1+4T-23TQ,("HI86QP:&%L:7-T+3YS8W)O
M;&Q&:65L9#L*("`@0T1+14Y44ED@*F5N=')Y"3T@*$-$2T5.5%)9("HI86QP
M:&%L:7-T+3YE;G1R>49I96QD.PH@("!I;G0@>#L*"B`@("\J($-L96%N(&]U
M="!T:&4@;VQD(&QI<W0N"0D)"0D)*B\*("`@9F]R("AX/3`[('@@/"!A;'!H
M86QI<W0M/FQI<W13:7IE.R!X*RLI"B`@('L*("`@("`@9G)E94-H87(@*&%L
M<&AA;&ES="T^;&ES=%MX72D["B`@('T*"B`@("\J(%=E(&YE960@=&\@<V]R
M="!T:&4@;&ES="!B969O<F4@=V4@=7-E(&ET+@D)"2HO"B`@('%U:6-K4V]R
M="`H;&ES="P@,"P@;&ES=%-I>F4M,2D["@H@("`O*B!#;W!Y(&EN('1H92!N
M97<@:6YF;W)M871I;VXN"0D)"0DJ+PH@("!A;'!H86QI<W0M/F9I;&QE<D-H
M87()/2!F:6QL97)#:&%R.PH@("!A;'!H86QI<W0M/FAI9VAL:6=H=`D)/2!H
M:6=H;&EG:'0["B`@(&%L<&AA;&ES="T^;&ES=%-I>F4)"3T@;&ES=%-I>F4[
M"B`@(&5N=')Y+3YF:6QL97()"3T@9FEL;&5R0VAA<CL*("`@86QP:&%L:7-T
M+3YB;W@)"3T@8F]X.PH@("!F;W(@*'@],#L@>"`\(&QI<W13:7IE.R!X*RLI
M"B`@('L*("`@("`@86QP:&%L:7-T+3YL:7-T6WA=(#T@8V]P>4-H87(@*&QI
M<W1;>%TI.PH@("!]"@H@("`O*B!3970@=&AE(&EN9F]R;6%T:6]N(&EN('1H
M92!S8W)O;&QI;F<@;&ES="X)"0DJ+PH@("!S971#1$M38W)O;&P@*'-C<F]L
M;"P@;&ES="P@;&ES=%-I>F4L($Y/3E5-0D524RP@<V-R;VQL+3YH:6=H;&EG
M:'0L('-C<F]L;"T^8F]X*3L*"B`@("\J($-L96%N(&]U="!T:&4@96YT<GD@
M9FEE;&0N"0D)"0DJ+PH@("!C;&5A;D-$2T5N=')Y("AE;G1R>2D["@H@("`O
M*B!2961R87<@=&AE(&%L<&AA;&ES="X)"0D)"0DJ+PH@("!D<F%W0T1+06QP
M:&%L:7-T("AA;'!H86QI<W0L(&%L<&AA;&ES="T^8F]X*3L*?0H*+RH*("H@
M5&AI<R!D97-T<F]Y<R!T:&4@9FEL92!S96QE8W1O<BX)"B`J+PIV;VED(&1E
M<W1R;WE#1$M!;'!H86QI<W0@*$-$2T%,4$A!3$E35"`J86QP:&%L:7-T*0I[
M"B`@(&EN="!X.PH*("`@+RH@17)A<V4@=&AE(&9I;&4@<V5L96-T;W(N"0D)
M"0D)*B\*("`@97)A<V5#1$M!;'!H86QI<W0@*&%L<&AA;&ES="D["@H@("`O
M*B!&<F5E('5P('1H92!C:&%R86-T97(@<&]I;G1E<G,N"0D)"0DJ+PH@("!F
M;W(@*'@],#L@>"`\(&%L<&AA;&ES="T^;&ES=%-I>F4[('@K*RD*("`@>PH@
M("`@("!F<F5E0VAA<B`H86QP:&%L:7-T+3YL:7-T6WA=*3L*("`@?0H*("`@
M+RH@1&5S=')O>2!T:&4@;W1H97(@0V1K(&]B:F5C=',N"0D)"0DJ+PH@("!D
M97-T<F]Y0T1+16YT<GD@*&%L<&AA;&ES="T^96YT<GE&:65L9"D["B`@(&1E
M<W1R;WE#1$M38W)O;&P@*&%L<&AA;&ES="T^<V-R;VQL1FEE;&0I.PH@"B`@
M("\J($9R964@=7`@=&AE('=I;F1O=R!P;VEN=&5R<RX@"0D)"0DJ+PH@("!I
M9B`H86QP:&%L:7-T+3YS:&%D;W<I"B`@('L*("`@("`@9&5L=VEN("AA;'!H
M86QI<W0M/G-H861O=U=I;BD["B`@('T*("`@9&5L=VEN("AA;'!H86QI<W0M
M/G=I;BD["@H@("`O*B!5;G)E9VES=&5R('1H92!O8FIE8W0N"0D)"0D)*B\*
M("`@=6YR96=I<W1E<D-$2T]B:F5C="`H=D%,4$A!3$E35"P@86QP:&%L:7-T
M*3L*"B`@("\J($9R964@=7`@=&AE(&]B:F5C="!P;VEN=&5R+@D)"0D)*B\*
M("`@9G)E92`H86QP:&%L:7-T*3L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!S
M971S('1H92!P<F4M<')O8V5S<R!F=6YC=&EO;BX*("HO"G9O:60@<V5T0T1+
M06QP:&%L:7-T4')E4')O8V5S<R`H0T1+04Q02$%,25-4("IA;'!H86QI<W0L
M(%!23T-%4U-&3B!C86QL8F%C:RP@=F]I9"`J9&%T82D*>PH@("!S971#1$M%
M;G1R>5!R95!R;V-E<W,@*&%L<&AA;&ES="T^96YT<GE&:65L9"P@8V%L;&)A
M8VLL(&1A=&$I.PI]"B`*+RH*("H@5&AI<R!F=6YC=&EO;B!S971S('1H92!P
M;W-T+7!R;V-E<W,@9G5N8W1I;VXN"B`J+PIV;VED('-E=$-$2T%L<&AA;&ES
M=%!O<W10<F]C97-S("A#1$M!3%!(04Q)4U0@*F%L<&AA;&ES="P@4%)/0T53
M4T9.(&-A;&QB86-K+"!V;VED("ID871A*0I["B`@('-E=$-$2T5N=')Y4&]S
M=%!R;V-E<W,@*&%L<&AA;&ES="T^96YT<GE&:65L9"P@8V%L;&)A8VLL(&1A
M=&$I.PI]"@HO*@H@*B!3=&%R="!O9B!C86QL8F%C:R!F=6YC=&EO;G,N"B`J
M+PIV;VED(&%L<&AA;&ES=%-C<F]L;%5P0T(@*$5/8FIE8W14>7!E(&]B:F5C
M=%1Y<&4L('9O:60@*F]B:F5C="P@=F]I9"`J8VQI96YT1&%T82D*>PH@("!#
M1$M!3%!(04Q)4U0@*F%L<&AA;&ES=`D]("A#1$M!3%!(04Q)4U0@*BEC;&EE
M;G1$871A.PH@("!#1$M30U)/3$P@*G-C<F]L;`D)/2`H0T1+4T-23TQ,*BEA
M;'!H86QI<W0M/G-C<F]L;$9I96QD.PH@("!#1$M%3E1262`J96YT<GD)"3T@
M*$-$2T5.5%)9*BEA;'!H86QI<W0M/F5N=')Y1FEE;&0["B`@(&-H87(@*F-U
M<G)E;G0["@H@("`O*B!-;W9E('1H92!S8W)O;&QI;F<@;&ES="X)"0D)"0DJ
M+PH@("!I;FIE8W1#1$M38W)O;&P@*&%L<&AA;&ES="T^<V-R;VQL1FEE;&0L
M($M%65]54"D["@H@("`O*B!3970@=&AE('9A;'5E(&EN('1H92!E;G1R>2!F
M:65L9"X)"0D)"2HO"B`@(&-U<G)E;G0@/2!C:'1Y<&4R0VAA<B`H<V-R;VQL
M+3YI=&5M6W-C<F]L;"T^8W5R<F5N=$ET96U=*3L*("`@<V5T0T1+16YT<GD@
M*&5N=')Y+"!C=7)R96YT+"!E;G1R>2T^;6EN+"!E;G1R>2T^;6%X+"!E;G1R
M>2T^8F]X*3L*("`@9')A=T-$2T5N=')Y("AE;G1R>2P@96YT<GDM/F)O>"D[
M"B`@(&9R965#:&%R("AC=7)R96YT*3L*?0IV;VED(&%L<&AA;&ES=%-C<F]L
M;$1O=VY#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I9"`J;V)J96-T
M+"!V;VED("IC;&EE;G1$871A*0I["B`@($-$2T%,4$A!3$E35"`J86QP:&%L
M:7-T"3T@*$-$2T%,4$A!3$E35"`J*6-L:65N=$1A=&$["B`@($-$2U-#4D],
M3"`J<V-R;VQL"0D]("A#1$M30U)/3$PJ*6%L<&AA;&ES="T^<V-R;VQL1FEE
M;&0["B`@($-$2T5.5%)9("IE;G1R>0D)/2`H0T1+14Y44EDJ*6%L<&AA;&ES
M="T^96YT<GE&:65L9#L*("`@8VAA<B`J8W5R<F5N=#L*"B`@("\J($UO=F4@
M=&AE('-C<F]L;&EN9R!L:7-T+@D)"0D)"2HO"B`@(&EN:F5C=$-$2U-C<F]L
M;"`H86QP:&%L:7-T+3YS8W)O;&Q&:65L9"P@2T597T1/5TXI.PH*("`@+RH@
M4V5T('1H92!V86QU92!I;B!T:&4@96YT<GD@9FEE;&0N"0D)"0DJ+PH@("!C
M=7)R96YT(#T@8VAT>7!E,D-H87(@*'-C<F]L;"T^:71E;5MS8W)O;&PM/F-U
M<G)E;G1)=&5M72D["B`@('-E=$-$2T5N=')Y("AE;G1R>2P@8W5R<F5N="P@
M96YT<GDM/FUI;BP@96YT<GDM/FUA>"P@96YT<GDM/F)O>"D["B`@(&1R87=#
M1$M%;G1R>2`H96YT<GDL(&5N=')Y+3YB;W@I.PH@("!F<F5E0VAA<B`H8W5R
M<F5N="D["GT*=F]I9"!A;'!H86QI<W1086=E57!#0B`H14]B:F5C=%1Y<&4@
M;V)J96-T5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I[
M"B`@($-$2T%,4$A!3$E35"`J86QP:&%L:7-T"3T@*$-$2T%,4$A!3$E35"`J
M*6-L:65N=$1A=&$["B`@($-$2U-#4D],3"`J<V-R;VQL"0D]("A#1$M30U)/
M3$PJ*6%L<&AA;&ES="T^<V-R;VQL1FEE;&0["B`@($-$2T5.5%)9("IE;G1R
M>0D)/2`H0T1+14Y44EDJ*6%L<&AA;&ES="T^96YT<GE&:65L9#L*("`@8VAA
M<B`J8W5R<F5N=#L*"B`@("\J($UO=F4@=&AE('-C<F]L;&EN9R!L:7-T+@D)
M"0D)"2HO"B`@(&EN:F5C=$-$2U-C<F]L;"`H86QP:&%L:7-T+3YS8W)O;&Q&
M:65L9"P@2T597U!004=%*3L*"B`@("\J(%-E="!T:&4@=F%L=64@:6X@=&AE
M(&5N=')Y(&9I96QD+@D)"0D)*B\*("`@8W5R<F5N="`](&-H='EP93)#:&%R
M("AS8W)O;&PM/FET96U;<V-R;VQL+3YC=7)R96YT271E;5TI.PH@("!S971#
M1$M%;G1R>2`H96YT<GDL(&-U<G)E;G0L(&5N=')Y+3YM:6XL(&5N=')Y+3YM
M87@L(&5N=')Y+3YB;W@I.PH@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R
M>2T^8F]X*3L*("`@9G)E94-H87(@*&-U<G)E;G0I.PI]"G9O:60@86QP:&%L
M:7-T4&%G941O=VY#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I9"`J
M;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I["B`@($-$2T%,4$A!3$E35"`J
M86QP:&%L:7-T"3T@*$-$2T%,4$A!3$E35"`J*6-L:65N=$1A=&$["B`@($-$
M2U-#4D],3"`J<V-R;VQL"0D]("A#1$M30U)/3$PJ*6%L<&AA;&ES="T^<V-R
M;VQL1FEE;&0["B`@($-$2T5.5%)9("IE;G1R>0D)/2`H0T1+14Y44EDJ*6%L
M<&AA;&ES="T^96YT<GE&:65L9#L*("`@8VAA<B`J8W5R<F5N=#L*"B`@("\J
M($UO=F4@=&AE('-C<F]L;&EN9R!L:7-T+@D)"0D)"2HO"B`@(&EN:F5C=$-$
M2U-C<F]L;"`H86QP:&%L:7-T+3YS8W)O;&Q&:65L9"P@2T597TY004=%*3L*
M"B`@("\J(%-E="!T:&4@=F%L=64@:6X@=&AE(&5N=')Y(&9I96QD+@D)"0D)
M*B\*("`@8W5R<F5N="`](&-H='EP93)#:&%R("AS8W)O;&PM/FET96U;<V-R
M;VQL+3YC=7)R96YT271E;5TI.PH@("!S971#1$M%;G1R>2`H96YT<GDL(&-U
M<G)E;G0L(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N=')Y+3YB;W@I.PH@
M("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^8F]X*3L*("`@9G)E94-H
M87(@*&-U<G)E;G0I.PI]"@HO*@H@*B!4:&ES(&ES('1H92!H96%R="UB96%T
M(&]F('1H92!W:61G970N"B`J+PII;G0@<')E4')O8V5S<T5N=')Y1FEE;&0@
M*$5/8FIE8W14>7!E(&-D:W1Y<&4L('9O:60@*F]B:F5C="P@=F]I9"`J8VQI
M96YT1&%T82P@8VAT>7!E(&EN<'5T*0I["B`@($-$2T%,4$A!3$E35"`J86QP
M:&%L:7-T"3T@*$-$2T%,4$A!3$E35"`J*6-L:65N=$1A=&$["B`@($-$2U-#
M4D],3"`J<V-R;VQL"0D](&%L<&AA;&ES="T^<V-R;VQL1FEE;&0["B`@($-$
M2T5.5%)9("IE;G1R>0D)/2!A;'!H86QI<W0M/F5N=')Y1FEE;&0["B`@(&EN
M="!I;F9O3&5N"0D)/2`H:6YT*7-T<FQE;B`H96YT<GDM/FEN9F\I.PH@("!I
M;G0@:6YD97@L(&1I9F9E<F5N8V4L(&%B<V]L=71E1&EF9F5R96YC92P@>#L*
M(VEF9&5F($%)6`H@("!C:&%R('!A='1E<FY;-3`P,%T["B-E;'-E"B`@(&-H
M87(@<&%T=&5R;EME;G1R>2T^;6%X*S1=.PHC96YD:68*"B`@("\J($-H96-K
M('1H92!I;G!U="X@"0D)"0D)"2HO"B`@(&EF("AI<V%L;G5M("AI;G!U="D@
M?'P@:7-P=6YC="`H:6YP=70I('Q\(&EN<'5T(#T]($1%3$5412!\?"!I;G!U
M="`]/2`G""<I"B`@('L*("`@("`@+RH@0V]P>2!T:&4@:6YF;W)M871I;VX@
M9G)O;2!T:&4@96YT<GD@9FEE;&0N"0D)*B\*("`@("`@<W1R8W!Y("AP871T
M97)N+"!E;G1R>2T^:6YF;RD["@H@("`@("`O*B!4<G5N8V%T92]#;VYC871E
M;F%T92!T;R!T:&4@:6YF;W)M871I;VX@:6X@=&AE(&5N=')Y(&9I96QD+@DJ
M+R`@"B`@("`@(&EF("AI;G!U="`]/2!$14Q%5$4@?'P@:6YP=70@/3T@)P@G
M*0H@("`@("!["B`@("`@("`@('!A='1E<FY;:6YF;TQE;ET@/2`G7#`G.PH@
M("`@("`@("!P871T97)N6VEN9F],96XM,5T@/2`G7#`G.PH@("`@("`@("!I
M9B`H:6YF;TQE;B`]/2`Q*0H@("`@("`@("!["B`@("`@("`@("`@(')E='5R
M;B`Q.PH@("`@("`@("!]"B`@("`@('T*("`@("`@96QS90H@("`@("!["B`@
M("`@("`@('!A='1E<FY;:6YF;TQE;ET@/2`H8VAA<BEI;G!U=#L*("`@("`@
M("`@<&%T=&5R;EMI;F9O3&5N*S%=(#T@)UPP)SL*("`@("`@?0H*("`@("`@
M+RH@3&]O:R!F;W(@=&AE('!A='1E<FX@:6X@=&AE(&QI<W0N"0D)"2HO"B`@
M("`@(&EN9&5X(#T@<V5A<F-H3&ES="`H86QP:&%L:7-T+3YL:7-T+"!A;'!H
M86QI<W0M/FQI<W13:7IE+"!P871T97)N*3L*("`@("`@:68@*&EN9&5X(#X]
M(#`I"B`@("`@('L*("`@("`@("`@9&EF9F5R96YC90D)/2!I;F1E>"`M('-C
M<F]L;"T^8W5R<F5N=$ET96T["B`@("`@("`@(&%B<V]L=71E1&EF9F5R96YC
M90D](&%B<R`H9&EF9F5R96YC92D["B`@("`@("`@(&EF("AD:69F97)E;F-E
M(#P@,"D*("`@("`@("`@>PH@("`@("`@("`@("!F;W(@*'@],#L@>"`\(&%B
M<V]L=71E1&EF9F5R96YC93L@>"LK*0H@("`@("`@("`@("!["B`@("`@("`@
M("`@("`@(&EN:F5C=$-$2U-C<F]L;"`H<V-R;VQL+"!+15E?55`I.PH@("`@
M("`@("`@("!]"B`@("`@("`@('T*("`@("`@("`@96QS92!I9B`H9&EF9F5R
M96YC92`^(#`I"B`@("`@("`@('L*("`@("`@("`@("`@9F]R("AX/3`[('@@
M/"!A8G-O;'5T941I9F9E<F5N8V4[('@K*RD*("`@("`@("`@("`@>PH@("`@
M("`@("`@("`@("!I;FIE8W1#1$M38W)O;&P@*'-C<F]L;"P@2T597T1/5TXI
M.PH@("`@("`@("`@("!]"B`@("`@("`@('T*("`@("`@("`@9')A=T-$2U-C
M<F]L;"`H<V-R;VQL+"!S8W)O;&PM/F)O>"D["B`@("`@('T*("`@("`@96QS
M90H@("`@("!["B`@("`@("`@($)E97`H*3L*("`@("`@("`@<F5T=7)N(#`[
M"B`@("`@('T*("`@?0H@("!R971U<FX@,3L*?0H*+RH*("H@5&AI<R!T<FEE
M<R!T;R!C;VUP;&5T92!T:&4@=V]R9"!I;B!T:&4@96YT<GD@9FEE;&0N"B`J
M+PIV;VED(&-O;7!L971E5V]R9$-"("A%3V)J96-T5'EP92!O8FIE8W14>7!E
M+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I"GL*("`@0T1+04Q0
M2$%,25-4("IA;'!H86QI<W0)/2`H0T1+04Q02$%,25-4("HI8VQI96YT1&%T
M83L*("`@0T1+14Y44ED@*F5N=')Y"0D]("A#1$M%3E1262HI86QP:&%L:7-T
M+3YE;G1R>49I96QD.PH@("!I;G0@=V]R9$QE;F=T:`D)/2`H:6YT*7-T<FQE
M;B`H96YT<GDM/FEN9F\I.PH@("!I;G0@:6YD97@L(')E="P@>#L*"B`@("\J
M($EF('1H92!W;W)D(&QE;F=T:"!I<R!E<75A;"!T;R!Z97)O+"!J=7-T(&QE
M879E+@D)"2HO"B`@(&EF("AW;W)D3&5N9W1H(#T](#`I"B`@('L*("`@("`@
M0F5E<"@I.PH@("`@("!R971U<FX["B`@('T*"B`@("\J($QO;VL@9F]R(&$@
M=6YI<75E('=O<F0@;6%T8V@N"0D)"0DJ+PH@("!I;F1E>"`]('-E87)C:$QI
M<W0@*&%L<&AA;&ES="T^;&ES="P@86QP:&%L:7-T+3YL:7-T4VEZ92P@96YT
M<GDM/FEN9F\I.PH*("`@+RH@268@=&AE(&EN9&5X(&ES(&QE<W,@=&AA;B!Z
M97)O+"!R971U<FX@=V4@9&ED;B=T(&9I;F0@82!M871C:"X)*B\*("`@:68@
M*&EN9&5X(#P@,"D*("`@>PH@("`@("!"965P*"D["B`@("`@(')E='5R;CL*
M("`@?0H*("`@+RH@1&ED('=E(&9I;F0@=&AE(&QA<W0@=V]R9"!I;B!T:&4@
M;&ES=#\)"0D)*B\*("`@:68@*&EN9&5X(#T](&%L<&AA;&ES="T^;&ES=%-I
M>F4M,2D*("`@>PH@("`@("!S971#1$M%;G1R>2`H96YT<GDL(&%L<&AA;&ES
M="T^;&ES=%MI;F1E>%TL(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N=')Y
M+3YB;W@I.PH@("`@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^8F]X
M*3L*("`@("`@<F5T=7)N.PH@("!]"@H@("`O*B!/:RP@=V4@9F]U;F0@82!M
M871C:"P@:7,@=&AE(&YE>'0@:71E;2!S:6UI;&%R/PD)"2HO"B`@(')E="`]
M('-T<FYC;7`@*&%L<&AA;&ES="T^;&ES=%MI;F1E>"LQ72P@96YT<GDM/FEN
M9F\L('=O<F1,96YG=&@I.PH@("!I9B`H<F5T(#T](#`I"B`@('L*("`@("`@
M0T1+4T-23TQ,("IS8W)O;&P)/2`H0T1+4T-23TQ,("HI3E5,3#L*("`@("`@
M:6YT(&-U<G)E;G1);F1E>`D](&EN9&5X.PH@("`@("!I;G0@86QT0V]U;G0)
M/2`P.PH@("`@("!I;G0@:&5I9VAT"3T@,#L*("`@("`@:6YT(&UA=&-H"0D]
M(#`["B`@("`@(&-H87(@*F%L=%=O<F1S6TU!6$Q)3D5373L*"B`@("`@("\J
M(%-T87)T(&QO;VMI;F<@9F]R(&%L=&5R;F%T92!W;W)D<RX)"0D)*B\*("`@
M("`@=VAI;&4@*'-T<FYC;7`@*&%L<&AA;&ES="T^;&ES=%MC=7)R96YT26YD
M97A=+"!E;G1R>2T^:6YF;RP@=V]R9$QE;F=T:"D@/3T@,"D*("`@("`@>PH@
M("`@("`@("!A;'17;W)D<UMA;'1#;W5N=%T@/2!C;W!Y0VAA<B`H86QP:&%L
M:7-T+3YL:7-T6V-U<G)E;G1);F1E>%TI.PH@("`@("`@("!C=7)R96YT26YD
M97@K*SL*("`@("`@("`@86QT0V]U;G0K*SL*("`@("`@?0H@("`@("`*("`@
M("`@+RH@1&5T97)M:6YE('1H92!H96EG:'0@;V8@=&AE('-C<F]L;&EN9R!L
M:7-T+@D)"2HO"B`@("`@(&AE:6=H="`]("AA;'1#;W5N="`\(#@@/R!A;'1#
M;W5N="LS(#H@,3$I.PH*("`@("`@+RH@0W)E871E(&$@<V-R;VQL:6YG(&QI
M<W0@;V8@8VQO<V4@;6%T8VAE<RX)"0DJ+PH@("`@("!S8W)O;&P@/2!N97=#
M1$M38W)O;&P@*&5N=')Y+3YS8W)E96XL($-%3E1%4BP@0T5.5$52+"!H96EG
M:'0L(#(U+`H)"0D)"2(\0SX\+T(O-3Y0;W-S:6)L92!-871C:&5S+B(L"@D)
M"0D)86QT5V]R9',L(&%L=$-O=6YT+"!.54U"15)3+`H)"0D)"4%?4D5615)3
M12P@5%)512P@1D%,4T4I.PH*("`@("`@+RH@06QL;W<@=&AE;2!T;R!S96QE
M8W0@82!C;&]S92!M871C:"X)"0D)*B\*("`@("`@;6%T8V@@/2!A8W1I=F%T
M94-$2U-C<F]L;"`H<V-R;VQL+"!.54Q,*3L*("`@("`@9&5S=')O>4-$2U-C
M<F]L;"`H<V-R;VQL*3L*("`@("`@"B`@("`@("\J($-H96-K(&AO=R!T:&5Y
M(&5X:71E9"!T:&4@;&ES="X)"0D)*B\*("`@("`@:68@*'-C<F]L;"T^97AI
M=%1Y<&4@/3T@=D530T%015](250I"B`@("`@('L*("`@("`@("`@+RH@0VQE
M86X@=7`N"0D)"0D)"2HO"B`@("`@("`@(&9O<B`H>#TP.R!X(#P@86QT0V]U
M;G0[('@K*RD*("`@("`@("`@>PH@("`@("`@("`@("!F<F5E0VAA<B`H86QT
M5V]R9'-;>%TI.PH@("`@("`@("!]"@H@("`@("`@("`O*B!"965P(&%T('1H
M92!U<V5R+@D)"0D)"2HO"B`@("`@("`@($)E97`H*3L*"B`@("`@("`@("\J
M(%)E9')A=R!T:&4@86QP:&%L:7-T(&%N9"!R971U<FXN"0D)"2HO"B`@("`@
M("`@(&1R87=#1$M!;'!H86QI<W0@*&%L<&AA;&ES="P@86QP:&%L:7-T+3YB
M;W@I.PH@("`@("`@("!R971U<FX["B`@("`@('T*"B`@("`@("\J(%-E="!T
M:&4@96YT<GD@9FEE;&0@=&\@=&AE('-E;&5C=&5D('9A;'5E+@D)"2HO"B`@
M("`@('-E=$-$2T5N=')Y("AE;G1R>2P@86QT5V]R9'-;;6%T8VA=+"!E;G1R
M>2T^;6EN+"!E;G1R>2T^;6%X+"!E;G1R>2T^8F]X*3L*"B`@("`@("\J($-L
M96%N('5P+@D)"0D)"0DJ+PH@("`@("!F;W(@*'@],#L@>"`\(&%L=$-O=6YT
M.R!X*RLI"B`@("`@('L*("`@("`@("`@9G)E94-H87(@*&%L=%=O<F1S6WA=
M*3L*("`@("`@?0H*("`@("`@+RH@4F5D<F%W('1H92!A;'!H86QI<W0N"0D)
M"0D)*B\*("`@("`@9')A=T-$2T%L<&AA;&ES="`H86QP:&%L:7-T+"!A;'!H
M86QI<W0M/F)O>"D["B`@('T*("`@96QS90H@("!["B`@("`@("\J(%-E="!T
M:&4@96YT<GD@9FEE;&0@=VET:"!T:&4@9F]U;F0@:71E;2X)"0DJ+PH@("`@
M("!S971#1$M%;G1R>2`H96YT<GDL(&%L<&AA;&ES="T^;&ES=%MI;F1E>%TL
M(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N=')Y+3YB;W@I.PH@("`@("!D
H<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^8F]X*3L*("`@?0I]"B`@
`
end
SHAR_EOF
  echo 'File cdk4.8.0/alphalist.c is complete' &&
  echo 'uudecoding file cdk4.8.0/alphalist.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/alphalist.c' &&
  chmod 0444 'cdk4.8.0/alphalist.c' ||
  echo 'restore of cdk4.8.0/alphalist.c failed'
  shar_count="`wc -c < 'cdk4.8.0/alphalist.c'`"
  test 15745 -eq "$shar_count" ||
    echo "cdk4.8.0/alphalist.c: original size 15745, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/calendar.c ==============
if test -f 'cdk4.8.0/calendar.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/calendar.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/calendar.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/calendar.c
M(VEN8VQU9&4@(F-D:RYH(@H*+RH*("H@)$%U=&AO<CH@9VQO=F5R("0*("H@
M)$1A=&4Z(#$Y.38O,#<O,#4@,3DZ,C<Z,#$@)`H@*B`D4F5V:7-I;VXZ(#$N
M,3$@)`H@*B\*"B\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO
M"F-H87(@*FUO;G1H<T]F5&AE665A<EM=(#T@>R).54Q,(BP@(DIA;G5A<GDB
M+"`B1F5B<G5A<GDB+"`B36%R8V@B+"`B07!R:6PB+`H)"0D)(DUA>2(L(")*
M=6YE(BP@(DIU;'DB+"`B075G=7-T(BP@(E-E<'1E;6)E<B(L"@D)"0DB3V-T
M;V)E<B(L(").;W9E;6)E<B(L(")$96-E;6)E<B)].PII;G0@9&%Y<T]F5&AE
M36]N=&A;72`]('LM,2P@,S$L(#(X+"`S,2P@,S`L(#,Q+"`S,"P@,S$L(#,Q
M+"`S,"P@,S$L(#,P+"`S,7T["@HO*B!$96-L87)E(&QO8V%L('!R;W1O='EP
M97,N"0D)"0D)*B\*:6YT(&ES3&5A<%EE87(@*&EN="!Y96%R*3L*:6YT(&=E
M=$UO;G1H3&5N9W1H("AI;G0@>65A<BP@:6YT(&UO;G1H*3L*:6YT(&=E=$UO
M;G1H4W1A<G17965K9&%Y("AI;G0@>65A<BP@:6YT(&UO;G1H*3L*=&EM95]T
M(&=E=$-U<G)E;G14:6UE("A#1$M#04Q%3D1!4B`J8V%L96YD87(I.PIV;VED
M('9E<FEF>4-A;&5N9&%R1&%T92`H0T1+0T%,14Y$05(@*F-A;&5N9&%R*3L*
M=F]I9"!I;F-R96UE;G1#86QE;F1A<D1A>2`H0T1+0T%,14Y$05(@*F-A;&5N
M9&%R+"!I;G0@861J=7-T*3L*=F]I9"!D96-R96UE;G1#86QE;F1A<D1A>2`H
M0T1+0T%,14Y$05(@*F-A;&5N9&%R+"!I;G0@861J=7-T*3L*=F]I9"!I;F-R
M96UE;G1#86QE;F1A<DUO;G1H("A#1$M#04Q%3D1!4B`J8V%L96YD87(L(&EN
M="!A9&IU<W0I.PIV;VED(&1E8W)E;65N=$-A;&5N9&%R36]N=&@@*$-$2T-!
M3$5.1$%2("IC86QE;F1A<BP@:6YT(&%D:G5S="D["G9O:60@:6YC<F5M96YT
M0V%L96YD87)996%R("A#1$M#04Q%3D1!4B`J8V%L96YD87(L(&EN="!A9&IU
M<W0I.PIV;VED(&1E8W)E;65N=$-A;&5N9&%R665A<B`H0T1+0T%,14Y$05(@
M*F-A;&5N9&%R+"!I;G0@861J=7-T*3L*"B\J"B`J(%1H:7,@8W)E871E<R!A
M(&-A;&5N9&%R('=I9&=E="X*("HO"D-$2T-!3$5.1$%2("IN97=#1$M#86QE
M;F1A<BA#1$M30U)%14X@*F-D:W-C<F5E;BP@:6YT('AP;&%C92P@:6YT('EP
M;&%C92P@:6YT(&1A>2P@:6YT(&UO;G1H+"!I;G0@>65A<BP@8VAT>7!E(&1A
M>4%T=')I8BP@8VAT>7!E(&UO;G1H071T<FEB+"!C:'1Y<&4@>65A<D%T=')I
M8BP@8VAT>7!E(&AI9VAL:6=H="P@8F]O;&5A;B!B;W@L(&)O;VQE86X@<VAA
M9&]W*0I["B`@("\J($UA:6YT86EN('1H92!C86QE;F1A<B!I;F9O<FUA=&EO
M;@D)"0D)*B\*("`@0T1+0T%,14Y$05(@*F-A;&5N9&%R"3T@*$-$2T-!3$5.
M1$%2("HI;6%L;&]C("AS:7IE;V8@*$-$2T-!3$5.1$%2*2D["B`@(&EN="!B
M;WA7:61T:`D)"3T@,C,["B`@(&EN="!B;WA(96EG:'0)"3T@,3$["B`@(&EN
M="!X<&]S"0D)/2!X<&QA8V4["B`@(&EN="!Y<&]S"0D)/2!Y<&QA8V4["B`@
M(&EN="!X+"!Y+"!Z.PH*("`@+RH@4F5J=7-T:69Y('1H92!X(&%N9"!Y('!O
M<VET:6]N<R!I9B!W92!N965D('1O+@D)"2HO"B`@(&%L:6=N>'D@*&-D:W-C
M<F5E;BT^=VEN9&]W+"`F>'!O<RP@)GEP;W,L(&)O>%=I9'1H+"!B;WA(96EG
M:'0I.PH*("`@+RH@0W)E871E('1H92!C86QE;F1A<@D)"0D)"2HO"B`@(&-A
M;&5N9&%R+3YP87)E;G0)"3T@8V1K<V-R965N+3YW:6YD;W<["B`@(&-A;&5N
M9&%R+3YW:6X)"3T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H+"!Y<&]S
M+"!X<&]S*3L*("`@8V%L96YD87(M/FQA8F5L5VEN"0D]('-U8G=I;B`H8V%L
M96YD87(M/G=I;BP@,2P@8F]X5VED=&@M,BP@>7!O<RLQ+"!X<&]S*S$I.PH@
M("!C86QE;F1A<BT^9FEE;&17:6X)"3T@<W5B=VEN("AC86QE;F1A<BT^=VEN
M+"`W+"!B;WA7:61T:"TQ+"!Y<&]S*S,L('AP;W,I.PH@("!C86QE;F1A<BT^
M<VAA9&]W5VEN"0D]("A724Y$3U<@*BE.54Q,.PH@("!C86QE;F1A<BT^>'!O
M<PD)/2!X<&]S.PH@("!C86QE;F1A<BT^>7!O<PD)/2!Y<&]S.PH@("!C86QE
M;F1A<BT^9&%Y"0D](&1A>3L*("`@8V%L96YD87(M/FUO;G1H"0D](&UO;G1H
M.PH@("!C86QE;F1A<BT^>65A<@D)/2!Y96%R.PH@("!C86QE;F1A<BT^9&%Y
M071T<FEB"0D](&1A>4%T=')I8CL*("`@8V%L96YD87(M/FUO;G1H071T<FEB
M"3T@;6]N=&A!='1R:6(["B`@(&-A;&5N9&%R+3YY96%R071T<FEB"0D]('EE
M87)!='1R:6(["B`@(&-A;&5N9&%R+3YH:6=H;&EG:'0)"3T@:&EG:&QI9VAT
M.PH@("!C86QE;F1A<BT^=VED=&@)"3T@8F]X5VED=&@["B`@(&-A;&5N9&%R
M+3YE>&ET5'EP90D)/2!V3D5615)?04-4259!5$5$.PH@("!C86QE;F1A<BT^
M8F]X"0D](&)O>#L*("`@8V%L96YD87(M/G-H861O=PD)/2!S:&%D;W<["@H@
M("`O*B!)<R!T:&4@=VEN9&]W($Y53$P_/S\)"0D)"0DJ+PH@("!I9B`H8V%L
M96YD87(M/G=I;B`]/2`H5TE.1$]7("HI3E5,3"D@"B`@('L*("`@("`@<F5T
M=7)N("@H0T1+0T%,14Y$05(@*BE.54Q,*3L*("`@?0H@("!K97EP860@*&-A
M;&5N9&%R+3YW:6XL(%12544I.PH*("`@+RH@0VQE87(@;W5T('1H92!M87)K
M97)S+@D)"0D)"2HO"B`@(&9O<B`H>CTP.R!Z(#P]($U!6%E%05)3.R!Z*RLI
M"B`@('L*("`@("`@9F]R("AY/3`[('D@/#T@34%834].5$A3.R!Y*RLI"B`@
M("`@('L*("`@("`@("`@9F]R("AX/3`[('@@/#T@34%834].5$A3.R!X*RLI
M"B`@("`@("`@('L*("`@("`@("`@("`@8V%L96YD87(M/FUA<FME<EMX75MY
M75MZ72`]("AC:'1Y<&4I3E5,3#L*("`@("`@("`@?0H@("`@("!]"B`@('T*
M"B`@("\J(%9E<FEF>2!T:&4@9&%T97,@<')O=FED960N"0D)"0DJ+PH@("!V
M97)I9GE#86QE;F1A<D1A=&4@*&-A;&5N9&%R*3L*"B`@("\J($1E=&5R;6EN
M92!W:&EC:"!D87D@=&AE(&UO;G1H('-T87)T<R!O;BX)"0D)*B\*("`@8V%L
M96YD87(M/G=E96M$87D@/2!G971-;VYT:%-T87)T5V5E:V1A>2`H8V%L96YD
M87(M/GEE87(L(&-A;&5N9&%R+3YM;VYT:"D["@H@("`O*B!)9B!A('-H861O
M=R!W87,@<F5Q=65S=&5D+"!T:&5N(&-R96%T92!T:&4@<VAA9&]W('=I;F1O
M=RX)"2HO"B`@(&EF("AS:&%D;W<I"B`@('L*("`@("`@8V%L96YD87(M/G-H
M861O=U=I;B`](&YE=W=I;B`H8F]X2&5I9VAT+"!B;WA7:61T:"P@>7!O<RLQ
M+"!X<&]S*S$I.PH@("!]"@H@("`O*B!296=I<W1E<B!T:&ES(&)A8GDN"0D)
M"0D)*B\*("`@<F5G:7-T97)#1$M/8FIE8W0@*&-D:W-C<F5E;BP@=D-!3$5.
M1$%2+"!C86QE;F1A<BD["@H@("`O*B!2971U<FX@=&AE(&-A;&5N9&%R('!O
M:6YT97(N"0D)"0D)*B\*("`@<F5T=7)N("AC86QE;F1A<BD["GT*"B\J(`H@
M*B!4:&ES(&9U;F-T:6]N(&QE=',@=&AE('5S97(@<&QA>2!W:71H('1H:7,@
M=VED9V5T+@H@*B\*=&EM95]T(&%C=&EV871E0T1+0V%L96YD87(@*$-$2T-!
M3$5.1$%2("IC86QE;F1A<BP@8VAT>7!E("IA8W1I;VYS*0I["B`@("\J($1E
M8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@(&-H='EP92!I;G!U
M=`D]("AC:'1Y<&4I3E5,3#L*("`@=&EM95]T(')E=`D]("TQ.PH@("`*("`@
M+RH@1')A=R!T:&4@=VED9V5T+@D)"0D)"0DJ+PH@("!D<F%W0T1+0V%L96YD
M87(@*&-A;&5N9&%R+"!C86QE;F1A<BT^8F]X*3L*"B`@("\J($-H96-K(&EF
M("=A8W1I;VYS)R!I<R!.54Q,+@D)"0D)*B\*("`@:68@*&%C=&EO;G,@/3T@
M*&-H='EP92`J*4Y53$PI"B`@('L*("`@("`@9F]R("@[.RD*("`@("`@>PH@
M("`@("`@("`O*B!'970@=&AE(&EN<'5T+@D)"0D)"2HO"B`@("`@("`@(&EN
M<'5T(#T@=V=E=&-H("AC86QE;F1A<BT^=VEN*3L*"B`@("`@("`@("\J($EN
M:F5C="!T:&4@8VAA<F%C=&5R(&EN=&\@=&AE('=I9&=E="X)"0DJ+PH@("`@
M("`@("!R970@/2!I;FIE8W1#1$M#86QE;F1A<B`H8V%L96YD87(L(&EN<'5T
M*3L*("`@("`@("`@:68@*&-A;&5N9&%R+3YE>&ET5'EP92`A/2!V14%23%E?
M15A)5"D*("`@("`@("`@>PH@("`@("`@("`@("!R971U<FX@<F5T.PH@("`@
M("`@("!]"B`@("`@('T*("`@?0H@("!E;'-E"B`@('L*("`@("`@:6YT(&QE
M;F=T:"`](&-H;&5N("AA8W1I;VYS*3L*("`@("`@:6YT('@@/3`["@H@("`@
M("`O*B!);FIE8W0@96%C:"!C:&%R86-T97(@;VYE(&%T(&$@=&EM92X)"0D)
M*B\*("`@("`@9F]R("AX/3`[('@@/"!L96YG=&@[('@K*RD*("`@("`@>PH@
M("`@("`@("!R970@/2!I;FIE8W1#1$M#86QE;F1A<B`H8V%L96YD87(L(&%C
M=&EO;G-;>%TI.PH@("`@("`@("!I9B`H8V%L96YD87(M/F5X:714>7!E("$]
M('9%05),65]%6$E4*0H@("`@("`@("!["B`@("`@("`@("`@(')E='5R;B!R
M970["B`@("`@("`@('T*("`@("`@?0H@("!]"B`@(')E='5R;B!R970["GT*
M"B\J"B`J(%1H:7,@:6YJ96-T<R!A('-I;F=L92!C:&%R86-T97(@:6YT;R!T
M:&4@=VED9V5T+@H@*B\*=&EM95]T(&EN:F5C=$-$2T-A;&5N9&%R("A#1$M#
M04Q%3D1!4B`J8V%L96YD87(L(&-H='EP92!I;G!U="D*>PH@("`O*B!$96-L
M87)E(&QO8V%L('9A<FEA8FQE<RX)"0D)"0DJ+PH@("!I;G0@<'!2971U<FX)
M/2`Q.PH*("`@+RH@4V5T('1H92!E>&ET('1Y<&4N"0D)"0D)*B\*("`@8V%L
M96YD87(M/F5X:714>7!E(#T@=D5!4DQ97T58250["@H@("`O*B!2969R97-H
M('1H92!C86QE;F1A<B!F:65L9"X)"0D)"0DJ+PH@("!D<F%W0T1+0V%L96YD
M87)&:65L9"`H8V%L96YD87(I.PH*("`@+RH@0VAE8VL@:68@=&AE<F4@:7,@
M82!P<F4M<')O8V5S<R!F=6YC=&EO;B!T;R!B92!C86QL960N"0DJ+PH@("!I
M9B`H8V%L96YD87(M/G!R95!R;V-E<W-&=6YC=&EO;B`A/2`H4%)/0T534T9.
M*4Y53$PI"B`@('L*("`@("`@+RH@0V%L;"!T:&4@<')E+7!R;V-E<W,@9G5N
M8W1I;VXN"0D)"0DJ+PH@("`@("!P<%)E='5R;B`]("@H4%)/0T534T9.*2AC
M86QE;F1A<BT^<')E4')O8V5S<T9U;F-T:6]N*2D@*'9#04Q%3D1!4BP@8V%L
M96YD87(L(&-A;&5N9&%R+3YP<F50<F]C97-S1&%T82P@:6YP=70I.PH@("!]
M"@H@("`O*B!3:&]U;&0@=V4@8V]N=&EN=64_"0D)"0D)*B\*("`@:68@*'!P
M4F5T=7)N("$](#`I"B`@('L*("`@("`@+RH@0VAE8VL@82!P<F5D969I;F5D
M(&)I;F1I;F<N+BX)"0D)"2HO"B`@("`@(&EF("@A(&-H96-K0T1+3V)J96-T
M0FEN9"`H=D-!3$5.1$%2+"!C86QE;F1A<BP@:6YP=70I*0H@("`@("!["B`@
M("`@("`@('-W:71C:"`H:6YP=70I"B`@("`@("`@('L*("`@("`@("`@("`@
M8V%S92!+15E?55`@.@H@("`@("`@("`@("`@("`@(&1E8W)E;65N=$-A;&5N
M9&%R1&%Y("AC86QE;F1A<BP@-RD["B`@("`@("`@("`@("`@("`@8G)E86L[
M"@H@("`@("`@("`@("!C87-E($M%65]$3U=.(#H*("`@("`@("`@("`@("`@
M("!I;F-R96UE;G1#86QE;F1A<D1A>2`H8V%L96YD87(L(#<I.PH@("`@("`@
M("`@("`@("`@(&)R96%K.PH@("`@("`*("`@("`@("`@("`@8V%S92!+15E?
M3$5&5"`Z"B`@("`@("`@("`@("`@("`@9&5C<F5M96YT0V%L96YD87)$87D@
M*&-A;&5N9&%R+"`Q*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@("`@
M"B`@("`@("`@("`@(&-A<V4@2T597U))1TA4(#H*("`@("`@("`@("`@("`@
M("!I;F-R96UE;G1#86QE;F1A<D1A>2`H8V%L96YD87(L(#$I.PH@("`@("`@
M("`@("`@("`@(&)R96%K.PH@("`@("`*("`@("`@("`@("`@8V%S92`G;B<@
M.@H@("`@("`@("`@("`@("`@(&EN8W)E;65N=$-A;&5N9&%R36]N=&@@*&-A
M;&5N9&%R+"`Q*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*"B`@("`@("`@
M("`@(&-A<V4@)TXG(#H*("`@("`@("`@("`@("`@("!I;F-R96UE;G1#86QE
M;F1A<DUO;G1H("AC86QE;F1A<BP@-BD["B`@("`@("`@("`@("`@("`@8G)E
M86L["@H@("`@("`@("`@("!C87-E("=P)R`Z"B`@("`@("`@("`@("`@("`@
M9&5C<F5M96YT0V%L96YD87)-;VYT:"`H8V%L96YD87(L(#$I.PH@("`@("`@
M("`@("`@("`@(&)R96%K.PH*("`@("`@("`@("`@8V%S92`G4"<@.@H@("`@
M("`@("`@("`@("`@(&1E8W)E;65N=$-A;&5N9&%R36]N=&@@*&-A;&5N9&%R
M+"`V*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*"B`@("`@("`@("`@(&-A
M<V4@)RTG(#H*("`@("`@("`@("`@("`@("!D96-R96UE;G1#86QE;F1A<EEE
M87(@*&-A;&5N9&%R+"`Q*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*"B`@
M("`@("`@("`@(&-A<V4@)RLG(#H*("`@("`@("`@("`@("`@("!I;F-R96UE
M;G1#86QE;F1A<EEE87(@*&-A;&5N9&%R+"`Q*3L*("`@("`@("`@("`@("`@
M("!B<F5A:SL*"B`@("`@("`@("`@(&-A<V4@)U0G(#H@8V%S92`G="<@.@H@
M("`@("`@("`@("`@("`@('-E=$-$2T-A;&5N9&%R1&%T92`H8V%L96YD87(L
M("TQ+"`M,2P@+3$I.PH@("`@("`@("`@("`@("`@(&)R96%K.PH*("`@("`@
M("`@("`@8V%S92!+15E?15-#(#H*("`@("`@("`@("`@("`@("!C86QE;F1A
M<BT^97AI=%1Y<&4@/2!V15-#05!%7TA)5#L*("`@("`@("`@("`@("`@("!R
M971U<FX@*'1I;65?="DM,3L*("`@("`@("`@("`@("`@("!B<F5A:SL*"B`@
M("`@("`@("`@(&-A<V4@2T597U)%5%523B`Z(&-A<V4@2T597U1!0B`Z"B`@
M("`@("`@("`@("`@("`@8V%L96YD87(M/F5X:714>7!E(#T@=DY/4DU!3#L*
M("`@("`@("`@("`@("`@("!R971U<FX@9V5T0W5R<F5N=%1I;64@*&-A;&5N
M9&%R*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@("`@"B`@("`@("`@
M("`@(&-A<V4@0T1+7U)%1E)%4T@@.@H@("`@("`@("`@("`@("`@(')E9G)E
M<VA#1$M38W)E96X@*&-A;&5N9&%R+3YS8W)E96XI.PH@("`@("`@("`@("`@
M("`@(&)R96%K.PH@("`@("`@("!]"B`@("`@('T*"B`@("`@("\J(%-H;W5L
M9"!W92!D;R!A('!O<W0M<')O8V5S<S\)"0D)"2HO"B`@("`@(&EF("AC86QE
M;F1A<BT^<&]S=%!R;V-E<W-&=6YC=&EO;B`A/2`H4%)/0T534T9.*4Y53$PI
M"B`@("`@('L*("`@("`@("`@*"A04D]#15-31DXI*&-A;&5N9&%R+3YP;W-T
M4')O8V5S<T9U;F-T:6]N*2D@*'9#04Q%3D1!4BP@8V%L96YD87(L(&-A;&5N
M9&%R+3YP;W-T4')O8V5S<T1A=&$L(&EN<'5T*3L*("`@("`@?0H@("!]"@H@
M("`O*B!3970@=&AE(&5X:70@='EP92!T:&5N(&5X:70N"0D)"0DJ+PH@("!C
M86QE;F1A<BT^97AI=%1Y<&4@/2!V14%23%E?15A)5#L*("`@<F5T=7)N("TQ
M.PI]"@HO*@H@*B!4:&ES(&1R87=S('1H92!C86QE;F1A<B!W:61G970N"B`J
M+PIV;VED(&1R87=#1$M#86QE;F1A<B`H0T1+0T%,14Y$05(@*F-A;&5N9&%R
M+"!B;V]L96%N($)O>"D*>PH@("!C:&%R("IH96%D97(@/2`B4W4@36\@5'4@
M5V4@5&@@1G(@4V$B.PH@("!I;G0@>#L*"B`@("\J($ME97`@=&AE(&)O>"!I
M;F9O<FUA=&EO;BX)"0D)"0DJ+PH@("!C86QE;F1A<BT^8F]X"3T@0F]X.PH*
M("`@+RH@17)A<V4@=&AE(&-A;&5N9&%R('=I9&=E="!F<F]M('1H92!S8W)E
M96XN"0D)*B\*("`@97)A<V5#1$M#86QE;F1A<B`H8V%L96YD87(I.PH*("`@
M+RH@27,@=&AE<F4@82!S:&%D;W<_/S\)"0D)"0DJ+PH@("!I9B`H8V%L96YD
M87(M/G-H861O=RD*("`@>PH@("`@("!D<F%W4VAA9&]W("AC86QE;F1A<BT^
M<VAA9&]W5VEN*3L*("`@?0H*("`@+RH@0F]X('1H92!W:61G970@:68@87-K
M960N"0D)"0D)*B\*("`@:68@*&-A;&5N9&%R+3YB;W@I"B`@('L*("`@("`@
M8F]X("AC86QE;F1A<BT^=VEN+"!!0U-?5DQ)3D4L($%#4U](3$E.12D["B`@
M('T*"B`@("\J($1R87<@:6X@=&AE(&AE861E<BX)"0D)"0D)*B\*("`@9F]R
M("AX/3`[('@@/"`R,#L@>"LK*0H@("!["B`@("`@(&UV=V%D9&-H("AC86QE
M;F1A<BT^=VEN+"`S+"!X*S(L(&AE861E<EMX72!\(&-A;&5N9&%R+3YD87E!
M='1R:6(I.PH@("!]"@H@("`O*B!$<F%W(&EN('1H92!C86QE;F1A<B!F:65L
M9"X)"0D)"2HO"B`@(&1R87=#1$M#86QE;F1A<D9I96QD("AC86QE;F1A<BD[
M"GT*"B\J"B`J(%1H:7,@9')A=W,@=&AE(&UO;G1H(&9I96QD+@H@*B\*=F]I
M9"!D<F%W0T1+0V%L96YD87)&:65L9"`H0T1+0T%,14Y$05(@*F-A;&5N9&%R
M*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@
M(&-H87(@*FUO;G1H3F%M90D](&UO;G1H<T]F5&AE665A<EMC86QE;F1A<BT^
M;6]N=&A=.PH@("!I;G0@;6]N=&A.86UE3&5N9W1H"3T@*&EN="ES=')L96X@
M*&UO;G1H3F%M92D["B`@(&EN="!M;VYT:$QE;F=T:`D](&=E=$UO;G1H3&5N
M9W1H("AC86QE;F1A<BT^>65A<BP@8V%L96YD87(M/FUO;G1H*3L*("`@:6YT
M(&1A>0D)/2`Q.PH@("!I;G0@>65A<DEN9&5X"3T@8V%L96YD87(M/GEE87(@
M+2`Q.3`P.PH@("!I;G0@>"P@>2P@9&EV+"!M;V0["B`@(&-H87(@=&5M<%LQ
M,%T["@H@("`O*B!'970@=&AE(&QE;F=T:"!O9B!T:&4@;6]N=&@N"0D)"0DJ
M+PH@("!M;VYT:$QE;F=T:"`](&=E=$UO;G1H3&5N9W1H("AC86QE;F1A<BT^
M>65A<BP@8V%L96YD87(M/FUO;G1H*3L*"B`@("\J($1R87<@:6X@=&AE(&9I
M<G-T(&QI;F4@;V8@=&AE(&1A>7,N"0D)"2HO"B`@(&9O<B`H>#UC86QE;F1A
M<BT^=V5E:T1A>3L@>"`\(#<[('@K*RD*("`@>PH@("`@("!D:78@/2!D87D@
M+R`Q,#L*("`@("`@;6]D(#T@9&%Y("4@,3`["@H@("`@("!I9B`H8V%L96YD
M87(M/F1A>2`]/2!D87DI"B`@("`@('L*("`@("`@("`@;79W861D8V@@*&-A
M;&5N9&%R+3YF:65L9%=I;BP@,2P@*"AX*S$I*C,I+3$L("AD:78K-#@I('P@
M8V%L96YD87(M/FAI9VAL:6=H="D["B`@("`@("`@(&UV=V%D9&-H("AC86QE
M;F1A<BT^9FEE;&17:6XL(#$L("@H>"LQ*2HS*2P@*&UO9"LT."D@?"!C86QE
M;F1A<BT^:&EG:&QI9VAT*3L*("`@("`@?0H@("`@("!E;'-E"B`@("`@('L*
M("`@("`@("`@+RH@0VAE8VL@:68@=&AE<F4@:7,@82!M87)K97(@=&\@<V5T
M+@D)"0DJ+PH@("`@("`@("!I9B`H8V%L96YD87(M/FUA<FME<EMD87E=6V-A
M;&5N9&%R+3YM;VYT:%U;>65A<DEN9&5X72`A/2`H8VAT>7!E*4Y53$PI"B`@
M("`@("`@('L*("`@("`@("`@("`@8VAT>7!E(&UA<FME<B`](&-A;&5N9&%R
M+3YM87)K97);9&%Y75MC86QE;F1A<BT^;6]N=&A=6WEE87));F1E>%T@?"!C
M86QE;F1A<BT^9&%Y071T<FEB.PH@("`@("`@("`@("!M=G=A9&1C:"`H8V%L
M96YD87(M/F9I96QD5VEN+"`Q+"`H*'@K,2DJ,RDM,2P@*&1I=BLT."D@?"!M
M87)K97(I.PH@("`@("`@("`@("!M=G=A9&1C:"`H8V%L96YD87(M/F9I96QD
M5VEN+"`Q+"`H*'@K,2DJ,RDL("AM;V0K-#@I('P@;6%R:V5R*3L*("`@("`@
M("`@?0H@("`@("`@("!E;'-E"B`@("`@("`@('L*("`@("`@("`@("`@;79W
M861D8V@@*&-A;&5N9&%R+3YF:65L9%=I;BP@,2P@*"AX*S$I*C,I+3$L("AD
M:78K-#@I('P@8V%L96YD87(M/F1A>4%T=')I8BD["B`@("`@("`@("`@(&UV
M=V%D9&-H("AC86QE;F1A<BT^9FEE;&17:6XL(#$L("@H>"LQ*2HS*2P@*&UO
M9"LT."D@?"!C86QE;F1A<BT^9&%Y071T<FEB*3L*("`@("`@("`@?0H@("`@
M("!]"B`@("`@(&1A>2LK.PH@("!]"B`@(&9O<B`H>#TR.R!X(#P](#8[('@K
M*RD*("`@>PH@("`@("!F;W(@*'D],3L@>2`\/2`W.R!Y*RLI"B`@("`@('L*
M("`@("`@("`@:68@*&1A>2`\/2!M;VYT:$QE;F=T:"D*("`@("`@("`@>PH@
M("`@("`@("`@("!D:78@/2!D87D@+R`Q,#L*("`@("`@("`@("`@;6]D(#T@
M9&%Y("4@,3`["@H@("`@("`@("`@("!I9B`H8V%L96YD87(M/F1A>2`]/2!D
M87DI"B`@("`@("`@("`@('L*("`@("`@("`@("`@("`@;79W861D8V@@*&-A
M;&5N9&%R+3YF:65L9%=I;BP@>"P@*'DJ,RDM,2P@*&1I=BLT."D@?"!C86QE
M;F1A<BT^:&EG:&QI9VAT*3L*("`@("`@("`@("`@("`@;79W861D8V@@*&-A
M;&5N9&%R+3YF:65L9%=I;BP@>"P@*'DJ,RDL("AM;V0K-#@I('P@8V%L96YD
M87(M/FAI9VAL:6=H="D["B`@("`@("`@("`@('T*("`@("`@("`@("`@96QS
M90H@("`@("`@("`@("!["B`@("`@("`@("`@("`@("\J($-H96-K(&EF('1H
M97)E(&ES(&$@;6%R:V5R('1O('-E="X)"0D)*B\*("`@("`@("`@("`@("`@
M:68@*&-A;&5N9&%R+3YM87)K97);9&%Y75MC86QE;F1A<BT^;6]N=&A=6WEE
M87));F1E>%T@(3T@*&-H='EP92E.54Q,*0H@("`@("`@("`@("`@("!["B`@
M("`@("`@("`@("`@("`@(&-H='EP92!M87)K97(@/2!C86QE;F1A<BT^;6%R
M:V5R6V1A>5U;8V%L96YD87(M/FUO;G1H75MY96%R26YD97A=('P@8V%L96YD
M87(M/F1A>4%T=')I8CL*("`@("`@("`@("`@("`@("`@;79W861D8V@@*&-A
M;&5N9&%R+3YF:65L9%=I;BP@>"P@*'DJ,RDM,2P@*&1I=BLT."D@?"!M87)K
M97(I.PH@("`@("`@("`@("`@("`@("!M=G=A9&1C:"`H8V%L96YD87(M/F9I
M96QD5VEN+"!X+"`H>2HS*2P@*&UO9"LT."D@?"!M87)K97(I.PH@("`@("`@
M("`@("`@("!]"B`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@
M>PH@("`@("`@("`@("`@("`@("!M=G=A9&1C:"`H8V%L96YD87(M/F9I96QD
M5VEN+"!X+"`H>2HS*2TQ+"`H9&EV*S0X*2!\(&-A;&5N9&%R+3YD87E!='1R
M:6(I.PH@("`@("`@("`@("`@("`@("!M=G=A9&1C:"`H8V%L96YD87(M/F9I
M96QD5VEN+"!X+"`H>2HS*2P@*&UO9"LT."D@?"!C86QE;F1A<BT^9&%Y071T
M<FEB*3L*("`@("`@("`@("`@("`@?0H@("`@("`@("`@("!]"B`@("`@("`@
M('T*("`@("`@("`@9&%Y*RL["B`@("`@('T*("`@?0H@("!W<F5F<F5S:"`H
M8V%L96YD87(M/F9I96QD5VEN*3L*("`@"B`@("\J($1R87<@=&AE(&UO;G1H
M(&EN+@D)"0D)"2HO"B`@(&9O<B`H>#TP.R!X(#P@;6]N=&A.86UE3&5N9W1H
M.R!X*RLI"B`@('L*("`@("`@;79W861D8V@@*&-A;&5N9&%R+3YL86)E;%=I
M;BP@,"P@>"P@;6]N=&A.86UE6WA=('P@8V%L96YD87(M/FUO;G1H071T<FEB
M*3L*("`@?0H*("`@+RH@1')A=R!T:&4@>65A<B!I;BX)"0D)"0D)*B\*("`@
M<W!R:6YT9B`H=&5M<"P@(B5D(BP@8V%L96YD87(M/GEE87(I.PH@("!F;W(@
M*'@],#L@>"`\(#0[('@K*RD*("`@>PH@("`@("!M=G=A9&1C:"`H8V%L96YD
M87(M/FQA8F5L5VEN+"`P+"!C86QE;F1A<BT^=VED=&@M-BMX+"!T96UP6WA=
M('P@8V%L96YD87(M/GEE87)!='1R:6(I.PH@("!]"B`@('=R969R97-H("AC
M86QE;F1A<BT^;&%B96Q7:6XI.PI]"@HO*@H@*B!4:&ES('-E=',@=&AE(&1A
M=&4@86YD('-O;64@871T<FEB=71E<RX*("HO"G9O:60@<V5T0T1+0V%L96YD
M87(@*$-$2T-!3$5.1$%2("IC86QE;F1A<BP@:6YT(&1A>2P@:6YT(&UO;G1H
M+"!I;G0@>65A<BP@8VAT>7!E(&1A>4%T=')I8BP@8VAT>7!E(&UO;G1H071T
M<FEB+"!C:'1Y<&4@>65A<D%T=')I8BP@8VAT>7!E(&AI9VAL:6=H="P@8F]O
M;&5A;B!B;W@I"GL*("`@+RH@0V]P>2!T:&4@:6YF;W)M871I;VXN"0D)"0D)
M*B\*("`@8V%L96YD87(M/F1A>0D)/2!D87D["B`@(&-A;&5N9&%R+3YM;VYT
M:`D)/2!M;VYT:#L*("`@8V%L96YD87(M/GEE87()"3T@>65A<CL*("`@8V%L
M96YD87(M/F1A>4%T=')I8@D)/2!D87E!='1R:6(["B`@(&-A;&5N9&%R+3YM
M;VYT:$%T=')I8@D](&UO;G1H071T<FEB.PH@("!C86QE;F1A<BT^>65A<D%T
M=')I8@D)/2!Y96%R071T<FEB.PH@("!C86QE;F1A<BT^:&EG:&QI9VAT"0D]
M(&AI9VAL:6=H=#L*("`@8V%L96YD87(M/F)O>`D)/2!B;W@["@H@("`O*B!6
M97)I9GD@=&AE(&1A=&4@:6YF;W)M871I;VXN"0D)"0DJ+PH@("!V97)I9GE#
M86QE;F1A<D1A=&4@*&-A;&5N9&%R*3L*"B`@("\J($=E="!T:&4@<W1A<G0@
M;V8@=&AE(&-U<G)E;G0@;6]N=&@N"0D)*B\*("`@8V%L96YD87(M/G=E96M$
M87D@/2!G971-;VYT:%-T87)T5V5E:V1A>2`H8V%L96YD87(M/GEE87(L(&-A
M;&5N9&%R+3YM;VYT:"D["GT*"B\J"B`J(%1H:7,@97)A<V5S('1H92!C86QE
M;F1A<B!W:61G970N"B`J+PIV;VED(&5R87-E0T1+0V%L96YD87(@*$-$2T-!
M3$5.1$%2("IC86QE;F1A<BD*>PH@("!W97)A<V4@*&-A;&5N9&%R+3YL86)E
M;%=I;BD["B`@('=R969R97-H("AC86QE;F1A<BT^;&%B96Q7:6XI.PH*("`@
M=V5R87-E("AC86QE;F1A<BT^9FEE;&17:6XI.PH@("!W<F5F<F5S:"`H8V%L
M96YD87(M/F9I96QD5VEN*3L*"B`@('=E<F%S92`H8V%L96YD87(M/G=I;BD[
M"B`@('=R969R97-H("AC86QE;F1A<BT^=VEN*3L*"B`@("\J($1O('=E(&YE
M960@=&\@97)A<V4@=&AE('-H861O=R!W:6XN"0D)"2HO"B`@(&EF("AC86QE
M;F1A<BT^<VAA9&]W*0H@("!["B`@("`@('=E<F%S92`H8V%L96YD87(M/G-H
M861O=U=I;BD["B`@("`@('=R969R97-H("AC86QE;F1A<BT^<VAA9&]W5VEN
M*3L*("`@?0I]"@HO*@H@*B!4:&ES(&1E<W1R;WES('1H92!C86QE;F1A<B!O
M8FIE8W0@<&]I;G1E<BX*("HO"G9O:60@9&5S=')O>4-$2T-A;&5N9&%R("A#
M1$M#04Q%3D1!4B`J8V%L96YD87(I"GL*("`@+RH@17)A<V4@=&AE(&]L9"!C
M86QE;F1A<BX)"0D)"0DJ+PH@("!E<F%S94-$2T-A;&5N9&%R("AC86QE;F1A
M<BD["@H@("`O*B!&<F5E('5P('1H92!W:6YD;W<@<&]I;G1E<G,N"0D)"0DJ
M+PH@("!D96QW:6X@*&-A;&5N9&%R+3YL86)E;%=I;BD["B`@(&1E;'=I;B`H
M8V%L96YD87(M/F9I96QD5VEN*3L*("`@9&5L=VEN("AC86QE;F1A<BT^=VEN
M*3L*"B`@("\J($ES('1H97)E(&$@<VAA9&]W('=I=&@@=&AI<R!W:61G970_
M/S\)"0D)*B\*("`@:68@*&-A;&5N9&%R+3YS:&%D;W<I"B`@('L*("`@("`@
M9&5L=VEN("AC86QE;F1A<BT^<VAA9&]W5VEN*3L*("`@?0H@"B`@("\J(%5N
M<F5G:7-T97(@=&AE(&]B:F5C="X)"0D)"0DJ+PH@("!U;G)E9VES=&5R0T1+
M3V)J96-T("AV0T%,14Y$05(L(&-A;&5N9&%R*3L*"B`@("\J($9R964@=&AE
M(&]B:F5C="!P;VEN=&5R+@D)"0D)"2HO"B`@(&9R964@*&-A;&5N9&%R*3L*
M?0H*+RH*("H@5&AI<R!S971S(&$@;6%R:V5R(&]N('1H92!C86QE;F1A<BX*
M("HO"G9O:60@<V5T0T1+0V%L96YD87)-87)K97(@*$-$2T-!3$5.1$%2("IC
M86QE;F1A<BP@:6YT(&1A>2P@:6YT(&UO;G1H+"!I;G0@>65A<BP@8VAT>7!E
M(&UA<FME<BD*>PH@("!I;G0@>65A<DEN9&5X(#T@>65A<BTQ.3`P.PH*("`@
M+RH@0VAE8VL@=&\@<V5E(&EF(&$@;6%R:V5R(&AA<R!N;W0@86QR96%D>2!B
M965N('-E="X)*B\*("`@:68@*&-A;&5N9&%R+3YM87)K97);9&%Y75MM;VYT
M:%U;>65A<DEN9&5X72`A/2`H8VAT>7!E*4Y53$PI"B`@('L*("`@("`@8VAT
M>7!E(&1U<&QI8V%T94UA<FME<B`](&-A;&5N9&%R+3YM87)K97);9&%Y75MM
M;VYT:%U;>65A<DEN9&5X72!\($%?0DQ)3DL["B`@("`@(&-A;&5N9&%R+3YM
M87)K97);9&%Y75MM;VYT:%U;>65A<DEN9&5X72`](&1U<&QI8V%T94UA<FME
M<CL*("`@?0H@("!E;'-E"B`@('L*("`@("`@8V%L96YD87(M/FUA<FME<EMD
M87E=6VUO;G1H75MY96%R26YD97A=(#T@;6%R:V5R.PH@("!]"GT*"B\J"B`J
M(%1H:7,@<V5T<R!T:&4@8V%L96YD87(@=&\@=&AE(&-U<G)E;G0@9&%T92X*
M("HO"G9O:60@<V5T0T1+0V%L96YD87)$871E("A#1$M#04Q%3D1!4B`J8V%L
M96YD87(L(&EN="!N97=$87DL(&EN="!N97=-;VYT:"P@:6YT(&YE=UEE87(I
M"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!I
M;G0@9&%Y+"!M;VYT:"P@>65A<CL*("`@<W1R=6-T('1M("ID871E26YF;SL*
M("`@=&EM95]T(&-L8VL["@H@("`O*@H@("`@*B!'970@=&AE(&-U<G)E;G0@
M9&%T97,@86YD('-E="!T:&4@9&5F875L="!V86QU97,@9F]R"B`@("`J('1H
M92!D87DO;6]N=&@O>65A<B!V86QU97,@9F]R('1H92!C86QE;F1A<BX*("`@
M("HO(`H@("!T:6UE("@F8VQC:RD["B`@(&1A=&5);F9O(#T@;&]C86QT:6UE
M("@F8VQC:RD["@H@("`O*B!3970@=&AE(&1A=&4@96QE;65N=',@:68@=V4@
M;F5E9"!T;V\N"0D)*B\*("`@9&%Y(#T@*&YE=T1A>2`]/2`M,2`_(&1A=&5)
M;F9O+3YT;5]M9&%Y(#H@;F5W1&%Y*3L*("`@;6]N=&@@/2`H;F5W36]N=&@@
M/3T@+3$@/R!D871E26YF;RT^=&U?;6]N*S$@.B!N97=-;VYT:"D["B`@('EE
M87(@/2`H;F5W665A<B`]/2`M,2`_(&1A=&5);F9O+3YT;5]Y96%R*S$Y,#`@
M.B!N97=996%R*3L*"B`@("\J(%-E="!T:&4@8V%L96YD87(@9&%T92X)"0D)
M"2HO"B`@('-E=$-$2T-A;&5N9&%R("AC86QE;F1A<BP@9&%Y+"!M;VYT:"P@
M>65A<BP*"0D)8V%L96YD87(M/F1A>4%T=')I8BP@8V%L96YD87(M/FUO;G1H
M071T<FEB+`H)"0EC86QE;F1A<BT^>65A<D%T=')I8BP@8V%L96YD87(M/FAI
M9VAL:6=H="P*"0D)8V%L96YD87(M/F)O>"D["@H@("`O*B!2961R87<@=&AE
M(&-A;&5N9&%R+@D)"0D)*B\*("`@9')A=T-$2T-A;&5N9&%R("AC86QE;F1A
M<BP@8V%L96YD87(M/F)O>"D["GT*"B\J"B`J(%1H:7,@<V5T<R!A(&UA<FME
M<B!O;B!T:&4@8V%L96YD87(N"B`J+PIV;VED(')E;6]V94-$2T-A;&5N9&%R
M36%R:V5R("A#1$M#04Q%3D1!4B`J8V%L96YD87(L(&EN="!D87DL(&EN="!M
M;VYT:"P@:6YT('EE87(I"GL*("`@:6YT('EE87));F1E>"`]('EE87(M,3DP
M,#L*("`@8V%L96YD87(M/FUA<FME<EMD87E=6VUO;G1H75MY96%R26YD97A=
M(#T@*&-H='EP92E.54Q,.PI]"@HO*@H@*B!4:&ES(&9U;F-T:6]N('-E=',@
M=&AE('!R92UP<F]C97-S(&9U;F-T:6]N+@H@*B\*=F]I9"!S971#1$M#86QE
M;F1A<E!R95!R;V-E<W,@*$-$2T-!3$5.1$%2("IC86QE;F1A<BP@4%)/0T53
M4T9.(&-A;&QB86-K+"!V;VED("ID871A*0I["B`@(&-A;&5N9&%R+3YP<F50
M<F]C97-S1G5N8W1I;VX@/2!C86QL8F%C:SL*("`@8V%L96YD87(M/G!R95!R
M;V-E<W-$871A(#T@9&%T83L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!S971S
M('1H92!P;W-T+7!R;V-E<W,@9G5N8W1I;VXN"B`J+PIV;VED('-E=$-$2T-A
M;&5N9&%R4&]S=%!R;V-E<W,@*$-$2T-!3$5.1$%2("IC86QE;F1A<BP@4%)/
M0T534T9.(&-A;&QB86-K+"!V;VED("ID871A*0I["B`@(&-A;&5N9&%R+3YP
M;W-T4')O8V5S<T9U;F-T:6]N(#T@8V%L;&)A8VL["B`@(&-A;&5N9&%R+3YP
M;W-T4')O8V5S<T1A=&$@/2!D871A.PI]"@HO*@H@*B!4:&ES(&UA:V5S('-U
M<F4@=&AA="!T:&4@9&%T97,@<')O=FED960@97AI<W0N"B`J+PIV;VED('9E
M<FEF>4-A;&5N9&%R1&%T92`H0T1+0T%,14Y$05(@*F-A;&5N9&%R*0I["B`@
M(&EN="!M;VYT:$QE;F=T:#L*"B`@("\J($UA:V4@<W5R92!T:&4@9VEV96X@
M>65A<B!I<R!N;W0@;&5S<R!T:&%N(#$Y,#`N"0D)*B\*("`@:68@*&-A;&5N
M9&%R+3YY96%R(#P@,3DP,"D*("`@>PH@("`@("!C86QE;F1A<BT^>65A<B`]
M(#$Y,#`["B`@('T*"B`@("\J($UA:V4@<W5R92!T:&4@;6]N=&@@:7,@=VET
M:&EN(')A;F=E+@D)"0DJ+PH@("!I9B`H8V%L96YD87(M/FUO;G1H(#X@,3(I
M"B`@('L*("`@("`@8V%L96YD87(M/FUO;G1H(#T@,3(["B`@('T*("`@:68@
M*&-A;&5N9&%R+3YM;VYT:"`\(#$I"B`@('L*("`@("`@8V%L96YD87(M/FUO
M;G1H(#T@,3L*("`@?0H*("`@+RH@36%K92!S=7)E('1H92!D87D@9VEV96X@
M:7,@=VET:&EN(')A;F=E(&]F('1H92!M;VYT:"X)"2HO"B`@(&UO;G1H3&5N
M9W1H(#T@9V5T36]N=&A,96YG=&@@*&-A;&5N9&%R+3YY96%R+"!C86QE;F1A
M<BT^;6]N=&@I.PH@("!I9B`H8V%L96YD87(M/F1A>2`\(#$I"B`@('L*("`@
M("`@8V%L96YD87(M/F1A>2`](#$["B`@('T*("`@:68@*&-A;&5N9&%R+3YD
M87D@/B!M;VYT:$QE;F=T:"D*("`@>PH@("`@("!C86QE;F1A<BT^9&%Y(#T@
M;6]N=&A,96YG=&@["B`@('T*?0H*+RH*("H@5&AI<R!R971U<FYS('=H870@
M9&%Y(&]F('1H92!W965K('1H92!M;VYT:"!S=&%R=',@;VXN"B`J+PII;G0@
M9V5T36]N=&A3=&%R=%=E96MD87D@*&EN="!Y96%R+"!I;G0@;6]N=&@I"GL*
M("`@<W1R=6-T('1M($1A=&4["@H@("`O*B!3970@=&AE('1M('-T<G5C='5R
M92!C;W)R96-T;'DN"0D)"0DJ+PH@("!$871E+G1M7W-E8PD)"3T@,#L*("`@
M1&%T92YT;5]M:6X)"0D](#`["B`@($1A=&4N=&U?:&]U<@D)"3T@,3`["B`@
M($1A=&4N=&U?;61A>0D)"3T@,3L*("`@1&%T92YT;5]M;VX)"0D](&UO;G1H
M+3$["B`@($1A=&4N=&U?>65A<@D)"3T@>65A<BTQ.3`P.PH@("!$871E+G1M
M7VES9'-T"0D](#$["@H@("`O*B!#86QL('1H92!M:W1I;64@9G5N8W1I;VX@
M=&\@9FEL;"!I;B!T:&4@:&]L97,N"0D)*B\*("`@:68@*&UK=&EM92`H)D1A
M=&4I(#T]("AT:6UE7W0I+3$I"B`@('L*("`@("`@<F5T=7)N(#`["B`@('T*
M("`@<F5T=7)N($1A=&4N=&U?=V1A>3L*?0H*+RH*("H@5&AI<R!F=6YC=&EO
M;B!R971U<FYS(&$@,2!I9B!I="=S(&$@;&5A<"!Y96%R(&%N9"`P(&EF(&ET
M)W,@;F]T+@H@*B\*:6YT(&ES3&5A<%EE87(@*&EN="!Y96%R*0I["B`@(&EF
M("AY96%R("4@-"`]/2`P('Q\"@EY96%R("4@-"`]/2`P*0H@("!["B`@("`@
M(')E='5R;B`Q.PH@("!]"B`@(')E='5R;B`P.PI]"@HO*@H@*B!4:&ES(&EN
M8W)E;65N=',@=&AE(&-U<G)E;G0@9&%Y(&)Y('1H92!G:79E;B!V86QU92X*
M("HO"G9O:60@:6YC<F5M96YT0V%L96YD87)$87D@*$-$2T-!3$5.1$%2("IC
M86QE;F1A<BP@:6YT(&%D:G5S="D*>PH@("!I;G0@;6]N=&A,96YG=&@@/2!G
M971-;VYT:$QE;F=T:"`H8V%L96YD87(M/GEE87(L(&-A;&5N9&%R+3YM;VYT
M:"D["B`@"B`@("\J($UA:V4@<W5R92!W92!A9&IU<W0@=&AE(&1A>2!C;W)R
M96-T;'DN"0D)*B\*("`@:68@*&%D:G5S="`K(&-A;&5N9&%R+3YD87D@/B!M
M;VYT:$QE;F=T:"D*("`@>PH@("`@("`O*B!(879E('1O(&EN8W)E;65N="!T
M:&4@;6]N=&@@8GD@;VYE+@D)"2HO"B`@("`@(&-A;&5N9&%R+3YD87D@/2!C
M86QE;F1A<BT^9&%Y("L@861J=7-T("T@;6]N=&A,96YG=&@["B`@("`@(&EN
M8W)E;65N=$-A;&5N9&%R36]N=&@@*&-A;&5N9&%R+"`Q*3L*("`@?0H@("!E
M;'-E"B`@('L*("`@("`@8V%L96YD87(M/F1A>2`K/2!A9&IU<W0["B`@("`@
M(&1R87=#1$M#86QE;F1A<D9I96QD("AC86QE;F1A<BD["B`@('T*?0H*+RH*
M("H@5&AI<R!D96-R;65N=',@=&AE(&-U<G)E;G0@9&%Y(&)Y('1H92!G:79E
M;B!V86QU92X*("HO"G9O:60@9&5C<F5M96YT0V%L96YD87)$87D@*$-$2T-!
M3$5.1$%2("IC86QE;F1A<BP@:6YT(&%D:G5S="D*>PH@("!I;G0@;6]N=&A,
M96YG=&@@/2!G971-;VYT:$QE;F=T:"`H8V%L96YD87(M/GEE87(L(&-A;&5N
M9&%R+3YM;VYT:"D["B`@"B`@("\J($UA:V4@<W5R92!W92!A9&IU<W0@=&AE
M(&1A>2!C;W)R96-T;'DN"0D)*B\*("`@:68@*&-A;&5N9&%R+3YD87DM861J
M=7-T(#P@,2D*("`@>PH@("`@("`O*B!3970@=&AE(&1A>2!A8V-O<F1I;F<@
M=&\@=&AE(&QE;F=T:"!O9B!T:&4@;6]N=&@N"2HO"B`@("`@(&EF("AC86QE
M;F1A<BT^;6]N=&@@/3T@,3(I"B`@("`@('L*("`@("`@("`@("\J($UA:V4@
M<W5R92!W92!A<F5N)W0@9V]I;F<@<&%S="!T:&4@>65A<B!L:6UI="X)*B\*
M("`@("`@("`@(&EF("AC86QE;F1A<BT^>65A<B`]/2`Q.3`P*0H@("`@("`@
M("`@>PH@("`@("`@("`@("`@8VAA<B`J;65S9UM=(#T@>R(\0SX\+U4^17)R
M;W(B+"`B0V%N(&YO="!G;R!P87-T('1H92!Y96%R(#$Y,#`B?3L*("`@("`@
M("`@("`@($)E97`H*3L*("`@("`@("`@("`@('!O<'5P3&%B96P@*&-A;&5N
M9&%R+3YS8W)E96XL(&UE<V<L(#(I.PH@("`@("`@("`@("`@<F5T=7)N.PH@
M("`@("`@("`@?0H@("`@("`@("`@96QS90H@("`@("`@("`@>PH@("`@("`@
M("`@("`@;6]N=&A,96YG=&@@/2!G971-;VYT:$QE;F=T:"`H8V%L96YD87(M
M/GEE87(M,2P@,2D["B`@("`@("`@("`@("!C86QE;F1A<BT^9&%Y(#T@;6]N
M=&A,96YG=&@@+2`H861J=7-T+6-A;&5N9&%R+3YD87DI.PH@("`@("`@("`@
M?0H@("`@("!]"B`@("`@(&5L<V4*("`@("`@>PH@("`@("`@("`@8V%L96YD
M87(M/F1A>2`](&UO;G1H3&5N9W1H("T@*&%D:G5S="UC86QE;F1A<BT^9&%Y
M*3L*("`@("`@?0H*("`@("`@+RH@2&%V92!T;R!D96-R96UE;G0@=&AE(&UO
M;G1H(&)Y(&]N92X)"0DJ+PH@("`@("!D96-R96UE;G1#86QE;F1A<DUO;G1H
M("AC86QE;F1A<BP@,2D["B`@('T*("`@96QS90H@("!["B`@("`@(&-A;&5N
M9&%R+3YD87D@+3T@861J=7-T.PH@("`@("!D<F%W0T1+0V%L96YD87)&:65L
M9"`H8V%L96YD87(I.PH@("!]"GT*"B\J"B`J(%1H:7,@:6YC<F5M96YT<R!T
M:&4@8W5R<F5N="!M;VYT:"!B>2!T:&4@9VEV96X@=F%L=64N"B`J+PIV;VED
M(&EN8W)E;65N=$-A;&5N9&%R36]N=&@@*$-$2T-!3$5.1$%2("IC86QE;F1A
M<BP@:6YT(&%D:G5S="D*>PH@("!I;G0@;6]N=&A,96YG=&@["@H@("`O*B!!
M<F4@=V4@870@=&AE(&5N9"!O9B!T:&4@>65A<BX)"0D)*B\*("`@:68@*&-A
M;&5N9&%R+3YM;VYT:"`K(&%D:G5S="`^(#$R*0H@("!["B`@("`@(&-A;&5N
M9&%R+3YM;VYT:"`]("AC86QE;F1A<BT^;6]N=&@K861J=7-T*2`M(#$R.PH@
M("`@("!C86QE;F1A<BT^>65A<BLK.PH@("!](`H@("!E;'-E"B`@('L*("`@
M("`@8V%L96YD87(M/FUO;G1H("L](&%D:G5S=#L*("`@?0H*("`@+RH@1V5T
M('1H92!L96YG=&@@;V8@=&AE(&-U<G)E;G0@;6]N=&@N"0D)*B\*("`@;6]N
M=&A,96YG=&@@/2!G971-;VYT:$QE;F=T:"`H8V%L96YD87(M/GEE87(L(&-A
M;&5N9&%R+3YM;VYT:"D["B`@(&EF("AC86QE;F1A<BT^9&%Y(#X@;6]N=&A,
M96YG=&@I"B`@('L*("`@("`@8V%L96YD87(M/F1A>2`](&UO;G1H3&5N9W1H
M.PH@("!]"@H@("`O*B!'970@=&AE('-T87)T(&]F('1H92!C=7)R96YT(&UO
M;G1H+@D)"2HO"B`@(&-A;&5N9&%R+3YW965K1&%Y(#T@9V5T36]N=&A3=&%R
M=%=E96MD87D@*&-A;&5N9&%R+3YY96%R+"!C86QE;F1A<BT^;6]N=&@I.PH*
M("`@+RH@4F5D<F%W('1H92!C86QE;F1A<BX)"0D)"2HO"B`@(&1R87=#1$M#
M86QE;F1A<B`H8V%L96YD87(L(&-A;&5N9&%R+3YB;W@I.PI]"@HO*@H@*B!4
M:&ES(&1E8W)E;65N=',@=&AE(&-U<G)E;G0@;6]N=&@@8GD@=&AE(&=I=F5N
M('9A;'5E+@H@*B\*=F]I9"!D96-R96UE;G1#86QE;F1A<DUO;G1H("A#1$M#
M04Q%3D1!4B`J8V%L96YD87(L(&EN="!A9&IU<W0I"GL*("`@:6YT(&UO;G1H
M3&5N9W1H.PH*("`@+RH@07)E('=E(&%T('1H92!E;F0@;V8@=&AE('EE87(N
M"0D)"2HO"B`@(&EF("AC86QE;F1A<BT^;6]N=&@@/3T@,2D*("`@>PH@("`@
M("!I9B`H8V%L96YD87(M/GEE87(@/3T@,3DP,"D*("`@("`@>PH@("`@("`@
M("!C:&%R("IM97-G6UT@/2![(CQ#/CPO53Y%<G)O<B(L(")#86X@;F]T(&=O
M('!A<W0@=&AE('EE87(@,3DP,")].PH@("`@("`@("!"965P*"D["B`@("`@
M("`@('!O<'5P3&%B96P@*&-A;&5N9&%R+3YS8W)E96XL(&UE<V<L(#(I.PH@
M("`@("`@("!R971U<FX["B`@("`@('T*("`@("`@96QS90H@("`@("!["B`@
M("`@("`@(&-A;&5N9&%R+3YM;VYT:"`](#$R("T@861J=7-T.PH@("`@("`@
M("!C86QE;F1A<BT^>65A<BTM.PH@("`@("!]"B`@('T@"B`@(&5L<V4*("`@
M>PH@("`@("!C86QE;F1A<BT^;6]N=&@@+3T@861J=7-T.PH@("!]"@H@("`O
M*B!'970@=&AE(&QE;F=T:"!O9B!T:&4@8W5R<F5N="!M;VYT:"X)"0DJ+PH@
M("!M;VYT:$QE;F=T:"`](&=E=$UO;G1H3&5N9W1H("AC86QE;F1A<BT^>65A
M<BP@8V%L96YD87(M/FUO;G1H*3L*("`@:68@*&-A;&5N9&%R+3YD87D@/B!M
M;VYT:$QE;F=T:"D*("`@>PH@("`@("!C86QE;F1A<BT^9&%Y(#T@;6]N=&A,
M96YG=&@["B`@('T*"B`@("\J($=E="!T:&4@<W1A<G0@;V8@=&AE(&-U<G)E
M;G0@;6]N=&@N"0D)*B\*("`@8V%L96YD87(M/G=E96M$87D@/2!G971-;VYT
M:%-T87)T5V5E:V1A>2`H8V%L96YD87(M/GEE87(L(&-A;&5N9&%R+3YM;VYT
M:"D["@H@("`O*B!2961R87<@=&AE(&-A;&5N9&%R+@D)"0D)*B\*("`@9')A
M=T-$2T-A;&5N9&%R("AC86QE;F1A<BP@8V%L96YD87(M/F)O>"D["GT*"B\J
M"B`J(%1H:7,@:6YC<F5M96YT<R!T:&4@8W5R<F5N="!Y96%R(&)Y('1H92!G
M:79E;B!V86QU92X*("HO"G9O:60@:6YC<F5M96YT0V%L96YD87)996%R("A#
M1$M#04Q%3D1!4B`J8V%L96YD87(L(&EN="!A9&IU<W0I"GL*("`@+RH@26YC
M<F5M96YT('1H92!Y96%R+@D)"0D)*B\*("`@8V%L96YD87(M/GEE87(@*ST@
M861J=7-T.PH*("`@+RH@268@=V4@87)E(&EN($9E8B!M86ME('-U<F4@=V4@
M9&]N)W0@=')I<"!I;G1O('9O:61N97-S+@DJ+PH@("!I9B`H8V%L96YD87(M
M/FUO;G1H(#T](#(I"B`@('L*("`@("`@:6YT(&UO;G1H3&5N9W1H(#T@9V5T
M36]N=&A,96YG=&@@*&-A;&5N9&%R+3YY96%R+"!C86QE;F1A<BT^;6]N=&@I
M.PH@("`@("!I9B`H8V%L96YD87(M/F1A>2`^(&UO;G1H3&5N9W1H*0H@("`@
M("!["B`@("`@("`@(&-A;&5N9&%R+3YD87D@/2!M;VYT:$QE;F=T:#L*("`@
M("`@?0H@("!]"@H@("`O*B!'970@=&AE('-T87)T(&]F('1H92!C=7)R96YT
M(&UO;G1H+@D)"2HO"B`@(&-A;&5N9&%R+3YW965K1&%Y(#T@9V5T36]N=&A3
M=&%R=%=E96MD87D@*&-A;&5N9&%R+3YY96%R+"!C86QE;F1A<BT^;6]N=&@I
M.PH*("`@+RH@4F5D<F%W('1H92!C86QE;F1A<BX)"0D)"2HO"B`@(&1R87=#
M1$M#86QE;F1A<B`H8V%L96YD87(L(&-A;&5N9&%R+3YB;W@I.PI]"@HO*@H@
M*B!4:&ES(&1E8W)E;65N=',@=&AE(&-U<G)E;G0@>65A<B!B>2!T:&4@9VEV
M96X@=F%L=64N"B`J+PIV;VED(&1E8W)E;65N=$-A;&5N9&%R665A<B`H0T1+
M0T%,14Y$05(@*F-A;&5N9&%R+"!I;G0@861J=7-T*0I["B`@("\J($UA:V4@
M<W5R92!W92!D;VXG="!G;R!O=70@;V8@8F]U;F1S+@D)"2HO"B`@(&EF("AC
M86QE;F1A<BT^>65A<B`M(&%D:G5S="`\(#$Y,#`I"B`@('L*("`@("`@8VAA
M<B`J;65S9UM=(#T@>R(\0SX\+U4^17)R;W(B+"`B0V%N(&YO="!G;R!P87-T
M('1H92!Y96%R(#$Y,#`B?3L*("`@("`@0F5E<"@I.PH@("`@("!P;W!U<$QA
M8F5L("AC86QE;F1A<BT^<V-R965N+"!M97-G+"`R*3L*("`@("`@<F5T=7)N
M.PH@("!]"@H@("`O*B!$96-R96UE;G0@=&AE('EE87(N"0D)"0DJ+PH@("!C
M86QE;F1A<BT^>65A<B`M/2!A9&IU<W0["@H@("`O*B!)9B!W92!A<F4@:6X@
M1F5B(&UA:V4@<W5R92!W92!D;VXG="!T<FEP(&EN=&\@=F]I9&YE<W,N"2HO
M"B`@(&EF("AC86QE;F1A<BT^;6]N=&@@/3T@,BD*("`@>PH@("`@("!I;G0@
M;6]N=&A,96YG=&@@/2!G971-;VYT:$QE;F=T:"`H8V%L96YD87(M/GEE87(L
M(&-A;&5N9&%R+3YM;VYT:"D["B`@("`@(&EF("AC86QE;F1A<BT^9&%Y(#X@
M;6]N=&A,96YG=&@I"B`@("`@('L*("`@("`@("`@8V%L96YD87(M/F1A>2`]
M(&UO;G1H3&5N9W1H.PH@("`@("!]"B`@('T*"B`@("\J($=E="!T:&4@<W1A
M<G0@;V8@=&AE(&-U<G)E;G0@;6]N=&@N"0D)*B\*("`@8V%L96YD87(M/G=E
M96M$87D@/2!G971-;VYT:%-T87)T5V5E:V1A>2`H8V%L96YD87(M/GEE87(L
M(&-A;&5N9&%R+3YM;VYT:"D["@H@("`O*B!2961R87<@=&AE(&-A;&5N9&%R
M+@D)"0D)*B\*("`@9')A=T-$2T-A;&5N9&%R("AC86QE;F1A<BP@8V%L96YD
M87(M/F)O>"D["GT*"B\J"B`J(%1H:7,@<F5T=7)N<R!T:&4@;&5N9W1H(&]F
M('1H92!C=7)R96YT(&UO;G1H+@H@*B\*:6YT(&=E=$UO;G1H3&5N9W1H("AI
M;G0@>65A<BP@:6YT(&UO;G1H*0I["B`@(&EN="!M;VYT:$QE;F=T:"`](&1A
M>7-/9E1H94UO;G1H6VUO;G1H73L*"B`@(&EF("AM;VYT:"`]/2`R*0H@("![
M"B`@("`@(&UO;G1H3&5N9W1H("L](&ES3&5A<%EE87(@*'EE87(I.PH@("!]
M"B`@(')E='5R;B!M;VYT:$QE;F=T:#L*?0H*+RH*("H@5&AI<R!R971U<FYS
M('=H870@9&%Y(&]F('1H92!W965K('1H92!M;VYT:"!S=&%R=',@;VXN"B`J
M+PIT:6UE7W0@9V5T0W5R<F5N=%1I;64@*$-$2T-!3$5.1$%2("IC86QE;F1A
M<BD*>PH@("!S=')U8W0@=&T@1&%T92P@*F1A=&5);F9O.PH@("!T:6UE7W0@
M8VQC:SL*"B`@("\J($1E=&5R;6EN92!T:&4@8W5R<F5N="!T:6UE(&%N9"!D
M971E<FUI;F4@:68@=V4@87)E(&EN($135"X)*B\*("`@=&EM92`H)F-L8VLI
M.PH@("!D871E26YF;R`](&QO8V%L=&EM92`H)F-L8VLI.PH*("`@+RH@4V5T
M('1H92!T;2!S=')U8W1U<F4@8V]R<F5C=&QY+@D)"0D)*B\*("`@1&%T92YT
M;5]S96,)"3T@,3L*("`@1&%T92YT;5]M:6X)"3T@,#L*("`@1&%T92YT;5]H
M;W5R"0D](#`["B`@($1A=&4N=&U?;61A>0D)/2!C86QE;F1A<BT^9&%Y.PH@
M("!$871E+G1M7VUO;@D)/2!C86QE;F1A<BT^;6]N=&@M,3L*("`@1&%T92YT
M;5]Y96%R"0D](&-A;&5N9&%R+3YY96%R+3$Y,#`["B`@($1A=&4N=&U?:7-D
M<W0)/2!D871E26YF;RT^=&U?:7-D<W0["@H@("`O*B!#86QL('1H92!M:W1I
M;64@9G5N8W1I;VX@=&\@9FEL;"!I;B!T:&4@:&]L97,N"0D)*B\*("`@<F5T
6=7)N(&UK=&EM92`H)D1A=&4I.PI]"B!T
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/calendar.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/calendar.c' &&
  chmod 0444 'cdk4.8.0/calendar.c' ||
  echo 'restore of cdk4.8.0/calendar.c failed'
  shar_count="`wc -c < 'cdk4.8.0/calendar.c'`"
  test 22297 -eq "$shar_count" ||
    echo "cdk4.8.0/calendar.c: original size 22297, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/dialog.c ==============
if test -f 'cdk4.8.0/dialog.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/dialog.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/dialog.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/dialog.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/07/03 18:31:27 $
X * $Revision: 1.34 $
X */
X
/*
X * This function creates a dialog widget.
X */
CDKDIALOG *newCDKDialog( CDKSCREEN *cdkscreen, int xplace, int yplace, char **mesg, int rows, char **buttonLabel, int buttonCount, chtype highlight, boolean separator, boolean box, boolean shadow)
{
X   /* Declare local variables.						*/
X   CDKDIALOG *dialog	= (CDKDIALOG *)malloc (sizeof (CDKDIALOG));
X   int boxWidth		= MINDIALOGWIDTH;
X   int boxHeight	= rows + 3 + separator;
X   int maxmessagewidth	= -1;
X   int buttonwidth	= 0;
X   int xpos		= xplace;
X   int ypos		= yplace;
X   int temp		= 0;
X   int buttonadj	= 0;
X   int x		= 0;
X
X   /* Translate the char * message to a chtype *			*/
X   for (x=0; x < rows; x++)
X   {
X      dialog->info[x]	= char2Chtype (mesg[x], &dialog->infoLen[x], &dialog->infoPos[x]);
X      maxmessagewidth	= MAXIMUM(maxmessagewidth, dialog->infoLen[x]);
X   }
X
X   /* Translate the button label char * to a chtype *			*/
X   for (x = 0; x < buttonCount; x++)
X   {
X      dialog->buttonLabel[x]	= char2Chtype (buttonLabel[x], &dialog->buttonLen[x], &temp);
X      buttonwidth		+= dialog->buttonLen[x] + 1;
X   }
X   buttonwidth--;
X
X   /* Determine the final dimensions of the box.			*/
X   boxWidth	= MAXIMUM(boxWidth, maxmessagewidth);
X   boxWidth	= MAXIMUM(boxWidth, buttonwidth);
X   boxWidth	= boxWidth + 4;
X
X   /* Now we have to readjust the x and y positions			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Set up the dialog box attributes.					*/
X   dialog->parent		= cdkscreen->window;
X   dialog->win			= newwin (boxHeight, boxWidth, ypos, xpos);
X   dialog->shadowWin		= (WINDOW *)NULL;
X   dialog->buttonCount		= buttonCount;
X   dialog->currentButton	= 0;
X   dialog->messageRows		= rows;
X   dialog->boxHeight		= boxHeight;
X   dialog->boxWidth		= boxWidth;
X   dialog->highlight		= highlight;
X   dialog->separator		= separator;
X   dialog->exitType		= vNEVER_ACTIVATED;
X   dialog->box			= box;
X   dialog->shadow		= shadow;
X   dialog->preProcessFunction	= (PROCESSFN)NULL;
X   dialog->preProcessData	= (void *)NULL;
X   dialog->postProcessFunction	= (PROCESSFN)NULL;
X   dialog->postProcessData	= (void *)NULL;
X
X   /* If we couldn't create the window, we should return a NULL value.	*/
X   if (dialog->win == (WINDOW *)NULL)
X   {
X      /* Couldn't create the window. Clean up used memory.		*/
X      for (x=0; x < dialog->messageRows ; x++)
X      {
X         freeChtype (dialog->info[x]);
X      }
X      for (x=0; x < dialog->buttonCount; x++)
X      {
X         freeChtype (dialog->buttonLabel[x]);
X      }
X
X      /* Remove the memory used by the dialog pointer.			*/
X      free (dialog);
X
X      /* Return a NULL dialog box.					*/
X      return ( (CDKDIALOG *)NULL );
X   }
X
X   /* Find the button positions.					*/
X   buttonadj		= ((int)((boxWidth-buttonwidth)/2));
X   for (x = 0; x < buttonCount; x++)
X   {
X      dialog->buttonPos[x]	= buttonadj;
X      buttonadj			= buttonadj + dialog->buttonLen[x] + 1;
X   }
X
X   /* Create the string alignments.					*/
X   for (x=0; x < rows; x++)
X   {
X      dialog->infoPos[x]	= justifyString (boxWidth, dialog->infoLen[x], dialog->infoPos[x]);
X   }
X
X   /* Was there a shadow???						*/
X   if (shadow)
X   {
X      dialog->shadowWin		= newwin (boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Let them use escape keys.						*/
X   keypad (dialog->win, TRUE);
X
X   /* Empty the key bindings.						*/
X   cleanCDKObjectBindings (vDIALOG, dialog);
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vDIALOG, dialog);
X
X   /* Return the dialog box pointer.					*/
X   return (dialog);
}
X
/*
X * This lets the user select the button.
X */
int activateCDKDialog (CDKDIALOG *dialog, chtype *actions)
{
X   /* Declare local variables.						*/
X   chtype input		= (chtype)NULL;
X   int ret;
X
X   /* Draw the dialog box.						*/
X   drawCDKDialog (dialog, dialog->box);
X
X   /* Lets move to the first button					*/
X   writeChtypeAttrib (dialog->win,
X			dialog->buttonPos[dialog->currentButton],
X			dialog->boxHeight-2,
X			dialog->buttonLabel[dialog->currentButton],
X			dialog->highlight,
X			HORIZONTAL,
X			0, dialog->buttonLen[dialog->currentButton]);
X
X   /* Turn off the cursor.						*/
#ifndef AIX
X   curs_set (0);
#endif
X   wrefresh (dialog->win);
X
X   /* Check if actions is NULL.						*/
X   if (actions == (chtype *)NULL)
X   {
X      for (;;)
X      {
X         /* Get the input.						*/
X         input = wgetch (dialog->win);
X
X         /* Inject the character into the widget.			*/
X         ret = injectCDKDialog (dialog, input);
X         if (dialog->exitType != vEARLY_EXIT)
X         {
X            return ret;
X         }
X      }
X   }
X   else
X   {
X      int length = chlen (actions);
X      int x = 0;
X
X      /* Inject each character one at a time.				*/
X      for (x=0; x < length; x++)
X      {
X         ret = injectCDKDialog (dialog, actions[x]);
X         if (dialog->exitType != vEARLY_EXIT)
X         {
X            return ret;
X         }
X      }
X   }
X
X   /* Set the exit type and exit.					*/
X   dialog->exitType = vEARLY_EXIT;
X   return -1;
}
X
/*
X * This injects a single character into the dialog widget.
X */
int injectCDKDialog (CDKDIALOG *dialog, chtype input)
{
X   int firstButton	= 0;
X   int lastButton	= dialog->buttonCount - 1;
X   int ppReturn		= 1;
X
X   /* Set the exit type.						*/
X   dialog->exitType = vEARLY_EXIT;
X
X   /* Check if there is a pre-process function to be called.		*/
X   if (dialog->preProcessFunction != (PROCESSFN)NULL)
X   {
X      /* Call the pre-process function.					*/
X      ppReturn = ((PROCESSFN)(dialog->preProcessFunction)) (vDIALOG, dialog, dialog->preProcessData, input);
X   }
X
X   /* Should we continue?						*/
X   if (ppReturn != 0)
X   {
X      /* Check for a key binding...					*/
X      if (! checkCDKObjectBind (vDIALOG, dialog, input))
X      {
X         switch (input)
X         {
X            case KEY_LEFT :
X                 if (dialog->currentButton == firstButton)
X                 {
X                    dialog->currentButton = lastButton;;
X                 }
X                 else
X                 {
X                    dialog->currentButton--;
X                 }
X                 break;
X   
X            case KEY_RIGHT : case ' ' :
X                 if (dialog->currentButton == lastButton)
X                 {
X                    dialog->currentButton = firstButton;
X                 }
X                 else
X                 {
X                    dialog->currentButton++;
X                 }
X                 break;
X   
X            case KEY_UP : case KEY_DOWN :
X                 Beep();
X                 break;
X   
X            case CDK_REFRESH :
X                 refreshCDKScreen (dialog->screen);
X                 break;
X   
X            case KEY_ESC :
X                 dialog->exitType = vESCAPE_HIT;
X                 return -1;
X                 break;
X   
X            case KEY_RETURN : case KEY_TAB :
X                 dialog->exitType = vNORMAL;
X                 return dialog->currentButton;
X                 break;
X   
X         default :
X            break;
X         }
X      }
X
X      /* Should we call a post-process?					*/
X      if (dialog->postProcessFunction != (PROCESSFN)NULL)
X      {
X         ((PROCESSFN)(dialog->postProcessFunction)) (vDIALOG, dialog, dialog->postProcessData, input);
X      }
X   }
X
X   /* Redraw the buttons.						*/
X   redrawCDKDialogButtons (dialog);
X   wrefresh (dialog->win);
X
X   /* Exit the dialog box.						*/
X   dialog->exitType = vEARLY_EXIT;
X   return -1;
}
X
/*
X * This function draws the dialog widget.
X */
void drawCDKDialog (CDKDIALOG *dialog, boolean Box)
{
X   /* Declare local variables.						*/
X   int x	= 0;
X
X   /* Erase the dialog widget from the screen.				*/
X   eraseCDKDialog (dialog);
X
X   /* Is there a shadow???						*/
X   if (dialog->shadow)
X   {
X      drawShadow (dialog->shadowWin);
X   }
X
X   /* Box the widget if they asked.					*/
X   if (Box)
X   {
X      box (dialog->win, ACS_VLINE, ACS_HLINE);
X   }
X
X   /* Draw in the message.						*/
X   for (x=0; x < dialog->messageRows; x++)
X   {
X      writeChtype (dialog->win,
X			dialog->infoPos[x], x+1,
X			dialog->info[x],
X			HORIZONTAL, 0,
X			dialog->infoLen[x]);
X   }
X
X   /* Draw in the buttons.						*/
X   redrawCDKDialogButtons (dialog);
X   wrefresh (dialog->win);
}
X
/*
X * This function destroys the dialog widget.
X */
void destroyCDKDialog (CDKDIALOG *dialog)
{
X   /* Declare local variables.						*/
X   int x	= 0;
X
X   /* Erase the object.							*/
X   eraseCDKDialog (dialog);
X
X   /* Clean up the char pointers.					*/
X   for (x=0; x < dialog->messageRows ; x++)
X   {
X      freeChtype (dialog->info[x]);
X   }
X   for (x=0; x < dialog->buttonCount; x++)
X   {
X      freeChtype (dialog->buttonLabel[x]);
X   }
X
X   /* Clean up the windows.						*/
X   delwin (dialog->win);
X   if (dialog->shadow)
X   {
X      delwin (dialog->shadowWin);
X   }
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vDIALOG, dialog);
X
X   /* Finish cleaning up.						*/
X   free (dialog);
}
X
/*
X * This function erases the dialog widget from the screen.
X */
void eraseCDKDialog (CDKDIALOG *dialog)
{
X   /* Erase the main window.						*/
X   werase (dialog->win);
X   wrefresh (dialog->win);
X
X   /* Do we need to erase the shadow???					*/
X   if (dialog->shadow)
X   {
X      werase (dialog->shadowWin);
X      wrefresh (dialog->shadowWin);
X   }
}
X
/*
X * This sets attributes of the dialog box.
X */
void setCDKDialog (CDKDIALOG *dialog, chtype highlight, boolean separator, boolean box)
{
X   dialog->highlight	= highlight;
X   dialog->separator	= separator;
X   dialog->box		= box;
}
X
/*
X * This redraws the dialog buttons and trhe separation line.
X */
void redrawCDKDialogButtons (CDKDIALOG *dialog)
{
X   /* Declare local variables.						*/
X   int x;
X
X   for (x=0; x < dialog->buttonCount; x++)
X   {
X      writeChtype (dialog->win,
X			dialog->buttonPos[x],
X			dialog->boxHeight-2,
X			dialog->buttonLabel[x],
X			HORIZONTAL, 0,
X			dialog->buttonLen[x]);
X   }
X   writeChtypeAttrib (dialog->win,
X		dialog->buttonPos[dialog->currentButton],
X		dialog->boxHeight-2,
X		dialog->buttonLabel[dialog->currentButton],
X		dialog->highlight,
X		HORIZONTAL, 0,
X		dialog->buttonLen[dialog->currentButton]);
X
X   /* Draw the separation line.						*/
X   if (dialog->separator)
X   {
X      for (x=1; x < dialog->boxWidth-1; x++)
X      {
X         mvwaddch (dialog->win, dialog->boxHeight-3, x, ACS_HLINE);
X      }
X      mvwaddch (dialog->win, dialog->boxHeight-3, 0, ACS_LTEE);
X      mvwaddch (dialog->win, dialog->boxHeight-3, dialog->win->_maxx, ACS_RTEE);
X   }
}
X
/*
X * This function sets the pre-process function.
X */
void setCDKDialogPreProcess (CDKDIALOG *dialog, PROCESSFN callback, void *data)
{
X   dialog->preProcessFunction = callback;
X   dialog->preProcessData = data;
}
X 
/*
X * This function sets the post-process function.
X */
void setCDKDialogPostProcess (CDKDIALOG *dialog, PROCESSFN callback, void *data)
{
X   dialog->postProcessFunction = callback;
X   dialog->postProcessData = data;
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/dialog.c' &&
  chmod 0444 'cdk4.8.0/dialog.c' ||
  echo 'restore of cdk4.8.0/dialog.c failed'
  shar_count="`wc -c < 'cdk4.8.0/dialog.c'`"
  test 10914 -eq "$shar_count" ||
    echo "cdk4.8.0/dialog.c: original size 10914, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/entry.c ==============
if test -f 'cdk4.8.0/entry.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/entry.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/entry.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/entry.c
M(VEN8VQU9&4@(F-D:RYH(@H*+RH*("H@)$%U=&AO<CH@9VQO=F5R("0*("H@
M)$1A=&4Z(#$Y.38O,#<O,#D@,#0Z,#8Z,3$@)`H@*B`D4F5V:7-I;VXZ(#$N
M,3(R("0*("HO"F5X=&5R;B!C:&%R("I'4&%S=&5"=69F97(["@HO*@H@*B!4
M:&ES(&-R96%T97,@82!P;VEN=&5R('1O(&%N(&5N=')Y('=I9&=E="X*("HO
M"D-$2T5.5%)9("IN97=#1$M%;G1R>2`H0T1+4T-2145.("IC9&MS8W)E96XL
M(&EN="!X<&QA8V4L(&EN="!Y<&QA8V4L(&EN="!L<&QA8V4L(&-H87(@*FQA
M8F5L+"!C:'1Y<&4@9FEE;&1!='1R+"!C:'1Y<&4@9FEL;&5R+"!%1&ES<&QA
M>51Y<&4@9&ES<%1Y<&4L(&EN="!F:65L9%=I9'1H+"!I;G0@;6EN+"!I;G0@
M;6%X+"!B;V]L96%N(&)O>"P@8F]O;&5A;B!S:&%D;W<I"GL*("`@+RH@4V5T
M('5P('-O;64@=F%R:6%B;&5S+@D)"0D)"2HO"B`@($-$2T5.5%)9("IE;G1R
M>0D]("A#1$M%3E1262`J*6UA;&QO8R`H<VEZ96]F("A#1$M%3E1262DI.PH@
M("!C:&%R("IP;&%I;DQA8F5L"3T@*&-H87(@*BE.54Q,.PH@("!I;G0@8F]X
M5VED=&@)"3T@,#L*("`@:6YT(&)O>$AE:6=H=`D](#,["B`@(&EN="!X<&]S
M"0D]('AP;&%C93L*("`@:6YT('EP;W,)"3T@>7!L86-E.PH@("!I;G0@;&%B
M96QX;V9F<V5T"3T@,#L*("`@:6YT(&QA8F5L>6]F9G-E=`D](#`["B`@(&EN
M="!F:65L9'AO9F9S970)/2`P.PH@("!I;G0@9FEE;&1Y;V9F<V5T"3T@,#L*
M("`@:6YT('1E;7`)"3T@,#L*"B`@("\J(%1R86YS;&%T92!T:&4@;&%B96P@
M8VAA<B`J<&]I;G1E<B!T;R!A(&-H='EP92!P;VEN=&5R+@D)*B\*("`@96YT
M<GDM/FQA8F5L"0D](&-H87(R0VAT>7!E("AL86)E;"P@)F5N=')Y+3YL86)E
M;$QE;BP@)G1E;7`I.PH@("!P;&%I;DQA8F5L"0D](&-H='EP93)#:&%R("AE
M;G1R>2T^;&%B96PI.PH*("`@+RH@061J=7-T('1H92!O9F9S970@=F%L=65S
M(&=I=F5N('1H92!L;V-A=&EO;B!O9B!T:&4@;&%B96PN"0DJ+PH@("!A;&EG
M;FQA8F5L("AP;&%I;DQA8F5L+"!L<&QA8V4L(&9I96QD5VED=&@L("9B;WA7
M:61T:"P@)F)O>$AE:6=H="P@)FQA8F5L>&]F9G-E="P@)FQA8F5L>6]F9G-E
M="P@)F9I96QD>&]F9G-E="P@)F9I96QD>6]F9G-E="D["B`@(&9R965#:&%R
M("AP;&%I;DQA8F5L*3L*("`@"B`@("\J(%)E:G5S=&EF>2!T:&4@>"!A;F0@
M>2!P;W-I=&EO;G,@:68@=V4@;F5E9"!T;RX)"0DJ+PH@("!A;&EG;GAY("AC
M9&MS8W)E96XM/G=I;F1O=RP@)GAP;W,L("9Y<&]S+"!B;WA7:61T:"P@8F]X
M2&5I9VAT*3L*"B`@("\J($UA:V4@=&AE(&QA8F5L('=I;F1O=RX)"0D)"0DJ
M+PH@("!E;G1R>2T^=VEN(#T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H
M+"!Y<&]S+"!X<&]S*3L*"B`@("\J($ES('1H92!W:6YD;W<@3E5,3"`_/S\)
M"0D)"0DJ+PH@("!I9B`H96YT<GDM/G=I;B`]/2`H5TE.1$]7("HI3E5,3"D*
M("`@>PH@("`@("`O*B!#;&5A;B!U<"!T:&4@<&]I;G1E<G,N"0D)"0D)*B\*
M("`@("`@9G)E94-H='EP92`H96YT<GDM/FQA8F5L*3L*("`@("`@9G)E92`H
M96YT<GDI.PH@("`@("`*("`@("`@+RH@17AI="!W:71H($Y53$PN"0D)"0D)
M*B\*("`@("`@<F5T=7)N("@H0T1+14Y44ED@*BE.54Q,*3L*("`@?0H*("`@
M+RH@36%K92!T:&4@9FEE;&0@=VEN9&]W+@D)"0D)"2HO"B`@(&5N=')Y+3YF
M:65L9`D)/2!S=6)W:6X@*&5N=')Y+3YW:6XL(#$L(&9I96QD5VED=&@L('EP
M;W,K9FEE;&1Y;V9F<V5T+"!X<&]S*V9I96QD>&]F9G-E="D["B`@(&5N=')Y
M+3YL86)E;%=I;@D]('-U8G=I;B`H96YT<GDM/G=I;BP@,2P@96YT<GDM/FQA
M8F5L3&5N*S(L('EP;W,K;&%B96QY;V9F<V5T+"!X<&]S*VQA8F5L>&]F9G-E
M="D["B`@(&ME>7!A9"`H96YT<GDM/F9I96QD+"!44E5%*3L*("`@:V5Y<&%D
M("AE;G1R>2T^=VEN+"!44E5%*3L*"B`@("\J($UA:V4@<F]O;2!F;W(@=&AE
M(&EN9F\@8VAA<B`J('!O:6YT97(N"0D)"2HO"B`@(&5N=')Y+3YI;F9O"0D]
M("AC:&%R("HI;6%L;&]C("AS:7IE;V8H8VAA<BD@*B`H;6%X*S,I*3L*("`@
M8VQE86Y#:&%R("AE;G1R>2T^:6YF;RP@;6%X*S,L("=<,"<I.PH@("!E;G1R
M>2T^:6YF;U=I9'1H"3T@;6%X*S,["@H@("`O*B!3970@=7`@=&AE(')E<W0@
M;V8@=&AE('-T<G5C='5R92X)"0D)"2HO"B`@(&5N=')Y+3YP87)E;G0)"3T@
M8V1K<V-R965N+3YW:6YD;W<["B`@(&5N=')Y+3YS:&%D;W=7:6X)"3T@*%=)
M3D1/5R`J*4Y53$P["B`@(&5N=')Y+3YF:65L9$%T='()"3T@9FEE;&1!='1R
M.PH@("!E;G1R>2T^9FEE;&17:61T:`D)/2!F:65L9%=I9'1H.PH@("!E;G1R
M>2T^9FEL;&5R"0D](&9I;&QE<CL*("`@96YT<GDM/F)O>`D)"3T@8F]X.PH@
M("!E;G1R>2T^<VAA9&]W"0D]('-H861O=SL*("`@96YT<GDM/G-C<F5E;D-O
M;`D)/2`P.PH@("!E;G1R>2T^;&5F=$-H87()"3T@,#L*("`@96YT<GDM/FUI
M;@D)"3T@;6EN.PH@("!E;G1R>2T^;6%X"0D)/2!M87@["B`@(&5N=')Y+3YE
M>&ET5'EP90D)/2!V3D5615)?04-4259!5$5$.PH@("!E;G1R>2T^9&ES<%1Y
M<&4)"3T@9&ES<%1Y<&4["B`@(&5N=')Y+3YC86QL8F%C:V9N"0D]("AV;VED
M("HI)D-$2T5N=')Y0V%L;$)A8VL["B`@(&5N=')Y+3YP<F50<F]C97-S1G5N
M8W1I;VX)/2`H4%)/0T534T9.*4Y53$P["B`@(&5N=')Y+3YP<F50<F]C97-S
M1&%T80D]("AV;VED("HI3E5,3#L*("`@96YT<GDM/G!O<W10<F]C97-S1G5N
M8W1I;VX)/2`H4%)/0T534T9.*4Y53$P["B`@(&5N=')Y+3YP;W-T4')O8V5S
M<T1A=&$)/2`H=F]I9"`J*4Y53$P["@H@("`O*B!$;R!W92!W86YT(&$@<VAA
M9&]W/S\_"0D)"0D)*B\*("`@:68@*'-H861O=RD*("`@>PH@("`@("!E;G1R
M>2T^<VAA9&]W5VEN(#T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H+"!Y
M<&]S*S$L('AP;W,K,2D["B`@('T*"B`@("\J($-L96%N('1H92!K97D@8FEN
M9&EN9W,N"0D)"0D)*B\*("`@8VQE86Y#1$M/8FIE8W1":6YD:6YG<R`H=D5.
M5%)9+"!E;G1R>2D["@H@("`O*B!296=I<W1E<B!T:&ES(&)A8GDN("`@("`@
M("`@("`@("`@"0D)"2HO"B`@(')E9VES=&5R0T1+3V)J96-T("AC9&MS8W)E
M96XL('9%3E1262P@96YT<GDI.PH*("`@+RH@4F5T=7)N('1H92!P;VEN=&5R
M('1O('1H92!S=')U8W1U<F4)"0D)*B\*("`@<F5T=7)N("AE;G1R>2D["GT*
M"B\J(`H@*B!4:&ES(&UE86YS('EO=2!W86YT('1O('5S92!T:&4@9VEV96X@
M96YT<GD@9FEE;&0N($ET('1A:V5S(&EN<'5T"B`J(&9R;VT@=&AE(&ME>6)O
M87)D+"!A;F0@=VAE;B!I=',@9&]N92P@:70@9FEL;',@=&AE(&5N=')Y(&EN
M9F\*("H@96QE;65N="!O9B!T:&4@<W1R=6-T=7)E('=I=&@@=VAA="!W87,@
M='EP960N"B`J+PIC:&%R("IA8W1I=F%T94-$2T5N=')Y("A#1$M%3E1262`J
M96YT<GDL(&-H='EP92`J86-T:6]N<RD*>PH@("`O*B!$96-L87)E(&QO8V%L
M('9A<FEA8FQE<RX)"0D)"0DJ+PH@("!C:'1Y<&4@:6YP=70)/2`H8VAT>7!E
M*4Y53$P["B`@(&-H87(@*G)E=`D]("AC:&%R("HI3E5,3#L*("`@"B`@("\J
M($1R87<@=&AE('=I9&=E="X)"0D)"0D)*B\*("`@9')A=T-$2T5N=')Y("AE
M;G1R>2P@96YT<GDM/F)O>"D["@H@("`O*B!4=7)N('1H92!C=7)S;W(@8F%C
M:R!T;R!N;W)M86PN"0D)"0DJ+PH@("!C=7)S7W-E="`H,2D["@H@("`O*B!#
M:&5C:R!I9B`G86-T:6]N<R<@:7,@3E5,3"X)"0D)"2HO"B`@(&EF("AA8W1I
M;VYS(#T]("AC:'1Y<&4@*BE.54Q,*0H@("!["B`@("`@(&9O<B`H.SLI"B`@
M("`@('L*("`@("`@("`@+RH@1V5T('1H92!I;G!U="X)"0D)"0DJ+PH@("`@
M("`@("!I;G!U="`]('=G971C:"`H96YT<GDM/F9I96QD*3L*"B`@("`@("`@
M("\J($EN:F5C="!T:&4@8VAA<F%C=&5R(&EN=&\@=&AE('=I9&=E="X)"0DJ
M+PH@("`@("`@("!R970@/2!I;FIE8W1#1$M%;G1R>2`H96YT<GDL(&EN<'5T
M*3L*("`@("`@("`@:68@*&5N=')Y+3YE>&ET5'EP92`A/2!V14%23%E?15A)
M5"D*("`@("`@("`@>PH@("`@("`@("`@("!R971U<FX@<F5T.PH@("`@("`@
M("!]"B`@("`@('T*("`@?0H@("!E;'-E"B`@('L*("`@("`@:6YT(&QE;F=T
M:"`](&-H;&5N("AA8W1I;VYS*3L*("`@("`@:6YT('@@/3`["@H@("`@("`O
M*B!);FIE8W0@96%C:"!C:&%R86-T97(@;VYE(&%T(&$@=&EM92X)"0D)*B\*
M("`@("`@9F]R("AX/3`[('@@/"!L96YG=&@[('@K*RD*("`@("`@>PH@("`@
M("`@("!R970@/2!I;FIE8W1#1$M%;G1R>2`H96YT<GDL(&%C=&EO;G-;>%TI
M.PH@("`@("`@("!I9B`H96YT<GDM/F5X:714>7!E("$]('9%05),65]%6$E4
M*0H@("`@("`@("!["B`@("`@("`@("`@(')E='5R;B!R970["B`@("`@("`@
M('T*("`@("`@?0H@("!]"@H@("`O*B!-86ME('-U<F4@=V4@<F5T=7)N('1H
M92!C;W)R96-T(&EN9F\N"0D)"2HO"B`@(&EF("AE;G1R>2T^97AI=%1Y<&4@
M/3T@=DY/4DU!3"D*("`@>PH@("`@("!R971U<FX@96YT<GDM/FEN9F\["B`@
M('T*("`@96QS90H@("!["B`@("`@(')E='5R;B`H8VAA<B`J*4Y53$P["B`@
M('T*?0H*+RH*("H@5&AI<R!I;FIE8W1S(&$@<VEN9VQE(&-H87)A8W1E<B!I
M;G1O('1H92!W:61G970N"B`J+PIC:&%R("II;FIE8W1#1$M%;G1R>2`H0T1+
M14Y44ED@*F5N=')Y+"!C:'1Y<&4@:6YP=70I"GL*("`@+RH@1&5C;&%R92!L
M;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@:6YT('!P4F5T=7)N"3T@,3L*
M("`@:6YT('1E;7`L('@L(&-H87)#;W5N="P@<W1R:6YG3&5N.PH@("!C:&%R
M(&AO;&1E<CL*"B`@("\J(%-E="!T:&4@97AI="!T>7!E+@D)"0D)"2HO"B`@
M(&5N=')Y+3YE>&ET5'EP92`]('9%05),65]%6$E4.PH*("`@+RH@4F5F<F5S
M:"!T:&4@96YT<GD@9FEE;&0N"0D)"0D)*B\*("`@9')A=T-$2T5N=')Y1FEE
M;&0@*&5N=')Y*3L*"B`@("\J($-H96-K(&EF('1H97)E(&ES(&$@<')E+7!R
M;V-E<W,@9G5N8W1I;VX@=&\@8F4@8V%L;&5D+@D)*B\*("`@:68@*&5N=')Y
M+3YP<F50<F]C97-S1G5N8W1I;VX@(3T@*%!23T-%4U-&3BE.54Q,*0H@("![
M"B`@("`@("\J($-A;&P@=&AE('!R92UP<F]C97-S(&9U;F-T:6]N+@D)"0D)
M*B\*("`@("`@<'!2971U<FX@/2`H*%!23T-%4U-&3BDH96YT<GDM/G!R95!R
M;V-E<W-&=6YC=&EO;BDI("AV14Y44EDL(&5N=')Y+"!E;G1R>2T^<')E4')O
M8V5S<T1A=&$L(&EN<'5T*3L*("`@?0H*("`@+RH@4VAO=6QD('=E(&-O;G1I
M;G5E/PD)"0D)"2HO"B`@(&EF("AP<%)E='5R;B`A/2`P*0H@("!["B`@("`@
M("\J($-H96-K(&$@<')E9&5F:6YE9"!B:6YD:6YG+BXN"0D)"0DJ+PH@("`@
M("!I9B`H(2!C:&5C:T-$2T]B:F5C=$)I;F0@*'9%3E1262P@96YT<GDL(&EN
M<'5T*2D*("`@("`@>PH@("`@("`@("!S=VET8V@@*&EN<'5T*0H@("`@("`@
M("!["B`@("`@("`@("`@(&-A<V4@2T597U50(#H@8V%S92!+15E?1$]73B`Z
M"B`@("`@("`@("`@("`@("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@(&)R
M96%K.PH@("`@("`*("`@("`@("`@("`@8V%S92!#1$M?0D5'3T9,24Y%(#H*
M("`@("`@("`@("`@("`@("!E;G1R>2T^;&5F=$-H87(@/2`P.PH@("`@("`@
M("`@("`@("`@(&5N=')Y+3YS8W)E96Y#;VP@/2`P.PH@("`@("`@("`@("`@
M("`@(&1R87=#1$M%;G1R>49I96QD("AE;G1R>2D["B`@("`@("`@("`@("`@
M("`@8G)E86L["@H@("`@("`@("`@("!C87-E($-$2U]44D%.4U!/4T4@.@H@
M("`@("`@("`@("`@("`@('-T<FEN9TQE;B`]("AI;G0I<W1R;&5N("AE;G1R
M>2T^:6YF;RD["B`@("`@("`@("`@("`@("`@=&5M<"`](&5N=')Y+3YL969T
M0VAA<B`K(&5N=')Y+3YS8W)E96Y#;VP["B`@("`@("`@("`@("`@("`@:68@
M*'1E;7`@/CT@<W1R:6YG3&5N+3$I"B`@("`@("`@("`@("`@("`@>PH@("`@
M("`@("`@("`@("`@("`@($)E97`H*3L*("`@("`@("`@("`@("`@("!]"B`@
M("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@("`@('L*("`@("`@
M("`@("`@("`@("`@("!H;VQD97(@/2!E;G1R>2T^:6YF;UMT96UP73L*("`@
M("`@("`@("`@("`@("`@("!E;G1R>2T^:6YF;UMT96UP72`](&5N=')Y+3YI
M;F9O6W1E;7`K,5T["B`@("`@("`@("`@("`@("`@("`@96YT<GDM/FEN9F];
M=&5M<"LQ72`](&AO;&1E<CL*("`@("`@("`@("`@("`@("`@("!D<F%W0T1+
M16YT<GE&:65L9"`H96YT<GDI.PH@("`@("`@("`@("`@("`@('T*("`@("`@
M("`@("`@("`@("!B<F5A:SL*"B`@("`@("`@("`@(&-A<V4@0T1+7T5.1$]&
M3$E.12`Z"B`@("`@("`@("`@("`@("`@<W1R:6YG3&5N(#T@*&EN="ES=')L
M96X@*&5N=')Y+3YI;F9O*3L*("`@("`@("`@("`@("`@("!I9B`H<W1R:6YG
M3&5N(#X](&5N=')Y+3YF:65L9%=I9'1H*0H@("`@("`@("`@("`@("`@('L*
M("`@("`@("`@("`@("`@("`@("!C:&%R0V]U;G0@/2!E;G1R>2T^9FEE;&17
M:61T:"`J("XX.PH@("`@("`@("`@("`@("`@("`@(&5N=')Y+3YL969T0VAA
M<B`]('-T<FEN9TQE;B`M(&-H87)#;W5N=#L*("`@("`@("`@("`@("`@("`@
M("!E;G1R>2T^<V-R965N0V]L(#T@8VAA<D-O=6YT.PH@("`@("`@("`@("`@
M("`@('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@("`@
M>PH@("`@("`@("`@("`@("`@("`@(&5N=')Y+3YL969T0VAA<B`](#`["B`@
M("`@("`@("`@("`@("`@("`@96YT<GDM/G-C<F5E;D-O;"`]('-T<FEN9TQE
M;CL*("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@9')A=T-$
M2T5N=')Y1FEE;&0@*&5N=')Y*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*
M"B`@("`@("`@("`@(&-A<V4@2T597TQ%1E0@.B!C87-E($-$2U]"04-+0TA!
M4B`Z"B`@("`@("`@("`@("`@("`@:68@*&5N=')Y+3YS8W)E96Y#;VP@/3T@
M,"D*("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@:68@
M*&5N=')Y+3YL969T0VAA<B`]/2`P*0H@("`@("`@("`@("`@("`@("`@('L*
M("`@("`@("`@("`@("`@("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@
M("`@("`@?0H@("`@("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@
M("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@("`@+RH@4V-R;VQL(&QE
M9G0N"2HO"B`@("`@("`@("`@("`@("`@("`@("`@96YT<GDM/FQE9G1#:&%R
M+2T["B`@("`@("`@("`@("`@("`@("`@("`@9')A=T-$2T5N=')Y1FEE;&0@
M*&5N=')Y*3L*("`@("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@
M("`@?0H@("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("![
M"B`@("`@("`@("`@("`@("`@("`@=VUO=F4@*&5N=')Y+3YF:65L9"P@,"P@
M+2UE;G1R>2T^<V-R965N0V]L*3L*("`@("`@("`@("`@("`@("`@("!W<F5F
M<F5S:"`H96YT<GDM/F9I96QD*3L*("`@("`@("`@("`@("`@("!]"B`@("`@
M("`@("`@("`@("`@8G)E86L["B`@("`@(`H@("`@("`@("`@("!C87-E($M%
M65]224=(5"`Z(&-A<V4@0T1+7T9/4D-(05(@.@H@("`@("`@("`@("`@("`@
M(&EF("AE;G1R>2T^<V-R965N0V]L(#T](&5N=')Y+3YF:65L9%=I9'1H+3$I
M"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@('1E;7`@
M/2`H:6YT*7-T<FQE;B`H96YT<GDM/FEN9F\I.PH@("`@("`@("`@("`@("`@
M("`@(&EF("@H96YT<GDM/FQE9G1#:&%R("L@96YT<GDM/G-C<F5E;D-O;"LQ
M*2`]/2!T96UP*0H@("`@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@
M("`@("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@("`@("`@?0H@("`@
M("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("`@("!["B`@
M("`@("`@("`@("`@("`@("`@("`@+RH@4V-R;VQL('1O('1H92!R:6=H=`D)
M"0DJ+PH@("`@("`@("`@("`@("`@("`@("`@(&5N=')Y+3YL969T0VAA<BLK
M.PH@("`@("`@("`@("`@("`@("`@("`@(&1R87=#1$M%;G1R>49I96QD("AE
M;G1R>2D["B`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@
M('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@("`@>PH@
M("`@("`@("`@("`@("`@("`@("\J($UO=F4@<FEG:'0N"0D)"0DJ+PH@("`@
M("`@("`@("`@("`@("`@('1E;7`@/2`H:6YT*7-T<FQE;B`H96YT<GDM/FEN
M9F\I.PH@("`@("`@("`@("`@("`@("`@(&EF("@H96YT<GDM/FQE9G1#:&%R
M("L@96YT<GDM/G-C<F5E;D-O;"D@/3T@=&5M<"D*("`@("`@("`@("`@("`@
M("`@("!["B`@("`@("`@("`@("`@("`@("`@("`@0F5E<"@I.PH@("`@("`@
M("`@("`@("`@("`@('T*("`@("`@("`@("`@("`@("`@("!E;'-E"B`@("`@
M("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@("`@('=M;W9E
M("AE;G1R>2T^9FEE;&0L(#`L("LK96YT<GDM/G-C<F5E;D-O;"D["B`@("`@
M("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@("`@('=R969R97-H
M("AE;G1R>2T^9FEE;&0I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@
M("`@("`@("!B<F5A:SL*("`@("`@"B`@("`@("`@("`@(&-A<V4@1$5,151%
M(#H@8V%S92`G""<@.@H@("`@("`@("`@("`@("`@(&EF("AE;G1R>2T^9&ES
M<%1Y<&4@/3T@=E9)15=/3DQ9*0H@("`@("`@("`@("`@("`@('L*("`@("`@
M("`@("`@("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@("`@?0H@("`@
M("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("!["B`@("`@("`@
M("`@("`@("`@("`@+RH@1V5T('1H92!L96YG=&@@;V8@=&AE('=I9&=E="!I
M;F9O<FUA=&EO;BX)*B\*("`@("`@("`@("`@("`@("`@("!I;G0@:6YF;TQE
M;F=T:"`]("AI;G0I<W1R;&5N("AE;G1R>2T^:6YF;RD["B`@("`@("`@("`@
M("`@("`@("`@:68@*"AE;G1R>2T^;&5F=$-H87(@*R!E;G1R>2T^<V-R965N
M0V]L*2`\(&EN9F],96YG=&@I"B`@("`@("`@("`@("`@("`@("`@>PH@("`@
M("`@("`@("`@("`@("`@("`@("\J(%=E(&%R92!D96QE=&5I;F<@9G)O;2!I
M;G-I9&4@=&AE('-T<FEN9RX)*B\*("`@("`@("`@("`@("`@("`@("`@("!I
M;G0@8W5R<E!O<R`](&5N=')Y+3YS8W)E96Y#;VPK96YT<GDM/FQE9G1#:&%R
M.PH@("`@("`@("`@("`@("`@("`@("`@(&9O<B`H>#UC=7)R4&]S.R!X(#P@
M:6YF;TQE;F=T:#L@>"LK*0H@("`@("`@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("`@("`@("!E;G1R>2T^:6YF;UMX72`](&5N=')Y
M+3YI;F9O6W@K,5T["B`@("`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@
M("`@("`@("`@("`@("`@(&5N=')Y+3YI;F9O6VEN9F],96YG=&A=(#T@)UPP
M)SL*("`@("`@"B`@("`@("`@("`@("`@("`@("`@("`@+RH@57!D871E('1H
M92!W:61G970N"0D)"2HO"B`@("`@("`@("`@("`@("`@("`@("`@9')A=T-$
M2T5N=')Y1FEE;&0@*&5N=')Y*3L*("`@("`@("`@("`@("`@("`@("!]"B`@
M("`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@("`@("`@('L*
M("`@("`@("`@("`@("`@("`@("`@("`O*B!792!A<F4@9&5L971I;F<@9G)O
M;2!T:&4@96YD(&]F('1H92!S=')I;F<N"2HO"B`@("`@("`@("`@("`@("`@
M("`@("`@:68@*&EN9F],96YG=&@@/B`P*0H@("`@("`@("`@("`@("`@("`@
M("`@('L*("`@("`@("`@("`@("`@("`@("`@("`@("`O*B!5<&1A=&4@=&AE
M(&-H87)A8W1E<B!P;VEN=&5R+@D)*B\*("`@("`@("`@("`@("`@("`@("`@
M("`@("!E;G1R>2T^:6YF;UMI;F9O3&5N9W1H+3%=(#T@)UPP)SL*("`@("`@
M("`@("`@("`@("`@("`@("`@("!I;F9O3&5N9W1H+2T["B`@(`H@("`@("`@
M("`@("`@("`@("`@("`@("`@("\J($%D:G5S="!T:&4@8W5R<V]R+@D)"0DJ
M+PH@("`@("`@("`@("`@("`@("`@("`@("`@(&EF("AE;G1R>2T^<V-R965N
M0V]L(#X@,"D*("`@("`@("`@("`@("`@("`@("`@("`@("!["B`@("`@("`@
M("`@("`@("`@("`@("`@("`@("`@96YT<GDM/G-C<F5E;D-O;"TM.PH@("`@
M("`@("`@("`@("`@("`@("`@("`@('T*("`@"B`@("`@("`@("`@("`@("`@
M("`@("`@("`@+RH*("`@("`@("`@("`@("`@("`@("`@("`@("`@*B!)9B!W
M92!D96QE=&5D('1H92!L87-T(&-H87)A8W1E<B!O;B!T:&4*("`@("`@("`@
M("`@("`@("`@("`@("`@("`@*B!S8W)E96X@86YD('1H92!I;F9O<FUA=&EO
M;B!H87,@<V-R;VQL960L"B`@("`@("`@("`@("`@("`@("`@("`@("`@("H@
M861J=7-T('1H92!E;G1R>2!F:65L9"!T;R!S:&]W('1H92!I;F9O+@H@("`@
M("`@("`@("`@("`@("`@("`@("`@("`J+PH@("`@("`@("`@("`@("`@("`@
M("`@("`@("!I9B`H96YT<GDM/FQE9G1#:&%R(#X@,"`F)B!E;G1R>2T^<V-R
M965N0V]L(#T](#$I"B`@("`@("`@("`@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("`@("`@("`@("`@:68@*&EN9F],96YG=&@@/"!E
M;G1R>2T^9FEE;&17:61T:"TQ*0H@("`@("`@("`@("`@("`@("`@("`@("`@
M("`@("!["B`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@(&5N=')Y
M+3YL969T0VAA<B`](#`["B`@("`@("`@("`@("`@("`@("`@("`@("`@("`@
M("`@(&5N=')Y+3YS8W)E96Y#;VP@/2!I;F9O3&5N9W1H.PH@("`@("`@("`@
M("`@("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@("`@("`@
M("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@>PH@
M("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("!E;G1R>2T^;&5F=$-H
M87(@+3T@*&5N=')Y+3YF:65L9%=I9'1H+3,I.PH@("`@("`@("`@("`@("`@
M("`@("`@("`@("`@("`@("!E;G1R>2T^<V-R965N0V]L(#T@96YT<GDM/F9I
M96QD5VED=&@M,CL*("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@?0H@
M("`@("`@("`@("`@("`@("`@("`@("`@("!]"B`@(`H@("`@("`@("`@("`@
M("`@("`@("`@("`@("\J(%5P9&%T92!T:&4@=VED9V5T+@D)"0DJ+PH@("`@
M("`@("`@("`@("`@("`@("`@("`@(&1R87=#1$M%;G1R>49I96QD("AE;G1R
M>2D["B`@("`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@
M("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("`@("`@("!["B`@("`@("`@
M("`@("`@("`@("`@("`@("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@("`@
M("`@('T*("`@("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@
M?0H@("`@("`@("`@("`@("`@(&)R96%K.PH@("`@("`*("`@("`@("`@("`@
M8V%S92!+15E?15-#(#H*"2`@("`@("`@(&5N=')Y+3YE>&ET5'EP92`]('9%
M4T-!4$5?2$E4.PH@("`@("`@("`@("`@("`@(')E='5R;B`H8VAA<B`J*4Y5
M3$P["B`@("`@("`@("`@("`@("`@8G)E86L["@H@("`@("`@("`@("!C87-E
M($-$2U]%4D%312`Z"B`@("`@("`@("`@("`@("`@:68@*"AI;G0I<W1R;&5N
M*&5N=')Y+3YI;F9O*2`A/2`P*0H@("`@("`@("`@("`@("`@('L*("`@("`@
M("`@("`@("`@("`@("!C;&5A;D-$2T5N=')Y("AE;G1R>2D["B`@("`@("`@
M("`@("`@("`@("`@9')A=T-$2T5N=')Y1FEE;&0@*&5N=')Y*3L*("`@("`@
M("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@8G)E86L["@H@("`@("`@
M("`@("!C87-E($-$2U]#550Z"B`@("`@("`@("`@("`@("`@:68@*"AI;G0I
M<W1R;&5N*&5N=')Y+3YI;F9O*2`A/2`P*0H@("`@("`@("`@("`@("`@('L*
M"2`@("`@("`@("`@(&9R965#:&%R("A'4&%S=&5"=69F97(I.PH@("`@("`@
M("`@("`@("`@("`@($=087-T94)U9F9E<B`](&-O<'E#:&%R("AE;G1R>2T^
M:6YF;RD["B`@("`@("`@("`@("`@("`@("`@8VQE86Y#1$M%;G1R>2`H96YT
M<GDI.PH@("`@("`@("`@("`@("`@("`@(&1R87=#1$M%;G1R>49I96QD("AE
M;G1R>2D["B`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@(&5L
M<V4*("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@0F5E
M<"@I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@("`@("!B<F5A
M:SL*"B`@("`@("`@("`@(&-A<V4@0T1+7T-/4%DZ"B`@("`@("`@("`@("`@
M("`@:68@*"AI;G0I<W1R;&5N*&5N=')Y+3YI;F9O*2`A/2`P*0H@("`@("`@
M("`@("`@("`@('L*"2`@("`@("`@("`@(&9R965#:&%R("A'4&%S=&5"=69F
M97(I.PH@("`@("`@("`@("`@("`@("`@($=087-T94)U9F9E<B`](&-O<'E#
M:&%R("AE;G1R>2T^:6YF;RD["B`@("`@("`@("`@("`@("`@?0H@("`@("`@
M("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@
M("`@("`@("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@
M("`@("`@("!B<F5A:SL*"B`@("`@("`@("`@(&-A<V4@0T1+7U!!4U1%.@H@
M("`@("`@("`@("`@("`@(&EF("A'4&%S=&5"=69F97(@(3T@*&-H87(@*BE.
M54Q,*0H@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!S
M971#1$M%;G1R>2`H96YT<GDL($=087-T94)U9F9E<BP@96YT<GDM/FUI;BP@
M96YT<GDM/FUA>"P@96YT<GDM/F)O>"D["B`@("`@("`@("`@("`@("`@("`@
M9')A=T-$2T5N=')Y1FEE;&0@*&5N=')Y*3L*("`@("`@("`@("`@("`@("!]
M"B`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@("`@?0H@
M("`@("`@("`@("`@("`@(&)R96%K.PH*("`@("`@("`@("`@8V%S92!+15E?
M4D5455).(#H@8V%S92!+15E?5$%"(#H*("`@("`@("`@("`@("`@("!I9B`H
M*&EN="ES=')L96X@*&5N=')Y+3YI;F9O*2`^/2!E;G1R>2T^;6EN*0H@("`@
M("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!E;G1R>2T^97AI
M=%1Y<&4@/2!V3D]234%,.PH@("`@("`@("`@("`@("`@("`@(')E='5R;B`H
M96YT<GDM/FEN9F\I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@
M("`@("!E;'-E"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@
M("`@($)E97`H*3L*("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@
M("`@8G)E86L["B`@("`@(`H@("`@("`@("`@("!C87-E($-$2U]2149215-(
M(#H*("`@("`@("`@("`@("`@("!R969R97-H0T1+4V-R965N("AE;G1R>2T^
M<V-R965N*3L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@("`@"B`@("`@
M("`@("`@(&1E9F%U;'0@.@H@("`@("`@("`@("`@("`@("@H14Y44EE#0BEE
M;G1R>2T^8V%L;&)A8VMF;BDH96YT<GDL(&EN<'5T*3L*("`@("`@("`@("`@
M("`@("!B<F5A:SL*("`@("`@("`@?0H@("`@("!]"@H@("`@("`O*B!3:&]U
M;&0@=V4@9&\@82!P;W-T+7!R;V-E<W,_"0D)"0DJ+PH@("`@("!I9B`H96YT
M<GDM/G!O<W10<F]C97-S1G5N8W1I;VX@(3T@*%!23T-%4U-&3BE.54Q,*0H@
M("`@("!["B`@("`@("`@("@H4%)/0T534T9.*2AE;G1R>2T^<&]S=%!R;V-E
M<W-&=6YC=&EO;BDI("AV14Y44EDL(&5N=')Y+"!E;G1R>2T^<&]S=%!R;V-E
M<W-$871A+"!I;G!U="D["B`@("`@('T*("`@?0H*("`@+RH@4F5T=7)N(&%N
M9"!I;F1I8V%T92!T:&%T('=E(&5X:71E9"!E87)L>2X)"0D)*B\*("`@96YT
M<GDM/F5X:714>7!E(#T@=D5!4DQ97T58250["B`@(')E='5R;B`H8VAA<B`J
M*4Y53$P["GT*"B\J"B`J(%1H:7,@:7,@82!G96YE<FEC(&-H87)A8W1E<B!P
M87)S97(@9F]R('1H92!E;G1R>2!F:65L9"X@270@:7,@=7-E9"!A<R!A(`H@
M*B!C86QL8F%C:R!F=6YC=&EO;BP@<V\@86YY('!E<G-O;F%L(&UO9&EF:6-A
M=&EO;G,@8V%N(&)E(&UA9&4@8GD@8W)E871I;F<*("H@82!N97<@9G5N8W1I
M;VX@86YD(&-A;&QI;F<@=&AE(&%C=&EV871I;VX@=VET:"!I=',@;F%M92X*
M("HO"G9O:60@0T1+16YT<GE#86QL0F%C:R`H0T1+14Y44ED@*F5N=')Y+"!C
M:'1Y<&4@8VAA<F%C=&5R*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B
M;&5S+@D)"0D)"2HO"B`@(&-H87()<&QA:6YC:&%R(#T@*&-H87)A8W1E<B`F
M($%?0TA!4E1%6%0I.PH@("!I;G0@=&5M<"P@>#L*"B`@("\J(%-T87)T(&-H
M96-K:6YG('1H92!I;G!U="X)"0D)"0DJ+PH@("!I9B`H*&5N=')Y+3YD:7-P
M5'EP92`]/2!V24Y4('Q\(%P*"65N=')Y+3YD:7-P5'EP92`]/79(24Y4*2`F
M)B!<"@DA:7-D:6=I="AP;&%I;F-H87(I*0H@("!["B`@("`@($)E97`H*3L*
M("`@?0H@("!E;'-E(&EF("@H96YT<GDM/F1I<W!4>7!E(#T]('9#2$%2('Q\
M(%P*"0EE;G1R>2T^9&ES<%1Y<&4@/3T@=E5#2$%2('Q\(%P*"0EE;G1R>2T^
M9&ES<%1Y<&4@/3T@=DQ#2$%2('Q\(%P*"0EE;G1R>2T^9&ES<%1Y<&4@/3T@
M=E5(0TA!4B!\?"!<"@D)96YT<GDM/F1I<W!4>7!E(#T]('9,2$-(05(I("8F
M(%P*"0EI<V1I9VET*'!L86EN8VAA<BDI"B`@('L*("`@("`@0F5E<"@I.PH@
M("!]"B`@(&5L<V4@:68@*&5N=')Y+3YD:7-P5'EP92`]/2!V5DE%5T].3%DI
M"B`@('L*("`@("`@0F5E<"@I.PH@("!]"B`@(&5L<V4@"B`@('L*("`@("`@
M:68@*"AI;G0I<W1R;&5N("AE;G1R>2T^:6YF;RD@/3T@96YT<GDM/FUA>"D*
M("`@("`@>PH@("`@("`@("!"965P*"D["B`@("`@('T*("`@("`@96QS90H@
M("`@("!["B`@("`@("`@("\J(%=E('=I;&P@;6%K92!A;GD@861J=7-T;65N
M=',@=&\@=&AE(&-A<V4@;V8@=&AE(&-H87)A8W1E<BX)*B\*("`@("`@("`@
M:68@*"AE;G1R>2T^9&ES<%1Y<&4@/3T@=E5#2$%2('Q\(%P*"0EE;G1R>2T^
M9&ES<%1Y<&4@/3T@=E5(0TA!4B!\?"!<"@D)96YT<GDM/F1I<W!4>7!E(#T]
M('9534E8140@?'P@7`H)"65N=')Y+3YD:7-P5'EP92`]/2!V54A-25A%1"D@
M(%P*"0DF)B`A:7-D:6=I="AP;&%I;F-H87(I*0H@("`@("`@("!["B`@("`@
M("`@("`@('!L86EN8VAA<B`]('1O=7!P97(@*'!L86EN8VAA<BD["B`@("`@
M("`@('T*("`@("`@("`@96QS92!I9B`H*&5N=')Y+3YD:7-P5'EP92`]/2!V
M3$-(05(@?'P@7`H)"0EE;G1R>2T^9&ES<%1Y<&4@/3T@=DQ(0TA!4B!\?"!<
M"@D)"65N=')Y+3YD:7-P5'EP92`]/2!V3$U)6$5$('Q\(%P*"0D)96YT<GDM
M/F1I<W!4>7!E(#T]('9,2$U)6$5$*2`F)B!<"@D)"2%I<V1I9VET*'!L86EN
M8VAA<BDI"B`@("`@("`@('L*("`@("`@("`@("`@<&QA:6YC:&%R(#T@=&]L
M;W=E<B`H<&QA:6YC:&%R*3L*("`@("`@("`@?0H*("`@("`@("`@+RH@57!D
M871E('1H92!S8W)E96X@86YD('!O:6YT97(N"0D)"2HO"B`@("`@("`@(&EF
M("AE;G1R>2T^<V-R965N0V]L("$](&5N=')Y+3YF:65L9%=I9'1H+3$I"B`@
M("`@("`@('L*("`@("`@("`@("`@+RH@57!D871E('1H92!C:&%R86-T97(@
M<&]I;G1E<BX)"0D)*B\*("`@("`@("`@("`@=&5M<"`]("AI;G0I<W1R;&5N
M("AE;G1R>2T^:6YF;RD["B`@("`@("`@("`@(&9O<B`H>#UT96UP.R!X(#X@
M96YT<GDM/G-C<F5E;D-O;"ME;G1R>2T^;&5F=$-H87([('@M+2D*("`@("`@
M("`@("`@>PH@("`@("`@("`@("`@("!E;G1R>2T^:6YF;UMX72`](&5N=')Y
M+3YI;F9O6W@M,5T["B`@("`@("`@("`@('T*("`@("`@("`@("`@96YT<GDM
M/FEN9F];96YT<GDM/G-C<F5E;D-O;"ME;G1R>2T^;&5F=$-H87)=(#T@<&QA
M:6YC:&%R.PH@("`@("`@("`@("!E;G1R>2T^<V-R965N0V]L*RL["B`@("`@
M("`@('T*("`@("`@("`@96QS90H@("`@("`@("!["B`@("`@("`@("`@("\J
M(%5P9&%T92!T:&4@8VAA<F%C=&5R('!O:6YT97(N"0D)"2HO"B`@("`@("`@
M("`@('1E;7`@/2`H:6YT*7-T<FQE;B`H96YT<GDM/FEN9F\I.PH@("`@("`@
M("`@("!E;G1R>2T^:6YF;UMT96UP70D]('!L86EN8VAA<CL*("`@("`@("`@
M("`@96YT<GDM/FEN9F];=&5M<"LQ70D]("=<,"<["B`@("`@("`@('T*"B`@
M("`@("`@("\J(%5P9&%T92!T:&4@;&5F=$-H87(@=F%L=64N"0D)"0DJ+PH@
M("`@("`@("!T96UP(#T@*&EN="ES=')L96X@*&5N=')Y+3YI;F9O*3L*("`@
M("`@("`@96YT<GDM/FQE9G1#:&%R(#T@*'1E;7`@/"!E;G1R>2T^9FEE;&17
M:61T:"`_(#`@.B!T96UP+65N=')Y+3YF:65L9%=I9'1H*3L*"B`@("`@("`@
M("\J(%5P9&%T92!T:&4@96YT<GD@9FEE;&0N"0D)"0DJ+PH@("`@("`@("!D
M<F%W0T1+16YT<GE&:65L9"`H96YT<GDI.PH@("`@("!]"B`@('T*?0H*+RH*
M("H@5&AI<R!E<F%S97,@=&AE(&EN9F]R;6%T:6]N(&EN('1H92!E;G1R>2!F
M:65L9`H@*B!A;F0@<F5D<F%W<R!A(&-L96%N(&%N9"!E;7!T>2!E;G1R>2!F
M:65L9"X*("HO"G9O:60@8VQE86Y#1$M%;G1R>2`H0T1+14Y44ED@*F5N=')Y
M*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@
M(&EN="!W:61T:"`](&5N=')Y+3YF:65L9%=I9'1H.PH@("!I;G0@>#L*"B`@
M("\J($5R87-E('1H92!I;F9O<FUA=&EO;B!I;B!T:&4@8VAA<F%C=&5R('!O
M:6YT97(N"0D)*B\*("`@8VQE86Y#:&%R("AE;G1R>2T^:6YF;RP@96YT<GDM
M/FEN9F]7:61T:"P@)UPP)RD["@H@("`O*B!#;&5A;B!T:&4@96YT<GD@<V-R
M965N(&9I96QD+@D)"0D)*B\*("`@9F]R("AX/3`[('@@/"!W:61T:#L@>"LK
M*0H@("!["B`@("`@(&UV=V%D9&-H("AE;G1R>2T^9FEE;&0L(#`L('@L(&5N
M=')Y+3YF:6QL97(I.PH@("!]"@H@("`O*B!297-E="!S;VUE('9A<FEA8FQE
M<RX)"0D)"0DJ+PH@("!E;G1R>2T^<V-R965N0V]L(#T@,#L*("`@96YT<GDM
M/FQE9G1#:&%R(#T@,#L*"B`@("\J(%)E9G)E<V@@=&AE(&5N=')Y(&9I96QD
M+@D)"0D)"2HO"B`@('=R969R97-H("AE;G1R>2T^9FEE;&0I.PI]"@HO*@H@
M*B!4:&ES(&1R87=S('1H92!E;G1R>2!F:65L9"X*("HO"G9O:60@9')A=T-$
M2T5N=')Y("A#1$M%3E1262`J96YT<GDL(&)O;VQE86X@0F]X*0I["B`@("\J
M($5R87-E('1H92!E;G1R>2!W:61G970@9G)O;2!T:&4@<V-R965N+@D)"0DJ
M+PH@("!E<F%S94-$2T5N=')Y("AE;G1R>2D["@H@("`O*B!$:60@=V4@87-K
M(&9O<B!A('-H861O=S\_/PD)"0D)*B\*("`@:68@*&5N=')Y+3YS:&%D;W<I
M"B`@('L*("`@("`@9')A=U-H861O=R`H96YT<GDM/G-H861O=U=I;BD["B`@
M('T*"B`@("\J($)O>"!T:&4@=VED9V5T(&EF(&%S:V5D+@D)"0D)"2HO"B`@
M(&EF("A";W@I"B`@('L*("`@("`@8F]X("AE;G1R>2T^=VEN+"!!0U-?5DQ)
M3D4L($%#4U](3$E.12D["B`@("`@('=R969R97-H("AE;G1R>2T^=VEN*3L*
M("`@?0H*("`@+RH@1')A=R!I;B!T:&4@;&%B96P@=&\@=&AE('=I9&=E="X)
M"0D)"2HO"B`@('=R:71E0VAT>7!E("AE;G1R>2T^;&%B96Q7:6XL(#`L(#`L
M(&5N=')Y+3YL86)E;"P@2$]225I/3E1!3"P@,"P@96YT<GDM/FQA8F5L3&5N
M*3L*("`@=W)E9G)E<V@@*&5N=')Y+3YL86)E;%=I;BD["@H@("`O*B!2961R
M87<@=&AE(&5N=')Y(&9I96QD+@D)"0D)"2HO"B`@(&1R87=#1$M%;G1R>49I
M96QD("AE;G1R>2D["GT*"B\J"B`J(%1H:7,@<F5D<F%W<R!T:&4@96YT<GD@
M9FEE;&0N"B`J+PIV;VED(&1R87=#1$M%;G1R>49I96QD("A#1$M%3E1262`J
M96YT<GDI"GL*("`@+RH@1&5C;&%R92!V87)I86)L97,N"0D)"0D)*B\*("`@
M:6YT(&EN9F],96YG=&@@/2`P.PH@("!I;G0@>"`](#`["@H@("`O*B!$<F%W
M(&EN('1H92!F:6QL97(@8VAA<F%C=&5R<RX)"0D)"2HO"B`@(&9O<B`H>#TP
M.R!X(#P@96YT<GDM/F9I96QD5VED=&@[('@K*RD*("`@>PH@("`@("!M=G=A
M9&1C:"`H96YT<GDM/F9I96QD+"`P+"!X+"!E;G1R>2T^9FEL;&5R*3L*("`@
M?0H@("!W;6]V92`H96YT<GDM/F9I96QD+"`P+"`P*3L*("`@"B`@("\J($EF
M('1H97)E(&ES(&EN9F]R;6%T:6]N(&EN('1H92!F:65L9"X@5&AE;B!D<F%W
M(&ET(&EN+@D)*B\*("`@:68@*&5N=')Y+3YI;F9O("$]("AC:&%R("HI($Y5
M3$PI"B`@('L*("`@("`@:6YF;TQE;F=T:"`]("AI;G0I<W1R;&5N("AE;G1R
M>2T^:6YF;RD["@H@("`@("`O*B!2961R87<@=&AE(&9I96QD+@D)"0D)"2HO
M"B`@("`@(&EF("AE;G1R>2T^9&ES<%1Y<&4@/3T@=DA)3E0@?'P@7`H)"65N
M=')Y+3YD:7-P5'EP92`]/2!V2$-(05(@?'P@7`H)"65N=')Y+3YD:7-P5'EP
M92`]/2!V2$U)6$5$('Q\(%P*"0EE;G1R>2T^9&ES<%1Y<&4@/3T@=E5(0TA!
M4B!\?"!<"@D)96YT<GDM/F1I<W!4>7!E(#T]('9,2$-(05(@?'P@7`H)"65N
M=')Y+3YD:7-P5'EP92`]/2!V54A-25A%1"!\?"!<"@D)96YT<GDM/F1I<W!4
M>7!E(#T]('9,2$U)6$5$*0H@("`@("!["B`@("`@("`@(&9O<B`H>#UE;G1R
M>2T^;&5F=$-H87([('@@/"!I;F9O3&5N9W1H.R!X*RLI"B`@("`@("`@('L*
M("`@("`@("`@("`@;79W861D8V@@*&5N=')Y+3YF:65L9"P@,"P@>"UE;G1R
M>2T^;&5F=$-H87(L(&5N=')Y+3YF:6QL97(I.PH@("`@("`@("!]"B`@("`@
M('T*("`@("`@96QS90H@("`@("!["B`@("`@("`@(&9O<B`H>#UE;G1R>2T^
M;&5F=$-H87([('@@/"!I;F9O3&5N9W1H.R!X*RLI"B`@("`@("`@('L*("`@
M("`@("`@("`@;79W861D8V@@*&5N=')Y+3YF:65L9"P@,"P@>"UE;G1R>2T^
M;&5F=$-H87(L(&5N=')Y+3YI;F9O6WA=*3L*("`@("`@("`@?0H@("`@("!]
M"B`@("`@('=M;W9E("AE;G1R>2T^9FEE;&0L(#`L(&5N=')Y+3YS8W)E96Y#
M;VPI.PH@("!]"@H@("`O*B!2969R97-H('1H92!F:65L9"X)"0D)"0DJ+PH@
M("!W<F5F<F5S:"`H96YT<GDM/F9I96QD*3L*?0H*+RH*("H@5&AI<R!E<F%S
M97,@86X@96YT<GD@=VED9V5T(&9R;VT@=&AE('-C<F5E;BX*("HO"G9O:60@
M97)A<V5#1$M%;G1R>2`H0T1+14Y44ED@*F5N=')Y*0I["B`@('=E<F%S92`H
M96YT<GDM/F9I96QD*3L*("`@=V5R87-E("AE;G1R>2T^;&%B96Q7:6XI.PH@
M("!W97)A<V4@*&5N=')Y+3YW:6XI.PH@("!W<F5F<F5S:"`H96YT<GDM/G=I
M;BD["B`@"B`@("\J($1O('=E('=A;G0@=&\@97)A<V4@=&AE('-H861O=RX)
M"0D)"2HO"B`@(&EF("AE;G1R>2T^<VAA9&]W*0H@("!["B`@("`@('=E<F%S
M92`H96YT<GDM/G-H861O=U=I;BD["B`@("`@('=R969R97-H("AE;G1R>2T^
M<VAA9&]W5VEN*3L*("`@?0I]"@HO*@H@*B!4:&ES(&1E<W1R;WES(&%N(&5N
M=')Y('=I9&=E="X*("HO"G9O:60@9&5S=')O>4-$2T5N=')Y("A#1$M%3E12
M62`J96YT<GDI"GL*("`@+RH@17)A<V4@=&AE(&]B:F5C="X)"0D)"0D)*B\*
M("`@97)A<V5#1$M%;G1R>2`H96YT<GDI.PH*("`@+RH@0VQE87(@;W5T('1H
M92!C:&%R86-T97(@<&]I;G1E<G,N"0D)"0DJ+PH@("!F<F5E0VAT>7!E("AE
M;G1R>2T^;&%B96PI.PH@("!F<F5E0VAA<B`H96YT<GDM/FEN9F\I.PH*("`@
M+RH@1&5L971E('1H92!W:6YD;W=S+@D)"0D)"2HO"B`@(&1E;'=I;B`H96YT
M<GDM/F9I96QD*3L*("`@9&5L=VEN("AE;G1R>2T^;&%B96Q7:6XI.PH@("!I
M9B`H96YT<GDM/G-H861O=RD*("`@>PH@("`@("!D96QW:6X@*&5N=')Y+3YS
M:&%D;W=7:6XI.PH@("!]"B`@(&1E;'=I;B`H96YT<GDM/G=I;BD["@H@("`O
M*B!5;G)E9VES=&5R('1H:7,@;V)J96-T+@D)"0D)"2HO"B`@('5N<F5G:7-T
M97)#1$M/8FIE8W0@*'9%3E1262P@96YT<GDI.PH*("`@+RH@1FEN:7-H(&-L
M96%N:6YG('5P+@D)"0D)"2HO"B`@(&9R964@*&5N=')Y*3L*?0H*+RH*("H@
M5&AI<R!R96UO=F5S('1H92!O;&0@:6YF;W)M871I;VX@:6X@=&AE(&5N=')Y
M(&9I96QD(&%N9"!K965P<R!T:&4*("H@;F5W(&EN9F]R;6%T:6]N(&=I=F5N
M+@H@*B\*=F]I9"!S971#1$M%;G1R>2`H0T1+14Y44ED@*F5N=')Y+"!C:&%R
M("IN97=686QU92P@:6YT(&UI;BP@:6YT(&UA>"P@8F]O;&5A;B!B;W@I"GL*
M("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@:6YT
M(&-O<'EC:&%R<PD](#`["B`@(&EN="!S=')I;F=,96X)/2`P.PH@("!I;G0@
M8VAA<D-O=6YT"3T@,#L*"B`@("\J($ME97`@=&AE(&EN="!V86QU97,@<&%S
M<V5D(&EN+@D)"0D)*B\*("`@96YT<GDM/FUI;@D)/2!M:6X["B`@(&5N=')Y
M+3YM87@)"3T@;6%X.PH@("!E;G1R>2T^8F]X"0D](&)O>#L*"B`@("\J($EF
M('1H92!P;VEN=&5R('-E;G0@:6X@:7,@=&AE('-A;64@<&]I;G1E<B!A<R!B
M969O<F4L(&1O(&YO=&AI;F<N"2HO"B`@(&EF("AE;G1R>2T^:6YF;R`]/2!N
M97=686QU92D*("`@>PH@("`@("!R971U<FX["B`@('T*"B`@("\J($IU<W0@
M=&\@8F4@<W5R92P@:68@;&5T<R!M86ME('-U<F4@=&AE(&YE=R!V86QU92!I
M<VXG="!.54Q,+@DJ+PH@("!I9B`H;F5W5F%L=64@/3T@*&-H87(@*BE.54Q,
M*0H@("![(`H@("`@("`O*B!4:&5N('=E('=A;G0@=&\@:G5S="!E<F%S92!T
M:&4@;VQD('9A;'5E+@D)"2HO"B`@("`@(&-L96%N0VAA<B`H96YT<GDM/FEN
M9F\L(&5N=')Y+3YI;F9O5VED=&@L("=<,"<I.PH@("`@"B`@("`@("\J(%-E
M="!T:&4@<&]I;G1E<G,@8F%C:R!T;R!Z97)O+@D)"0D)*B\*("`@("`@96YT
M<GDM/FQE9G1#:&%R(#T@,#L*("`@("`@96YT<GDM/G-C<F5E;D-O;"`](#`[
M"B`@("`@(')E='5R;CL*("`@?0H*("`@+RH@1&5T97)M:6YE(&AO=R!M86YY
M(&-H87)A8W1E<G,@=V4@;F5E9"!T;R!C;W!Y+@D)"2HO"B`@(&-O<'EC:&%R
M<R`]($U)3DE-54T@*"AI;G0I<W1R;&5N*&YE=U9A;'5E*2P@96YT<GDM/FUA
M>"D["@H@("`O*B!/2RP@97)A<V4@=&AE(&]L9"!V86QU92P@86YD(&-O<'D@
M:6X@=&AE(&YE=R!V86QU92X)"2HO"B`@(&-L96%N0VAA<B`H96YT<GDM/FEN
M9F\L(&5N=')Y+3YM87@L("=<,"<I.PH@("!S=')N8W!Y("AE;G1R>2T^:6YF
M;RP@;F5W5F%L=64L(&-O<'EC:&%R<RD["B`@('-T<FEN9TQE;B`]("AI;G0I
M<W1R;&5N("AE;G1R>2T^:6YF;RD["@H@("`O*B!.;W<@9&5T97)M:6YE('1H
M92!V86QU97,@;V8@;&5F=$-H87(@86YD('-C<F5E;D-O;"X)"2HO"B`@(&EF
M("AS=')I;F=,96X@/CT@96YT<GDM/F9I96QD5VED=&@I"B`@('L*("`@("`@
M8VAA<D-O=6YT"0D](&5N=')Y+3YF:65L9%=I9'1H("H@+C@["B`@("`@(&5N
M=')Y+3YL969T0VAA<@D]('-T<FEN9TQE;B`M(&-H87)#;W5N=#L*("`@("`@
M96YT<GDM/G-C<F5E;D-O;`D](&-H87)#;W5N=#L*("`@?0H@("!E;'-E"B`@
M('L*("`@("`@96YT<GDM/FQE9G1#:&%R(#T@,#L*("`@("`@96YT<GDM/G-C
M<F5E;D-O;"`]('-T<FEN9TQE;CL*("`@?0I]"@HO*@H@*B!4:&ES('-E=',@
M=&AE(&5N=')Y(&9I96QD(&-A;&QB86-K(&9U;F-T:6]N+@H@*B\*=F]I9"!S
M971#1$M%;G1R>4-"("A#1$M%3E1262`J96YT<GDL($5.5%)90T(@8V%L;&)A
M8VLI"GL*("`@96YT<GDM/F-A;&QB86-K9FX@/2`H=F]I9"`J*6-A;&QB86-K
M.PI]"@HO*@H@*B!4:&ES(&9U;F-T:6]N('-E=',@=&AE('!R92UP<F]C97-S
M(&9U;F-T:6]N+@H@*B\*=F]I9"!S971#1$M%;G1R>5!R95!R;V-E<W,@*$-$
M2T5.5%)9("IE;G1R>2P@4%)/0T534T9.(&-A;&QB86-K+"!V;VED("ID871A
M*0I["B`@(&5N=')Y+3YP<F50<F]C97-S1G5N8W1I;VX@/2!C86QL8F%C:SL*
M("`@96YT<GDM/G!R95!R;V-E<W-$871A(#T@9&%T83L*?0H*+RH*("H@5&AI
M<R!F=6YC=&EO;B!S971S('1H92!P;W-T+7!R;V-E<W,@9G5N8W1I;VXN"B`J
M+PIV;VED('-E=$-$2T5N=')Y4&]S=%!R;V-E<W,@*$-$2T5.5%)9("IE;G1R
M>2P@4%)/0T534T9.(&-A;&QB86-K+"!V;VED("ID871A*0I["B`@(&5N=')Y
M+3YP;W-T4')O8V5S<T9U;F-T:6]N(#T@8V%L;&)A8VL["B`@(&5N=')Y+3YP
9;W-T4')O8V5S<T1A=&$@/2!D871A.PI]"F%L
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/entry.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/entry.c' &&
  chmod 0444 'cdk4.8.0/entry.c' ||
  echo 'restore of cdk4.8.0/entry.c failed'
  shar_count="`wc -c < 'cdk4.8.0/entry.c'`"
  test 21580 -eq "$shar_count" ||
    echo "cdk4.8.0/entry.c: original size 21580, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/graph.c ==============
if test -f 'cdk4.8.0/graph.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/graph.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/graph.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/graph.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/07/05 01:29:53 $
X * $Revision: 1.29 $
X */
X
/*
X * This creates a graph widget.
X */
CDKGRAPH *newCDKGraph (CDKSCREEN *cdkscreen, int xplace, int yplace, int height, int width, char *title, char *xtitle, char *ytitle)
{
X   /* Declare local variables.						*/
X   CDKGRAPH *graph	= (CDKGRAPH *)malloc (sizeof (CDKGRAPH));
X   int xpos		= xplace;
X   int ypos		= yplace;
X
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, width+3, height);
X
X   /* Create the graph pointer						*/
X   graph->parent	= cdkscreen->window;
X   graph->win		= newwin (height, width+3, ypos, xpos);
X   graph->boxHeight	= height;
X   graph->boxWidth	= width+3;
X   graph->box		= NOBOX;
X   graph->minx		= 0;
X   graph->maxx		= 0;
X   graph->xscale	= 0;
X   graph->yscale	= 0;
X   graph->displayType	= vLINE;
X
X   /* Is the graph pointer NULL???					*/
X   if (graph->win == (WINDOW *)NULL)
X   {
X      /* Clean up any memory used.					*/
X      free (graph);
X
X      /* Return a NULL pointer.						*/
X      return ( (CDKGRAPH *)NULL );
X   }
X
X   /* Translate the graph title char * to a chtype *			*/
X   if (title != (char *)NULL)
X   {
X      graph->title	= char2Chtype (title, &graph->titleLen, &graph->titlePos);
X      graph->titlePos	= justifyString (graph->boxWidth, graph->titleLen, graph->titlePos);
X   }
X   else
X   {
X      graph->title	= char2Chtype ("<C></5>Untitled", &graph->titleLen, &graph->titlePos);
X      graph->titlePos	= justifyString (graph->boxWidth, graph->titleLen, graph->titlePos);
X   }
X
X   /* Translate the X Axis title char * to a chtype *			*/
X   if (xtitle != (char *)NULL)
X   {
X      graph->xtitle	= char2Chtype (xtitle, &graph->xtitleLen, &graph->xtitlePos);
X      graph->xtitlePos	= justifyString (graph->boxHeight, graph->xtitleLen, graph->xtitlePos);
X   } 
X   else
X   {
X      graph->xtitle	= char2Chtype ("<C></5>X Axis", &graph->xtitleLen, &graph->xtitlePos);
X      graph->xtitlePos	= justifyString (graph->boxHeight, graph->xtitleLen, graph->xtitlePos);
X   }
X
X   /* Translate the Y Axis title char * to a chtype *			*/
X   if (ytitle != (char *)NULL)
X   {
X      graph->ytitle	= char2Chtype (ytitle, &graph->ytitleLen, &graph->ytitlePos);
X      graph->ytitlePos	= justifyString (graph->boxWidth, graph->ytitleLen, graph->ytitlePos);
X   } 
X   else
X   {
X      graph->ytitle	= char2Chtype ("<C></5>Y Axis", &graph->ytitleLen, &graph->ytitlePos);
X      graph->ytitlePos	= justifyString (graph->boxWidth, graph->ytitleLen, graph->ytitlePos);
X   }
X
X   /* Set some values of the graph structure.				*/
X   graph->graphChar	= (chtype *)NULL;
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vGRAPH, graph);
X
X   /* Return the graph pointer.						*/
X   return (graph);
}
X
/*
X * This sets the values of the graph.
X */
int setCDKGraph (CDKGRAPH *graph, int *values, int count, char *graphChar, boolean startAtZero, EGraphDisplayType displayType)
{
X   /* Declare local variables.						*/
X   int min	= 99999999;
X   int max	= (min * -1);
X   int x	= 0;
X   int charCount, temp;
X
X   /* Keep the display type.						*/
X   graph->displayType	= displayType;
X
X   /* Remove the old graph char if it exists.				*/
X   freeChtype (graph->graphChar);
X   graph->graphChar = char2Chtype (graphChar, &charCount, &temp);
X
X   /* Check if the number of characters back is the same as the number	*/
X   /* of elements in the list.						*/
X   if (charCount < count)
X   {
X      /* Oops. Better let them know.					*/
X      freeChtype (graph->graphChar);
X      return (FALSE);
X   }
X
X   /* Copy the X values.						*/
X   for (x=0; x <count; x++)
X   {
X      /* Determine the min/max values of the graph.			*/
X      min		= MINIMUM (values[x], min);
X      max		= MAXIMUM (values[x], max);
X
X      /* Copy the value.						*/
X      graph->values[x]	= values[x];
X   }
X   graph->count = count;
X   graph->minx = min;
X   graph->maxx = max;
X
X   /* Check the start at zero status.					*/
X   if (startAtZero)
X   {
X      graph->minx = 0;
X   }
X
X   /* Determine the scales.						*/
X   graph->xscale = ((graph->maxx - graph->minx) / (graph->boxHeight - 5));
X   graph->yscale = ((graph->boxWidth-4) / count);
X   return (TRUE);
}
X
/*
X * This function draws the graph widget.
X */
void drawCDKGraph (CDKGRAPH *graph, boolean Box)
{
X   /* Declare local variables.						*/
X   int x		= 0;
X   int y		= 0;
X   int adj		= 0;
X   chtype attrib	= ' '|A_REVERSE;
X   char temp[100];
X
X   /* Keep the box information.						*/
X   graph->box		= Box;
X
X   /* Erase the old object...						*/
X   eraseCDKGraph (graph);
X
X   /* Draw in the vertical axis						*/
X   drawLine (graph->win, 2, 1, 2, graph->boxHeight-3, ACS_VLINE);
X
X   /* Draw in the horizontal axis					*/
X   drawLine (graph->win, 3, graph->boxHeight-3, graph->boxWidth, graph->boxHeight-3, ACS_HLINE);
X
X   /* Draw in the graph title.						*/
X   if (graph->title != (chtype *)NULL)
X   {
X      writeChtype (graph->win, graph->titlePos, 0, graph->title, HORIZONTAL, 0, graph->titleLen);
X   }
X   
X   /* Draw in the X axis title.						*/
X   if (graph->xtitle != (chtype *)NULL)
X   {
X      writeChtype (graph->win, 0, graph->xtitlePos, graph->xtitle, VERTICAL, 0, graph->xtitleLen);
X      attrib	= graph->xtitle[0] & A_ATTRIBUTES;
X   }
X   
X   /* Draw in the X axis high value.					*/
X   sprintf (temp, "%d", graph->maxx);
X   writeCharAttrib (graph->win, 1, 1, temp, attrib, VERTICAL, 0, (int)strlen(temp));
X   
X   /* Draw in the X axis low value.					*/
X   sprintf (temp, "%d", graph->minx);
X   writeCharAttrib (graph->win, 1, graph->boxHeight-2-(int)strlen(temp), temp, attrib, VERTICAL, 0, (int)strlen(temp));
X   
X   /* Draw in the Y axis title.						*/
X   if (graph->ytitle != (chtype *)NULL)
X   {
X      writeChtype (graph->win, graph->ytitlePos, graph->boxHeight-1, graph->ytitle, HORIZONTAL, 0, graph->ytitleLen);
X      attrib	= graph->ytitle[0] & A_ATTRIBUTES;
X   }
X
X   /* Draw in the Y axis high value.					*/
X   sprintf (temp, "%d", graph->count);
X   writeCharAttrib (graph->win, graph->boxWidth-(int)strlen(temp)-1, graph->boxHeight-2, temp, attrib, HORIZONTAL, 0, (int)strlen(temp));
X   
X   /* Draw in the Y axis low value.					*/
X   sprintf (temp, "0");
X   writeCharAttrib (graph->win, 3, graph->boxHeight-2, temp, attrib, HORIZONTAL, 0, (int)strlen(temp));
X   
X   /* Draw in the lines.						*/
X   adj	= 3;
X   for (y=0; y < graph->count; y++)
X   {
X       int colheight	= (graph->values[y] / graph->xscale) - 1;
X       mvwaddch (graph->win, graph->boxHeight-3, adj-1, ACS_TTEE);
X
X       /* If this is a plot graph, all we do is draw a dot.		*/
X       if (graph->displayType == vPLOT)
X       {
X          int temploc = graph->boxHeight-4-colheight;
X          mvwaddch (graph->win, temploc, adj, graph->graphChar[y]);
X          adj += 2;
X       } 
X       else
X       {
X          for (x=0; x <= graph->yscale; x++)
X          {
X             /* Draw a line.						*/
X             drawLine (graph->win, adj, graph->boxHeight-3-colheight, adj, graph->boxHeight-3, graph->graphChar[y]);
X             adj++;
X          }
X       }
X   }
X
X   /* Draw in the axis corners.						*/
X   mvwaddch (graph->win, 0, 2, ACS_URCORNER);
X   mvwaddch (graph->win, graph->boxHeight-3, 2, ACS_LLCORNER);
X   mvwaddch (graph->win, graph->boxHeight-3, graph->boxWidth, ACS_URCORNER);
X
X   /* Refresh and lets see 'er.						*/
X   wrefresh (graph->win);
}
X
/*
X * This function destroys the graph widget.
X */
void destroyCDKGraph (CDKGRAPH *graph)
{
X   /* Erase the object.							*/
X   eraseCDKGraph (graph);
X
X   /* Clear up the char pointers.					*/
X   freeChtype (graph->title);
X   freeChtype (graph->xtitle);
X   freeChtype (graph->ytitle);
X   freeChtype (graph->graphChar);
X      
X   /* Clean up the windows.						*/
X   delwin (graph->win);
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vGRAPH, graph);
X
X   /* Finish cleaning up.						*/
X   free (graph);
}
X
/*
X * This function erases the graph widget from the screen.
X */
void eraseCDKGraph (CDKGRAPH *graph)
{
X   werase (graph->win);
X   wrefresh (graph->win);
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/graph.c' &&
  chmod 0444 'cdk4.8.0/graph.c' ||
  echo 'restore of cdk4.8.0/graph.c failed'
  shar_count="`wc -c < 'cdk4.8.0/graph.c'`"
  test 7991 -eq "$shar_count" ||
    echo "cdk4.8.0/graph.c: original size 7991, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/fselect.c ==============
if test -f 'cdk4.8.0/fselect.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/fselect.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/fselect.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/fselect.c
M(VEN8VQU9&4@(F-D:RYH(@H@"B\J"B`J("1!=71H;W(Z(&=L;W9E<B`D"B`J
M("1$871E.B`Q.3DV+S`W+S`U(#`Q.C(X.C,Y("0*("H@)%)E=FES:6]N.B`Q
M+C0V("0*("HO"F5X=&5R;B!C:&%R("I'4&%S=&5"=69F97(["@HO*B!$96-L
M87)E(&QO8V%L(&9U;F-T:6]N('!R;W1O='EP97,N"0D)"0DJ+PIV;VED(&9S
M96QE8W138W)O;&Q5<$-"("A%3V)J96-T5'EP92!O8FIE8W14>7!E+"!V;VED
M("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I.PIV;VED(&9S96QE8W138W)O
M;&Q$;W=N0T(@*$5/8FIE8W14>7!E(&]B:F5C=%1Y<&4L('9O:60@*F]B:F5C
M="P@=F]I9"`J8VQI96YT1&%T82D["G9O:60@9G-E;&5C=%!A9V55<$-"("A%
M3V)J96-T5'EP92!O8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L
M:65N=$1A=&$I.PIV;VED(&9S96QE8W1086=E1&]W;D-"("A%3V)J96-T5'EP
M92!O8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I
M.PIV;VED(&1I<W!L87E&:6QE26YF;T-"("A%3V)J96-T5'EP92!O8FIE8W14
M>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I.PIV;VED(&-O
M;7!L971E1FEL96YA;65#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I
M9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*3L*=F]I9"!G971$:7).86UE
M("A%3V)J96-T5'EP92!O8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@
M*F-L:65N=$1A=&$I.PH*+RH*("H@5&AI<R!C<F5A=&5S(&$@9FEL92!S96QE
M8W1I;VX@=VED9V5T+@H@*B\*0T1+1E-%3$5#5"`J;F5W0T1+1G-E;&5C="`H
M0T1+4T-2145..("IC9&MS8W)E96XL(&EN="!X<&QA8V4L(&EN="!Y<&QA8V4L
M(&EN="!H96EG:'0L(&EN="!W:61T:"P@8VAA<B`J;&%B96PL(&-H='EP92!F
M:65L9$%T=')I8G5T92P@8VAT>7!E(&9I;&QE<D-H87(L(&-H='EP92!H:6=H
M;&EG:'0L(&-H87(@*F1!='1R:6)U=&4L(&-H87(@*F9!='1R:6)U=&4L(&-H
M87(@*FQ!='1R:6)U=&4L(&-H87(@*G-!='1R:6)U=&4L(&)O;VQE86X@8F]X
M+"!B;V]L96%N('-H861O=RD*>PH@("\J(%-E="!U<"!S;VUE('9A<FEA8FQE
M<RX@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@
M("HO"B`@($-$2T9314Q%0U0@*F9S96QE8W0)/2`H0T1+1E-%3$5#5"`J*6UA
M;&QO8R`H<VEZ96]F("A#1$M&4T5,14-4*2D["B`@(&EN="!B;WA7:61T:`D)
M/2!W:61T:#L*("`@:6YT(&)O>$AE:6=H=`D](&AE:6=H=#L*("`@:6YT('AP
M;W,)"3T@>'!L86-E.PH@("!I;G0@>7!O<PD)/2!Y<&QA8V4["B`@(&EN="!E
M;G1R>5=I9'1H+"!X+"!L86)E;$QE;BP@:G5N:SL*("`@8VAT>7!E("IC:'1Y
M<&53=')I;F<["@H@("`O*B!296IU<W1I9GD@=&AE('@@86YD('D@<&]S:71I
M;VYS(&EF('=E(&YE960@=&\N"0D)*B\*("`@86QI9VYX>2`H8V1K<V-R965N
M+3YW:6YD;W<L("9X<&]S+"`F>7!O<RP@8F]X5VED=&@L(&)O>$AE:6=H="D[
M"@H@("`O*B!3970@=&AE(&AE:6=H="!A;F0@=VED=&@@=F%L=65S+@D)"0D)
M*B\*("`@8F]X5VED=&@@/2`H=VED=&@@/"`Q-2`_(#$U(#H@=VED=&@I.PH@
M("!B;WA(96EG:'0@/2`H:&5I9VAT(#P@-B`_(#8@.B!H96EG:'0I.PH*("`@
M+RH@36%K92!T:&4@9FEL92!S96QE8W1O<B!W:6YD;W<N"0D)"0DJ+PH@("!F
M<V5L96-T+3YW:6X)"3T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H+"!Y
M<&]S+"!X<&]S*3L*"B`@("\J($ES('1H92!W:6YD;W<@3E5,3#\_/PD)"0D)
M"2HO"B`@(&EF("AF<V5L96-T+3YW:6X@/3T@*%=)3D1/5R`J*4Y53$PI"B`@
M('L*("`@("`@<F5T=7)N("@H0T1+1E-%3$5#5"`J*4Y53$PI.PH@("!]"@H@
M("`O*B!3970@<V]M92!V87)I86)L97,N"0D)"0D)*B\*("`@9G-E;&5C="T^
M<V-R965N"0D](&-D:W-C<F5E;CL*("`@9G-E;&5C="T^<&%R96YT"0D](&-D
M:W-C<F5E;BT^=VEN9&]W.PH@("!F<V5L96-T+3YD:7)!='1R:6)U=&4)/2!C
M;W!Y0VAA<B`H9$%T=')I8G5T92D["B`@(&9S96QE8W0M/F9I;&5!='1R:6)U
M=&4)/2!C;W!Y0VAA<B`H9D%T=')I8G5T92D["B`@(&9S96QE8W0M/FQI;FM!
M='1R:6)U=&4)/2!C;W!Y0VAA<B`H;$%T=')I8G5T92D["B`@(&9S96QE8W0M
M/G-O8VM!='1R:6)U=&4)/2!C;W!Y0VAA<B`H<T%T=')I8G5T92D["B`@(&9S
M96QE8W0M/FAI9VAL:6=H=`D)/2!H:6=H;&EG:'0["B`@(&9S96QE8W0M/F9I
M;&QE<D-H87)A8W1E<@D](&9I;&QE<D-H87(["B`@(&9S96QE8W0M/F9I96QD
M071T<FEB=71E"3T@9FEE;&1!='1R:6)U=&4["B`@(&9S96QE8W0M/FAE:6=H
M=`D)/2!B;WA(96EG:'0["B`@(&9S96QE8W0M/G=I9'1H"0D](&)O>%=I9'1H
M.PH@("!F<V5L96-T+3YF:6QE0V]U;G1E<@D)/2`P.PH@("!F<V5L96-T+3YP
M=V0)"0D]("AC:&%R("HI3E5,3#L*("`@9G-E;&5C="T^97AI=%1Y<&4)"3T@
M=DY%5D527T%#5$E6051%1#L*("`@9G-E;&5C="T^8F]X"0D)/2!B;W@["B`@
M(&9S96QE8W0M/G-H861O=PD)/2!S:&%D;W<["@H@("`O*B!:97)O(&]U="!T
M:&4@8V]N=&5N=',@;V8@=&AE(&1I<F5C=&]R>2!L:7-T:6YG+@D)"2HO"B`@
M(&9O<B`H>#TP.R!X(#P@34%8251%35,[('@K*RD*("`@>PH@("`@("!F<V5L
M96-T+3YD:7)#;VYT96YT<UMX72`]("AC:&%R("HI3E5,3#L*("`@?0H*("`@
M+RH@1V5T('1H92!P<F5S96YT('=O<FMI;F<@9&ER96-T;W)Y+@D)"0DJ+PH@
M("!F<V5L96-T+3YP=V0)/2!G971C=V0@*$Y53$PL(#4Q,BD["@H@("`O*B!'
M970@=&AE(&-O;G1E;G1S(&]F('1H92!C=7)R96YT(&1I<F5C=&]R>2X)"0DJ
M+PH@("!S971#1$M&<V5L96-T1&ER0V]N=&5N=',@*&9S96QE8W0I.PH*("`@
M+RH@0W)E871E('1H92!E;G1R>2!F:65L9"!I;B!T:&4@<V5L96-T;W(N"0D)
M"2HO"B`@(&-H='EP95-T<FEN9R`](&-H87(R0VAT>7!E("AL86)E;"P@)FQA
M8F5L3&5N+"`F:G5N:RD["B`@(&9R965#:'1Y<&4@*&-H='EP95-T<FEN9RD[
M"B`@(&5N=')Y5VED=&@@/2!B;WA7:61T:"`M(&QA8F5L3&5N("T@,SL*("`@
M9G-E;&5C="T^96YT<GE&:65L9"`](&YE=T-$2T5N=')Y("AC9&MS8W)E96XL
M"@D)"0D)*&9S96QE8W0M/G=I;BDM/E]B96=X+`H)"0D)"2AF<V5L96-T+3YW
M:6XI+3Y?8F5G>2P*"0D)"0E,1494+"!L86)E;"P@9FEE;&1!='1R:6)U=&4L
M(&9I;&QE<D-H87(L(`H)"0D)"79-25A%1"P@96YT<GE7:61T:"P@,"P@-3$R
M+`H)"0D)"512544L($9!3%-%*3L*"B`@("\J($1E9FEN92!T:&4@8V%L;&)A
M8VMS(&9O<B!T:&4@96YT<GD@9FEE;&0N(`D)"2HO"B`@(&)I;F1#1$M/8FIE
M8W0@*'9%3E1262P@9G-E;&5C="T^96YT<GE&:65L9"P@2T597U50+"!F<V5L
M96-T4V-R;VQL57!#0BP@9G-E;&5C="D["B`@(&)I;F1#1$M/8FIE8W0@*'9%
M3E1262P@9G-E;&5C="T^96YT<GE&:65L9"P@2T597U!004=%+"!F<V5L96-T
M4&%G955P0T(L(&9S96QE8W0I.PH@("!B:6YD0T1+3V)J96-T("AV14Y44EDL
M(&9S96QE8W0M/F5N=')Y1FEE;&0L($M%65]$3U=.+"!F<V5L96-T4V-R;VQL
M1&]W;D-"+"!F<V5L96-T*3L*("`@8FEN9$-$2T]B:F5C="`H=D5.5%)9+"!F
M<V5L96-T+3YE;G1R>49I96QD+"!+15E?3E!!1T4L(&9S96QE8W1086=E1&]W
M;D-"+"!F<V5L96-T*3L*("`@8FEN9$-$2T]B:F5C="`H=D5.5%)9+"!F<V5L
M96-T+3YE;G1R>49I96QD+"!+15E?5$%"+"!C;VUP;&5T949I;&5N86UE0T(L
M(&9S96QE8W0I.PH@("!B:6YD0T1+3V)J96-T("AV14Y44EDL(&9S96QE8W0M
M/F5N=')Y1FEE;&0L("<>)RP@9&ES<&QA>49I;&5);F9O0T(L(&9S96QE8W0I
M.PH*("`@+RH@4'5T('1H92!C=7)R96YT('=O<FMI;F<@9&ER96-T;W)Y(&EN
M('1H92!E;G1R>2!F:65L9"X)"2HO"B`@('-E=$-$2T5N=')Y("AF<V5L96-T
M+3YE;G1R>49I96QD+"!F<V5L96-T+3YP=V0L(#`L(#4Q,BP@*&9S96QE8W0M
M/F5N=')Y1FEE;&0I+3YB;W@I.PH@"B`@("\J($-R96%T92!T:&4@<V-R;VQL
M:6YG(&QI<W0@:6X@=&AE('-E;&5C=&]R+@D)"2HO"B`@(&9S96QE8W0M/G-C
M<F]L;$9I96QD"3T@;F5W0T1+4V-R;VQL("AC9&MS8W)E96XL"@D)"2AF<V5L
M96-T+3YW:6XI+3Y?8F5G>"P*"0D)*&9S96QE8W0M/G=I;BDM/E]B96=Y("L@
M,BP*"0D)8F]X2&5I9VAT("T@,RP@8F]X5VED=&@L"@D)"2AC:&%R("HI3E5,
M3"P*"0D)9G-E;&5C="T^9&ER0V]N=&5N=',L(&9S96QE8W0M/F9I;&5#;W5N
M=&5R+`H)"0E.3TY534)%4E,L(&9S96QE8W0M/FAI9VAL:6=H="P@5%)512P@
M1D%,4T4I.PH*("`@+RH@1&\@=V4@=V%N="!A('-H861O=S\_/PD)"0D)"2HO
M"B`@(&EF("AS:&%D;W<I"B`@('L*("`@("`@9G-E;&5C="T^<VAA9&]W5VEN
M(#T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H+"!Y<&]S*S$L('AP;W,K
M,2D["B`@('T*"B`@("\J(%)E9VES=&5R('1H:7,@8F%B>2X)"0D)"0DJ+PH@
M("!R96=I<W1E<D-$2T]B:F5C="`H8V1K<V-R965N+"!V1E-%3$5#5"P@9G-E
M;&5C="D["@H@("`O*B!2971U<FX@=&AE(&9I;&4@<V5L96-T;W(@<&]I;G1E
M<BX)"0D)"2HO"B`@(')E='5R;B`H9G-E;&5C="D["GT*"B\J"B`J(%1H:7,@
M97)A<V5S('1H92!F:6QE('-E;&5C=&]R(&9R;VT@=&AE('-C<F5E;BX*("HO
M"G9O:60@97)A<V5#1$M&<V5L96-T("A#1$M&4T5,14-4("IF<V5L96-T*0I[
M"B`@(&5R87-E0T1+4V-R;VQL("AF<V5L96-T+3YS8W)O;&Q&:65L9"D["B`@
M(&5R87-E0T1+16YT<GD@*&9S96QE8W0M/F5N=')Y1FEE;&0I.PH@("!W97)A
M<V4@*&9S96QE8W0M/G=I;BD["GT*"B\J"B`J(%1H:7,@9')A=W,@=&AE(&9I
M;&4@<V5L96-T;W(@=VED9V5T+@H@*B\*=F]I9"!D<F%W0T1+1G-E;&5C="`H
M0T1+1E-%3$5#5"`J9G-E;&5C="P@8F]O;&5A;B!";W@I"GL*("`@+RH@17)A
M<V4@=&AE(&]L9"!F:6QE('-E;&5C=&]R+@D)"0D)*B\*("`@97)A<V5#1$M&
M<V5L96-T("AF<V5L96-T*3L*"B`@("\J($1R87<@:6X@=&AE('-H861O=R!I
M9B!W92!N965D('1O+@D)"0D)*B\*("`@:68@*&9S96QE8W0M/G-H861O=RD*
M("`@>PH@("`@("!D<F%W4VAA9&]W("AF<V5L96-T+3YS:&%D;W=7:6XI.PH@
M("!]"@H@("`O*B!$<F%W(&EN('1H92!S8W)O;&QI;F<@;&ES="X)"0D)"2HO
M"B`@(&1R87=#1$M38W)O;&P@*&9S96QE8W0M/G-C<F]L;$9I96QD+"!";W@I
M.PH*("`@+RH@1')A=R!I;B!T:&4@96YT<GD@9FEE;&0N"0D)"0D)*B\*("`@
M9')A=T-$2T5N=')Y("AF<V5L96-T+3YE;G1R>49I96QD+"!";W@I.PI]"@HO
M*@H@*B!4:&ES(&-R96%T97,@82!L:7-T(&]F('1H92!F:6QE<R!I;B!T:&4@
M8W5R<F5N="!D:7)E8W1O<GDN"B`J+PIV;VED('-E=$-$2T9S96QE8W1$:7)#
M;VYT96YT<R`H0T1+1E-%3$5#5"`J9G-E;&5C="D*>PH@("`O*B!$96-L87)E
M(&QO8V%L('9A<FEA8FQE<RX)"0D)"0DJ+PH@("!S=')U8W0@<W1A="!F:6QE
M4W1A=#L*("`@8VAA<B`J9&ER3&ES=%M-05A)5$5-4UT["B`@(&-H87(@=&5M
M<%LR,#!=+"!M;V1E.PH@("!I;G0@>"`](#`["@H@("`O*B!#;&5A;B!O=70@
M=&AE(&]L9"!D:7)E8W1O<GD@;&ES="X)"0D)"2HO"B`@(&9O<B`H>#TP.R!X
M(#P@9G-E;&5C="T^9FEL94-O=6YT97([('@K*RD*("`@>PH@("`@("!F<F5E
M0VAA<B`H9G-E;&5C="T^9&ER0V]N=&5N='-;>%TI.PH@("!]"@H@("`O*B!'
M970@=&AE(&1I<F5C=&]R>2!C;VYT96YT<RX)"0D)"2HO"B`@(&9S96QE8W0M
M/F9I;&5#;W5N=&5R(#T@9V5T1&ER96-T;W)Y0V]N=&5N=',@*&9S96QE8W0M
M/G!W9"P@9&ER3&ES="P@34%8251%35,I.PH*("`@+RH@4V5T('1H92!P<F]P
M97)T:65S(&]F('1H92!F:6QE<RX)"0D)"2HO"B`@(&9O<B`H>#TP.R!X(#P@
M9G-E;&5C="T^9FEL94-O=6YT97([('@K*RD*("`@>PH@("`@("`O*B!3=&%T
M('1H92!F:6QE+@D)"0D)"0DJ+PH@("`@("!L<W1A="`H9&ER3&ES=%MX72P@
M)F9I;&53=&%T*3L*"B`@("`@("\J($-H96-K('1H92!M;V1E+@D)"0D)"2HO
M"B`@("`@(&UO9&4@/2`G("<["B`@("`@(&EF("@H*&9I;&53=&%T+G-T7VUO
M9&4@)B!37TE855-2*2`A/2`P*2!\?`H)"2@H9FEL95-T870N<W1?;6]D92`F
M(%-?25A'4E`I("$](#`I('Q\"@D)*"AF:6QE4W1A="YS=%]M;V1E("8@4U])
M6$]42"D@(3T@,"DI"B`@("`@('L*("`@("`@("`@(&UO9&4@/2`G*B<["B`@
M("`@('T*"B`@("`@("\J($-R96%T92!T:&4@9FEL96YA;64N"0D)"0D)*B\*
M("`@("`@:68@*%-?25-,3DL@*&9I;&53=&%T+G-T7VUO9&4I*0H@("`@("![
M"B`@("`@("`@('-P<FEN=&8@*'1E;7`L("(E<T`B+"!D:7),:7-T6WA=*3L*
M("`@("`@("`@9G-E;&5C="T^9&ER0V]N=&5N='-;>%T@/2!C;W!Y0VAA<B`H
M=&5M<"D["B`@("`@('T*("`@("`@96QS92!I9B`H4U])4U-/0TL@*&9I;&53
M=&%T+G-T7VUO9&4I*0H@("`@("!["B`@("`@("`@('-P<FEN=&8@*'1E;7`L
M("(E<R8B+"!D:7),:7-T6WA=*3L*("`@("`@("`@9G-E;&5C="T^9&ER0V]N
M=&5N='-;>%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@('T*("`@("`@96QS
M92!I9B`H4U])4U)%1RAF:6QE4W1A="YS=%]M;V1E*2D*("`@("`@>PH@("`@
M("`@("!S<')I;G1F("AT96UP+"`B)7,E<R5C(BP@9G-E;&5C="T^9FEL94%T
M=')I8G5T92P@9&ER3&ES=%MX72P@;6]D92D["B`@("`@("`@(&9S96QE8W0M
M/F1I<D-O;G1E;G1S6WA=(#T@8V]P>4-H87(@*'1E;7`I.PH@("`@("!]"B`@
M("`@(&5L<V4@:68@*%-?25-$25(H9FEL95-T870N<W1?;6]D92DI"B`@("`@
M('L*("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(B5S)7,O(BP@9G-E;&5C="T^
M9&ER071T<FEB=71E+"!D:7),:7-T6WA=*3L*("`@("`@("`@9G-E;&5C="T^
M9&ER0V]N=&5N='-;>%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@('T*("`@
M("`@96QS90H@("`@("!["B`@("`@("`@('-P<FEN=&8@*'1E;7`L("(E<R5C
M(BP@9&ER3&ES=%MX72P@;6]D92D["B`@("`@("`@(&9S96QE8W0M/F1I<D-O
M;G1E;G1S6WA=(#T@8V]P>4-H87(@*'1E;7`I.PH@("`@("!]"@H@("`@("`O
M*B!&<F5E('5P('1H:7,@<&EE8V4@;V8@;65M;W)Y+@D)"0D)*B\*("`@("`@
M9G)E94-H87(@*&1I<DQI<W1;>%TI.PH@("!]"GT*"B\J(`H@*B!4:&ES(&UE
M86YS('EO=2!W86YT('1O('5S92!T:&4@9VEV96X@9FEL92!S96QE8W1O<BX@
M270@=&%K97,@:6YP=70*("H@9G)O;2!T:&4@:V5Y8F]A<F0L(&%N9"!W:&5N
M(&ET<R!D;VYE+"!I="!F:6QL<R!T:&4@96YT<GD@:6YF;PH@*B!E;&5M96YT
M(&]F('1H92!S=')U8W1U<F4@=VET:"!W:&%T('=A<R!T>7!E9"X*("HO"F-H
M87(@*F%C=&EV871E0T1+1G-E;&5C="`H0T1+1E-%3$5#5"`J9G-E;&5C="P@
M8VAT>7!E("IA8W1I;VYS*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B
M;&5S+@D)"0D)"2HO"B`@(&-H='EP92!I;G!U=`D]("AC:'1Y<&4I3E5,3#L*
M("`@8VAA<B`J<F5T"3T@*&-H87(@*BE.54Q,.PH@("`*("`@+RH@1')A=R!T
M:&4@=VED9V5T+@D)"0D)"0DJ+PH@("!D<F%W0T1+1G-E;&5C="`H9G-E;&5C
M="P@9G-E;&5C="T^8F]X*3L*"B`@("\J(%1U<FX@=&AE(&-U<G-O<B!B86-K
M('1O(&YO<FUA;"X)"0D)"2HO"B`@(&-U<G-?<V5T("@Q*3L*"B`@("\J($-H
M96-K(&EF("=A8W1I;VYS)R!I<R!.54Q,+@D)"0D)*B\*("`@:68@*&%C=&EO
M;G,@/3T@*&-H='EP92`J*4Y53$PI"B`@('L*("`@("`@9F]R("@[.RD*("`@
M("`@>PH@("`@("`@("`O*B!'970@=&AE(&EN<'5T+@D)"0D)"2HO"B`@("`@
M("`@(&EN<'5T(#T@=V=E=&-H("AF<V5L96-T+3YE;G1R>49I96QD+3YF:65L
M9"D["@H@("`@("`@("`O*B!);FIE8W0@=&AE(&-H87)A8W1E<B!I;G1O('1H
M92!W:61G970N"0D)*B\*("`@("`@("`@<F5T(#T@:6YJ96-T0T1+1G-E;&5C
M="`H9G-E;&5C="P@:6YP=70I.PH@("`@("`@("!I9B`H9G-E;&5C="T^97AI
M=%1Y<&4@(3T@=D5!4DQ97T58250I"B`@("`@("`@('L*("`@("`@("`@("`@
M<F5T=7)N(')E=#L*("`@("`@("`@?0H@("`@("!]"B`@('T*("`@96QS90H@
M("!["B`@("`@(&EN="!L96YG=&@@/2!C:&QE;B`H86-T:6]N<RD["B`@("`@
M(&EN="!X(#TP.PH*("`@("`@+RH@26YJ96-T(&5A8V@@8VAA<F%C=&5R(&]N
M92!A="!A('1I;64N"0D)"2HO"B`@("`@(&9O<B`H>#TP.R!X(#P@;&5N9W1H
M.R!X*RLI"B`@("`@('L*("`@("`@("`@<F5T(#T@:6YJ96-T0T1+1G-E;&5C
M="`H9G-E;&5C="P@86-T:6]N<UMX72D["B`@("`@("`@(&EF("AF<V5L96-T
M+3YE>&ET5'EP92`A/2!V14%23%E?15A)5"D*("`@("`@("`@>PH@("`@("`@
M("`@("!R971U<FX@<F5T.PH@("`@("`@("!]"B`@("`@('T*("`@?0H*("`@
M+RH@4V5T('1H92!E>&ET('1Y<&4@86YD(&5X:70N"0D)"0DJ+PH@("!F<V5L
M96-T+3YE>&ET5'EP92`]('9%05),65]%6$E4.PH@("!R971U<FX@*&-H87(@
M*BE.54Q,.PI]"@HO*@H@*B!4:&ES(&EN:F5C=',@82!S:6YG;&4@8VAA<F%C
M=&5R(&EN=&\@=&AE(&9I;&4@<V5L96-T;W(N"B`J+PIC:&%R("II;FIE8W1#
M1$M&<V5L96-T("A#1$M&4T5,14-4("IF<V5L96-T+"!C:'1Y<&4@:6YP=70I
M"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@
M8VAA<B`)*F9I;&5N86UE.PH@("!B;V]L96%N"69I;&4["@H@("`O*B!,970@
M=&AE('5S97(@<&QA>2X)"0D)"0DJ+PH@("!F:6QE;F%M92`](&EN:F5C=$-$
M2T5N=')Y("AF<V5L96-T+3YE;G1R>49I96QD+"!I;G!U="D["@H@("`O*B!#
M;W!Y('1H92!E;G1R>2!F:65L9"!E>&ET5'EP92!T;R!T:&4@9FEL97-E;&5C
M=&]R+@D)*B\*("`@9G-E;&5C="T^97AI=%1Y<&4@/2!F<V5L96-T+3YE;G1R
M>49I96QD+3YE>&ET5'EP93L*"B`@("\J($EF('=E(&5X:71E9"!E87)L>2P@
M;6%K92!S=7)E('=E(&1O;B=T(&EN=&5R<')E="!I="!A<R!A(&9I;&4N"2HO
M"B`@(&EF("AF<V5L96-T+3YE>&ET5'EP92`]/2!V14%23%E?15A)5"D*("`@
M>PH@("`@("!R971U<FX@*&-H87(@*BE.54Q,.PH@("!]"@H@("`O*B!#86X@
M=V4@8VAA;F=E(&EN=&\@=&AE(&1I<F5T8V]R>3\_/S\)"0D)*B\*("`@9FEL
M92`](&-H9&ER("AF:6QE;F%M92D["B`@(&-H9&ER("AF<V5L96-T+3YP=V0I
M.PH*("`@+RH@268@:70G<R!N;W0@82!D:7)E8W1O<GDL(')E='5R;B!T:&4@
M9FEL96YA;64N"0D)*B\*("`@:68@*&9I;&4I"B`@('L*("`@("`@+RH@270G
M<R!A(')E9W5L87(@9FEL92P@8W)E871E('1H92!F=6QL('!A=&@N"0D)*B\*
M("`@("`@9G-E;&5C="T^<&%T:&YA;64@/2!C;W!Y0VAA<B`H9FEL96YA;64I
M.PH@("`@("`*("`@("`@+RH@4F5T=7)N('1H92!C;VUP;&5T92!P871H;F%M
M92X)"0D)"2HO"B`@("`@(')E='5R;B`H9G-E;&5C="T^<&%T:&YA;64I.PH@
M("!]"B`@(&5L<V4*("`@>PH@("`@("`O*B!3970@=&AE(&9I;&4@<V5L96-T
M;W(@:6YF;W)M871I;VXN"0D)"2HO"B`@("`@('-E=$-$2T9S96QE8W0@*&9S
M96QE8W0L(&9I;&5N86UE+`H)"0EF<V5L96-T+3YF:65L9$%T=')I8G5T92P@
M9G-E;&5C="T^9FEL;&5R0VAA<F%C=&5R+`H)"0EF<V5L96-T+3YH:6=H;&EG
M:'0L"@D)"69S96QE8W0M/F1I<D%T=')I8G5T92P@9G-E;&5C="T^9FEL94%T
M=')I8G5T92P@"@D)"69S96QE8W0M/FQI;FM!='1R:6)U=&4L(&9S96QE8W0M
M/G-O8VM!='1R:6)U=&4L(`H)"0EF<V5L96-T+3YB;W@I.PH*("`@("`@+RH@
M4F5D<F%W('1H92!S8W)O;&QI;F<@;&ES="X)"0D)"2HO"B`@("`@(&1R87=#
M1$M38W)O;&P@*&9S96QE8W0M/G-C<F]L;$9I96QD+"!F<V5L96-T+3YS8W)O
M;&Q&:65L9"T^8F]X*3L*("`@?0H*("`@+RH@4V5T('1H92!E>&ET('1Y<&4@
M86YD(')E='5R;B!A(&YU;&P@<&]I;G1E<BX)"0DJ+PH@("!F<V5L96-T+3YE
M>&ET5'EP92`]('9%05),65]%6$E4.PH@("!R971U<FX@*&-H87(@*BE.54Q,
M.PI]"@HO*B`*("H@5&AI<R!I<R!A(&-A;&QB86-K(&9R;VT@=&AE('-C<F]L
M;&EN9R!L:7-T('1O(&%C=&EV871E('1H92!E;G1R>2!F:65L9"X*("HO"G9O
M:60@9V5T1&ER3F%M92`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I9"`J
M;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I["B`@("\J($1E8VQA<F4@;&]C
M86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@($-$2T9314Q%0U0)*F9S96QE8W0)
M/2`H0T1+1E-%3$5#5"`J*6-L:65N=$1A=&$["B`@($-$2T5.5%)9"2IF96YT
M<GD)"3T@*$-$2T5.5%)9("HI9G-E;&5C="T^96YT<GE&:65L9#L*("`@<W1R
M=6-T('-T870)9FEL95-T870["B`@(&-H87()"2ID:7)E8W1O<GD["@H@("`O
M*B!!8W1I=F%T92!T:&4@96YT<GD@9FEE;&0N"0D)"0D)*B\*("`@:V5Y<&%D
M("AF96YT<GDM/F9I96QD+"!44E5%*3L*("`@9&ER96-T;W)Y(#T@8V]P>4-H
M87(@*&%C=&EV871E0T1+16YT<GD@*&9E;G1R>2P@*&-H='EP92`J*4Y53$PI
M*3L*"B`@("\J($-H96-K('1H92!D:7)E8W1O<GDO9FEL96YA;64)"0D)"2HO
M"B`@(&QS=&%T("AD:7)E8W1O<GDL("9F:6QE4W1A="D["B`@(`H@("`O*B!3
M970@=&AE(&9I;&4@<V5L96-T;W(@:6YF;W)M871I;VXN"0D)"2HO"B`@('-E
M=$-$2T9S96QE8W0@*&9S96QE8W0L(&1I<F5C=&]R>2P*"0D)9G-E;&5C="T^
M9FEE;&1!='1R:6)U=&4L(&9S96QE8W0M/F9I;&QE<D-H87)A8W1E<BP@"B`@
M("`@("`@("`@("`@("`@("`@("`@(&9S96QE8W0M/FAI9VAL:6=H="P*"0D)
M9G-E;&5C="T^9&ER071T<FEB=71E+"!F<V5L96-T+3YF:6QE071T<FEB=71E
M+"`*"0D)9G-E;&5C="T^;&EN:T%T=')I8G5T92P@9G-E;&5C="T^<V]C:T%T
M=')I8G5T92P@"@D)"69S96QE8W0M/F)O>"D["@H@("`O*B!#;&5A;B!U<"!A
M;GD@;65M;W)Y('5S960N"0D)"0D)*B\*("`@9G)E92`H9&ER96-T;W)Y*3L*
M?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!S971S('1H92!I;F9O<FUA=&EO;B!I
M;G-I9&4@=&AE(&9I;&4@<V5L96-T;W(N"B`J+PIV;VED('-E=$-$2T9S96QE
M8W0@*$-$2T9314Q%0U0@*F9S96QE8W0L(&-H87(@*F1I<F5C=&]R>2P@8VAT
M>7!E(&9I96QD071T<FEB+"!C:'1Y<&4@9FEL;&5R+"!C:'1Y<&4@:&EG:&QI
M9VAT+"!C:&%R("ID:7)!='1R:6)U=&4L(&-H87(@*F9I;&5!='1R:6)U=&4L
M(&-H87(@*FQI;FM!='1R:6)U=&4L(&-H87(@*G-O8VM!='1R:6)U=&4L(&)O
M;VQE86X@8F]X*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)
M"0D)"2HO"B`@($-$2U-#4D],3"`J9G-C<F]L;"`](&9S96QE8W0M/G-C<F]L
M;$9I96QD.PH@("!#1$M%3E1262`J9F5N=')Y(#T@9G-E;&5C="T^96YT<GE&
M:65L9#L*("`@8VAA<B`J;65S9ULQ,%TL('1E;7!;,3`P73L*"B`@("\J($ME
M97`@=&AE(&EN9F\@<V5N="!T;R!U<RX)"0D)"0DJ+PH@("!F<V5L96-T+3YF
M:65L9$%T=')I8G5T92`](&9I96QD071T<FEB.PH@("!F<V5L96-T+3YF:6QL
M97)#:&%R86-T97(@/2!F:6QL97(["B`@(&9S96QE8W0M/FAI9VAL:6=H="`]
M(&AI9VAL:6=H=#L*"B`@("\J($-H86YG92!D:7)E8W1O<FEE<RX)"0D)"0DJ
M+PH@("!I9B`H8VAD:7(@*&1I<F5C=&]R>2DI"B`@('L*("`@("`@+RH@0F5E
M<"!A="!T:&5M+@D)"0D)"0DJ+PH@("`@("!"965P*"D["@H@("`@("`O*B!#
M;W5L9&XG="!G970@:6YT;R!T:&4@9&ER96-T;W)Y+"!P;W`@=7`@82!L:71T
M;&4@;65S<V%G92X)*B\*("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/D-O=6QD
M(&YO="!C:&%N9V4@:6YT;R`E<R(L(&1I<F5C=&]R>2D["B`@("`@(&UE<V=;
M,%T@/2!C;W!Y0VAA<B`H=&5M<"D["@HC:69D968@3D]35%)%4E(*("`@("`@
M<W!R:6YT9B`H=&5M<"P@(CQ#/CPO53Y5;FMN;W=N(')E87-O;BXB*3L*("`@
M("`@;65S9ULQ72`](&-O<'E#:&%R("AT96UP*3L*(V5L<V4*("`@("`@<W!R
M:6YT9B`H=&5M<"P@(CQ#/CPO53XE<R(L('-T<F5R<F]R*&5R<FYO*2D["B`@
M("`@(&UE<V=;,5T@/2!C;W!Y0VAA<B`H=&5M<"D["B-E;F1I9@H*("`@("`@
M;65S9ULR72`]("(@(CL*("`@("`@;65S9ULS72`]("(\0SY0<F5S<R!!;GD@
M2V5Y(%1O($-O;G1I;G5E+B(["B`@("`@(`H@("`@("`O*B!0;W`@57`@82!M
M97-S86=E+@D)"0D)"2HO"B`@("`@('!O<'5P3&%B96P@*&9S96QE8W0M/G-C
M<F5E;BP@;65S9RP@-"D["@H@("`@("`O*B!#;&5A;B!U<"!S;VUE(&UE;6]R
M>2X)"0D)"0DJ+PH@("`@("!F<F5E0VAA<B`H;65S9ULP72D["B`@("`@(&9R
M965#:&%R("AM97-G6S%=*3L*"B`@("`@("\J($=E="!O=70@;V8@:&5R92XN
M+@D)"0D)"2HO"B`@("`@(')E='5R;CL*("`@?0H*("`@+RH*("`@("H@268@
M=&AE(&EN9F]R;6%T:6]N(&-O;6EN9R!I;B!I<R!T:&4@<V%M92!A<R!T:&4@
M:6YF;W)M871I;VX*("`@("H@=&AA="!I<R!A;')E861Y('1H97)E+"!T:&5R
M92!I<R!N;R!N965D('1O(&1E<W1R;WD@:70N"B`@("`J+PH@("!I9B`H9G-E
M;&5C="T^<'=D("$](&1I<F5C=&]R>2D*("`@>PH@("`@("`O*B!296UO=F4@
M=&AE(&]L9"!P;VEN=&5R"6%N9"!S970@=&AE(&YE=R!V86QU92X)"0DJ+PH@
M("`@("!F<F5E0VAA<B`H9G-E;&5C="T^<'=D*3L*("`@("`@9G-E;&5C="T^
M<'=D(#T@9V5T8W=D("A.54Q,+"`U,3(I.PH@("!]"B`@(&EF("AF<V5L96-T
M+3YF:6QE071T<FEB=71E("$](&9I;&5!='1R:6)U=&4I"B`@('L*("`@("`@
M+RH@4F5M;W9E('1H92!O;&0@<&]I;G1E<@EA;F0@<V5T('1H92!N97<@=F%L
M=64N"0D)*B\*("`@("`@9G)E94-H87(@*&9S96QE8W0M/F9I;&5!='1R:6)U
M=&4I.PH@("`@("!F<V5L96-T+3YF:6QE071T<FEB=71E(#T@8V]P>4-H87(@
M*&9I;&5!='1R:6)U=&4I.PH@("`@("!F<V5L96-T+3YF:6QE071T<FEB=71E
M(#T@8V]P>4-H87(@*&9I;&5!='1R:6)U=&4I.PH@("!]"B`@(&EF("AF<V5L
M96-T+3YD:7)!='1R:6)U=&4@(3T@9&ER071T<FEB=71E*0H@("!["B`@("`@
M("\J(%)E;6]V92!T:&4@;VQD('!O:6YT97()86YD('-E="!T:&4@;F5W('9A
M;'5E+@D)"2HO"B`@("`@(&9R965#:&%R("AF<V5L96-T+3YD:7)!='1R:6)U
M=&4I.PH@("`@("!F<V5L96-T+3YD:7)!='1R:6)U=&4@/2!C;W!Y0VAA<B`H
M9&ER071T<FEB=71E*3L*("`@?0H@("!I9B`H9G-E;&5C="T^;&EN:T%T=')I
M8G5T92`A/2!L:6YK071T<FEB=71E*0H@("!["B`@("`@("\J(%)E;6]V92!T
M:&4@;VQD('!O:6YT97()86YD('-E="!T:&4@;F5W('9A;'5E+@D)"2HO"B`@
M("`@(&9R965#:&%R("AF<V5L96-T+3YL:6YK071T<FEB=71E*3L*("`@("`@
M9G-E;&5C="T^;&EN:T%T=')I8G5T92`](&-O<'E#:&%R("AL:6YK071T<FEB
M=71E*3L*("`@?0H@("!I9B`H9G-E;&5C="T^<V]C:T%T=')I8G5T92`A/2!S
M;V-K071T<FEB=71E*0H@("!["B`@("`@("\J(%)E;6]V92!T:&4@;VQD('!O
M:6YT97()86YD('-E="!T:&4@;F5W('9A;'5E+@D)"2HO"B`@("`@(&9R965#
M:&%R("AF<V5L96-T+3YS;V-K071T<FEB=71E*3L*("`@("`@9G-E;&5C="T^
M<V]C:T%T=')I8G5T92`](&-O<'E#:&%R("AS;V-K071T<FEB=71E*3L*("`@
M?0H@("`*("`@+RH@4V5T('1H92!C;VYT96YT<R!O9B!T:&4@96YT<GD@9FEE
M;&0N"0D)"2HO"B`@('-E=$-$2T5N=')Y("AF96YT<GDL(&9S96QE8W0M/G!W
M9"P@,"P@-3$R+"!F96YT<GDM/F)O>"D["B`@(&1R87=#1$M%;G1R>2`H9F5N
M=')Y+"!F96YT<GDM/F)O>"D["@H@("`O*B!'970@=&AE(&1I<F5C=&]R>2!C
M;VYT96YT<RX)"0D)"2HO"B`@('-E=$-$2T9S96QE8W1$:7)#;VYT96YT<R`H
M9G-E;&5C="D["@H@("`O*B!3970@=&AE('9A;'5E<R!I;B!T:&4@<V-R;VQL
M:6YG(&QI<W0N"0D)"2HO"B`@('-E=$-$2U-C<F]L;"`H9G-C<F]L;"P*"0EF
M<V5L96-T+3YD:7)#;VYT96YT<RP@9G-E;&5C="T^9FEL94-O=6YT97(L"@D)
M1D%,4T4L(&9S8W)O;&PM/FAI9VAL:6=H="P@9G-C<F]L;"T^8F]X*3L*?0H*
M+RH*("H@5&AI<R!D97-T<F]Y<R!T:&4@9FEL92!S96QE8W1O<BX)"B`J+PIV
M;VED(&1E<W1R;WE#1$M&<V5L96-T("A#1$M&4T5,14-4("IF<V5L96-T*0I[
M"B`@(&EN="!X.PH*("`@+RH@17)A<V4@=&AE(&9I;&4@<V5L96-T;W(N"0D)
M"0D)*B\*("`@97)A<V5#1$M&<V5L96-T("AF<V5L96-T*3L*"B`@("\J($9R
M964@=7`@=&AE(&-H87)A8W1E<B!P;VEN=&5R<RX)"0D)"2HO"B`@(&9R965#
M:&%R("AF<V5L96-T+3YP=V0I.PH@("!F<F5E0VAA<B`H9G-E;&5C="T^<&%T
M:&YA;64I.PH@("!F<F5E0VAA<B`H9G-E;&5C="T^9&ER071T<FEB=71E*3L*
M("`@9G)E94-H87(@*&9S96QE8W0M/F9I;&5!='1R:6)U=&4I.PH@("!F<F5E
M0VAA<B`H9G-E;&5C="T^;&EN:T%T=')I8G5T92D["B`@(&9R965#:&%R("AF
M<V5L96-T+3YS;V-K071T<FEB=71E*3L*("`@9F]R("AX/3`[('@@/"!F<V5L
M96-T+3YF:6QE0V]U;G1E<CL@>"LK*0H@("!["B`@("`@(&9R965#:&%R("AF
M<V5L96-T+3YD:7)#;VYT96YT<UMX72D["B`@('T*"B`@("\J($1E<W1R;WD@
M=&AE(&]T:&5R($-D:R!O8FIE8W1S+@D)"0D)*B\*("`@9&5S=')O>4-$2T5N
M=')Y("AF<V5L96-T+3YE;G1R>49I96QD*3L*("`@9&5S=')O>4-$2U-C<F]L
M;"`H9G-E;&5C="T^<V-R;VQL1FEE;&0I.PH@"B`@("\J($9R964@=7`@=&AE
M('=I;F1O=R!P;VEN=&5R<RX@"0D)"0DJ+PH@("!I9B`H9G-E;&5C="T^<VAA
M9&]W*0H@("!["B`@("`@(&1E;'=I;B`H9G-E;&5C="T^<VAA9&]W5VEN*3L*
M("`@?0H@("!D96QW:6X@*&9S96QE8W0M/G=I;BD["@H@("`O*B!5;G)E9VES
M=&5R('1H92!O8FIE8W0N"0D)"0D)*B\*("`@=6YR96=I<W1E<D-$2T]B:F5C
M="`H=D9314Q%0U0L(&9S96QE8W0I.PH*("`@+RH@1G)E92!U<"!T:&4@;V)J
M96-T('!O:6YT97(N"0D)"0DJ+PH@("!F<F5E("AF<V5L96-T*3L*?0H*+RH*
M("HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ"B`J($-A;&QB86-K
M(&9U;F-T:6]N<RX*("HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M"B`J+PH*+RH@"B`J(%1H:7,@:7,@82!C86QL8F%C:R!T;R!T:&4@<V-R;VQL
M:6YG(&QI<W0@=VAI8V@@9&ES<&QA>7,@:6YF;W)M871I;VX*("H@86)O=70@
M=&AE(&-U<G)E;G0@9FEL92X@*&%N9"!T:&4@=VAO;&4@9&ER96-T;W)Y(&%S
M('=E;&PI"B`J+PIV;VED(&1I<W!L87E&:6QE26YF;T-"("A%3V)J96-T5'EP
M92!O8FIE8W14>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I
M"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@
M0T1+14Y44ED)"2IE;G1R>0D)/2`H0T1+14Y44ED@*BEO8FIE8W0["B`@($-$
M2T9314Q%0U0)"2IF<V5L96-T"3T@*$-$2T9314Q%0U0@*BEC;&EE;G1$871A
M.PH@("!#1$M,04)%3`D)*FEN9F],86)E;#L*("`@<W1R=6-T('-T870)"69I
M;&53=&%T.PH@("!S=')U8W0@<&%S<W=D"2IP=T5N=#L*("`@<W1R=6-T(&=R
M;W5P"0DJ9W)%;G0["B`@(&-H87()"0DJ9FEL96YA;64["B`@(&-H87()"0DJ
M9FEL971Y<&4["B`@(&-H87(@"0DJ;65S9ULQ,%T["B`@(&-H87()"0ET96UP
M6S$P,%T["B`@(&-H87()"0ES=')I;F=-;V1E6S$U73L*("`@:6YT"0D);&5N
M.PH@("!I;G0)"0EI;G1-;V1E.PH*("`@+RH@1V5T('1H92!F:6QE(&YA;64N
M"0D)"0D)*B\*("`@9FEL96YA;64)/2!F<V5L96-T+3YE;G1R>49I96QD+3YI
M;F9O.PH*("`@+RH@1V5T('-P96-I9FEC(&EN9F]R;6%T:6]N(&%B;W5T('1H
M92!F:6QE<RX)"0D)*B\*("`@;'-T870@*&9I;&5N86UE+"`F9FEL95-T870I
M.PH@("`*("`@+RH@1&5T97)M:6YE('1H92!F:6QE('1Y<&4N"0D)"0D)*B\*
M("`@:68@*%-?25-,3DL@*&9I;&53=&%T+G-T7VUO9&4I*0H@("!["B`@("`@
M(&9I;&5T>7!E(#T@(E-Y;6)O;&EC($QI;FLB.PH@("!]"B`@(&5L<V4@:68@
M*%-?25-33T-+("AF:6QE4W1A="YS=%]M;V1E*2D*("`@>PH@("`@("!F:6QE
M='EP92`](")3;V-K970B.PH@("!]"B`@(&5L<V4@:68@*%-?25-214<H9FEL
M95-T870N<W1?;6]D92DI"B`@('L*("`@("`@9FEL971Y<&4@/2`B4F5G=6QA
M<B!&:6QE(CL*("`@?0H@("!E;'-E(&EF("A37TE31$E2*&9I;&53=&%T+G-T
M7VUO9&4I*0H@("!["B`@("`@(&9I;&5T>7!E(#T@(D1I<F5C=&]R>2(["B`@
M('T*("`@96QS92!I9B`H4U])4T-(4BAF:6QE4W1A="YS=%]M;V1E*2D*("`@
M>PH@("`@("!F:6QE='EP92`](")#:&%R86-T97(@1&5V:6-E(CL*("`@?0H@
M("!E;'-E(&EF("A37TE30DQ+*&9I;&53=&%T+G-T7VUO9&4I*0H@("!["B`@
M("`@(&9I;&5T>7!E(#T@(D)L;V-K($1E=FEC92(["B`@('T*("`@96QS92!I
M9B`H4U])4T9)1D\H9FEL95-T870N<W1?;6]D92DI"B`@('L*("`@("`@9FEL
M971Y<&4@/2`B1DE&3R!$979I8V4B.PH@("!]"B`@(&5L<V4*("`@>PH@("`@
M("!F:6QE='EP92`](")5;FMN;W=N(CL*("`@?0H*("`@+RH@1V5T('1H92!U
M<V5R(&YA;64@86YD(&=R;W5P(&YA;64N"0D)"0DJ+PH@("!P=T5N="`](&=E
M='!W=6ED("AF:6QE4W1A="YS=%]U:60I.PH@("!G<D5N="`](&=E=&=R9VED
M("AF:6QE4W1A="YS=%]G:60I.PH*("`@+RH@0V]N=F5R="!T:&4@;6]D95]T
M('1Y<&4@=&\@8F]T:"!S=')I;F<@86YD(&EN="X)"0DJ+PH@("!I;G1-;V1E
M(#T@;6]D93)#:&%R("AS=')I;F=-;V1E+"!F:6QE4W1A="YS=%]M;V1E*3L*
M"B`@("\J($-R96%T92!T:&4@;65S<V%G92X)"0D)"0DJ+PH@("!S<')I;G1F
M("AT96UP+"`B1&ER96-T;W)Y("`Z(#PO53XE<R(L(&9S96QE8W0M/G!W9"D[
M"B`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("!S<')I;G1F("AT
M96UP+"`B1FEL96YA;64@("`Z(#PO53XE<R(L(&9I;&5N86UE*3L*("`@;65S
M9ULQ72`](&-O<'E#:&%R("AT96UP*3L*"B`@('-P<FEN=&8@*'1E;7`L(")/
M=VYE<B`@("`@(#H@/"]5/B5S/"%5/B`H)60I(BP@<'=%;G0M/G!W7VYA;64L
M(&9I;&53=&%T+G-T7W5I9"D["B`@(&UE<V=;,ET@/2!C;W!Y0VAA<B`H=&5M
M<"D["@H@("!S<')I;G1F("AT96UP+"`B1W)O=7`@("`@("`Z(#PO53XE<SPA
M53X@*"5D*2(L(&=R16YT+3YG<E]N86UE+"!F:6QE4W1A="YS=%]G:60I.PH@
M("!M97-G6S-=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@<W!R:6YT9B`H=&5M
M<"P@(E!E<FUI<W-I;VYS.B`\+U4^)7,\(54^("@E9"DB+"!S=')I;F=-;V1E
M+"!I;G1-;V1E*3L*("`@;65S9ULT72`](&-O<'E#:&%R("AT96UP*3L*"B`@
M('-P<FEN=&8@*'1E;7`L(")3:7IE("`@("`@(#H@/"]5/B5L9#PA53X@8GET
M97,B+"!F:6QE4W1A="YS=%]S:7IE*3L*("`@;65S9ULU72`](&-O<'E#:&%R
M("AT96UP*3L*"B`@('-P<FEN=&8@*'1E;7`L("),87-T($%C8V5S<SH@/"]5
M/B5S(BP@8W1I;64@*"9F:6QE4W1A="YS=%]A=&EM92DI.PH@("!L96X@/2`H
M:6YT*7-T<FQE;B`H=&5M<"D["B`@('1E;7!;;&5N72`]("=<,"<[('1E;7!;
M;&5N+3%=(#T@)UPP)SL*("`@;65S9ULV72`](&-O<'E#:&%R("AT96UP*3L*
M"B`@('-P<FEN=&8@*'1E;7`L("),87-T($-H86YG93H@/"]5/B5S(BP@8W1I
M;64@*"9F:6QE4W1A="YS=%]C=&EM92DI.PH@("!L96X@/2`H:6YT*7-T<FQE
M;B`H=&5M<"D["B`@('1E;7!;;&5N72`]("=<,"<[('1E;7!;;&5N+3%=(#T@
M)UPP)SL*("`@;65S9ULW72`](&-O<'E#:&%R("AT96UP*3L*"B`@('-P<FEN
M=&8@*'1E;7`L(")&:6QE(%1Y<&4@(#H@/"]5/B5S(BP@9FEL971Y<&4I.PH@
M("!M97-G6SA=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@+RH@0W)E871E('1H
M92!P;W`@=7`@;&%B96PN"0D)"0D)*B\*("`@:6YF;TQA8F5L(#T@;F5W0T1+
M3&%B96P@*&5N=')Y+3YS8W)E96XL($-%3E1%4BP@0T5.5$52+"`*"0D)"6UE
M<V<L(#DL(%12544L($9!3%-%*3L*("`@9')A=T-$2TQA8F5L("AI;F9O3&%B
M96PL(%12544I.PH@("!W9V5T8V@@*&EN9F],86)E;"T^=VEN*3L*"B`@("\J
M($-L96%N('5P('-O;64@;65M;W)Y+@D)"0D)"2HO"B`@(&1E<W1R;WE#1$M,
M86)E;"`H:6YF;TQA8F5L*3L*("`@9G)E94-H87(@*&UE<V=;,%TI.R!F<F5E
M0VAA<B`H;65S9ULQ72D["B`@(&9R965#:&%R("AM97-G6S)=*3L@9G)E94-H
M87(@*&UE<V=;,UTI.PH@("!F<F5E0VAA<B`H;65S9ULT72D[(&9R965#:&%R
M("AM97-G6S5=*3L*("`@9G)E94-H87(@*&UE<V=;-ETI.R!F<F5E0VAA<B`H
M;65S9ULW72D["B`@(&9R965#:&%R("AM97-G6SA=*3L*"B`@("\J(%)E9')A
M=R!T:&4@9FEL92!S96QE8W1O<BX)"0D)"0DJ+PH@("!D<F%W0T1+1G-E;&5C
M="`H9G-E;&5C="P@9G-E;&5C="T^8F]X*3L*?0H*+RH*("H@5&AI<R!T:7)E
M<R!T;R!C;VUP;&5T92!T:&4@9FEL96YA;64N"B`J+PIV;VED(&-O;7!L971E
M1FEL96YA;65#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I9"`J;V)J
M96-T+"!V;VED("IC;&EE;G1$871A*0I["B`@($-$2T9314Q%0U0@*F9S96QE
M8W0)/2`H0T1+1E-%3$5#5"`J*6-L:65N=$1A=&$["B`@($-$2U-#4D],3"`J
M<V-R;VQL"3T@*$-$2U-#4D],3"HI9G-E;&5C="T^<V-R;VQL1FEE;&0["B`@
M($-$2T5.5%)9("IE;G1R>0D]("A#1$M%3E1262HI9G-E;&5C="T^96YT<GE&
M:65L9#L*("`@8VAA<B`J=V]R9`D)/2!B87-E3F%M92`H96YT<GDM/FEN9F\I
M.PH@("!I;G0@=V]R9$QE;F=T:`D]("AI;G0I<W1R;&5N("AW;W)D*3L*("`@
M:6YT(&QI<W13:7IE"0D](&9S96QE8W0M/F9I;&5#;W5N=&5R.PH@("!C:'1Y
M<&4@*FIU;FL)"3T@*&-H='EP92`J*4Y53$P["B`@(&EN="!C=7)R96YT26YD
M97@)/2`P.PH@("!I;G0@;6%T8VAE<PD)/2`P.PH@("!I;G0@8F%S94-H87)S
M"3T@,#L*("`@:6YT('-E8V]N9&%R>4UA=&-H97,)/2`P.PH@("!C:&%R("IL
M:7-T6TU!6$E414U372P@=&5M<%LQ,#`P73L*("`@:6YT(&EN9&5X+"!P;W,L
M(')E="P@:C$L(&HR+"!X.PH@("!I;G0@9&EF9F5R96YC92P@86)S;VQU=&5$
M:69F97)E;F-E.PH*("`@+RH@268@=&AE('=O<F0@;&5N9W1H(&ES(&5Q=6%L
M('1O('IE<F\L(&IU<W0@;&5A=F4N"0D)*B\*("`@:68@*'=O<F1,96YG=&@@
M/3T@,"D*("`@>PH@("`@("!"965P*"D["B`@("`@(')E='5R;CL*("`@?0H*
M("`@+RH@0W)E871E('1H92!F:6QE(&QI<W0N"0D)"0D)*B\*("`@9F]R("AX
M/3`[('@@/"!L:7-T4VEZ93L@>"LK*0H@("!["B`@("`@(&IU;FL@/2!C:&%R
M,D-H='EP92`H9G-E;&5C="T^9&ER0V]N=&5N='-;>%TL("9J,2P@)FHR*3L*
M("`@("`@;&ES=%MX72`](&-H='EP93)#:&%R("AJ=6YK*3L*("`@("`@9G)E
M94-H='EP92`H:G5N:RD["B`@('T*"B`@("\J($QO;VL@9F]R(&$@=6YI<75E
M('=O<F0@;6%T8V@N"0D)"0DJ+PH@("!I;F1E>"`]('-E87)C:$QI<W0@*&QI
M<W0L(&QI<W13:7IE+"!W;W)D*3L*"B`@("\J($EF('1H92!I;F1E>"!I<R!L
M97-S('1H86X@>F5R;RP@<F5T=7)N('=E(&1I9&XG="!F:6YD(&$@;6%T8V@N
M"2HO"B`@(&EF("AI;F1E>"`\(#`I"B`@('L*("`@("`@+RH@0VQE86X@=7`N
M"0D)"0D)"2HO"B`@("`@(&9O<B`H>#TP.R!X(#P@;&ES=%-I>F4[('@K*RD*
M("`@("`@>PH@("`@("`@("!F<F5E0VAA<B`H;&ES=%MX72D["B`@("`@('T*
M("`@("`@0F5E<"@I.PH@("`@("!R971U<FX["B`@('T*"B`@("\J($-R96%T
M92!T:&4@9G5L;"!P871H;F%M92!O9B!T:&4@9FEL96YA;64N"0D)"2HO"B`@
M('-P<FEN=&8@*'1E;7`L("(E<R\E<R(L(&9S96QE8W0M/G!W9"P@;&ES=%MI
M;F1E>%TI.PH@("!T96UP6RAI;G0I<W1R;&5N*'1E;7`I+3%=(#T@)UPP)SL*
M"B`@("\J($1I9"!W92!F:6YD('1H92!L87-T('=O<F0@:6X@=&AE(&QI<W0_
M"0D)"2HO"B`@(&EF("AI;F1E>"`]/2!L:7-T4VEZ92D*("`@>PH@("`@("`O
M*B!3970@=&AE(&9I;&5N86UE(&EN('1H92!E;G1R>2!F:65L9"X)"0D)*B\*
M("`@("`@<V5T0T1+16YT<GD@*&5N=')Y+"!T96UP+"!E;G1R>2T^;6EN+"!E
M;G1R>2T^;6%X+"!E;G1R>2T^8F]X*3L*("`@("`@9')A=T-$2T5N=')Y("AE
M;G1R>2P@96YT<GDM/F)O>"D["@H@("`@("`O*B!#;&5A;B!U<"X)"0D)"0D)
M*B\*("`@("`@9F]R("AX/3`[('@@/"!L:7-T4VEZ93L@>"LK*0H@("`@("![
M"B`@("`@("`@(&9R965#:&%R("AL:7-T6WA=*3L*("`@("`@?0H@("`@("!R
M971U<FX["B`@('T*"B`@("\J($UO=F4@=&\@=&AE(&-U<G)E;G0@:71E;2!I
M;B!T:&4@<V-R;VQL:6YG(&QI<W0N"0D)*B\*("`@9&EF9F5R96YC90D)/2!I
M;F1E>"`M('-C<F]L;"T^8W5R<F5N=$ET96T["B`@(&%B<V]L=71E1&EF9F5R
M96YC90D](&%B<R`H9&EF9F5R96YC92D["B`@(&EF("AD:69F97)E;F-E(#P@
M,"D*("`@>PH@("`@("!F;W(@*'@],#L@>"`\(&%B<V]L=71E1&EF9F5R96YC
M93L@>"LK*0H@("`@("!["B`@("`@("`@(&EN:F5C=$-$2U-C<F]L;"`H<V-R
M;VQL+"!+15E?55`I.PH@("`@("!]"B`@('T*("`@96QS92!I9B`H9&EF9F5R
M96YC92`^(#`I"B`@('L*("`@("`@9F]R("AX/3`[('@@/"!A8G-O;'5T941I
M9F9E<F5N8V4[('@K*RD*("`@("`@>PH@("`@("`@("!I;FIE8W1#1$M38W)O
M;&P@*'-C<F]L;"P@2T597T1/5TXI.PH@("`@("!]"B`@('T*("`@9')A=T-$
M2U-C<F]L;"`H<V-R;VQL+"!S8W)O;&PM/F)O>"D["@H@("`O*B!/:RP@=V4@
M9F]U;F0@82!M871C:"P@:7,@=&AE(&YE>'0@:71E;2!S:6UI;&%R/PD)"2HO
M"B`@(')E="`]('-T<FYC;7`@*&QI<W1;:6YD97@K,5TL('=O<F0L('=O<F1,
M96YG=&@I.PH@("!I9B`H<F5T(#T](#`I"B`@('L*("`@("`@8W5R<F5N=$EN
M9&5X(#T@:6YD97@["B`@("`@(&)A<V5#:&%R<R`]('=O<F1,96YG=&@["B`@
M("`@(&UA=&-H97,@/2`P.PH@("`@("!P;W,@/2`P.PH*("`@("`@+RH@1&5T
M97)M:6YE('1H92!N=6UB97(@;V8@=V]R9',@=VAI8V@@;6%T8V@N"0D)*B\*
M("`@("`@=VAI;&4@*'-T<FYC;7`@*&QI<W1;8W5R<F5N=$EN9&5X*RM=+"!W
M;W)D+"!W;W)D3&5N9W1H*2`]/2`P*0H@("`@("!["B`@("`@("`@(&UA=&-H
M97,K*SL*("`@("`@?0H*("`@("`@+RH@4W1A<G0@;&]O:VEN9R!F;W(@=&AE
M(&-O;6UO;B!B87-E(&-H87)A8W1E<G,N"0D)*B\*("`@("`@9F]R("@[.RD*
M("`@("`@>PH@("`@("`@("!S96-O;F1A<GE-871C:&5S(#T@,#L*("`@("`@
M("`@9F]R("AX/6EN9&5X.R!X(#P@:6YD97@K;6%T8VAE<SL@>"LK*0H@("`@
M("`@("!["B`@("`@("`@("`@(&EF("AL:7-T6VEN9&5X75MB87-E0VAA<G-=
M(#T](&QI<W1;>%U;8F%S94-H87)S72D*("`@("`@("`@("`@>PH@("`@("`@
M("`@("`@("!S96-O;F1A<GE-871C:&5S*RL["B`@("`@("`@("`@('T*("`@
M("`@("`@?0H*("`@("`@("`@:68@*'-E8V]N9&%R>4UA=&-H97,@(3T@;6%T
M8VAE<RD*("`@("`@("`@>PH@("`@("`@("`@("!"965P*"D["B`@("`@("`@
M("`@(&)R96%K.PH@("`@("`@("!]"@H@("`@("`@("`O*B!);FIE8W0@=&AE
M(&-H87)A8W1E<B!I;G1O('1H92!E;G1R>2!F:65L9"X)"0DJ+PH@("`@("`@
M("!I;FIE8W1#1$M%;G1R>2`H9G-E;&5C="T^96YT<GE&:65L9"P@;&ES=%MI
M;F1E>%U;8F%S94-H87)S72D["B`@("`@("`@(&)A<V5#:&%R<RLK.PH@("`@
M("!]"B`@('T*("`@96QS90H@("!["B`@("`@("\J(%-E="!T:&4@96YT<GD@
M9FEE;&0@=VET:"!T:&4@9F]U;F0@:71E;2X)"0DJ+PH@("`@("!S971#1$M%
M;G1R>2`H96YT<GDL('1E;7`L(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N
M=')Y+3YB;W@I.PH@("`@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^
M8F]X*3L*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)"0D)"0DJ+PH@("!F;W(@
M*'@],#L@>"`\(&QI<W13:7IE.R!X*RLI"B`@('L*("`@("`@9G)E94-H87(@
M*&QI<W1;>%TI.PH@("!]"GT*"B\J"B`J(%1H:7,@86QL;W=S('1H92!U<V5R
M('1O(&1E;&5T92!A(&9I;&4N"B`J+PIV;VED(&1E;&5T949I;&5#0B`H14]B
M:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE
M;G1$871A*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)
M"2HO"B`@($-$2U-#4D],3`DJ9G-C<F]L;`D]("A#1$M30U)/3$P@*BEO8FIE
M8W0["B`@($-$2T9314Q%0U0)*F9S96QE8W0)/2`H0T1+1E-%3$5#5"`J*6-L
M:65N=$1A=&$["B`@(&-H87()"2IB=71T;VYS6UT)/2![(DYO(BP@(EEE<R)]
M.PH@("!#1$M$24%,3T<)*G%U97-T:6]N.PH@("!C:&%R"0DJ;65S9ULQ,%TL
M("IF:6QE;F%M92P@=&5M<%LQ,#!=.PH*("`@+RH@1V5T('1H92!F:6QE;F%M
M92!W:&EC:"!I<R!T;R!B92!D96QE=&5D+@D)"0DJ+PH@("!F:6QE;F%M92`]
M(&-H='EP93)#:&%R("AF<V-R;VQL+3YI=&5M6V9S8W)O;&PM/F-U<G)E;G1)
M=&5M72D["B`@(&9I;&5N86UE6RAI;G0I<W1R;&5N*&9I;&5N86UE*2TQ72`]
M("=<,"<["@H@("`O*B!#<F5A=&4@=&AE(&1I86QO9R!M97-S86=E+@D)"0D)
M*B\*("`@;65S9ULP72`]("(\0SY!<F4@>6]U('-U<F4@>6]U('=A;G0@=&\@
M9&5L971E('1H92!F:6QE.B(["B`@('-P<FEN=&8@*'1E;7`L("(\0SX\+U4^
M)7,_(BP@9FEL96YA;64I.R!M97-G6S%=(#T@8V]P>4-H87(@*'1E;7`I.PH*
M("`@+RH@0W)E871E('1H92!D:6%L;V<@8F]X+@D)"0D)"2HO"B`@('%U97-T
M:6]N(#T@;F5W0T1+1&EA;&]G("AF<V5L96-T+3YS8W)E96XL($-%3E1%4BP@
M0T5.5$52+`H)"0EM97-G+"`R+"!B=71T;VYS+"`R+"!!7U)%5D524T4L"@D)
M"512544L(%12544L($9!3%-%*3L*"B`@("\J($-L96%N('5P('1H:7,@<&]I
M;G1E<BX@*'=E(&UA>2!N965D(&ET(&%G86EN(')E86P@<V]O;BXI"0DJ+PH@
M("!F<F5E0VAA<B`H;65S9ULQ72D["@H@("`O*B!)9B!T:&4@<V%I9"!Y97,@
M=&AE;B!T<GD@=&\@;G5K92!I="X)"0D)*B\*("`@:68@*&%C=&EV871E0T1+
M1&EA;&]G("AQ=65S=&EO;BP@*&-H='EP92`J*4Y53$PI(#T](#$I"B`@('L*
M("`@("`@+RH@268@=V4@=V5R92!S=6-C97-S9G5L+"!R96QO860@=&AE('-C
M<F]L;&EN9R!L:7-T+@D)*B\*("`@("`@:68@*'5N;&EN:R`H9FEL96YA;64I
M(#T](#`I"B`@("`@('L*("`@("`@("`@+RH@4V5T('1H92!F:6QE('-E;&5C
M=&]R(&EN9F]R;6%T:6]N+@D)"0DJ+PH@("`@("`@("!S971#1$M&<V5L96-T
M("AF<V5L96-T+"!F<V5L96-T+3YP=V0L"@D)9G-E;&5C="T^9FEE;&1!='1R
M:6)U=&4L(&9S96QE8W0M/F9I;&QE<D-H87)A8W1E<BP@9G-E;&5C="T^:&EG
M:&QI9VAT+`H)"69S96QE8W0M/F1I<D%T=')I8G5T92P@9G-E;&5C="T^9FEL
M94%T=')I8G5T92P@"@D)9G-E;&5C="T^;&EN:T%T=')I8G5T92P@9G-E;&5C
M="T^<V]C:T%T=')I8G5T92P@"@D)9G-E;&5C="T^8F]X*3L*("`@("`@?0H@
M("`@("!E;'-E"B`@("`@('L*("`@("`@("`@+RH@4&]P('5P(&$@;65S<V%G
M92X)"0D)"0DJ+PHC:69D968@3D]35%)%4E(*("`@("`@("`@<W!R:6YT9B`H
M=&5M<"P@(CQ#/D-A;B!N;W0@9&5L971E(&9I;&4N(%5N:VYO=VX@<F5A<V]N
M+B(I.PHC96QS90H@("`@("`@("!S<')I;G1F("AT96UP+"`B/$,^0V%N)W0@
M9&5L971E(&9I;&4Z(#PE<SXB+"!S=')E<G)O<B`H97)R;F\I*3L*(V5N9&EF
M"B`@("`@("`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@("`@
M(&UE<V=;,5T@/2`B("(["B`@("`@("`@(&UE<V=;,ET@/2`B/$,^4')E<W,@
M86YY(&ME>2!T;R!C;VYT:6YU92XB.PH@("`@("`@("!P;W!U<$QA8F5L("AF
M<V5L96-T+3YS8W)E96XL(&UE<V<L(#,I.PH@("`@("`@("!F<F5E0VAA<B`H
M;65S9ULP72D["B`@("`@('T*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)"0D)
M"0DJ+PH@("!D97-T<F]Y0T1+1&EA;&]G("AQ=65S=&EO;BD["@H@("`O*B!2
M961R87<@=&AE(&9I;&4@<V5L96-T;W(N"0D)"0D)*B\*("`@9')A=T-$2T9S
M96QE8W0@*&9S96QE8W0L(&9S96QE8W0M/F)O>"D["GT*"B\J"B`J(%1H:7,@
M9G5N8W1I;VX@<V5T<R!T:&4@<')E+7!R;V-E<W,@9G5N8W1I;VXN"B`J+PIV
M;VED('-E=$-$2T9S96QE8W10<F50<F]C97-S("A#1$M&4T5,14-4("IF<V5L
M96-T+"!04D]#15-31DX@8V%L;&)A8VLL('9O:60@*F1A=&$I"GL*("`@<V5T
M0T1+16YT<GE0<F50<F]C97-S("AF<V5L96-T+3YE;G1R>49I96QD+"!C86QL
M8F%C:RP@9&%T82D["B`@('-E=$-$2U-C<F]L;%!R95!R;V-E<W,@*&9S96QE
M8W0M/G-C<F]L;$9I96QD+"!C86QL8F%C:RP@9&%T82D["GT*(`HO*@H@*B!4
M:&ES(&9U;F-T:6]N('-E=',@=&AE('!O<W0M<')O8V5S<R!F=6YC=&EO;BX*
M("HO"G9O:60@<V5T0T1+1G-E;&5C=%!O<W10<F]C97-S("A#1$M&4T5,14-4
M("IF<V5L96-T+"!04D]#15-31DX@8V%L;&)A8VLL('9O:60@*F1A=&$I"GL*
M("`@<V5T0T1+16YT<GE0;W-T4')O8V5S<R`H9G-E;&5C="T^96YT<GE&:65L
M9"P@8V%L;&)A8VLL(&1A=&$I.PH@("!S971#1$M38W)O;&Q0;W-T4')O8V5S
M<R`H9G-E;&5C="T^<V-R;VQL1FEE;&0L(&-A;&QB86-K+"!D871A*3L*?0H*
M+RH*("H@4W1A<G0@;V8@8V%L;&)A8VL@9G5N8W1I;VYS+@H@*B\*=F]I9"!F
M<V5L96-T4V-R;VQL57!#0B`H14]B:F5C=%1Y<&4@;V)J96-T5'EP92P@=F]I
M9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I["B`@($-$2T9314Q%0U0@
M*F9S96QE8W0)/2`H0T1+1E-%3$5#5"`J*6-L:65N=$1A=&$["B`@($-$2U-#
M4D],3"`J<V-R;VQL"3T@*$-$2U-#4D],3"HI9G-E;&5C="T^<V-R;VQL1FEE
M;&0["B`@($-$2T5.5%)9("IE;G1R>0D]("A#1$M%3E1262HI9G-E;&5C="T^
M96YT<GE&:65L9#L*("`@8VAA<B`J8W5R<F5N="P@=&5M<%LQ,#(T73L*("`@
M:6YT(&QE;CL*"B`@("\J($UO=F4@=&AE('-C<F]L;&EN9R!L:7-T+@D)"0D)
M"2HO"B`@(&EN:F5C=$-$2U-C<F]L;"`H9G-E;&5C="T^<V-R;VQL1FEE;&0L
M($M%65]54"D["@H@("`O*B!'970@=&AE(&-U<G)E;G1L>2!H:6=H;&EG:'1E
M9"!F:6QE;F%M92X)"0D)*B\*("`@8W5R<F5N="`](&-H='EP93)#:&%R("AS
M8W)O;&PM/FET96U;<V-R;VQL+3YC=7)R96YT271E;5TI.PH@("!L96X@/2`H
M:6YT*7-T<FQE;B`H8W5R<F5N="D["B`@(&-U<G)E;G1;;&5N+3%=(#T@)UPP
M)SL*"B`@("\J($%R92!W92!I;B!T:&4@<F]O="!P87)T:71I;VXN"0D)"0DJ
M+PH@("!I9B`H<W1R8VUP("AF<V5L96-T+3YP=V0L("(O(BD@/3T@,"D*("`@
M>PH@("`@("!S<')I;G1F("AT96UP+"`B+R5S(BP@8W5R<F5N="D["B`@('T*
M("`@96QS90H@("!["B`@("`@('-P<FEN=&8@*'1E;7`L("(E<R\E<R(L(&9S
M96QE8W0M/G!W9"P@8W5R<F5N="D["B`@('T*("`@9G)E94-H87(@*&-U<G)E
M;G0I.PH*("`@+RH@4V5T('1H92!V86QU92!I;B!T:&4@96YT<GD@9FEE;&0N
M"0D)"0DJ+PH@("!S971#1$M%;G1R>2`H96YT<GDL('1E;7`L(&5N=')Y+3YM
M:6XL(&5N=')Y+3YM87@L(&5N=')Y+3YB;W@I.PH@("!D<F%W0T1+16YT<GD@
M*&5N=')Y+"!E;G1R>2T^8F]X*3L*?0IV;VED(&9S96QE8W138W)O;&Q$;W=N
M0T(@*$5/8FIE8W14>7!E(&]B:F5C=%1Y<&4L('9O:60@*F]B:F5C="P@=F]I
M9"`J8VQI96YT1&%T82D*>PH@("!#1$M&4T5,14-4("IF<V5L96-T"3T@*$-$
M2T9314Q%0U0@*BEC;&EE;G1$871A.PH@("!#1$M30U)/3$P@*G-C<F]L;`D]
M("A#1$M30U)/3$PJ*69S96QE8W0M/G-C<F]L;$9I96QD.PH@("!#1$M%3E12
M62`J96YT<GD)/2`H0T1+14Y44EDJ*69S96QE8W0M/F5N=')Y1FEE;&0["B`@
M(&-H87(@*F-U<G)E;G0L('1E;7!;,3`R-%T["B`@(&EN="!L96X["@H@("`O
M*B!-;W9E('1H92!S8W)O;&QI;F<@;&ES="X)"0D)"0DJ+PH@("!I;FIE8W1#
M1$M38W)O;&P@*&9S96QE8W0M/G-C<F]L;$9I96QD+"!+15E?1$]73BD["@H@
M("`O*B!'970@=&AE(&-U<G)E;G1L>2!H:6=H;&EG:'1E9"!F:6QE;F%M92X)
M"0D)*B\*("`@8W5R<F5N="`](&-H='EP93)#:&%R("AS8W)O;&PM/FET96U;
M<V-R;VQL+3YC=7)R96YT271E;5TI.PH@("!L96X@/2`H:6YT*7-T<FQE;B`H
M8W5R<F5N="D["B`@(&-U<G)E;G1;;&5N+3%=(#T@)UPP)SL*"B`@("\J($%R
M92!W92!I;B!T:&4@<F]O="!P87)T:71I;VXN"0D)"0DJ+PH@("!I9B`H<W1R
M8VUP("AF<V5L96-T+3YP=V0L("(O(BD@/3T@,"D*("`@>PH@("`@("!S<')I
M;G1F("AT96UP+"`B+R5S(BP@8W5R<F5N="D["B`@('T*("`@96QS90H@("![
M"B`@("`@('-P<FEN=&8@*'1E;7`L("(E<R\E<R(L(&9S96QE8W0M/G!W9"P@
M8W5R<F5N="D["B`@('T*("`@9G)E94-H87(@*&-U<G)E;G0I.PH*("`@+RH@
M4V5T('1H92!V86QU92!I;B!T:&4@96YT<GD@9FEE;&0N"0D)"0DJ+PH@("!S
M971#1$M%;G1R>2`H96YT<GDL('1E;7`L(&5N=')Y+3YM:6XL(&5N=')Y+3YM
M87@L(&5N=')Y+3YB;W@I.PH@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R
M>2T^8F]X*3L*?0IV;VED(&9S96QE8W1086=E57!#0B`H14]B:F5C=%1Y<&4@
M;V)J96-T5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE;G1$871A*0I[
M"B`@($-$2T9314Q%0U0@*F9S96QE8W0)/2`H0T1+1E-%3$5#5"`J*6-L:65N
M=$1A=&$["B`@($-$2U-#4D],3"`J<V-R;VQL"3T@*$-$2U-#4D],3"HI9G-E
M;&5C="T^<V-R;VQL1FEE;&0["B`@($-$2T5.5%)9("IE;G1R>0D]("A#1$M%
M3E1262HI9G-E;&5C="T^96YT<GE&:65L9#L*("`@8VAA<B`J8W5R<F5N="P@
M=&5M<%LQ,#(T73L*("`@:6YT(&QE;CL*"B`@("\J($UO=F4@=&AE('-C<F]L
M;&EN9R!L:7-T+@D)"0D)"2HO"B`@(&EN:F5C=$-$2U-C<F]L;"`H9G-E;&5C
M="T^<V-R;VQL1FEE;&0L($M%65]04$%'12D["@H@("`O*B!'970@=&AE(&-U
M<G)E;G1L>2!H:6=H;&EG:'1E9"!F:6QE;F%M92X)"0D)*B\*("`@8W5R<F5N
M="`](&-H='EP93)#:&%R("AS8W)O;&PM/FET96U;<V-R;VQL+3YC=7)R96YT
M271E;5TI.PH@("!L96X@/2`H:6YT*7-T<FQE;B`H8W5R<F5N="D["B`@(&-U
M<G)E;G1;;&5N+3%=(#T@)UPP)SL*"B`@("\J($%R92!W92!I;B!T:&4@<F]O
M="!P87)T:71I;VXN"0D)"0DJ+PH@("!I9B`H<W1R8VUP("AF<V5L96-T+3YP
M=V0L("(O(BD@/3T@,"D*("`@>PH@("`@("!S<')I;G1F("AT96UP+"`B+R5S
M(BP@8W5R<F5N="D["B`@('T*("`@96QS90H@("!["B`@("`@('-P<FEN=&8@
M*'1E;7`L("(E<R\E<R(L(&9S96QE8W0M/G!W9"P@8W5R<F5N="D["B`@('T*
M("`@9G)E94-H87(@*&-U<G)E;G0I.PH*("`@+RH@4V5T('1H92!V86QU92!I
M;B!T:&4@96YT<GD@9FEE;&0N"0D)"0DJ+PH@("!S971#1$M%;G1R>2`H96YT
M<GDL('1E;7`L(&5N=')Y+3YM:6XL(&5N=')Y+3YM87@L(&5N=')Y+3YB;W@I
M.PH@("!D<F%W0T1+16YT<GD@*&5N=')Y+"!E;G1R>2T^8F]X*3L*?0IV;VED
M(&9S96QE8W1086=E1&]W;D-"("A%3V)J96-T5'EP92!O8FIE8W14>7!E+"!V
M;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$I"GL*("`@0T1+1E-%3$5#
M5"`J9G-E;&5C=`D]("A#1$M&4T5,14-4("HI8VQI96YT1&%T83L*("`@0T1+
M4T-23TQ,("IS8W)O;&P)/2`H0T1+4T-23TQ,*BEF<V5L96-T+3YS8W)O;&Q&
M:65L9#L*("`@0T1+14Y44ED@*F5N=')Y"3T@*$-$2T5.5%)9*BEF<V5L96-T
M+3YE;G1R>49I96QD.PH@("!C:&%R("IC=7)R96YT+"!T96UP6S$P,C1=.PH@
M("!I;G0@;&5N.PH*("`@+RH@36]V92!T:&4@<V-R;VQL:6YG(&QI<W0N"0D)
M"0D)*B\*("`@:6YJ96-T0T1+4V-R;VQL("AF<V5L96-T+3YS8W)O;&Q&:65L
M9"P@2T597TY004=%*3L*"B`@("\J($=E="!T:&4@8W5R<F5N=&QY(&AI9VAL
M:6=H=&5D(&9I;&5N86UE+@D)"0DJ+PH@("!C=7)R96YT(#T@8VAT>7!E,D-H
M87(@*'-C<F]L;"T^:71E;5MS8W)O;&PM/F-U<G)E;G1)=&5M72D["B`@(&QE
M;B`]("AI;G0I<W1R;&5N("AC=7)R96YT*3L*("`@8W5R<F5N=%ML96XM,5T@
M/2`G7#`G.PH*("`@+RH@07)E('=E(&EN('1H92!R;V]T('!A<G1I=&EO;BX)
M"0D)"2HO"B`@(&EF("AS=')C;7`@*&9S96QE8W0M/G!W9"P@(B\B*2`]/2`P
M*0H@("!["B`@("`@('-P<FEN=&8@*'1E;7`L("(O)7,B+"!C=7)R96YT*3L*
M("`@?0H@("!E;'-E"B`@('L*("`@("`@<W!R:6YT9B`H=&5M<"P@(B5S+R5S
M(BP@9G-E;&5C="T^<'=D+"!C=7)R96YT*3L*("`@?0H@("!F<F5E0VAA<B`H
M8W5R<F5N="D["@H@("`O*B!3970@=&AE('9A;'5E(&EN('1H92!E;G1R>2!F
M:65L9"X)"0D)"2HO"B`@('-E=$-$2T5N=')Y("AE;G1R>2P@=&5M<"P@96YT
M<GDM/FUI;BP@96YT<GDM/FUA>"P@96YT<GDM/F)O>"D["B`@(&1R87=#1$M%
<;G1R>2`H96YT<GDL(&5N=')Y+3YB;W@I.PI]"F)O
`
end
SHAR_EOF
  echo 'uudecoding file cdk4.8.0/fselect.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0709111596 'cdk4.8.0/fselect.c' &&
  chmod 0444 'cdk4.8.0/fselect.c' ||
  echo 'restore of cdk4.8.0/fselect.c failed'
  shar_count="`wc -c < 'cdk4.8.0/fselect.c'`"
  test 28018 -eq "$shar_count" ||
    echo "cdk4.8.0/fselect.c: original size 28018, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/histogram.c ==============
if test -f 'cdk4.8.0/histogram.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/histogram.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/histogram.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/histogram.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/06/21 06:25:03 $
X * $Revision: 1.32 $
X */
X
/*
X * This creates a histogram widget.
X */
CDKHISTOGRAM *newCDKHistogram (CDKSCREEN *cdkscreen, int xplace, int yplace, int lplace, int height, int width, int orient, char *label, boolean box, boolean shadow)
{
X   /* Declare local variables.						*/
X   CDKHISTOGRAM *histogram	= (CDKHISTOGRAM *)malloc (sizeof (CDKHISTOGRAM));
X   int boxWidth			= 0;
X   int boxHeight		= height + 2;
X   int xpos			= xplace;
X   int ypos			= yplace;
X   int labelxoffset		= 0;
X   int labelyoffset		= 0;
X   int fieldxoffset		= 0;
X   int fieldyoffset		= 0;
X   int junk			= 0;
X   char *plainLabel;
X
X   /* Translate the char * to a chtype *				*/
X   histogram->label	= char2Chtype (label, &histogram->labelLen, &junk);
X   plainLabel		= chtype2Char (histogram->label);
X   boxWidth		= width + histogram->labelLen + 6;
X
X   /* Adjust the offset values given the location of the label.		*/
X   alignlabel (plainLabel, lplace, width, &boxWidth, &boxHeight, &labelxoffset, &labelyoffset, &fieldxoffset, &fieldyoffset);
X   freeChar (plainLabel);
X
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Create the histogram pointer.					*/
X   histogram->parent	= cdkscreen->window;
X   histogram->win	= newwin (boxHeight, boxWidth, ypos, xpos);
X   histogram->shadowWin	= (WINDOW *)NULL;
X   histogram->labelWin	= subwin (cdkscreen->window, 1, histogram->labelLen+2, ypos+labelyoffset, xpos+labelxoffset);
X   histogram->width	= width;
X   histogram->height	= height;
X   histogram->orient	= orient;
X   histogram->shadow	= shadow;
X
X   /* Is the window NULL.						*/
X   if (histogram->win == (WINDOW *)NULL)
X   {
X      /* Remove the labelWin if its not NULL.				*/
X      if (histogram->labelWin != (WINDOW *)NULL)
X      {
X         delwin (histogram->labelWin);
X      }
X
X      /* Clean up any memory used.					*/
X      freeChtype (histogram->label);
X      free (histogram);
X
X      /* Return a NULL pointer.						*/
X      return ((CDKHISTOGRAM *)NULL);
X   }
X
X   /* Set up some default values.					*/
X   histogram->filler	= '#' | A_REVERSE;
X   histogram->statsattr	= A_NORMAL;
X   histogram->statspos	= TOP;
X   histogram->viewtype	= vREAL;
X   histogram->high	= 0;
X   histogram->low	= 0;
X   histogram->value	= 0;
X   histogram->chars	= 0;
X   histogram->lowx	= 0;
X   histogram->lowy	= 0;
X   histogram->highx	= 0;
X   histogram->highy	= 0;
X   histogram->labelx	= 0;
X   histogram->labely	= 0;
X   histogram->statsx	= 0;
X   histogram->statsy	= 0;
X   histogram->histx	= 0;
X   histogram->histy	= 0;
X   histogram->lowchar	= (char *)NULL;
X   histogram->highchar	= (char *)NULL;
X   histogram->statschar	= (char *)NULL;
X   histogram->box	= box;
X
X   /* Do we want a shadow???						*/
X   if (shadow)
X   {
X      histogram->shadowWin = subwin (cdkscreen->window, boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vHISTOGRAM, histogram);
X
X   /* Return this thing.						*/
X   return (histogram);
}
X
/*
X * This sets the values for the histogram.
X */
void setCDKHistogram (CDKHISTOGRAM *histogram, EHistogramDisplayType viewtype, int statspos, chtype statsattr, int low, int high, int value, chtype filler, boolean box)
{
X   /* Declare local variables.						*/
X   char		string[100];
X   int		adj;
X   float	temp;
X
X   /* Keep the box info.						*/
X   histogram->box	= box;
X
X   /* We should error check the information we have.			*/
X   histogram->low	= (low <= high ? low : 0);
X   histogram->high	= (low <= high ? high : 0);
X   histogram->value	= (low <= value && value <= high ? value : 0);
X
X   /* Set some of the basic values.					*/
X   histogram->statspos	= statspos;
X   histogram->statsattr	= statsattr;
X   histogram->filler	= filler;
X   histogram->viewtype	= viewtype;
X   histogram->percent	= (histogram->high == 0 ? 0 : ((float)histogram->value / (float)histogram->high));
X   if (histogram->orient == VERTICAL)
X   {
X      temp = histogram->percent * (float)histogram->height;
X   } 
X   else
X   {
X      temp = histogram->percent * (float)histogram->width;
X   }
X   histogram->chars = ((float)abs(temp) == (float)temp ? (int)temp : (int)temp + 1);
X
X   /* We have a number of variables which determine the personality of	*/
X   /* the histogram. We have to go through each one methodically, and 	*/
X   /* set them correctly. This section does this.			*/
X   if (histogram->viewtype != vNONE)
X   {
X      if (histogram->orient == VERTICAL)
X      {
X         /* Set the vertical adjustment var				*/
X         adj = (histogram->label != (chtype *)NULL ? histogram->labelLen + 1 : 0);
X
X         /* Make a vertical histogram the exception.			*/
X         if (histogram->statspos == LEFT || histogram->statspos == TOP)
X         {
X            /* Set the character strings correctly.			*/
X            freeChar (histogram->lowchar);
X            freeChar (histogram->highchar);
X            freeChar (histogram->statschar);
X
X            /* Set the low label attributes.				*/
X            sprintf (string, "%d", histogram->low);
X            histogram->lowchar		= copyChar (string);
X            histogram->lowx		= histogram->height - (int)strlen (string) + 2;
X            histogram->lowy		= adj;
X            
X            /* Set the high label attributes.				*/
X            sprintf (string, "%d", histogram->high);
X            histogram->highchar		= copyChar (string);
X            histogram->highx		= 0;
X            histogram->highy		= adj;
X   
X            /* Set the stats label attributes.				*/
X            if (histogram->viewtype == vPERCENT)
X            {
X               sprintf (string, "%3.1f%%", (float) (histogram->percent * 100));
X            }
X            else if (histogram->viewtype == vFRACTION)
X            {
X               sprintf (string, "%d/%d", histogram->value, histogram->high);
X            }
X            else
X            {
X               sprintf (string, "%d", histogram->value);
X            }
X            histogram->statschar	= copyChar (string);
X            histogram->statsx		= ((histogram->height - (int)strlen(string)) / 2) + 1;
X            histogram->statsy		= adj;
X         }
X         else if (histogram->statspos == RIGHT || histogram->statspos == BOTTOM)
X         {
X            /* Set the character strings correctly.			*/
X            freeChar (histogram->lowchar);
X            freeChar (histogram->highchar);
X            freeChar (histogram->statschar);
X   
X            /* Set the low label attributes.				*/
X            sprintf (string, "%d", histogram->low);
X            histogram->lowchar		= copyChar (string);
X            histogram->lowx		= histogram->height - (int)strlen (string) + 2;
X            histogram->lowy		= histogram->width + 1;
X            
X            /* Set the high label attributes.				*/
X            sprintf (string, "%d", histogram->high);
X            histogram->highchar		= copyChar (string);
X            histogram->highx		= 0;
X            histogram->highy		= histogram->width + 1;
X   
X            /* Set the stats label attributes.				*/
X            if (histogram->viewtype == vPERCENT)
X            {
X               sprintf (string, "%3.2f%%", (float) (histogram->percent * 100));
X            }
X            else if (histogram->viewtype == vFRACTION)
X            {
X               sprintf (string, "%d/%d", histogram->value, histogram->high);
X            }
X            else
X            {
X               sprintf (string, "%d", histogram->value);
X            }
X            histogram->statschar	= copyChar (string);
X            histogram->statsx		= ((histogram->height - (int)strlen(string)) / 2) + 1;
X            histogram->statsy		= histogram->width + 1;
X         }
X
X         /* Set the histogram positions attributes.			*/
X         histogram->histx		= histogram->height - histogram->chars + 1;
X         histogram->histy		= adj;
X      }
X      else
X      {
X         /* Set the vertical adjustment var				*/
X         adj = (histogram->label != (chtype *)NULL ? histogram->labelLen + 1 : 0);
X
X         /* Make horizontal the default.				*/
X         if (histogram->statspos == TOP || histogram->statspos == LEFT)
X         {
X            /* Set the character strings correctly.			*/
X            freeChar (histogram->lowchar);
X            freeChar (histogram->highchar);
X            freeChar (histogram->statschar);
X
X            /* Set the low label attributes.    			*/
X            sprintf (string, "%d", histogram->low);
X            histogram->lowchar          = copyChar (string);
X            histogram->lowx             = 0;
X            histogram->lowy             = adj;
X            
X            /* Set the high label attributes.   			*/
X            sprintf (string, "%d", histogram->high);
X            histogram->highchar         = copyChar (string);
X            histogram->highx            = 0;
X            histogram->highy            = histogram->width - (int)strlen (string) + adj + 1;
X   
X            /* Set the stats label attributes.  			*/
X            if (histogram->viewtype == vPERCENT)
X            {
X               sprintf (string, "%3.1f%%", (float) (histogram->percent * 100));
X            }
X            else if (histogram->viewtype == vFRACTION)
X            {
X               sprintf (string, "%d/%d", histogram->value, histogram->high);
X            }
X            else
X            {
X               sprintf (string, "%d", histogram->value);
X            }
X            histogram->statschar        = copyChar (string);
X            histogram->statsx           = 0;
X            histogram->statsy           = ((histogram->width - (int)strlen(string)) / 2) + adj + 1;
X         }
X         else if (histogram->statspos == BOTTOM || histogram->statspos == RIGHT)
X         {
X            /* Set the character strings correctly.			*/
X            freeChar (histogram->lowchar);
X            freeChar (histogram->highchar);
X            freeChar (histogram->statschar);
X
X            /* Set the low label attributes.    			*/
X            sprintf (string, "%d", histogram->low);
X            histogram->lowchar          = copyChar (string);
X            histogram->lowx             = histogram->height + 1;
X            histogram->lowy             = adj;
X            
X            /* Set the high label attributes.   			*/
X            sprintf (string, "%d", histogram->high);
X            histogram->highchar         = copyChar (string);
X            histogram->highx            = histogram->height + 1;
X            histogram->highy            = histogram->width - (int)strlen (string) + adj + 1;
X   
X            /* Set the stats label attributes.  			*/
X            if (histogram->viewtype == vPERCENT)
X            {
X               sprintf (string, "%3.1f%%", (float) (histogram->percent * 100));
X            }
X            else if (histogram->viewtype == vFRACTION)
X            {
X               sprintf (string, "%d/%d", histogram->value, histogram->high);
X            }
X            else
X            {
X               sprintf (string, "%d", histogram->value);
X            }
X            histogram->statschar        = copyChar (string);
X            histogram->statsx           = histogram->height + 1;
X            histogram->statsy           = ((histogram->width - (int)strlen(string)) / 2) + adj + 1;
X         }
X         else if (histogram->statspos == CENTER)
X         {
X            /* Set the character strings correctly.			*/
X            freeChar (histogram->lowchar);
X            freeChar (histogram->highchar);
X            freeChar (histogram->statschar);
X
X            /* Set the low label attributes.    			*/
X            sprintf (string, "%d", histogram->low);
X            histogram->lowchar          = copyChar (string);
X            histogram->lowx             = (histogram->height == 1 ? 1 : (histogram->height / 2));
X            histogram->lowy             = adj;
X            
X            /* Set the high label attributes.   			*/
X            sprintf (string, "%d", histogram->high);
X            histogram->highchar         = copyChar (string);
X            histogram->highx            = (histogram->height == 1 ? 1 : (histogram->height / 2));
X            histogram->highy            = histogram->width - (int)strlen (string) + adj + 1;
X   
X            /* Set the stats label attributes.  			*/
X            if (histogram->viewtype == vPERCENT)
X            {
X               sprintf (string, "%3.1f%%", (float) (histogram->percent * 100));
X            }
X            else if (histogram->viewtype == vFRACTION)
X            {
X               sprintf (string, "%d/%d", histogram->value, histogram->high);
X            }
X            else
X            {
X               sprintf (string, "%d", histogram->value);
X            }
X            histogram->statschar        = copyChar (string);
X            histogram->statsx           = (histogram->height == 1 ? 1 : (histogram->height / 2));
X            histogram->statsy           = ((histogram->width - (int)strlen(string)) / 2) + adj + 1;
X         }
X      }
X   }
}
X
/*
X * This function draws the histogram.
X */
void drawCDKHistogram (CDKHISTOGRAM *histogram, boolean Box)
{
X   /* Declare the local variables.					*/
X   int x	= 0;
X   int y	= 0;
X
X   /* Erase the old object...						*/
X   eraseCDKHistogram (histogram);
X
X   /* Box the widget if asked.						*/
X   if (Box)
X   {
X      box (histogram->win, histogram->statsattr | ACS_VLINE, histogram->statsattr |ACS_HLINE);
X   }
X
X   /* Do we have a shadow to draw???					*/
X   if (histogram->shadow)
X   {
X      drawShadow (histogram->shadowWin);
X   }
X
X   /* Draw the histogram.						*/
X   if (histogram->orient == VERTICAL)
X   {
X       /* Declare the local vars.					*/
X       int temp	= (int)strlen (histogram->highchar);
X       chtype fattr, fchar, battr, bchar;
X
X       /* Draw in the high label					*/
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win,histogram->highx + x,
X			histogram->highy,
X			histogram->highchar[x] | histogram->statsattr);
X       }
X
X       /* Draw in the low label						*/
X       temp =(int)strlen (histogram->lowchar);
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win, histogram->lowx + x,
X			histogram->lowy,
X			histogram->lowchar[x] | histogram->statsattr);
X       }
X
X       /* Draw in the stats label					*/
X       temp =(int)strlen (histogram->statschar);
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win, histogram->statsx + x,
X			histogram->statsy,
X			histogram->statschar[x] | histogram->statsattr);
X       }
X
X       /* Draw in the histogram.					*/
X       temp	= histogram->labelLen;
X       fattr	= histogram->filler & A_ATTRIBUTES;
X       fchar	= histogram->filler & A_CHARTEXT;
X
X       for (x=histogram->histx; x <= histogram->height; x++)
X       {
X          for (y=1; y <= histogram->width; y++)
X          {
#ifdef WINCHBUG
X             battr	= ' ' | A_REVERSE;
#else
X             battr	= mvwinch (histogram->win, x, y+temp);
#endif
X             fchar	= battr & A_ATTRIBUTES;
X             bchar	= battr & A_CHARTEXT;
X             if (bchar == ' ')
X             {
X                mvwaddch (histogram->win, x, y+temp, histogram->filler);
X             }
X             else
X             {
X                mvwaddch (histogram->win, x, y+temp, battr | fattr);
X             }
X          }
X       }
X       wrefresh (histogram->win);
X
X       /* Draw in the label						*/
X       writeChtype (histogram->labelWin, 0, 0, histogram->label, HORIZONTAL, 0, histogram->labelLen);
X       wrefresh (histogram->labelWin);
X   }
X   else
X   {
X       /* Declare the local vars.					*/
X       int temp	= (int)strlen (histogram->highchar);
X       chtype fattr, fchar, battr, bchar;
X       int x, y;
X
X       /* Draw in the high label					*/
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win, histogram->highx,
X			histogram->highy + x,
X			histogram->highchar[x] | histogram->statsattr);
X       }
X
X       /* Draw in the low label						*/
X       temp = (int)strlen (histogram->lowchar);
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win, histogram->lowx,
X			histogram->lowy + x,
X			histogram->lowchar[x] | histogram->statsattr);
X       }
X
X       /* Draw in the stats label					*/
X       temp	= (int)strlen (histogram->statschar);
X       for (x=0; x < temp; x++)
X       {
X          mvwaddch (histogram->win, histogram->statsx,
X			histogram->statsy + x,
X			histogram->statschar[x] | histogram->statsattr);
X       }
X
X       /* Set up some variables we need for the histogram.		*/
X       temp	= histogram->labelLen;
X       fattr	= histogram->filler & A_ATTRIBUTES;
X       fchar	= histogram->filler & A_CHARTEXT;
X
X       /* Draw in the histogram.					*/
X       for (x=1; x <= histogram->height; x++)
X       {
X          for (y=2; y < histogram->chars; y++)
X          {
X             /* Get the character and split it into its elements	*/
#ifdef WINCHBUG
X             battr	= ' ' | A_REVERSE;
#else
X             battr	= mvwinch (histogram->win, x, y+temp);
#endif
X             bchar	= battr & A_CHARTEXT;
X             fchar	= battr & A_ATTRIBUTES;
X
X             /* If there was nothing there, put the histogram		*/
X             /* down.							*/
X             if (bchar == ' ')
X             {
X                mvwaddch (histogram->win, x, y+temp, histogram->filler);
X             }
X             else
X             {
X                mvwaddch (histogram->win, x, y+temp, bchar | fattr);
X             }
X          }
X       }
X       wrefresh (histogram->win);
X
X       /* Draw in the label						*/
X       writeChtype (histogram->labelWin, 0, 0, histogram->label, HORIZONTAL, 0, histogram->labelLen);
X       wrefresh (histogram->labelWin);
X   }
}
X
/*
X * This function destroys the histogram.
X */
void destroyCDKHistogram (CDKHISTOGRAM *histogram)
{
X   /* Erase the object.							*/
X   eraseCDKHistogram (histogram);
X
X   /* Clean up the char pointers.					*/
X   freeChtype (histogram->label);
X   freeChar (histogram->lowchar);
X   freeChar (histogram->highchar);
X   freeChar (histogram->statschar);
X
X   /* Clean up the windows.						*/
X   delwin (histogram->win);
X   delwin (histogram->labelWin);
X   if (histogram->shadow)
X   {
X      delwin (histogram->shadowWin);
X   }
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vHISTOGRAM, histogram);
X
X   /* Finish cleaning up.						*/
X   free (histogram);
}
X
/*
X * This function erases the histogram from the screen.
X */
void eraseCDKHistogram (CDKHISTOGRAM *histogram)
{
X   werase (histogram->win);
X   werase (histogram->labelWin);
X   wrefresh (histogram->win);
X   wrefresh (histogram->labelWin);
X
X   /* Do we need to erase the shadow...					*/
X   if (histogram->shadow)
X   {
X      werase (histogram->shadowWin);
X      wrefresh (histogram->shadowWin);
X   }
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/histogram.c' &&
  chmod 0444 'cdk4.8.0/histogram.c' ||
  echo 'restore of cdk4.8.0/histogram.c failed'
  shar_count="`wc -c < 'cdk4.8.0/histogram.c'`"
  test 18611 -eq "$shar_count" ||
    echo "cdk4.8.0/histogram.c: original size 18611, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/itemlist.c ==============
if test -f 'cdk4.8.0/itemlist.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/itemlist.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/itemlist.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/itemlist.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/06/30 16:52:52 $
X * $Revision: 1.14 $
X */
X
/*
X * This creates a pointer to an itemlist widget.
X */
CDKITEMLIST *newCDKItemlist (CDKSCREEN *cdkscreen, int xplace, int yplace, int lplace, char *label, char **item, int count, int defaultItem, boolean box, boolean shadow)
{
X   /* Set up some variables.						*/
X   CDKITEMLIST *itemlist = (CDKITEMLIST *)malloc (sizeof (CDKITEMLIST));
X   char *plainlabel	= (char *)NULL;
X   int boxWidth		= 0;
X   int boxHeight	= 3;
X   int fieldWidth	= 0;
X   int xpos		= xplace;
X   int ypos		= yplace;
X   int labelxoffset	= 0;
X   int labelyoffset	= 0;
X   int fieldxoffset	= 0;
X   int fieldyoffset	= 0;
X   int temp		= 0;
X   int x;
X
X   /* Translate the label char *pointer to a chtype pointer.		*/
X   itemlist->label	= char2Chtype (label, &itemlist->labelLen, &temp);
X   plainlabel		= chtype2Char (itemlist->label);
X
X   /* Go through the list and determine the widest item.		*/
X   for (x=0; x < count; x++)
X   {
X      /* Copy the item to the list.					*/
X      itemlist->item[x]	= char2Chtype (item[x], &itemlist->itemLen[x], &itemlist->itemPos[x]);
X      fieldWidth = (fieldWidth < itemlist->itemLen[x] ? itemlist->itemLen[x] : fieldWidth);
X   }
X   fieldWidth += 2;
X
X   /* Now we need to justify the strings.				*/
X   for (x=0; x < count; x++)
X   {
X      itemlist->itemPos[x] = justifyString (fieldWidth, itemlist->itemLen[x], itemlist->itemPos[x]);
X   }
X
X   /* Adjust the offset values given the location of the label.		*/
X   alignlabel (plainlabel, lplace, fieldWidth, &boxWidth, &boxHeight, &labelxoffset, &labelyoffset, &fieldxoffset, &fieldyoffset);
X   freeChar (plainlabel);
X   
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Make the label window.						*/
X   itemlist->win = newwin (boxHeight, boxWidth, ypos, xpos);
X
X   /* Is the window NULL ???						*/
X   if (itemlist->win == (WINDOW *)NULL)
X   {
X      /* Clean up the pointers.						*/
X      freeChtype (itemlist->label);
X      free (itemlist);
X      
X      /* Exit with NULL.						*/
X      return ((CDKITEMLIST *)NULL);
X   }
X
X   /* Make the field window.						*/
X   itemlist->fieldWin	= subwin (cdkscreen->window, 1, fieldWidth, ypos+fieldyoffset, xpos+fieldxoffset);
X   itemlist->labelWin	= subwin (cdkscreen->window, 1, itemlist->labelLen+1, ypos+labelyoffset, xpos+labelxoffset);
X   keypad (itemlist->fieldWin, TRUE);
X
X   /* Set up the rest of the structure.					*/
X   itemlist->parent			= cdkscreen->window;
X   itemlist->shadowWin			= (WINDOW *)NULL;
X   itemlist->fieldWidth			= fieldWidth;
X   itemlist->itemCount			= count-1;
X   itemlist->exitType			= vNEVER_ACTIVATED;
X   itemlist->box			= box;
X   itemlist->shadow			= shadow;
X   itemlist->preProcessFunction		= (PROCESSFN)NULL;
X   itemlist->preProcessData		= (void *)NULL;
X   itemlist->postProcessFunction	= (PROCESSFN)NULL;
X   itemlist->postProcessData		= (void *)NULL;
X
X   /* Set then default item.						*/
X   if (defaultItem >= 0 && defaultItem <= itemlist->itemCount)
X   {
X      itemlist->currentItem	= defaultItem;
X      itemlist->defaultItem	= defaultItem;
X   }
X   else
X   {
X      itemlist->currentItem	= 0;
X      itemlist->defaultItem	= 0;
X   }
X
X   /* Do we want a shadow???						*/
X   if (shadow)
X   {
X      itemlist->shadowWin = newwin (boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Clean the key bindings.						*/
X   cleanCDKObjectBindings (vITEMLIST, itemlist);
X
X   /* Register this baby.               				*/
X   registerCDKObject (cdkscreen, vITEMLIST, itemlist);
X
X   /* Return the pointer to the structure				*/
X   return (itemlist);
}
X
/*
X * This allows the user to play with the widget.
X */
int activateCDKItemlist (CDKITEMLIST *itemlist, chtype *actions)
{
X   /* Declare local variables.						*/	
X   int ret = -1;
X
X   /* Draw the widget.							*/
X   drawCDKItemlist (itemlist, itemlist->box);
X
X   /* Check if actions is NULL.						*/
X   if (actions == (chtype *)NULL)
X   {
X      chtype input = (chtype)NULL;
X      for (;;)
X      {
X         /* Get the input.						*/
X         input = wgetch (itemlist->fieldWin);
X
X         /* Inject the character into the widget.			*/
X         ret = injectCDKItemlist (itemlist, input);
X         if (itemlist->exitType != vEARLY_EXIT)
X         {
X            return ret;
X         }
X      }
X   }
X   else
X   {
X      int length = chlen (actions);
X      int x = 0;
X
X      /* Inject each character one at a time.				*/
X      for (x=0; x < length; x++)
X      {
X         ret = injectCDKItemlist (itemlist, actions[x]);
X         if (itemlist->exitType != vEARLY_EXIT)
X         {
X            return ret;
X         }
X      }
X   }
X
X   /* Set the exit type and exit.					*/
X   itemlist->exitType = vEARLY_EXIT;
X   return ret;
}
X
/*
X * This injects a single character into the widget.
X */
int injectCDKItemlist (CDKITEMLIST *itemlist, chtype input)
{
X   /* Declare local variables.						*/
X   int ppReturn = 1;
X
X   /* Set the exit type.						*/
X   itemlist->exitType = vEARLY_EXIT;
X
X   /* Draw the itemlist field.						*/
X   drawCDKItemlistField (itemlist);
X
X   /* Check if there is a pre-process function to be called.		*/
X   if (itemlist->preProcessFunction != (PROCESSFN)NULL)
X   {
X      /* Call the pre-process function.					*/
X      ppReturn = ((PROCESSFN)(itemlist->preProcessFunction)) (vITEMLIST, itemlist, itemlist->preProcessData, input);
X   }
X
X   /* Should we continue?						*/
X   if (ppReturn != 0)
X   {
X      /* Check a predefined binding.					*/
X      if (! checkCDKObjectBind (vITEMLIST, itemlist, input))
X      {
X         switch (input)
X         {
X            case KEY_UP : case KEY_RIGHT : case ' ' : case '+' : case 'n' :
X                 if (itemlist->currentItem < itemlist->itemCount)
X                 {
X                    itemlist->currentItem++;
X                 }
X                 else
X                 {
X                    itemlist->currentItem = 0;
X                 }
X                 break;
X   
X            case KEY_DOWN : case KEY_LEFT : case '-' : case 'p' :
X                 if (itemlist->currentItem > 0)
X                 {
X                    itemlist->currentItem--;
X                 }
X                 else
X                 {
X                    itemlist->currentItem = itemlist->itemCount;
X                 }
X                 break;
X   
X            case 'd' : case 'D' :
X                 itemlist->currentItem = itemlist->defaultItem;
X                 break;
X   
X            case '0' :
X                 itemlist->currentItem = 0;
X                 break;
X   
X            case '$' :
X                 itemlist->currentItem = itemlist->itemCount;
X                 break;
X   
X            case KEY_ESC :
X                 itemlist->exitType = vESCAPE_HIT;
X                 return -1;
X                 break;
X   
X            case KEY_RETURN : case KEY_TAB :
X                 itemlist->exitType = vNORMAL;
X                 return itemlist->currentItem;
X                 break;
X   
X            case CDK_REFRESH :
X                 refreshCDKScreen (itemlist->screen);
X                 break;
X   
X            default :
X                 Beep();
X                 break;
X         }
X      }
X
X      /* Should we call a post-process?					*/
X      if (itemlist->postProcessFunction != (PROCESSFN)NULL)
X      {
X         ((PROCESSFN)(itemlist->postProcessFunction)) (vITEMLIST, itemlist, itemlist->postProcessData, input);
X      }
X   }
X
X   /* Redraw the field.							*/
X   drawCDKItemlistField (itemlist);
X
X   /* Set the exit type and leave.					*/
X   itemlist->exitType = vEARLY_EXIT;
X   return -1;
}
X
/*
X * This draws the widget on the screen.
X */
void drawCDKItemlist (CDKITEMLIST *itemlist, int Box)
{
X   /* Erase the widget from the screen.					*/
X   eraseCDKItemlist (itemlist);
X 
X   /* Did we ask for a shadow?						*/
X   if (itemlist->shadow)
X   {
X      drawShadow (itemlist->shadowWin);
X   }
X 
X   /* Box the widget if asked.						*/
X   if (Box)
X   {
X      box (itemlist->win, ACS_VLINE, ACS_HLINE);
X      wrefresh (itemlist->win);
X   }
X 
X   /* Draw in the label to the widget.                                  */
X   writeChtype (itemlist->labelWin, 0, 0, 
X		itemlist->label,
X		HORIZONTAL, 0,
X		itemlist->labelLen);
X   wrefresh (itemlist->labelWin);
X
X   /* Draw in the field.						*/
X   drawCDKItemlistField (itemlist);
}
X
/*
X * This function draws the contents of the field.
X */
void drawCDKItemlistField (CDKITEMLIST *itemlist)
{
X   /* Declare local vars.						*/
X   int currentItem = itemlist->currentItem;
X   int x;
X
X   /* Draw in the current item in the field.				*/
X   werase (itemlist->fieldWin);
X   for (x=0; x < itemlist->itemLen[currentItem]; x++)
X   {
X      mvwaddch (itemlist->fieldWin, 0,
X		x+itemlist->itemPos[currentItem],
X		itemlist->item[currentItem][x]);
X   }
X   wrefresh (itemlist->fieldWin);
}
X
/*
X * This function removes the widget from the screen.
X */
void eraseCDKItemlist (CDKITEMLIST *itemlist)
{
X   werase (itemlist->fieldWin);
X   werase (itemlist->labelWin);
X   werase (itemlist->win);
X   wrefresh (itemlist->win);
X
X   /* Do we want to erase the shadow.				*/
X   if (itemlist->shadow)
X   {
X      werase (itemlist->shadowWin);
X      wrefresh (itemlist->shadowWin);
X   }
}
X
/*
X * This function destroys the widget and all the memory it used.
X */
void destroyCDKItemlist (CDKITEMLIST *itemlist)
{
X   /* Declare local variables.					*/
X   int x;
X
X   /* Erase the object.						*/
X   eraseCDKItemlist (itemlist);
X
X   /* Clear out the character pointers.				*/
X   freeChtype (itemlist->label);
X   for (x=0; x <= itemlist->itemCount; x++)
X   {
X      freeChtype (itemlist->item[x]);
X   }
X
X   /* Delete the windows.					*/
X   delwin (itemlist->fieldWin);
X   delwin (itemlist->labelWin);
X   delwin (itemlist->win);
X   if (itemlist->shadow)
X   {
X      delwin (itemlist->shadowWin);
X   }
X
X   /* Unregister this object.					*/
X   unregisterCDKObject (vITEMLIST, itemlist);
X
X   /* Finish cleaning up.					*/
X   free (itemlist);
}
X
/*
X * This function sets the contents of the list.
X */
void setCDKItemlist (CDKITEMLIST *itemlist, char **item, int count, int defaultItem, boolean box)
{
X   /* Declare local variables.					*/
X   int x;
X
X   /* Free up the old memory.					*/
X   for (x=0; x <= itemlist->itemCount; x++)
X   {
X      freeChtype (itemlist->item[x]);
X   }
X
X   /* Copy in the new information.				*/
X   itemlist->itemCount = count-1;
X   for (x=0; x <= itemlist->itemCount; x++)
X   {
X      /* Copy the new stuff in.					*/
X      itemlist->item[x]	= char2Chtype (item[x], &itemlist->itemLen[x], &itemlist->itemPos[x]);
X      itemlist->itemPos[x] = justifyString (itemlist->fieldWidth, itemlist->itemLen[x], itemlist->itemPos[x]);
X   }
X
X   /* Set the box flag.						*/
X   itemlist->box = box;
X
X   /* Set the default item.					*/
X   if (defaultItem >= 0 && defaultItem <= itemlist->itemCount)
X   {
X      itemlist->currentItem = defaultItem;
X      itemlist->defaultItem = defaultItem;
X   }
X
X   /* Draw the field.						*/
X   drawCDKItemlistField (itemlist);
}
X
/*
X * This function sets the pre-process function.
X */
void setCDKItemlistPreProcess (CDKITEMLIST *itemlist, PROCESSFN callback, void *data)
{
X   itemlist->preProcessFunction = callback;
X   itemlist->preProcessData = data;
}
X 
/*
X * This function sets the post-process function.
X */
void setCDKItemlistPostProcess (CDKITEMLIST *itemlist, PROCESSFN callback, void *data)
{
X   itemlist->postProcessFunction = callback;
X   itemlist->postProcessData = data;
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/itemlist.c' &&
  chmod 0444 'cdk4.8.0/itemlist.c' ||
  echo 'restore of cdk4.8.0/itemlist.c failed'
  shar_count="`wc -c < 'cdk4.8.0/itemlist.c'`"
  test 11380 -eq "$shar_count" ||
    echo "cdk4.8.0/itemlist.c: original size 11380, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/label.c ==============
if test -f 'cdk4.8.0/label.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/label.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/label.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/label.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/07/03 23:49:57 $
X * $Revision: 1.34 $
X */
X
/*
X * This creates a label widget.
X */
CDKLABEL *newCDKLabel(CDKSCREEN *cdkscreen, int xplace, int yplace, char **mesg, int rows, boolean box, boolean shadow)
{
X   /* Maintain the label information					*/
X   CDKLABEL *label	= (CDKLABEL *)malloc (sizeof (CDKLABEL));
X   int boxWidth		= 0;
X   int boxHeight	= rows + 2;
X   int xpos		= xplace;
X   int ypos		= yplace;
X   int x		= 0;
X
X   /* Determine the box width.						*/
X   for (x=0; x < rows; x++)
X   {
X      /* Translate the char * to a chtype.				*/
X      label->info[x]	= char2Chtype (mesg[x], &label->infoLen[x], &label->infoPos[x]);
X      boxWidth		= MAXIMUM(boxWidth, label->infoLen[x]);
X   }
X   boxWidth += 2;
X
X   /* Create the string alignments.					*/
X   for (x=0; x < rows; x++)
X   {
X      label->infoPos[x]	= justifyString (boxWidth, label->infoLen[x], label->infoPos[x]);
X   }
X
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Create the label							*/
X   label->parent	= cdkscreen->window;
X   label->win		= newwin (boxHeight, boxWidth, ypos, xpos);
X   label->shadowWin	= (WINDOW *)NULL;
X   label->xpos		= xpos;
X   label->ypos		= ypos;
X   label->rows		= rows;
X   label->width		= boxWidth;
X   label->box		= box;
X   label->shadow	= shadow;
X
X   /* Is the window NULL???						*/
X   if (label->win == (WINDOW *)NULL) 
X   {
X      /* Free up any memory used.					*/
X      for (x=0; x < rows; x++)
X      {
X         freeChtype (label->info[x]);
X      }
X      free(label);
X
X      /* Return a NULL pointer.						*/
X      return ( (CDKLABEL *)NULL );
X   }
X
X   /* If a shadow was requested, then create the shadow window.		*/
X   if (shadow)
X   {
X      label->shadowWin	= newwin (boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vLABEL, label);
X
X   /* Return the label pointer.						*/
X   return (label);
}
X
/*
X * This sets the information within the label.
X */
void setCDKLabel (CDKLABEL *label, char **info, int infoSize, boolean Box)
{ 
X   /* Declare local vairables.						*/
X   int x;
X
X   /* Clean out the old message.					*/
X   for (x=0; x < label->rows; x++)
X   {
X      freeChtype (label->info[x]);   
X      label->infoPos[x] = 0;
X      label->infoLen[x] = 0;
X   }
X
X   /* Keep some vairables.						*/
X   label->box = Box;
X   label->rows = (infoSize < label->rows ? infoSize : label->rows);
X
X   /* Copy in the new message.						*/
X   for (x=0; x < label->rows; x++)
X   {
X      label->info[x]	= char2Chtype (info[x], &label->infoLen[x], &label->infoPos[x]);
X      label->infoPos[x]	= justifyString (label->width, label->infoLen[x], label->infoPos[x]);
X   }
X
X   /* Redraw the label widget.						*/
X   drawCDKLabel (label, label->box);
}
X
/*
X * This draws the label widget.
X */
void drawCDKLabel (CDKLABEL *label, boolean Box)
{
X   /* Declare local variables.						*/
X   int x = 0;
X   
X   /* Keep the box information.						*/
X   label->box	= Box;
X
X   /* Erase the label widget from the screen.				*/
X   eraseCDKLabel (label);
X
X   /* Is there a shadow???						*/
X   if (label->shadow)
X   {
X      drawShadow (label->shadowWin);
X   }
X
X   /* Box the widget if asked.						*/
X   if (label->box)
X   {
X      box (label->win, ACS_VLINE, ACS_HLINE);
X   }
X
X   /* Draw in the message.						*/
X   for (x=0; x < label->rows; x++)
X   {
X      writeChtype (label->win, label->infoPos[x], x+1, label->info[x], HORIZONTAL, 0, label->infoLen[x]);
X   }
X   wrefresh (label->win);
}
X
/*
X * This erases the label widget.
X */
void eraseCDKLabel (CDKLABEL *label)
{
X   werase (label->win);
X   wrefresh (label->win);
X
X   /* Do we need to erase the shadow win.				*/
X   if (label->shadow)
X   {
X      werase (label->shadowWin);
X      wrefresh (label->shadowWin);
X   }
}
X
/*
X * This destroys the label object pointer.
X */
void destroyCDKLabel (CDKLABEL *label)
{
X   /* Declare local variables.						*/
X   int x		= 0;
X
X   /* Erase the old label.						*/
X   eraseCDKLabel (label);
X
X   /* Free up the character pointers.					*/
X   for (x=0; x < label->rows ; x++)
X   {
X      freeChtype (label->info[x]);
X   }
X
X   /* Free up the window pointers.					*/
X   delwin (label->win);
X
X   /* Is there a shadow with this widget???				*/
X   if (label->shadow)
X   {
X      delwin (label->shadowWin);
X   }
X 
X   /* Unregister the object.						*/
X   unregisterCDKObject (vLABEL, label);
X
X   /* Free the object pointer.						*/
X   free (label);
}
X
/*
X * This pauses until a user hits a key...
X */
char waitCDKLabel (CDKLABEL *label, char key)
{
X   /* If the key is null, we'll accept anything.			*/
X   if ( key == (char)NULL )
X   {
X      return (wgetch (label->win));
X   }
X   else
X   {
X      /* Only exit when a specific key is hit.				*/
X      char newkey;
X      for (;;)
X      {
X         newkey = wgetch(label->win);
X         if (newkey == key)
X         {
X            return ( newkey );
X         }
X      }
X   }
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/label.c' &&
  chmod 0444 'cdk4.8.0/label.c' ||
  echo 'restore of cdk4.8.0/label.c failed'
  shar_count="`wc -c < 'cdk4.8.0/label.c'`"
  test 4959 -eq "$shar_count" ||
    echo "cdk4.8.0/label.c: original size 4959, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/marquee.c ==============
if test -f 'cdk4.8.0/marquee.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/marquee.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/marquee.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'cdk4.8.0/marquee.c' &&
#include "cdk.h"
X
/*
X * $Author: mikeg $
X * $Date: 1996/02/28 14:59:06 $
X * $Revision: 1.26 $
X */
X
/*
X * This creates a marquee widget.
X */
CDKMARQUEE *newCDKMarquee (CDKSCREEN *cdkscreen, int xplace, int yplace, int width, boolean shadow)
{
X   CDKMARQUEE *marquee	= (CDKMARQUEE *)malloc (sizeof (CDKMARQUEE));
X   int xpos		= xplace;
X   int ypos		= yplace;
X   int boxHeight	= 3;
X   int boxWidth		= width + 2;
X
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Create the marquee pointer.					*/
X   marquee->parent	= cdkscreen->window;
X   marquee->win		= newwin (boxHeight, boxWidth, ypos, xpos);
X   marquee->shadowWin	= (WINDOW *)NULL;
X   marquee->active	= TRUE;
X   marquee->width	= width;
X   marquee->box		= NOBOX;
X   marquee->shadow	= shadow;
X
X   /* Is the window NULL???						*/
X   if (marquee->win == (WINDOW *)NULL)
X   {
X      /* Clean up any memory.						*/
X      free (marquee);
X
X      /* Return a NULL pointer.						*/
X      return ( (CDKMARQUEE *)NULL );
X   }
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vMARQUEE, marquee);
X
X   /* Return the marquee pointer.					*/
X   return(marquee);
}
X
/* 
X * This activates the marquee.
X */
int activateCDKMarquee (CDKMARQUEE *marquee, char *mesg, int delay, int repeat, boolean box)
{
X   /* Declear local variables.						*/
X   chtype *message;
X   int mesglength 	= 0;
X   int startpos		= 0;
X   int firstchar	= 0;
X   int lastchar		= 1;
X   int repeatCount	= 0;
X   int viewsize		= 0;
#ifdef NOUSLEEP
X   int sleeper		= 0;
#endif
X   int x, y, junk;
X
X   /* Keep the box info.						*/
X   marquee->box = box;
X
X   /* Make sure the message has some content.				*/
X   if (mesg == (char *)NULL)
X   {
X      return (-1);
X   }
X   
X   /* Translate the char * to a chtype *				*/
X   message	= char2Chtype (mesg, &mesglength, &junk);
X
X   /* Draw in the marquee.						*/
X   drawCDKMarquee (marquee, box);
X
X   /* Set up the variables.						*/
X   viewsize = lastchar - firstchar;
X   startpos = marquee->width - viewsize + 1;
X
X   /* Start doing the marquee thing...					*/
X   for (;;)
X   {
X      if (marquee->active)
X      {
X         /* Draw in the characters.					*/
X         y = firstchar;
X         for (x=startpos ; x < (startpos+viewsize) ; x++)
X         {
X            mvwaddch (marquee->win, 1, x, message[y]);
X            y++;
X         }
X         wrefresh (marquee->win);
X   
X         /* Set my variables.						*/
X         if (mesglength < marquee->width-2)
X         {
X            if (lastchar < mesglength)
X            {
X               lastchar ++;
X               viewsize ++;
X               startpos = marquee->width - viewsize + 1;
X            }
X            else if (lastchar == mesglength)
X            {
X               if (startpos > 1)
X               {
X                  /* This means the whole string is visible.		*/
X                  startpos --;
X                  viewsize = mesglength;
X               }
X               else
X               {
X                 /* We have to start chopping the viewsize		*/
X                 startpos = 1;
X                 firstchar ++;
X                 viewsize --;
X               }
X            }
X         }
X         else
X         {
X            if (startpos > 1)
X            {
X               lastchar ++;
X               viewsize ++;
X               startpos --;
X            }
X            else
X            {
X               if (lastchar < mesglength)
X               {
X                  firstchar ++;
X                  lastchar  ++;
X                  viewsize = marquee->width;
X                  startpos = 1;
X               }
X               else
X               {
X                  firstchar ++;
X                  viewsize --;
X                  startpos = 1;
X               }
X            }
X         }
X
X         /* OK, lets check if we have to start over.			*/
X         if ( viewsize == 0 && firstchar == mesglength)
X         {
X            /* Check if we need to repeat or not.			*/
X            repeatCount ++;
X            if (repeat > 0 && repeatCount == repeat)
X            {
X               freeChtype (message);
X               return (0);
X            }
X
X            /* Time to start over. 					*/
X            mvwaddch (marquee->win, 1, 1, ' '|A_NORMAL);
X            wrefresh (marquee->win);
#ifndef AIX
X            curs_set(0);
#endif
X            firstchar = 0;
X            lastchar = 1;
X            viewsize = lastchar - firstchar;
X            startpos = marquee->width - viewsize + 1;
X         }
X   
X         /* Now sleep							*/
#ifdef NOUSLEEP
X         for (sleeper = 0; sleeper <= (delay * 250) ; sleeper++) {}
#else
X         usleep ( (delay * 10000) );
#endif
X      }
X      else
X      {
X         printf ("\r\n\r\n\r\n\r\nMarquee turned off\r\n");
X         }
X   }
}
X
/*
X * This draws the marquee widget on the screen.
X */
void drawCDKMarquee (CDKMARQUEE *marquee, boolean Box)
{
X   /* Keep the box information.						*/
X   marquee->box	= Box;
X
X   /* Erase the old object...						*/
X   eraseCDKMarquee (marquee);
X
X   /* Do we need to draw a shadow???					*/
X   if (marquee->shadow)
X   {
X      drawShadow (marquee->shadowWin);
X   }
X
X   /* Box it if needed.							*/
X   if (Box)
X   {
X      box (marquee->win, ACS_VLINE, ACS_HLINE);
X      wrefresh (marquee->win);
X   }
}
X
/*
X * This destroys the marquee.
X */
void destroyCDKMarquee (CDKMARQUEE *marquee)
{
X   /* Erase the object.							*/
X   eraseCDKMarquee (marquee);
X
X   /* Clean up the windows.						*/
X   delwin (marquee->win);
X   if (marquee->shadow)
X   {
X      delwin (marquee->shadowWin);
X   }
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vMARQUEE, marquee);
X   
X   /* Finish cleaning up.						*/
X   free (marquee);
}
X
/*
X * This erases the marquee.
X */
void eraseCDKMarquee (CDKMARQUEE *marquee)
{
X   werase (marquee->win);
X   wrefresh (marquee->win);
X   if (marquee->shadow)
X   {
X      werase (marquee->shadowWin);
X      wrefresh (marquee->shadowWin);
X   }
}
SHAR_EOF
  $shar_touch -am 0709111596 'cdk4.8.0/marquee.c' &&
  chmod 0444 'cdk4.8.0/marquee.c' ||
  echo 'restore of cdk4.8.0/marquee.c failed'
  shar_count="`wc -c < 'cdk4.8.0/marquee.c'`"
  test 5909 -eq "$shar_count" ||
    echo "cdk4.8.0/marquee.c: original size 5909, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= cdk4.8.0/matrix.c ==============
if test -f 'cdk4.8.0/matrix.c' && test X"$1" != X"-c"; then
  echo 'x - skipping cdk4.8.0/matrix.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting cdk4.8.0/matrix.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 cdk4.8.0/matrix.c
M(VEN8VQU9&4@(F-D:RYH(@H*+RH*("H@)$%U=&AO<CH@9VQO=F5R("0*("H@
M)$1A=&4Z(#$Y.38O,#<O,#D@,34Z,#DZ-#0@)`H@*B`D4F5V:7-I;VXZ(#$N
M.3,@)`H@*B\*"B\J($1E8V%L<F4@9VQO8F%L('9A<G,N"0D)"0D)"2HO"G9O
M:60@<F5D<F%W5&ET;&5S("A#1$M-051225@@*FUA=')I>"P@:6YT(')O=RP@
M:6YT(&-O;"D["F5X=&5R;B!C:&%R("I'4&%S=&5"=69F97(["@HO*@H@*B!4
M:&ES(&9U;F-T:6]N(&-R96%T97,@=&AE(&UA=')I>"!W:61G970N"B`J+PI#
M1$M-051225@@*FYE=T-$2TUA=')I>"`H0T1+4T-2145.("IC9&MS8W)E96XL
M(&EN="!X<&QA8V4L(&EN="!Y<&QA8V4L(&EN="!R;W=S+"!I;G0@8V]L<RP@
M:6YT('9R;W=S+"!I;G0@=F-O;',L(&-H87(@*BIR;W=T:71L97,L(&-H87(@
M*BIC;VQT:71L97,L(&EN="`J8V]L=VED=&AS+"!I;G0@*F-O;'9A;'5E<RP@
M:6YT(')S<&%C92P@:6YT(&-S<&%C92P@8VAT>7!E(&9I;&QE<BP@:6YT(&1O
M;6EN86YT+"!B;V]L96%N(&)O>$UA=')I>"P@8F]O;&5A;B!B;WA#96QL+"!B
M;V]L96%N('-H861O=RD*>PH@("`O*B!$96-L87)E(&QO8V%L('9A<FEA8FQE
M<RX)"0D)"0DJ+PH@("!#1$M-051225@@*FUA=')I>`D]("A#1$M-051225@@
M*BEM86QL;V,@*'-I>F5O9BA#1$M-051225@I*3L*("`@:6YT(&)O>$AE:6=H
M=`D](#`["B`@(&EN="!B;WA7:61T:`D)/2`P.PH@("!I;G0@>'!O<PD)/2!X
M<&QA8V4["B`@(&EN="!Y<&]S"0D]('EP;&%C93L*("`@:6YT(&UA>%)O=U1I
M=&QE5VED=&@)/2`P.PH@("!I;G0@8F5G>"P@8F5G>2P@>"P@>2P@>BP@=RP@
M8V5L;'=I9'1H.PH@("!I;G0@<F]W4W!A8V4)"3T@34%824U532`H,"P@<G-P
M86-E*3L*("`@:6YT(&-O;%-P86-E"0D]($U!6$E-54T@*#`L(&-S<&%C92D[
M"@H@("`O*B!-86ME('-U<F4@=&AA="!T:&4@;G5M8F5R(&]F(')O=W,O8V]L
M<R]V<F]W<R]V8V]L<R!I<R!N;W0@>F5R;RX)*B\*("`@:68@*')O=W,@/3T@
M,"!\?"!C;VQS(#T](#`@?'P@=G)O=W,@/3T@,"!\?"!V8V]L<R`]/2`P*0H@
M("!["B`@("`@("\J($9R964@=7`@86YY('5S960@;65M;W)Y+@D)"0D)*B\*
M("`@("`@9G)E92`H;6%T<FEX*3L*"B`@("`@("\J(%)E='5R;B!A($Y53$P@
M<&]I;G1E<BX)"0D)"0DJ+PH@("`@("!R971U<FX@*"A#1$M-051225@@*BE.
M54Q,*3L*("`@?0H*("`@+RH@36%K92!S=7)E('1H92!N=6UB97(@;V8@=FER
M='5A;"!C96QL<R!I<R!N;W0@;&%R9V5R('1H86X)"2HO"B`@("\J('1H92!P
M:'ES:6-A;"!S:7IE+@D)"0D)"2HO"B`@('9R;W=S(#T@*'9R;W=S(#X@<F]W
M<R`_(')O=W,@.B!V<F]W<RD["B`@('9C;VQS(#T@*'9C;VQS(#X@8V]L<R`_
M(&-O;',@.B!V8V]L<RD["@H@("`O*B!$971E<FUI;F4@=&AE(&AE:6=H="!O
M9B!T:&4@8F]X+@D)"0D)*B\*("`@9F]R("AX/3$[('@@/#T@=G)O=W,[('@K
M*RD*("`@>PH@("`@("!B;WA(96EG:'0@*ST@,R`K(')O=U-P86-E.PH@("!]
M"@H@("`O*B!$971E<FUI;F4@=&AE(&UA>&EM=6T@<F]W('1I=&QE('=I9'1H
M"0D)"2HO"B`@(&UA>%)O=U1I=&QE5VED=&@@/2`P.PH@("!F;W(@*'@],3L@
M>"`\/2!R;W=S.R!X*RLI"B`@('L*("`@("`@;6%T<FEX+3YR;W=T:71L95MX
M72`](&-H87(R0VAT>7!E("AR;W=T:71L97-;>%TL("9M871R:7@M/G)O=W1I
M=&QE3&5N6WA=+"`F;6%T<FEX+3YR;W=T:71L95!O<UMX72D["B`@("`@(&UA
M>%)O=U1I=&QE5VED=&@@/2!-05A)355-("AM87A2;W=4:71L95=I9'1H+"!M
M871R:7@M/G)O=W1I=&QE3&5N6WA=*3L*("`@?0H@("!M871R:7@M/FUA>')T
M(#T@;6%X4F]W5&ET;&57:61T:"`K(#(["B`@(&)O>%=I9'1H(#T@;6%T<FEX
M+3YM87AR=#L*"B`@("\J(%=E(&YE960@=&\@<F5J=7-T:69Y('1H92!R;W<@
M=&ET;&4@8V5L;"!I;F9O+@D)"2HO"B`@(&9O<B`H>#TQ.R!X(#P](')O=W,[
M('@K*RD*("`@>PH@("`@("!M871R:7@M/G)O=W1I=&QE4&]S6WA=(#T@:G5S
M=&EF>5-T<FEN9R`H;6%T<FEX+3YM87AR="P@;6%T<FEX+3YR;W=T:71L94QE
M;EMX72P@;6%T<FEX+3YR;W=T:71L95!O<UMX72D["B`@('T*"B`@("\J($1E
M=&5R;6EN92!T:&4@=VED=&@@;V8@=&AE(&UA=')I>"X)"0D)*B\*("`@9F]R
M("AX/3$[('@@/#T@=F-O;',[('@K*RD*("`@>PH@("`@("!B;WA7:61T:"`K
M/2!C;VQW:61T:'-;>%T@*R`S("L@8V]L4W!A8V4["B`@('T*("`@8F]X5VED
M=&@M+3L*("`@8F]X2&5I9VAT*RL["@H@("`O*B!296IU<W1I9GD@=&AE('@@
M86YD('D@<&]S:71I;VYS(&EF('=E(&YE960@=&\N"0D)*B\*("`@86QI9VYX
M>2`H8V1K<V-R965N+3YW:6YD;W<L("9X<&]S+"`F>7!O<RP@8F]X5VED=&@L
M(&)O>$AE:6=H="D["@H@("`O*B!-86ME('1H92!P;W`M=7`@=VEN9&]W+@D)
M"0D)"2HO"B`@(&UA=')I>"T^=VEN(#T@;F5W=VEN("AB;WA(96EG:'0L(&)O
M>%=I9'1H+"!Y<&]S+"!X<&]S*3L*"B`@("\J($-H96-K(&EF('1H92!N97<@
M=VEN9&]W(&ES($Y53$P@;W(@;F]T+@D)"0DJ+PH@("!I9B`H;6%T<FEX+3YW
M:6X@/3T@*%=)3D1/5R`J*4Y53$PI"B`@('L*("`@("`@+RH@1G)E92!U<"!A
M;GD@=7-E9"!M96UO<GDN"0D)"0DJ+PH@("`@("!F;W(@*'H],3L@>B`\/2!R
M;W=S.R!Z*RLI"B`@("`@('L*("`@("`@("`@9G)E94-H='EP92`H;6%T<FEX
M+3YR;W=T:71L95MZ72D["B`@("`@('T*("`@("`@9G)E92`H;6%T<FEX*3L*
M"B`@("`@("\J(%)E='5R;B!A($Y53$P@<&]I;G1E<BX)"0D)"0DJ+PH@("`@
M("!R971U<FX@*"A#1$M-051225@@*BE.54Q,*3L*("`@?0H*("`@+RH@36%K
M92!T:&4@<W5B=VEN9&]W<R!I;B!T:&4@<&]P+75P+@D)"0DJ+PH@("!B96=X
M(#T@>'!O<SL*("`@8F5G>2`]('EP;W,@*R`Q.PH*("`@+RH@36%K92!T:&4@
M)V5M<'1Y)R`P>#`@8V5L;"X)"0D)"2HO"B`@(&UA=')I>"T^8V5L;%LP75LP
M72`]('-U8G=I;B`H;6%T<FEX+3YW:6XL(#,L(&UA=')I>"T^;6%X<G0L(&)E
M9WDL(&)E9W@I.PH@("!B96=X("L](&UA=')I>"T^;6%X<G0@*R`Q.PH*("`@
M+RH@36%K92!T:&4@8V]L=6UN('1I=&QE<RX)"0D)"0DJ+PH@("!F;W(@*'@]
M,3L@>"`\/2!V8V]L<SL@>"LK*0H@("!["B`@("`@(&-E;&QW:61T:"`](&-O
M;'=I9'1H<UMX72`K(#,["B`@("`@(&UA=')I>"T^8V5L;%LP75MX72`]('-U
M8G=I;B`H;6%T<FEX+3YW:6XL(#$L(&-E;&QW:61T:"P@8F5G>2P@8F5G>"D[
M"@H@("`@("`O*B!)<R!T:&4@<W5B=VEN9&]W($Y53$P)"0D)"0DJ+PH@("`@
M("!I9B`H;6%T<FEX+3YC96QL6S!=6WA=(#T]("A724Y$3U<@*BE.54Q,*0H@
M("`@("!["B`@("`@("`@("\J($9R964@=7`@86YY('5S960@;65M;W)Y+@D)
M"0D)*B\*("`@("`@("`@9F]R("AZ/3$[('H@/#T@<F]W<SL@>BLK*0H@("`@
M("`@("!["B`@("`@("`@("`@(&9R965#:'1Y<&4@*&UA=')I>"T^<F]W=&ET
M;&5;>ETI.PH@("`@("`@("!]"@H@("`@("`@("`O*B!792!H879E('1O(&1E
M;&5T92!A;GD@=VEN9&]W<R!C<F5A=&5D('-O(&9A<BX)"2HO"B`@("`@("`@
M(&9O<B`H>CTQ.R!Z(#P@>#L@>BLK*0H@("`@("`@("!["B`@("`@("`@("`@
M(&1E;'=I;B`H;6%T<FEX+3YC96QL6S!=6WI=*3L*("`@("`@("`@?0H@("`@
M("`@("!F<F5E("AM871R:7@I.PH*("`@("`@("`@+RH@4F5T=7)N(&$@3E5,
M3"!P;VEN=&5R+@D)"0D)*B\*("`@("`@("`@<F5T=7)N("@H0T1+34%44DE8
M("HI3E5,3"D["B`@("`@('T*("`@("`@8F5G>"`K/2`@8V5L;'=I9'1H("L@
M8V]L4W!A8V4@+2`Q.PH@("!]"B`@(&)E9WD@*RL["@H@("`O*B!-86ME('1H
M92!M86EN(&-E;&P@8F]D>0D)"0D)"2HO"B`@(&9O<B`H>#TQ.R!X(#P]('9R
M;W=S.R!X*RLI"B`@('L*("`@("`@+RH@36%K92!T:&4@<F]W('1I=&QE<PD)
M"0D)"2HO"B`@("`@(&UA=')I>"T^8V5L;%MX75LP72`]('-U8G=I;B`H;6%T
M<FEX+3YW:6XL(#,L(&UA=')I>"T^;6%X<G0L(&)E9WDL('AP;W,K,2D["@H@
M("`@("`O*B!)<R!T:&4@=VEN9&]W($Y53$P)"0D)"0DJ+PH@("`@("!I9B`H
M;6%T<FEX+3YC96QL6WA=6S!=(#T]("A724Y$3U<@*BE.54Q,*0H@("`@("![
M"B`@("`@("`@("\J($9R964@=7`@86YY('5S960@;65M;W)Y+@D)"0D)*B\*
M("`@("`@("`@9F]R("AZ/3$[('H@/#T@<F]W<SL@>BLK*0H@("`@("`@("![
M"B`@("`@("`@("`@(&9R965#:'1Y<&4@*&UA=')I>"T^<F]W=&ET;&5;>ETI
M.PH@("`@("`@("!]"@H@("`@("`@("`O*B!792!H879E('1O(&1E;&5T92!A
M;GD@=VEN9&]W<R!C<F5A=&5D('-O(&9A<BX)"2HO"B`@("`@("`@(&9O<B`H
M>CTQ.R!Z(#P]('9C;VQS.R!Z*RLI"B`@("`@("`@('L*("`@("`@("`@("`@
M9&5L=VEN("AM871R:7@M/F-E;&Q;,%U;>ETI.PH@("`@("`@("!]"B`@("`@
M("`@(&9O<B`H>CTQ.R!Z(#P@>"`[('HK*RD*("`@("`@("`@>PH@("`@("`@
M("`@("!D96QW:6X@*&UA=')I>"T^8V5L;%MZ75LP72D["B`@("`@("`@('T*
M("`@("`@("`@9G)E92`H;6%T<FEX*3L*"B`@("`@("`@("\J(%)E='5R;B!A
M($Y53$P@<&]I;G1E<BX)"0D)"2HO"B`@("`@("`@(')E='5R;B`H*$-$2TU!
M5%))6"`J*4Y53$PI.PH@("`@("!]"@H@("`@("`O*B!3970@=&AE('-T87)T
M(&]F('1H92!X('!O<VET:6]N+@D)"0DJ+PH@("`@("!B96=X(#T@>'!O<R`K
M(&UA=')I>"T^;6%X<G0@*R`Q.PH*("`@("`@+RH@36%K92!T:&4@8V5L;',)
M"0D)"0D)*B\*("`@("`@9F]R("AY/3$[('D@/#T@=F-O;',[('DK*RD*("`@
M("`@>PH@("`@("`@("!C96QL=VED=&@@/2!C;VQW:61T:'-;>5T@*R`S.PH@
M("`@("`@("!M871R:7@M/F-E;&Q;>%U;>5T@/2!S=6)W:6X@*&UA=')I>"T^
M=VEN+"`T+"!C96QL=VED=&@L(&)E9WDL(&)E9W@I.PH*("`@("`@("`@+RH@
M27,@=&AE(&-E;&P@3E5,3#\_/PD)"0D)"2HO"B`@("`@("`@(&EF("AM871R
M:7@M/F-E;&Q;>%U;>5T@/3T@*%=)3D1/5R`J*4Y53$PI"B`@("`@("`@('L*
M("`@("`@("`@("`@+RH@1G)E92!U<"!A;GD@=7-E9"!M96UO<GDN"0D)"0DJ
M+PH@("`@("`@("`@("!F;W(@*'D],3L@>2`\/2!R;W=S.R!Y*RLI"B`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@9G)E94-H='EP92`H;6%T<FEX+3YR
M;W=T:71L95MY72D["B`@("`@("`@("`@('T*"B`@("`@("`@("`@("\J(%=E
M(&AA=F4@=&\@9&5L971E(&%N>2!W:6YD;W=S(&-R96%T960@<V\@9F%R+@D)
M*B\*("`@("`@("`@("`@9F]R("AY/3$[('D@/#T@=F-O;',[('DK*RD*("`@
M("`@("`@("`@>PH@("`@("`@("`@("`@("!D96QW:6X@*&UA=')I>"T^8V5L
M;%LP75MY72D["B`@("`@("`@("`@('T*("`@("`@("`@("`@9F]R("AY/3$[
M('D@/"!V<F]W<R`[('DK*RD*("`@("`@("`@("`@>PH@("`@("`@("`@("`@
M("!D96QW:6X@*&UA=')I>"T^8V5L;%MY75LP72D["B`@("`@("`@("`@('T*
M("`@("`@("`@("`@9F]R("AW/3$[('<@/#T@=G)O=W,[('<K*RD*("`@("`@
M("`@("`@>PH@("`@("`@("`@("`@("!F;W(@*'H],3L@>B`\/2!Y.R!Z*RLI
M"B`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@9&5L=VEN("AM
M871R:7@M/F-E;&Q;=UU;>ETI.PH@("`@("`@("`@("`@("!]"B`@("`@("`@
M("`@('T*("`@("`@("`@("`@9G)E92`H;6%T<FEX*3L*"B`@("`@("`@("`@
M("\J(%)E='5R;B!A($Y53$P@<&]I;G1E<BX)"0D)"2HO"B`@("`@("`@("`@
M(')E='5R;B`H*$-$2TU!5%))6"`J*4Y53$PI.PH@("`@("`@("!]"B`@("`@
M("`@(&)E9W@@*ST@8V5L;'=I9'1H("L@8V]L4W!A8V4@+2`Q.PH@("`@("`@
M("!K97EP860@*&UA=')I>"T^8V5L;%MX75MY72P@5%)512D["B`@("`@('T*
M("`@("`@8F5G>2`K/2!R;W=3<&%C92`K(#(["B`@('T*"B`@("\J($-O<'D@
M=&AE('1I=&QE<R!I;G1O('1H92!S='5R8W1U<F4N"0D)"2HO"B`@(&9O<B`H
M>#TQ.R!X(#P](&-O;',[('@K*RD*("`@>PH@("`@("!M871R:7@M/F-O;'1I
M=&QE6WA="3T@8VAA<C)#:'1Y<&4@*&-O;'1I=&QE<UMX72P@)FUA=')I>"T^
M8V]L=&ET;&5,96Y;>%TL("9M871R:7@M/F-O;'1I=&QE4&]S6WA=*3L*("`@
M("`@;6%T<FEX+3YC;VQT:71L95!O<UMX70D](&IU<W1I9GE3=')I;F<@*&-O
M;'=I9'1H<UMX72P@;6%T<FEX+3YC;VQT:71L94QE;EMX72P@;6%T<FEX+3YC
M;VQT:71L95!O<UMX72D["B`@("`@(&UA=')I>"T^8V]L=VED=&AS6WA="3T@
M8V]L=VED=&AS6WA=.PH@("!]"@H@("`O*B!-86ME(')O;VT@9F]R('1H92!C
M96QL(&EN9F]R;6%T:6]N+@D)"0DJ+PH@("!F;W(@*'@],3L@>"`\/2!R;W=S
M.R!X*RLI"B`@('L*("`@("`@9F]R("AY/3$[('D@/#T@8V]L<SL@>2LK*0H@
M("`@("!["B-I9F1E9B!.3T193D%,3$]#"B`@("`@("`@(&UA=')I>"T^:6YF
M;UMX75MY70D]("AC:&%R("HI;6%L;&]C("AS:7IE;V8@*&-H87(I("H@,C4V
M*3L*(V5L<V4*("`@("`@("`@;6%T<FEX+3YI;F9O6WA=6WE="3T@*&-H87(@
M*BEM86QL;V,@*'-I>F5O9B`H8VAA<BD@*B`H8V]L=VED=&AS6WE=*S$I*3L*
M(V5N9&EF"B`@("`@("`@(&UA=')I>"T^8V]L=F%L=65S6WE="3T@8V]L=F%L
M=65S6WE=.PH@("`@("`@("!M871R:7@M/F-O;'=I9'1H<UMY70D](&-O;'=I
M9'1H<UMY73L*("`@("`@("`@8VQE86Y#:&%R("AM871R:7@M/FEN9F];>%U;
M>5TL(&-O;'=I9'1H<UMY72LQ+"`G7#`G*3L*("`@("`@?0H@("!]"@H@("`O
M*B!+965P('1H92!R97-T(&]F('1H92!I;F9O+@D)"0D)*B\*("`@;6%T<FEX
M+3YP87)E;G0)"3T@8V1K<V-R965N+3YW:6YD;W<["B`@(&UA=')I>"T^<F]W
M<PD)"3T@<F]W<SL*("`@;6%T<FEX+3YC;VQS"0D)/2!C;VQS.PH@("!M871R
M:7@M/G9R;W=S"0D]('9R;W=S.PH@("!M871R:7@M/G9C;VQS"0D]('9C;VQS
M.PH@("!M871R:7@M/G)O=U-P86-E"0D](')O=U-P86-E.PH@("!M871R:7@M
M/F-O;%-P86-E"0D](&-O;%-P86-E.PH@("!M871R:7@M/F9I;&QE<@D)/2!F
M:6QL97(["B`@(&UA=')I>"T^9&]M:6YA;G0)"3T@9&]M:6YA;G0["B`@(&UA
M=')I>"T^<F]W"0D)/2`Q.PH@("!M871R:7@M/F-O;`D)"3T@,3L*("`@;6%T
M<FEX+3YC<F]W"0D)/2`Q.PH@("!M871R:7@M/F-C;VP)"0D](#$["B`@(&UA
M=')I>"T^=')O=PD)"3T@,3L*("`@;6%T<FEX+3YL8V]L"0D)/2`Q.PH@("!M
M871R:7@M/F]L9&-R;W<)"3T@,3L*("`@;6%T<FEX+3YO;&1C8V]L"0D](#$[
M"B`@(&UA=')I>"T^;VQD=G)O=PD)/2`Q.PH@("!M871R:7@M/F]L9'9C;VP)
M"3T@,3L*("`@;6%T<FEX+3YE>&ET5'EP90D)/2!V3D5615)?04-4259!5$5$
M.PH@("!M871R:7@M/F)O>$UA=')I>`D)/2!B;WA-871R:7@["B`@(&UA=')I
M>"T^8F]X0V5L;`D)/2!B;WA#96QL.PH@("!M871R:7@M/G-H861O=PD)/2!S
M:&%D;W<["B`@(&UA=')I>"T^:&EG:&QI9VAT"0D]($%?4D5615)313L*("`@
M;6%T<FEX+3YC86QL8F%C:V9N"0D]("AV;VED("HI)D-$2TUA=')I>$-A;&Q"
M86-K.PH@("!M871R:7@M/G!R95!R;V-E<W-&=6YC=&EO;@D]("A04D]#15-3
M1DXI3E5,3#L*("`@;6%T<FEX+3YP<F50<F]C97-S1&%T80D]("AV;VED("HI
M3E5,3#L*("`@;6%T<FEX+3YP;W-T4')O8V5S<T9U;F-T:6]N"3T@*%!23T-%
M4U-&3BE.54Q,.PH@("!M871R:7@M/G!O<W10<F]C97-S1&%T80D]("AV;VED
M("HI3E5,3#L*"B`@("\J($1O('=E('=A;G0@82!S:&%D;W<_/S\)"0D)"0DJ
M+PH@("!I9B`H<VAA9&]W*0H@("!["B`@("`@(&UA=')I>"T^<VAA9&]W5VEN
M(#T@;F5W=VEN("AB;WA(96EG:'0L(&)O>%=I9'1H+"!Y<&]S*S$L('AP;W,K
M,2D["B`@('T*"B`@("\J($-L96%N('1H92!K97D@8FEN9&EN9W,N"0D)"0D)
M*B\*("`@8VQE86Y#1$M/8FIE8W1":6YD:6YG<R`H=DU!5%))6"P@;6%T<FEX
M*3L*"B`@("\J(%)E9VES=&5R('1H:7,@8F%B>2X)"0D)"0DJ+PH@("!R96=I
M<W1E<D-$2T]B:F5C="`H8V1K<V-R965N+"!V34%44DE8+"!M871R:7@I.PH*
M("`@+RH@4F5T=7)N('1H92!M871R:7@@<&]I;G1E<@D)"0D)"2HO"B`@(')E
M='5R;B`H;6%T<FEX*3L*?0H*+RH@"B`J(%1H:7,@86-T:79A=&5S('1H92!M
M871R:7@N"B`J+PII;G0@86-T:79A=&5#1$M-871R:7@@*$-$2TU!5%))6"`J
M;6%T<FEX+"!C:'1Y<&4@*F%C=&EO;G,I"GL*("`@+RH@1&5C;&%R92!L;V-A
M;"!V87)I86)L97,N"0D)"0D)*B\*("`@:6YT(')E=#L*"B`@("\J($1R87<@
M=&AE(&UA=')I>`D)"0D)"0DJ+PH@("!D<F%W0T1+36%T<FEX("AM871R:7@L
M(&UA=')I>"T^8F]X36%T<FEX*3L*("`@"B`@("\J($-H96-K(&EF(&%C=&EO
M;G,@:7,@3E5,3"X)"0D)"0DJ+PH@("!I9B`H86-T:6]N<R`]/2`H8VAT>7!E
M("HI3E5,3"D*("`@>PH@("`@("!C:'1Y<&4@:6YP=70@/2`H8VAT>7!E*4Y5
M3$P["B`@("`@(&9O<B`H.SLI"B`@("`@('L*("`@("`@("`@+RH@1V5T('1H
M92!I;G!U="X)"0D)"0DJ+PH@("`@("`@("!I;G!U="`]('=G971C:"`H;6%T
M<FEX+3YC96QL6VUA=')I>"T^8W)O=UU;;6%T<FEX+3YC8V]L72D["@H@("`@
M("`@("`O*B!);FIE8W0@=&AE(&-H87)A8W1E<B!I;G1O('1H92!W:61G970N
M"0D)*B\*("`@("`@("`@<F5T(#T@:6YJ96-T0T1+36%T<FEX("AM871R:7@L
M(&EN<'5T*3L*("`@("`@("`@:68@*&UA=')I>"T^97AI=%1Y<&4@(3T@=D5!
M4DQ97T58250I"B`@("`@("`@('L*("`@("`@("`@("`@<F5T=7)N(')E=#L*
M("`@("`@("`@?0H@("`@("!]"B`@('T*("`@96QS90H@("!["B`@("`@(&EN
M="!L96YG=&@@/2!C:&QE;B`H86-T:6]N<RD["B`@("`@(&EN="!X(#T@,#L*
M"B`@("`@("\J($EN:F5C="!E86-H(&-H87)A8W1E<B!O;F4@870@82!T:6UE
M+@D)"0DJ+PH@("`@("!F;W(@*'@],#L@>"`\(&QE;F=T:#L@>"LK*0H@("`@
M("!["B`@("`@("`@(')E="`](&EN:F5C=$-$2TUA=')I>"`H;6%T<FEX+"!A
M8W1I;VYS6WA=*3L*("`@("`@("`@:68@*&UA=')I>"T^97AI=%1Y<&4@(3T@
M=D5!4DQ97T58250I"B`@("`@("`@('L*("`@("`@("`@("`@<F5T=7)N(')E
M=#L*("`@("`@("`@?0H@("`@("!]"B`@('T*("`@"B`@("\J(%-E="!T:&4@
M97AI="!T>7!E(&%N9"!E>&ET+@D)"0D)*B\*("`@;6%T<FEX+3YE>&ET5'EP
M92`]('9%05),65]%6$E4.PH@("!R971U<FX@+3$["GT*"B\J"B`J(%1H:7,@
M:6YJ96-T<R!A('-I;F=L92!C:&%R86-T97(@:6YT;R!T:&4@;6%T<FEX('=I
M9&=E="X*("HO"FEN="!I;FIE8W1#1$M-871R:7@@*$-$2TU!5%))6"`J;6%T
M<FEX+"!C:'1Y<&4@:6YP=70I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I
M86)L97,N"0D)"0D)*B\*("`@:6YT(')E9G)E<VA#96QL<PD]($9!3%-%.PH@
M("!I;G0@;6]V961#96QL"3T@1D%,4T4["B`@(&EN="!C:&%R8V]U;G0)/2`H
M:6YT*7-T<FQE;B`H;6%T<FEX+3YI;F9O6VUA=')I>"T^<F]W75MM871R:7@M
M/F-O;%TI.PH@("!I;G0@<'!2971U<FX)"3T@,3L*("`@:6YT('@L('DL(&EN
M9F]L96X["@H@("`O*B!3970@=&AE(&5X:70@='EP92X)"0D)"0DJ+PH@("!M
M871R:7@M/F5X:714>7!E(#T@=D5!4DQ97T58250["@H@("`O*B!-;W9E('1H
M92!C=7)S;W(@=&\@=&AE(&-O<G)E8W0@<&]S:71I;VX@=VET:&EN('1H92!C
M96QL+@D)*B\*("`@:68@*&UA=')I>"T^8V]L=VED=&AS6VUA=')I>"T^8V-O
M;%T@/3T@,2D*("`@>PH@("`@("!W;6]V92`H;6%T<FEX+3YC96QL6VUA=')I
M>"T^8W)O=UU;;6%T<FEX+3YC8V]L72P@,2P@,2D["B`@('T*("`@96QS90H@
M("!["B`@("`@('=M;W9E("AM871R:7@M/F-E;&Q;;6%T<FEX+3YC<F]W75MM
M871R:7@M/F-C;VQ=+"`Q+"`*"0DH:6YT*7-T<FQE;B`H;6%T<FEX+3YI;F9O
M6VUA=')I>"T^<F]W75MM871R:7@M/F-O;%TI*S$I.PH@("!]"B`@('=R969R
M97-H("AM871R:7@M/F-E;&Q;;6%T<FEX+3YC<F]W75MM871R:7@M/F-C;VQ=
M*3L*"B`@("\J(%!U="!T:&4@9F]C=7,@;VX@=&AE(&-U<G)E;G0@8V5L;`D)
M"0D)*B\*("`@871T<F)O>"`H;6%T<FEX+3YC96QL6VUA=')I>"T^8W)O=UU;
M;6%T<FEX+3YC8V]L72P*("`@"0E!0U-?54Q#3U).15(L"4%#4U]54D-/4DY%
M4BP*("`@"0E!0U-?3$Q#3U).15(L"4%#4U],4D-/4DY%4BP*("`@"0E!0U-?
M2$Q)3D4L"4%#4U]63$E.12P*("`@"0E!7T)/3$0I.PH@("!W<F5F<F5S:"`H
M;6%T<FEX+3YC96QL6VUA=')I>"T^8W)O=UU;;6%T<FEX+3YC8V]L72D["B`@
M(&AI9VAL:6=H=$-$2TUA=')I>$-E;&P@*&UA=')I>"D["@H@("`O*B!#:&5C
M:R!I9B!T:&5R92!I<R!A('!R92UP<F]C97-S(&9U;F-T:6]N('1O(&)E(&-A
M;&QE9"X)"2HO"B`@(&EF("AM871R:7@M/G!R95!R;V-E<W-&=6YC=&EO;B`A
M/2`H4%)/0T534T9.*4Y53$PI"B`@('L*("`@("`@+RH@0V%L;"!T:&4@<')E
M+7!R;V-E<W,@9G5N8W1I;VXN"0D)"0DJ+PH@("`@("!P<%)E='5R;B`]("@H
M4%)/0T534T9.*2AM871R:7@M/G!R95!R;V-E<W-&=6YC=&EO;BDI("AV34%4
M4DE8+"!M871R:7@L(&UA=')I>"T^<')E4')O8V5S<T1A=&$L(&EN<'5T*3L*
M("`@?0H*("`@+RH@4VAO=6QD('=E(&-O;G1I;G5E/PD)"0D)"2HO"B`@(&EF
M("AP<%)E='5R;B`A/2`P*0H@("!["B`@("`@("\J($-H96-K('1H92!K97D@
M8FEN9&EN9W,N"0D)"0DJ+PH@("`@("!I9B`H(2!C:&5C:T-$2T]B:F5C=$)I
M;F0@*'9-051225@L(&UA=')I>"P@:6YP=70I*0H@("`@("!["B`@("`@("`@
M('-W:71C:"`H:6YP=70I"B`@("`@("`@('L*("`@("`@("`@("`@8V%S92!#
M1$M?5%)!3E-03U-%(#H*("`@("`@("`@("`@("`@("!B<F5A:SL*"B`@("`@
M("`@("`@(&-A<V4@0T1+7T)%1T]&3$E.12`Z"B`@("`@("`@("`@("`@("`@
M8G)E86L["@H@("`@("`@("`@("!C87-E($-$2U]%3D1/1DQ)3D4@.@H@("`@
M("`@("`@("`@("`@(&)R96%K.PH*("`@("`@("`@("`@8V%S92!+15E?0D%#
M2U-004-%(#H@8V%S92!$14Q%5$4@.B!C87-E("<()R`Z"B`@("`@("`@("`@
M("`@("`@:68@*&UA=')I>"T^8V]L=F%L=65S6VUA=')I>"T^8V]L72`]/2!V
M5DE%5T].3%DI"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@
M("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@("`@
M("!E;'-E"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@
M(&EF("AC:&%R8V]U;G0@/B`P*0H@("`@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("`@("!C:&%R8V]U;G0M+3L*("`@("`@("`@("`@
M("`@("`@("`@("!M=G=D96QC:"`H;6%T<FEX+3YC96QL6VUA=')I>"T^8W)O
M=UU;;6%T<FEX+3YC8V]L72P@,2P@8VAA<F-O=6YT*S$I.PH@("`@("`@("`@
M("`@("`@("`@("`@(&UV=VEN<V-H("AM871R:7@M/F-E;&Q;;6%T<FEX+3YC
M<F]W75MM871R:7@M/F-C;VQ=+"`Q+"!C:&%R8V]U;G0K,2P@;6%T<FEX+3YF
M:6QL97(I.PH@("`@("`@("`@("`@("`@("`@("`@('=R969R97-H("AM871R
M:7@M/F-E;&Q;;6%T<FEX+3YC<F]W75MM871R:7@M/F-C;VQ=*3L*("`@("`@
M("`@("`@("`@("`@("`@("!M871R:7@M/FEN9F];;6%T<FEX+3YR;W==6VUA
M=')I>"T^8V]L75MC:&%R8V]U;G1=(#T@)UPP)SL*("`@("`@("`@("`@("`@
M("`@("!]"B`@("`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@("`@("`@("!"965P*"D["B`@("`@
M("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@('T*("`@("`@("`@
M("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@2T597U))1TA4
M(#H@8V%S92!+15E?5$%"(#H*("`@("`@("`@("`@("`@("!I9B`H;6%T<FEX
M+3YC8V]L("$](&UA=')I>"T^=F-O;',I"B`@("`@("`@("`@("`@("`@>PH@
M("`@("`@("`@("`@("`@("`@("\J(%=E(&%R92!M;W9I;F<@=&\@=&AE(')I
M9VAT+BXN"0D)*B\*("`@("`@("`@("`@("`@("`@("!M871R:7@M/F-O;"LK
M.PH@("`@("`@("`@("`@("`@("`@(&UA=')I>"T^8V-O;"LK.PH@("`@("`@
M("`@("`@("`@("`@(&UO=F5D0V5L;"`](%12544["B`@("`@("`@("`@("`@
M("`@?0H@("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("![
M"B`@("`@("`@("`@("`@("`@("`@+RH@5V4@:&%V92!T;R!S:&EF="!T:&4@
M8V]L=6UN<R!T;R!T:&4@<FEG:'0N"2HO"B`@("`@("`@("`@("`@("`@("`@
M:68@*&UA=')I>"T^8V]L("$](&UA=')I>"T^8V]L<RD*("`@("`@("`@("`@
M("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@("`@;6%T<FEX+3YL8V]L
M*RL["B`@("`@("`@("`@("`@("`@("`@("`@;6%T<FEX+3YC;VPK*SL*("`@
M"B`@("`@("`@("`@("`@("`@("`@("`@+RH@4F5D<F%W('1H92!C;VQU;6X@
M=&ET;&5S+@D)"2HO"B`@("`@("`@("`@("`@("`@("`@("`@:68@*&UA=')I
M>"T^<F]W<R`^(&UA=')I>"T^=G)O=W,I"B`@("`@("`@("`@("`@("`@("`@
M("`@>PH@("`@("`@("`@("`@("`@("`@("`@("`@(')E9')A=U1I=&QE<R`H
M;6%T<FEX+"!&04Q312P@5%)512D["B`@("`@("`@("`@("`@("`@("`@("`@
M?0H@("`@("`@("`@("`@("`@("`@("`@(')E9G)E<VA#96QL<R`](%12544[
M"B`@("`@("`@("`@("`@("`@("`@("`@;6]V961#96QL(#T@5%)513L*("`@
M("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@("`@96QS90H@
M("`@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("`@("`O
M*B!792!A<F4@870@=&AE(&9A<B!R:6=H="!C;VQU;6XL('=E(&YE960@"2HO
M"B`@("`@("`@("`@("`@("`@("`@("`@+RH@<VAI9G0@9&]W;B!O;F4@<F]W
M+"!I9B!W92!C86XN"0DJ+PH@("`@("`@("`@("`@("`@("`@("`@(&EF("AM
M871R:7@M/G)O=R`]/2!M871R:7@M/G)O=W,I"B`@("`@("`@("`@("`@("`@
M("`@("`@>PH@("`@("`@("`@("`@("`@("`@("`@("`@($)E97`H*3L*("`@
M("`@("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@("`@("`@
M96QS90H@("`@("`@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@
M("`@("`@("`@("`O*B!3970@=7`@=&AE(&-O;'5M;G,@:6YF;RX)"0DJ+PH@
M("`@("`@("`@("`@("`@("`@("`@("`@(&UA=')I>"T^8V]L"3T@,3L*("`@
M("`@("`@("`@("`@("`@("`@("`@("!M871R:7@M/FQC;VP)/2`Q.PH@("`@
M("`@("`@("`@("`@("`@("`@("`@(&UA=')I>"T^8V-O;`D](#$["B`@(`H@
M("`@("`@("`@("`@("`@("`@("`@("`@("\J(%-H:69T('1H92!R;W=S+BXN
M"0D)"2HO"B`@("`@("`@("`@("`@("`@("`@("`@("`@:68@*&UA=')I>"T^
M8W)O=R`A/2!M871R:7@M/G9R;W=S*0H@("`@("`@("`@("`@("`@("`@("`@
M("`@('L*("`@("`@("`@("`@("`@("`@("`@("`@("`@("!M871R:7@M/G)O
M=RLK.PH@("`@("`@("`@("`@("`@("`@("`@("`@("`@(&UA=')I>"T^8W)O
M=RLK.PH@("`@("`@("`@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@
M("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@("`@("`@("`@("`@
M>PH@("`@("`@("`@("`@("`@("`@("`@("`@("`@(&UA=')I>"T^<F]W*RL[
M"B`@("`@("`@("`@("`@("`@("`@("`@("`@("`@;6%T<FEX+3YT<F]W*RL[
M"B`@("`@("`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@
M("`@("`@("`@(')E9')A=U1I=&QE<R`H;6%T<FEX+"!44E5%+"!44E5%*3L*
M("`@("`@("`@("`@("`@("`@("`@("`@("!R969R97-H0V5L;',)/2!44E5%
SHAR_EOF
  : || echo 'restore of cdk4.8.0/matrix.c failed'
fi
echo 'End of archive part 4'
echo 'File cdk4.8.0/matrix.c is continued in part 5'
echo 5 > _sharseq.tmp
exit 0
