Newsgroups: comp.sources.unix
From: panos@alumni.cs.colorado.edu (Panos Tsirigotis)
Subject: v29i054: xinetd-2.1.1 - inetd replacement with access control and logging, Patch05
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: panos@alumni.cs.colorado.edu (Panos Tsirigotis)
Posting-Number: Volume 29, Issue 54
Archive-Name: xinetd-2.1.1/patch05

1. What this patch fixes

>From the CHANGELOG file:
   Bug fixes:
      1) xinetd will crash after reconfiguration if there is a running
         server for a service that was removed from the configuration and
         which logs on exit.
      2) xinetd forked process falls in infinite loop if identd server
         sends a reply that is missing the ending CR-LF.
         (bug discovered and fix provided by Laurent.Wacrenier@gin.obspm.fr).
 
We also change the LOGUSER_SUCCESS_TIMEOUT constant in config.h from
0 seconds (i.e. infinite timeout) to 30 seconds. This avoids infinite
waits in case the remote host does not send a RST reply when we
attempt to connect to the IDENTD port, and there is no server
listening at that port.

Finally, the README file was updated with respect to the location of
the latest version of xinetd.


2. How to apply this patch

Cd to the directory that contains the 'xinetd' directory, and use
the command:
	patch -p < "name of this file here"

This patch will modify the files
	README
	xinetd/Makefile
	xinetd/CHANGELOG
	xinetd/service.c
	xinetd/config.h
	xinetd/ident.c
	xinetd/parse.c

The version variable in the Makefile will be changed to 2.1.6.
You will need to recompile xinetd after applying this patch.
The accompanying libraries are *not* affected by this patch.


Prereq: 2.1.5

*** /tmp/xin215/xinetd/Makefile	Sat Oct  7 12:12:08 1995
--- xinetd/Makefile	Mon Oct 16 17:03:40 1995
***************
*** 22,28 ****
  #
  
  NAME					= xinetd
! VERSION				= 2.1.5
  
  #
  # Possible flags that can be defined in DEFS:
--- 22,28 ----
  #
  
  NAME					= xinetd
! VERSION				= 2.1.6
  
  #
  # Possible flags that can be defined in DEFS:
*** /tmp/xin215/xinetd/CHANGELOG	Sat Oct  7 12:12:08 1995
--- xinetd/CHANGELOG	Sun Nov 12 17:49:45 1995
***************
*** 121,123 ****
--- 121,138 ----
  			is called to set the supplementary group id's properly.
  			(bug discovered and fix provided by maf+@osu.edu)
  
+ 2.1.6:
+ 	Bug fixes:
+ 		1) xinetd will crash after reconfiguration if there is a running
+ 			server for a service that was removed from the configuration and
+ 			which logs on exit.
+ 		2) xinetd forked process falls in infinite loop if identd server
+ 			sends a reply that is missing the ending CR-LF.
+ 			(bug discovered and fix provided by Laurent.Wacrenier@gin.obspm.fr).
+ 
+ 	We also change the LOGUSER_SUCCESS_TIMEOUT constant in config.h from
+ 	0 seconds (i.e. infinite timeout) to 30 seconds. This avoids infinite
+ 	waits in case the remote host does not send a RST reply when we attempt
+ 	to connect to the IDENTD port, and there is no server listening at
+ 	that port.
+ 
*** /tmp/xin215/xinetd/service.c	Fri Oct 14 09:48:25 1994
--- xinetd/service.c	Mon Oct 16 17:03:40 1995
***************
*** 369,377 ****
  	deactivate( sp ) ;
     ps.rws.descriptors_free++ ;
  
- 	if ( sp->svc_log )
- 		log_end( SC_LOG( SVC_CONF( sp ) ), sp->svc_log ) ;
- 
  	if ( SVC_IS_ACTIVE( sp ) )
  	{
  		FD_CLR( SVC_FD( sp ), &ps.rws.socket_mask ) ;
--- 369,374 ----
***************
*** 454,459 ****
--- 451,458 ----
  			msg( LOG_DEBUG, func, "ref count of service %s dropped to 0", sid ) ;
  		if ( ! SC_IS_SPECIAL( SVC_CONF( sp ) ) )
  		{
+ 			if ( sp->svc_log )
+ 				log_end( SC_LOG( SVC_CONF( sp ) ), sp->svc_log ) ;
  			svc_deactivate( sp ) ;
  			svc_free( sp ) ;
  		}
*** /tmp/xin215/xinetd/config.h	Fri Oct 14 09:48:17 1994
--- xinetd/config.h	Mon Oct 23 19:07:43 1995
***************
*** 113,119 ****
   * (assuming they are not 'infinite' timeouts).
   */
  #ifndef LOGUSER_SUCCESS_TIMEOUT
! #define LOGUSER_SUCCESS_TIMEOUT		0
  #endif
  #ifndef LOGUSER_FAILURE_TIMEOUT
  #define LOGUSER_FAILURE_TIMEOUT		30
--- 113,119 ----
   * (assuming they are not 'infinite' timeouts).
   */
  #ifndef LOGUSER_SUCCESS_TIMEOUT
! #define LOGUSER_SUCCESS_TIMEOUT		30
  #endif
  #ifndef LOGUSER_FAILURE_TIMEOUT
  #define LOGUSER_FAILURE_TIMEOUT		30
*** /tmp/xin215/xinetd/ident.c	Fri Oct 14 09:48:19 1994
--- xinetd/ident.c	Wed Oct 25 18:37:41 1995
***************
*** 254,259 ****
--- 254,264 ----
  				msg( LOG_ERR, func, "read: %m" ) ;
  				return( CHAR_NULL ) ;
  			}
+ 		if ( cc == 0 )
+ 		{
+ 			msg( LOG_ERR, func, "identd server reply missing ending CR-LF" ) ;
+ 			return( CHAR_NULL ) ;
+ 		}
  		for ( s = p ; s < p + cc ; s++ )
  			if ( *s == '\n' && s != buf && s[-1] == '\r' )
  			{
*** /tmp/xin215/xinetd/parse.c	Fri Oct 14 09:48:24 1994
--- xinetd/parse.c	Sun Nov 26 19:51:01 1995
***************
*** 25,35 ****
  #include "addr.h"
  
  char *malloc() ;
- void endprotoent() ;
- void endpwent() ;
- void endgrent() ;
- int endnetent() ;
- void endhostent() ;
  
  
  void parsemsg() ;
--- 25,30 ----
*** /tmp/xin215/README	Sat Oct  7 12:12:09 1995
--- README	Sun Nov 26 18:54:54 1995
***************
*** 58,64 ****
        6) No limit on number of server arguments
  
  Q. Where can I find the latest-and-greatest version ?
! A. It should be available via anonymous FTP from ftp.irisa.fr
  	in the directory "pub/mirrors/xinetd".
  
  Q. Whom should I thank/blame for this program ?
--- 58,72 ----
        6) No limit on number of server arguments
  
  Q. Where can I find the latest-and-greatest version ?
! A. The xinetd source can be obtained via anonymous FTP from 
! 	gatekeeper.dec.com, in
! 		pub/usenet/comp.sources.unix/volume26/xinetd-2.1.1
! 		pub/usenet/comp.sources.unix/volume27/xinetd-2.1.1
! 		pub/usenet/comp.sources.unix/volume29/xinetd-2.1.1
! 	You will need the contents of *all* of the above directories
! 	(the directories in volumes 27 and 29 contain patches).
! 
! 	The xinetd source is also available from ftp.irisa.fr
  	in the directory "pub/mirrors/xinetd".
  
  Q. Whom should I thank/blame for this program ?

