Newsgroups: comp.sources.unix
From: glover@credit.erin.utoronto.ca (Mike Glover)
Subject: v29i114: cdk-4.7.0 - Curses Development Kit, V4.7.0, Part10/10
References: <1.833427459.28242@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: glover@credit.erin.utoronto.ca (Mike Glover)
Posting-Number: Volume 29, Issue 114
Archive-Name: cdk-4.7.0/part10

#!/bin/sh
# This is `cdk_part.10' (part 10 of a multipart archive).
# Do not concatenate these parts, unpack them in order with `/bin/sh'.
# File `swindow.c' is being continued...
#
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  echo 'WARNING: not restoring timestamps.  Consider getting and'
  echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if test ! -r _sharseq.tmp; then
  echo 'Please unpack part 1 first!'
  exit 1
fi
shar_sequence=`cat _sharseq.tmp`
if test "$shar_sequence" != 10; then
  echo "Please unpack part $shar_sequence next!"
  exit 1
fi
if test ! -f _sharnew.tmp; then
  echo 'x - still skipping swindow.c'
else
  echo 'x - continuing file swindow.c'
  sed 's/^X//' << 'SHAR_EOF' >> '_sharuue.tmp' &&
M.@H@("`@("`@("`@("`@("`@(&EF("AS=VEN9&]W+3YC=7)R96YT5&]P("$]
M('-W:6YD;W<M/FUA>%1O<$QI;F4I"B`@("`@("`@("`@("`@("`@>PH@("`@
M("`@("`@("`@("`@("`@(&EF("@H<W=I;F1O=RT^8W5R<F5N=%1O<"`K('-W
M:6YD;W<M/G9I97=3:7IE*2`\('-W:6YD;W<M/FUA>%1O<$QI;F4I"B`@("`@
M("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@("`@('-W:6YD
M;W<M/F-U<G)E;G14;W`)/2!S=VEN9&]W+3YC=7)R96YT5&]P("L@*'-W:6YD
M;W<M/G9I97=3:7IE("T@,2D["B`@("`@("`@("`@("`@("`@("`@?0H@("`@
M("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("`@("!["B`@
M("`@("`@("`@("`@("`@("`@("`@<W=I;F1O=RT^8W5R<F5N=%1O<`D]('-W
M:6YD;W<M/FUA>%1O<$QI;F4["B`@("`@("`@("`@("`@("`@("`@?0H@("`@
M("`@("`@("`@("`@('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@
M("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@($)E97`H*3L*("`@("`@
M("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@8G)E86L["B`@(`H@("`@
M("`@("`@("!C87-E($M%65](3TU%(#H@8V%S92`G?"<@.@H@("`@("`@("`@
M("`@("`@('-W:6YD;W<M/FQE9G1#:&%R(#T@,#L*("`@("`@("`@("`@("`@
M("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@2T597T5.1"`Z(&-A<V4@
M)R0G(#H*("`@("`@("`@("`@("`@("!S=VEN9&]W+3YL969T0VAA<B`]('-W
M:6YD;W<M/FUA>$QE9G1#:&%R("L@,3L*("`@("`@("`@("`@("`@("!B<F5A
M:SL*("`@"B`@("`@("`@("`@(&-A<V4@)V<G(#H@8V%S92`G,2<@.@H@("`@
M("`@("`@("`@("`@('-W:6YD;W<M/F-U<G)E;G14;W`@/2`P.PH@("`@("`@
M("`@("`@("`@(&)R96%K.PH@("`*("`@("`@("`@("`@8V%S92`G1R<@.B`*
M("`@("`@("`@("`@("`@("!S=VEN9&]W+3YC=7)R96YT5&]P(#T@<W=I;F1O
M=RT^;6%X5&]P3&EN93L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@
M("`@("`@("`@(&-A<V4@)TPG(#H*("`@("`@("`@("`@("`@("!X(#T@*&EN
M="D@*"AS=VEN9&]W+3YI=&5M0V]U;G0@*R!S=VEN9&]W+3YC=7)R96YT5&]P
M*2`O(#(I.PH@("`@("`@("`@("`@("`@(&EF("AX(#P@<W=I;F1O=RT^;6%X
M5&]P3&EN92D*("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@
M("`@<W=I;F1O=RT^8W5R<F5N=%1O<"`]('@["B`@("`@("`@("`@("`@("`@
M?0H@("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("!["B`@
M("`@("`@("`@("`@("`@("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@('T*
M("`@("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@
M)VPG(#H*("`@("`@("`@("`@("`@("!X(#T@*&EN="D@*'-W:6YD;W<M/F-U
M<G)E;G14;W`@+R`R*3L*("`@("`@("`@("`@("`@("!I9B`H>"`^/2`P*0H@
M("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!S=VEN9&]W
M+3YC=7)R96YT5&]P(#T@>#L*("`@("`@("`@("`@("`@("!]"B`@("`@("`@
M("`@("`@("`@96QS90H@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@
M("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@
M("`@("`@(&)R96%K.PH@("`*("`@("`@("`@("`@8V%S92!+15E?4D5455).
M(#H@8V%S92!+15E?5$%"(#H@8V%S92!#1$M?3D585"`Z(&-A<V4@2T597T53
M0R`Z"B`@("`@("`@("`@("`@("`@<F5T=7)N(#$["B`@("`@("`@("`@("`@
M("`@8G)E86L["B`@(`H@("`@("`@("`@("!C87-E($-$2U]2149215-((#H*
M("`@("`@("`@("`@("`@("!R969R97-H0T1+4V-R965N("AS=VEN9&]W+3YS
M8W)E96XI.PH@("`@("`@("`@("`@("`@(&)R96%K.PH@("`*("`@("`@("`@
M("`@9&5F875L="`Z"B`@("`@("`@("`@("`@("`@8G)E86L["B`@("`@("`@
M('T*("`@("`@?0H*("`@("`@+RH@4VAO=6QD('=E(&-A;&P@82!P;W-T+7!R
M;V-E<W,_"0D)"2HO"B`@("`@(&EF("AS=VEN9&]W+3YP;W-T4')O8V5S<T9U
M;F-T:6]N("$]("A04D]#15-31DXI3E5,3"D*("`@("`@>PH@("`@("`@("`H
M*%!23T-%4U-&3BDH<W=I;F1O=RT^<&]S=%!R;V-E<W-&=6YC=&EO;BDI("AV
M4U=)3D1/5RP@<W=I;F1O=RP@<W=I;F1O=RT^<&]S=%!R;V-E<W-$871A+"!I
M;G!U="D["B`@("`@('T*("`@?0H*("`@+RH@4F5D<F%W('1H92!L:7-T"0D)
M"0D)*B\*("`@9')A=T-$2U-W:6YD;W=,:7-T("AS=VEN9&]W+"!S=VEN9&]W
M+3YB;W@I.PH@("!R971U<FX@+3(["GT*"B\J"B`J(%1H:7,@9G5N8W1I;VX@
M9')A=W,@=&AE('-W:6YD;W<@=VEN9&]W('=I9&=E="X*("HO"G9O:60@9')A
M=T-$2U-W:6YD;W<@*$-$2U-724Y$3U<@*G-W:6YD;W<L(&)O;VQE86X@0F]X
M*0I["B`@("\J($ME97`@=&AE(&)O>"!I;F9O<FUA=&EO;BX)"0D)"0DJ+PH@
M("!S=VEN9&]W+3YB;W@)/2!";W@["@H@("`O*B!%<F%S92!T:&4@;VQD(&]B
M:F5C="XN+@D)"0D)"2HO"B`@(&5R87-E0T1+4W=I;F1O=R`H<W=I;F1O=RD[
M"@H@("`O*B!$;R!W92!N965D('1O(&1R87<@:6X@=&AE('-H861O=RX)"0D)
M"2HO"B`@(&EF("AS=VEN9&]W+3YS:&%D;W<I"B`@('L*("`@("`@9')A=U-H
M861O=R`H<W=I;F1O=RT^<VAA9&]W5VEN*3L*("`@?0H*("`@+RH@1')A=R!I
M;B!T:&4@=&ET;&4@:68@=&AE<F4@:7,@;VYE"0D)"0DJ+PH@("!I9B`H<W=I
M;F1O=RT^=&ET;&4@(3T@*&-H='EP92`J*4Y53$PI"B`@('L*("`@("`@=W)I
M=&5#:'1Y<&4@*'-W:6YD;W<M/G=I;BP*"0D)<W=I;F1O=RT^=&ET;&50;W,L
M(#$L"@D)"7-W:6YD;W<M/G1I=&QE+`H)"0E(3U))6D].5$%,+"`P+`H)"0ES
M=VEN9&]W+3YT:71L94QE;BD["B`@('T*("`@"B`@("\J($1R87<@:6X@=&AE
M(&QI<W0N"0D)"0D)"2HO"B`@(&1R87=#1$M3=VEN9&]W3&ES="`H<W=I;F1O
M=RP@0F]X*3L*?0H*+RH*("H@5&AI<R!D<F%W<R!I;B!T:&4@8V]N=&5N=',@
M;V8@=&AE('-C<F]L;&EN9R!W:6YD;W<N"B`J+PIV;VED(&1R87=#1$M3=VEN
M9&]W3&ES="`H0T1+4U=)3D1/5R`J<W=I;F1O=RP@8F]O;&5A;B!";W@I"GL*
M("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@8VAA
M<B!E;7!T>5-T<FEN9ULQ,#`P73L*("`@:6YT(&QA<W1,:6YE+"!X.PH*("`@
M+RH@0W)E871E('1H92!E;7!T>2!S=')I;F<N+BX)"0D)"2HO"B`@(&-L96%N
M0VAA<B`H96UP='E3=')I;F<L('-W:6YD;W<M/F)O>%=I9'1H+"`G("<I.PH*
M("`@+RH@1&5T97)M:6YE('1H92!L87-T(&QI;F4@=&\@9')A=RX)"0D)"2HO
M"B`@(&EF("AS=VEN9&]W+3YI=&5M0V]U;G0@/"!S=VEN9&]W+3YV:65W4VEZ
M92D*("`@>PH@("`@("!L87-T3&EN92`]('-W:6YD;W<M/FET96U#;W5N=#L*
M("`@?0H@("!E;'-E"B`@('L*("`@("`@;&%S=$QI;F4@/2!S=VEN9&]W+3YV
M:65W4VEZ93L*("`@?0H*("`@+RH@4W1A<G0@9')A=VEN9R!I;B!E86-H(&QI
M;F4N"0D)"0DJ+PH@("!F;W(@*'@],#L@>"`\(&QA<W1,:6YE.R!X*RLI"B`@
M('L*("`@("`@+RH@1')A=R!I;B!A;B!E;7!T>2!L:6YE+@D)"0D)"2HO"B`@
M("`@('=R:71E0VAA<B`H<W=I;F1O=RT^=VEN+"`Q+`H)"0ES=VEN9&]W+3YT
M:71L94%D:BMX+`H)"0EE;7!T>5-T<FEN9RP*"0D)2$]225I/3E1!3"P@,2P*
M"0D)<W=I;F1O=RT^8F]X5VED=&@M,2D["@H@("`@("`O*B!$<F%W(&EN('1H
M92!L:6YE+@D)"0D)"2HO"B`@("`@('=R:71E0VAT>7!E("AS=VEN9&]W+3YW
M:6XL"@D)"7-W:6YD;W<M/FEN9F]0;W-;>"MS=VEN9&]W+3YC=7)R96YT5&]P
M72P*"0D)<W=I;F1O=RT^=&ET;&5!9&HK>"P*"0D)<W=I;F1O=RT^:6YF;UMX
M*W-W:6YD;W<M/F-U<G)E;G14;W!=+`H)"0E(3U))6D].5$%,+"`*"0D)<W=I
M;F1O=RT^;&5F=$-H87(L"@D)"7-W:6YD;W<M/FEN9F],96Y;>"MS=VEN9&]W
M+3YC=7)R96YT5&]P72D["B`@('T*"B`@("\J($)O>"!T:&4@=VED9V5T(&EF
M(&YE961E9`D)"0D)"2HO"B`@(&EF("A";W@I"B`@('L*("`@("`@8F]X("AS
M=VEN9&]W+3YW:6XL($%#4U]63$E.12P@04-37TA,24Y%*3L*("`@?0H*("`@
M+RH@4F5F<F5S:"!T:&4@=VEN9&]W+@D)"0D)"2HO"B`@('=R969R97-H("AS
M=VEN9&]W+3YW:6XI.PI]"@HO*@H@*B!4:&ES(&9U;F-T:6]N(&1E<W1R;WES
M('1H92!S8W)O;&QI;F<@=VEN9&]W('=I9&=E="X*("HO"G9O:60@9&5S=')O
M>4-$2U-W:6YD;W<@*$-$2U-724Y$3U<@*G-W:6YD;W<I"GL*("`@+RH@1&5C
M;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@:6YT('@)/2`P.PH*
M("`@+RH@17)A<V4@=&AE(&]B:F5C="X)"0D)"0D)*B\*("`@97)A<V5#1$M3
M=VEN9&]W("AS=VEN9&]W*3L*"B`@("\J($-L96%R(&]U="!T:&4@8VAA<F%C
M=&5R('!O:6YT97)S+@D)"0D)*B\*("`@9F]R("AX/3`[('@@/"!S=VEN9&]W
M+3YI=&5M0V]U;G0[('@K*RD*("`@>PH@("`@("!F<F5E0VAT>7!E("AS=VEN
M9&]W+3YI;F9O6WA=*3L*("`@?0H@("!F<F5E0VAT>7!E("AS=VEN9&]W+3YT
M:71L92D["@H@("`O*B!$96QE=&4@=&AE('=I;F1O=W,N"0D)"0D)*B\*("`@
M9&5L=VEN("AS=VEN9&]W+3YW:6XI.PH@("!I9B`H<W=I;F1O=RT^<VAA9&]W
M*0H@("!["B`@("`@(&1E;'=I;B`H<W=I;F1O=RT^<VAA9&]W5VEN*3L*("`@
M?0H*("`@+RH@56YR96=I<W1E<B!T:&ES(&]B:F5C="X)"0D)"0DJ+PH@("!U
M;G)E9VES=&5R0T1+3V)J96-T("AV4U=)3D1/5RP@<W=I;F1O=RD["@H@("`O
M*B!&:6YI<V@@8VQE86YI;F<@=7`N"0D)"0D)*B\*("`@9G)E92`H<W=I;F1O
M=RD["GT*"B\J"B`J(%1H:7,@9G5N8W1I;VX@97)A<V5S('1H92!S8W)O;&QI
M;F<@=VEN9&]W('=I9&=E="X*("HO"G9O:60@97)A<V5#1$M3=VEN9&]W("A#
M1$M35TE.1$]7("IS=VEN9&]W*0I["B`@('=E<F%S92`H<W=I;F1O=RT^=VEN
M*3L*("`@=W)E9G)E<V@@*'-W:6YD;W<M/G=I;BD["B`@(&EF("AS=VEN9&]W
M+3YS:&%D;W<I"B`@('L*("`@("`@=V5R87-E("AS=VEN9&]W+3YS:&%D;W=7
M:6XI.PH@("`@("!W<F5F<F5S:"`H<W=I;F1O=RT^<VAA9&]W5VEN*3L*("`@
M?0I]"@HO*@H@*B!4:&ES(&5X96,G<R!A(&-O;6UA;F0@86YD(')E9&ER96-T
M<R!T:&4@;W5T<'5T('1O('1H92!S8W)O;&QI;F<@=VEN9&]W+@H@*B\*:6YT
M(&5X96-#1$M3=VEN9&]W("A#1$M35TE.1$]7("IS=VEN9&]W+"!C:&%R("IC
M;VUM86YD+"!I;G0@:6YS97)T4&]S*0I["B`@("\J($1E8VQA<F4@;&]C86P@
M=F%R:6%B;&5S+@D)"0D)"2HO"B`@($9)3$4@*G!S.PH@("!C:&%R('1E;7!;
M-3$S73L*("`@:6YT(&-O=6YT(#T@,#L*"B`@("\J(%1R>2!T;R!O<&5N('1H
M92!C;VUM86YD+@D)"0D)"2HO"B`@(&EF("@H<',@/2!P;W!E;B`H8V]M;6%N
M9"P@(G(B*2D@/3T@3E5,3"D*("`@>PH@("`@("!R971U<FX@+3$["B`@('T*
M"B`@("\J(%-T87)T(')E861I;F<N"0D)"0D)"2HO"B`@('=H:6QE("@H9F=E
M=',@*'1E;7`L(#4Q,BP@<',I("$]("AC:&%R("HI3E5,3"DI"B`@('L*("`@
M("`@:6YT(&QE;B`]('-T<FQE;B`H=&5M<"D["B`@("`@('1E;7!;;&5N+3%=
M(#T@)UPP)SL*"B`@("`@("\J($%D9"!T:&4@;&EN92!T;R!T:&4@<V-R;VQL
M:6YG('=I;F1O=RX)"0D)*B\*("`@("`@861D0T1+4W=I;F1O=R`@*'-W:6YD
M;W<L('1E;7`L(&EN<V5R=%!O<RD["B`@("`@(&-O=6YT*RL["B`@('T*"B`@
M("\J($-L;W-E('1H92!P:7!E+@D)"0D)"0DJ+PH@("!F8VQO<V4@*'!S*3L*
M("`@<F5T=7)N(&-O=6YT.PI]"@HO*@H@*B!4:&ES(&9U;F-T:6]N('-E=',@
M=&AE('!R92UP<F]C97-S(&9U;F-T:6]N+@H@*B\*=F]I9"!S971#1$M3=VEN
M9&]W4')E4')O8V5S<R`H0T1+4U=)3D1/5R`J<W=I;F1O=RP@4%)/0T534T9.
M(&-A;&QB86-K+"!V;VED("ID871A*0I["B`@('-W:6YD;W<M/G!R95!R;V-E
M<W-&=6YC=&EO;B`](&-A;&QB86-K.PH@("!S=VEN9&]W+3YP<F50<F]C97-S
M1&%T82`](&1A=&$["GT*(`HO*@H@*B!4:&ES(&9U;F-T:6]N('-E=',@=&AE
M('!O<W0M<')O8V5S<R!F=6YC=&EO;BX*("HO"G9O:60@<V5T0T1+4W=I;F1O
M=U!O<W10<F]C97-S("A#1$M35TE.1$]7("IS=VEN9&]W+"!04D]#15-31DX@
M8V%L;&)A8VLL('9O:60@*F1A=&$I"GL*("`@<W=I;F1O=RT^<&]S=%!R;V-E
M<W-&=6YC=&EO;B`](&-A;&QB86-K.PH@("!S=VEN9&]W+3YP;W-T4')O8V5S
0<T1A=&$@/2!D871A.PI]"FQB
`
end
SHAR_EOF
  echo 'File swindow.c is complete' &&
  echo 'uudecoding file swindow.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0503190896 'swindow.c' &&
  chmod 0444 'swindow.c' ||
  echo 'restore of swindow.c failed'
  shar_count="`wc -c < 'swindow.c'`"
  test 17611 -eq "$shar_count" ||
    echo "swindow.c: original size 17611, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= template.c ==============
if test -f 'template.c' && test X"$1" != X"-c"; then
  echo 'x - skipping template.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting template.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'template.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/04/16 01:44:01 $
X * $Revision: 1.44 $
X */
extern char *GPasteBuffer, *GEarlyExit;
X
/*
X * This creates a template widget.
X */
CDKTEMPLATE *newCDKTemplate (CDKSCREEN *cdkscreen, int xplace, int yplace, int lplace, char *label, char *plate, char *overlay, boolean box, boolean shadow)
{
X   /* Set up some variables						*/
X   CDKTEMPLATE *template	= (CDKTEMPLATE *)malloc (sizeof (CDKTEMPLATE));
X   int boxWidth			= 0;
X   int boxHeight		= 3;
X   int xpos			= xplace;
X   int ypos			= yplace;
X   int labelxoffset		= 0;
X   int labelyoffset		= 0;
X   int fieldxoffset		= 0;
X   int fieldyoffset		= 0;
X   int fieldWidth		= (int)strlen (plate) + 1;
X   int junk			= 0;
X   char *plainLabel		= (char *)NULL;
X   
X   /* Translate the char * label to a chtype *				*/
X   template->label	= char2Chtype (label, &template->labelLen, &junk);
X   plainLabel		= chtype2Char (template->label);
X
X   /* Translate the char * overlay to a chtype *			*/
X   if (overlay != (char *)NULL)
X   {
X      template->overlay = char2Chtype (overlay, &template->overlayLen, &junk);
X      template->fieldAttr = template->overlay[0] & A_ATTRIBUTES;
X   }
X   else
X   {
X      template->overlay		= (chtype *)NULL;
X      template->overlayLen	= 0;
X      template->fieldAttr	= A_NORMAL;
X   }
X   
X   /* Align the x and y offsets for the label.				*/
X   alignlabel (plainLabel, lplace, fieldWidth, &boxWidth, &boxHeight, &labelxoffset, &labelyoffset, &fieldxoffset, &fieldyoffset);
X   freeChar (plainLabel);
X
X   /* Rejustify the x and y positions if we need to.			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Make the template window						*/
X   template->win = newwin (boxHeight, boxWidth, ypos, xpos);
X   
X   /* Is the template window NULL??					*/
X   if (template->win == (WINDOW *)NULL)
X   {
X      /* Clean up any used memory.					*/
X      freeChtype (template->label);
X      freeChtype (template->overlay);
X      free (template);
X
X      /* Return a NULL pointer.						*/
X      return ((CDKTEMPLATE *)NULL);
X   }
X
X   /* Make the field window.						*/
X   template->field = subwin (cdkscreen->window, 1, fieldWidth, ypos+fieldyoffset, xpos+fieldxoffset);
X   template->labelWin = subwin (cdkscreen->window, 1, template->labelLen+2, ypos+labelyoffset, xpos+labelxoffset);
X   keypad (template->field, TRUE);
X
X   /* Set up the info field.						*/
X   template->plateLen = (int)strlen(plate);
X   template->info = (char *)malloc (sizeof(char) * (template->plateLen+2));
X   cleanChar (template->info, template->plateLen+1, '\0');
X
X   /* Set up the rest of the structure 					*/
X   template->parent			= cdkscreen->window;
X   template->shadowWin			= (WINDOW *)NULL;
X   template->plate			= copyChar (plate);
X   template->fieldWidth			= fieldWidth;
X   template->platePos			= 0;
X   template->screenPos			= 0;
X   template->infoPos			= 0;
X   template->box			= box;
X   template->shadow			= shadow;
X   template->callbackfn			= (void *)&CDKTemplateCallBack;
X   template->preProcessFunction		= (PROCESSFN)NULL;
X   template->preProcessData		= (void *)NULL;
X   template->postProcessFunction	= (PROCESSFN)NULL;
X   template->postProcessData		= (void *)NULL;
X
X   /* Do we need to create a shaodw???					*/
X   if (shadow)
X   {
X      template->shadowWin = newwin (boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Clean the key bindings.						*/
X   cleanCDKObjectBindings (vTEMPLATE, template);
X
X   /* Register this baby.               				*/
X   registerCDKObject (cdkscreen, vTEMPLATE, template);
X
X   /* Return the pointer to the structure				*/
X   return template;
}
X
/*
X * This actually manages the template widget...
X */
char *activateCDKTemplate (CDKTEMPLATE *template, chtype *actions)
{
X   /* Declare local variables.						*/
X   char *ret;
X   chtype input;
X
X   /* Draw the object.							*/
X   drawCDKTemplate (template, template->box);
X
X   /* Check if actions is NULL.						*/
X   if (actions == (chtype *)NULL)
X   {
X      for (;;)
X      {
X         /* Get the input.						*/
X         input = wgetch (template->win);
X 
X         /* Inject the character into the widget.			*/
X         ret = injectCDKTemplate (template, input);
X         if (ret != GEarlyExit)
X         {
X            return ret;
X         }
X      }
X   }
X   else
X   {
X      int length = chlen (actions);
X      int x = 0;
X 
X      /* Inject each character one at a time.				*/
X      for (x=0; x < length; x++)
X      {
X         ret = injectCDKTemplate (template, actions[x]);
X         if (ret != GEarlyExit)
X         {
X            return ret;
X         }
X      }
X   }
X   return GEarlyExit;
}
X
/*
X * This injects a character into the widget.
X */
char *injectCDKTemplate (CDKTEMPLATE *template, chtype input)
{
X   /* Declare some local variables.				*/
X   int ppReturn = 1;
X   int length, x;
X
X   /* Move the cursor.						*/
X   drawCDKTemplateField (template);
X
X   /* Should we call a post-process?				*/
X   if (template->postProcessFunction != (PROCESSFN)NULL)
X   {
X      ((PROCESSFN)(template->postProcessFunction)) (vTEMPLATE, template, template->preProcessData, input);
X   }
X
X   /* Should we continue?					*/
X   if (ppReturn != 0)
X   {
X      /* Check a predefined binding...          		*/
X      if (! checkCDKObjectBind (vTEMPLATE, template, input))
X      {
X         switch (input)
X         {
X            case KEY_LEFT : case KEY_RIGHT : case KEY_UP : case KEY_DOWN :
X                 Beep();
X                 break;
X
X            case CDK_NEXT : case KEY_ESC :
X                 return GEarlyExit;
X                 break;
X   
X            case CDK_ERASE :
X                 if ((int)strlen(template->info) != 0)
X                 {
X                    cleanChar (template->info, template->plateLen+1, '\0');
X                    template->screenPos = 0;
X                    template->infoPos = 0;
X                    template->platePos = 0;
X                    drawCDKTemplateField (template);
X                 }
X                 break;
X
X            case CDK_CUT:
X                 if ((int)strlen(template->info) != 0)
X                 {
X	            freeChar (GPasteBuffer);
X                    GPasteBuffer = copyChar (template->info);
X                    cleanChar (template->info, template->plateLen+1, '\0');
X                    template->screenPos = 0;
X                    template->infoPos = 0;
X                    template->platePos = 0;
X                    drawCDKTemplateField (template);
X                 }
X                 else
X                 {
X                    Beep();
X                 }
X                 break;
X
X            case CDK_COPY:
X                 if ((int)strlen(template->info) != 0)
X                 {
X	            freeChar (GPasteBuffer);
X                    GPasteBuffer = copyChar (template->info);
X                 }
X                 else
X                 {
X                    Beep();
X                 }
X                 break;
X
X            case CDK_PASTE:
X                 if (GPasteBuffer != (char *)NULL)
X                 {
X                    /* Clean the informatiob from the field.		*/
X                    cleanChar (template->info, template->plateLen+1, '\0');
X                    template->screenPos = 0;
X                    template->infoPos = 0;
X                    template->platePos = 0;
X
X                    /* Start inserting each character one at a time.	*/
X                    length = (int)strlen (GPasteBuffer);
X                    for (x=0; x < length; x++)
X                    {
X                       ((TEMPLATECB)template->callbackfn)(template, GPasteBuffer[x]);
X                    }
X                    drawCDKTemplateField (template);
X                 }
X                 else
X                 {
X                    Beep();
X                 }
X                 break;
X
X            case KEY_RETURN : case KEY_TAB :
X                 return template->info;
X                 break;
X   
X            case CDK_REFRESH :
X                 refreshCDKScreen (template->screen);
X                 break;
X            
X            default :
X                 ((TEMPLATECB)template->callbackfn)(template, input);
X                 break;
X         }
X      }
X
X      /* Should we call a post-process?					*/
X      if (template->postProcessFunction != (PROCESSFN)NULL)
X      {
X         ((PROCESSFN)(template->postProcessFunction)) (vTEMPLATE, template, template->postProcessData, input);
X      }
X   }
X   return GEarlyExit;
}
X
/*
X * This is the standard callback proc for the template.
X */
void CDKTemplateCallBack (CDKTEMPLATE *template, chtype input)
{
X   /* Check the character input.					*/
X   if (input == DELETE || input == KEY_BACKSPACE || input == '')
X   {
X      /* Make sure we don't go out of bounds.				*/
X      if (template->platePos == 0 || template->info[0] == '\0')
X      {
X         Beep();
X         return;
X      }
X
X      /* Remove it and redisplay....					*/
X      template->info[--template->infoPos] = '\0';
X      template->platePos--;
X      template->screenPos--;
X
X      /* Move the cursor						*/
X      adjustCDKTemplateCursor (template, -1);
X      mvwaddch (template->field, 0, template->screenPos,
X		template->overlay[template->platePos] | template->fieldAttr);
X      wmove (template->field, 0, template->screenPos);
X   }
X   else
X   {
X      /* To be safe, we should cast the chtype to a char		*/
X      char newchar = (char)input;
X
X      /* Make sure we don't go out of bounds.				*/
X      if (template->platePos >= template->fieldWidth)
X      {
X         Beep();
X         return;
X      }
X
X      /* We should check to see if what they typed in matches		*/
X      /* what the plate states.						*/
X      if (isdigit(newchar) && ( \
X		template->plate[template->platePos] == 'A' || \
X		template->plate[template->platePos] == 'C' || \
X		template->plate[template->platePos] == 'c'))
X      {
X         Beep();
X         return;
X      }
X      if (!isdigit(newchar) && template->plate[template->platePos] == '#')
X      {
X         Beep();
X         return;
X      }
X
X      /* Do we need to convert the case???				*/
X      if (template->plate[template->platePos] == 'C' || \
X		template->plate[template->platePos] == 'X')
X      {
X         newchar = toupper ((char)input);
X      }
X      else if (template->plate[template->platePos] == 'c' || \
X		template->plate[template->platePos] == 'x')
X      {
X         newchar = tolower ((char)input);
X      }
X
X      /* Add it and redisplay....					*/
X      template->info[template->infoPos++] = newchar;
X      template->info[template->infoPos] = '\0';
X      mvwaddch (template->field, 0, template->screenPos,
X			newchar | template->fieldAttr);
X      template->platePos++;
X      template->screenPos++;
X
X      /* Move the cursor						*/
X      adjustCDKTemplateCursor (template, +1);
X   }
}
X
/*
X * This takes the overlay and the info, and mixes the two, for a
X * 'mixed' character string...
X */
char *mixCDKTemplate (CDKTEMPLATE *template)
{
X   /* Reconstruct the info.						*/
X   char *mixedString	= (char *)NULL;
X   int platePos		= 0;
X   int infoPos		= 0;
X   
X   /* Make soime room for the mixed string.				*/
X   mixedString = (char *) malloc ((sizeof (char) * template->plateLen) + 3);
X   cleanChar (mixedString, template->plateLen+3, '\0');
X
X   /* Start copying from the plate to the destination string.		*/
X   while (platePos < template->plateLen)
X   {
X      if (template->plate[platePos] == '#' || \
X		template->plate[platePos] == 'A' || \
X		template->plate[platePos] == 'C' || \
X		template->plate[platePos] == 'c' || \
X		template->plate[platePos] == 'M' || \
X		template->plate[platePos] == 'X' || \
X		template->plate[platePos] == 'x')
X      {
X         mixedString[platePos]	= template->info[infoPos++];
X      }
X      else
X      {
X         mixedString[platePos]	= template->plate[platePos];
X      }
X      platePos++;
X   }
X
X   /* Return the new string.						*/
X   return mixedString;
}
X
/*
X * This takes a mixed string and returns a non-mixed string.
X */
char *unmixCDKTemplate (CDKTEMPLATE *template, char *info)
{
X   /* Reconstruct the info.						*/
X   char *unmixedString	= (char *)NULL;
X   int infolen		= strlen (info);
X   int x		= 0;
X   int pos		= 0;
X
X   /* Create a char * pointer.						*/
X   unmixedString	= (char *)malloc (sizeof(char) * (infolen+2));
X   cleanChar (unmixedString, infolen+2, '\0');
X
X   /* Start copying.							*/
X   while (pos < infolen)
X   {
X      if (template->plate[pos] == '#' || \
X		template->plate[pos] == 'A' || \
X		template->plate[pos] == 'C' || \
X		template->plate[pos] == 'c' || \
X		template->plate[pos] == 'M' || \
X		template->plate[pos] == 'X' || \
X		template->plate[pos] == 'x')
X      {
X         unmixedString[x++] = info[pos++];
X      }
X      else
X      {
X         pos++;
X      }
X   }
X
X   /* Return the new string.						*/
X   return unmixedString;
}
X
/*
X * This function draws
X */
void drawCDKTemplate (CDKTEMPLATE *template, boolean Box)
{
X   /* Keep the box information.						*/
X   template->box = Box;
X
X   /* Erase the old object...						*/
X   eraseCDKTemplate (template);
X
X   /* Do we need to draw the shadow.					*/
X   if (template->shadow)
X   {
X      drawShadow (template->shadowWin);
X   }
X
X   /* Box it if needed							*/
X   if (Box)
X   {
X      box (template->win, ACS_VLINE, ACS_HLINE);
X   }
X   wrefresh (template->win);
X   
X   /* Draw the template field.						*/
X   drawCDKTemplateField (template);
}
X
/*
X * This draws the template field.
X */
void drawCDKTemplateField (CDKTEMPLATE *template)
{
X   /* Declare local variables.						*/
X   int infolen = strlen (template->info);
X   int x = 0;
X
X   /* Draw in the label and the template object.			*/
X   writeChtype (template->labelWin, 0, 0, 
X			template->label,
X			HORIZONTAL, 0,
X			template->labelLen);
X   wrefresh (template->labelWin);
X
X   /* Draw in the template...						*/
X   if (template->overlay != (chtype *)NULL)
X   {
X      writeChtype (template->field, 0, 0,
X			template->overlay,
X			HORIZONTAL, 0,
X			template->overlayLen);
X   }
X
X   /* Adjust the cursor.					*/
X   if (infolen != 0)
X   {
X      int pos	= 0;
X      for (x=0; x < template->fieldWidth; x++)
X      {
X         if ((template->plate[x] == '#' ||
X		template->plate[x] == 'A' ||
X		template->plate[x] == 'C' ||
X		template->plate[x] == 'c' ||
X		template->plate[x] == 'M' ||
X		template->plate[x] == 'X' ||
X		template->plate[x] == 'x') &&
X		pos < infolen)
X         {
X            mvwaddch (template->field, 0, x, template->info[pos++]);
X         }
X      }
X      wmove (template->field, 0, infolen);
X   }
X   else
X   {
X      adjustCDKTemplateCursor (template, +1);
X   }
X   wrefresh (template->field);
}
X
/*
X * This function adjusts the cursor for the template.
X */
void adjustCDKTemplateCursor (CDKTEMPLATE *template, int direction)
{
X   while (template->plate[template->platePos] != '#' &&
X		template->plate[template->platePos] != 'A' &&
X		template->plate[template->platePos] != 'C' &&
X		template->plate[template->platePos] != 'c' &&
X		template->plate[template->platePos] != 'M' &&
X		template->plate[template->platePos] != 'X' &&
X		template->plate[template->platePos] != 'x'  &&
X		template->platePos < template->fieldWidth)
X   {
X      template->platePos += direction;
X      template->screenPos += direction;
X   }
X   wmove (template->field, 0, template->screenPos);
X   wrefresh (template->field);
}
X
/*
X * This function destroys this widget.
X */
void destroyCDKTemplate (CDKTEMPLATE *template)
{
X   /* Erase the object.							*/
X   eraseCDKTemplate (template);
X
X   /* Clear out the character pointers.					*/
X   freeChtype (template->label);
X   freeChtype (template->overlay);
X   freeChar (template->plate);
X   freeChar (template->info);
X
X   /* Delete the windows.						*/
X   delwin (template->win);
X   delwin (template->field);
X   delwin (template->labelWin);
X   if (template->shadow)
X   {
X      delwin (template->shadowWin);
X   }
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vTEMPLATE, template);
X
X   /* Finish cleaning up.						*/
X   free (template);
}
X
/*
X * This function erases the widget.
X */
void eraseCDKTemplate (CDKTEMPLATE *template)
{
X   werase (template->field);
X   werase (template->labelWin);
X   werase (template->win);
X   wrefresh (template->win);
X   if (template->shadow)
X   {
X      werase (template->shadowWin);
X      wrefresh (template->shadowWin);
X   }
}
X
/*
X * This function sets the value given to the template.
X */
void setCDKTemplate (CDKTEMPLATE *template, char *newValue, boolean box)
{
X   /* Declare local variables.						*/
X   int len		= 0;
X   int copychars	= 0;
X   int charcount	= 0;
X   int filler		= 0;
X
X   /* Keep some variables.						*/
X   template->box	= box;
X
X   /* Just to be sure, if lets make sure the new value isn't NULL.	*/
X   if (newValue == (char *)NULL)
X   { 
X      /* Then we want to just erase the old value.			*/
X      cleanChar (template->info, template->fieldWidth, '\0');
X
X      /* Set the cursor place values.					*/
X      template->screenPos = 0;
X      template->platePos = 0;
X      template->infoPos = 0;
X      return;
X   }
X
X   /* Determine how many characters we need to copy.			*/
X   len		= strlen (newValue);
X   copychars	= (len < template->fieldWidth ? len : template->fieldWidth);
X
X   /* OK, erase the old value, and copy in the new value.		*/
X   cleanChar (template->info, template->fieldWidth, '\0');
X   strncpy (template->info, newValue, copychars);
X
X   /* Set the cursor place values.					*/
X   while (charcount++ < len)
X   {
X      if (template->plate[charcount] != '#' &&
X		template->plate[charcount] != 'A' &&
X		template->plate[charcount] != 'C' &&
X		template->plate[charcount] != 'c' &&
X		template->plate[charcount] != 'M' &&
X		template->plate[charcount] != 'X' &&
X		template->plate[charcount] != 'x')
X      {
X         filler++;
X      }
X   }
X
X   /* Now set the variables.						*/
X   template->screenPos	= filler + len;
X   template->platePos	= filler + len;
X   template->infoPos	= len;
}
X
/*
X * This erases the information in the template widget.
X */
void cleanCDKTemplate (CDKTEMPLATE *template)
{
X   cleanChar (template->info, template->fieldWidth, '\0');
}
X
/*
X * This function sets the callback function for the widget.
X */
void setCDKTemplateCB (CDKTEMPLATE *template, TEMPLATECB callback)
{
X   template->callbackfn = (void *)callback;
}
X
/*
X * This function sets the pre-process function.
X */
void setCDKTemplatePreProcess (CDKTEMPLATE *template, PROCESSFN callback, void *data)
{
X   template->preProcessFunction = callback;
X   template->preProcessData = data;
}
X 
/*
X * This function sets the post-process function.
X */
void setCDKTemplatePostProcess (CDKTEMPLATE *template, PROCESSFN callback, void *data)
{
X   template->postProcessFunction = callback;
X   template->postProcessData = data;
}
SHAR_EOF
  $shar_touch -am 0503190896 'template.c' &&
  chmod 0444 'template.c' ||
  echo 'restore of template.c failed'
  shar_count="`wc -c < 'template.c'`"
  test 18485 -eq "$shar_count" ||
    echo "template.c: original size 18485, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= viewer.c ==============
if test -f 'viewer.c' && test X"$1" != X"-c"; then
  echo 'x - skipping viewer.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting viewer.c (binary)'
  sed 's/^X//' << 'SHAR_EOF' > _sharuue.tmp &&
begin 600 viewer.c
M(VEN8VQU9&4@(F-D:RYH(@H*+RH*("H@)$%U=&AO<CH@9VQO=F5R("0*("H@
M)$1A=&4Z(#$Y.38O,#0O,30@,#,Z,#(Z,3(@)`H@*B`D4F5V:7-I;VXZ(#$N
M-C$@)`H@*B\*"B\J($UA:V4@;&]C86P@9VQO8F%L('9A<G,N"0D)"0D)*B\*
M(V1E9FEN90D)1$]73@D),`HC9&5F:6YE"0E54`D),0IS=&%T:6,@8VAA<B`J
M"5-E87)C:%!A='1E<FX)/2`H8VAA<B`J*4Y53$P["FEN=`D)4V5A<F-H1&ER
M96-T:6]N"3T@1$]73CL*"B\J($1E8VQA<F4@;&]C86P@9G5N8W1I;VYS+B!4
M:&ES(&MI;F1A(&UA:V5S("=E;2`G<')I=F%T92<)"2HO"FEN="!S96%R8VA&
M;W)7;W)D("A#1$M6245715(@*G9I97=E<BP@8VAA<B`J<&%T=&5R;BP@:6YT
M(&1I<F5C=&EO;BD["FEN="!J=6UP5&],:6YE("A#1$M6245715(@*G9I97=E
M<BD["G9O:60@<&]P57!,86)E;"`H0T1+5DE%5T52("IV:65W97(L(&-H87(@
M*FUE<V<I.PIV;VED(&=E=$%N9%-T;W)E4&%T=&5R;B`H0T1+4T-2145.("IS
M8W)E96XL(&EN="!W:61T:"D["@HO*@H@*B!4:&ES(&9U;F-T:6]N(&-R96%T
M97,@82!N97<@=FEE=V5R(&]B:F5C="X*("HO"D-$2U9)15=%4B`J;F5W0T1+
M5FEE=V5R("A#1$M30U)%14X@*F-D:W-C<F5E;BP@:6YT('AP;&%C92P@:6YT
M('EP;&%C92P@:6YT(&AE:6=H="P@:6YT('=I9'1H+"!C:&%R("HJ8G5T=&]N
M<RP@:6YT(&)U='1O;D-O=6YT+"!C:'1Y<&4@8G5T=&]N2&EG:&QI9VAT+"!B
M;V]L96%N(&)O>"P@8F]O;&5A;B!S:&%D;W<I"GL*("`@+RH@1&5C;&%R92!L
M;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@0T1+5DE%5T52("IV:65W97()
M/2`H0T1+5DE%5T52("HI;6%L;&]C("AS:7IE;V8@*$-$2U9)15=%4BDI.PH@
M("!I;G0@8F]X5VED=&@)"3T@=VED=&@["B`@(&EN="!B;WA(96EG:'0)/2!H
M96EG:'0@*R`S.PH@("!I;G0@>'!O<PD)/2!X<&QA8V4["B`@(&EN="!Y<&]S
M"0D]('EP;&%C93L*("`@:6YT(&)U='1O;E=I9'1H"3T@,#L*("`@:6YT(&)U
M='1O;D%D:@D](#`["B`@(&EN="!B=71T;VY0;W,)/2`Q.PH@("!I;G0@>`D)
M/2`P.PH*("`@+RH@4F5J=7-T:69Y('1H92!X(&%N9"!Y('!O<VET:6]N<R!I
M9B!W92!N965D('1O+@D)"2HO"B`@(&%L:6=N>'D@*&-D:W-C<F5E;BT^=VEN
M9&]W+"`F>'!O<RP@)GEP;W,L(&)O>%=I9'1H+"!B;WA(96EG:'0I.PH*("`@
M+RH@36%K92!T:&4@=FEE=V5R('=I;F1O=PD)"0D)"2HO"B`@('9I97=E<BT^
M=VEN"0D](&YE=W=I;B`H8F]X2&5I9VAT+"!B;WA7:61T:"LQ+"!Y<&]S+"!X
M<&]S*3L*"B`@("\J($ES('1H92!W:6YD;W<@3E5,3#\)"0D)"0DJ+PH@("!I
M9B`H=FEE=V5R+3YW:6X@/3T@*%=)3D1/5R`J*4Y53$PI"B`@('L*("`@("`@
M+RH@0VQE86X@=7`@86YY('5S960@;65M;W)Y+@D)"0D)*B\*("`@("`@9G)E
M92`H=FEE=V5R*3L*"B`@("`@("\J(%)E='5R;B!A($Y53$P@<&]I;G1E<BX)
M"0D)"0DJ+PH@("`@("!R971U<FX@*"A#1$M6245715(@*BE.54Q,*3L*("`@
M?0H*("`@+RH@5'5R;B!T:&4@:V5Y<&%D(&]N(&9O<B!T:&4@=FEE=V5R+@D)
M"0DJ+PH@("!K97EP860@*'9I97=E<BT^=VEN+"!44E5%*3L*"B`@("\J($-R
M96%T92!T:&4@8G5T=&]N<PD)"0D)"2HO"B`@('9I97=E<BT^8G5T=&]N0V]U
M;G0)"3T@8G5T=&]N0V]U;G0["B`@(&9O<B`H>#TP.R!X(#P@8G5T=&]N0V]U
M;G0[('@K*RD*("`@>PH@("`@("!V:65W97(M/F)U='1O;EMX70D)/2!C:&%R
M,D-H='EP92`H8G5T=&]N<UMX72P@)G9I97=E<BT^8G5T=&]N3&5N6WA=+"`F
M8G5T=&]N061J*3L*("`@("`@8G5T=&]N5VED=&@)"2L]('9I97=E<BT^8G5T
M=&]N3&5N6WA=("L@,3L*("`@?0H@("!B=71T;VY!9&H)/2`H:6YT*2@H8F]X
M5VED=&@M8G5T=&]N5VED=&@I+R`H8G5T=&]N0V]U;G0@*S$I*3L*("`@8G5T
M=&]N4&]S"3T@,2`K(&)U='1O;D%D:CL*("`@9F]R("AX/3`[('@@/"!B=71T
M;VY#;W5N=#L@>"LK*0H@("!["B`@("`@('9I97=E<BT^8G5T=&]N4&]S6WA=
M"3T@8G5T=&]N4&]S.PH@("`@("!B=71T;VY0;W,)"0DK/2!B=71T;VY!9&H@
M*R!V:65W97(M/F)U='1O;DQE;EMX73L*("`@?0H*("`@+RH@4V5T('1H92!R
M97-T(&]F('1H92!V87)I86)L97,)"0D)"2HO"B`@('9I97=E<BT^<&%R96YT
M"0D](&-D:W-C<F5E;BT^=VEN9&]W.PH@("!V:65W97(M/G-H861O=U=I;@D)
M/2`H5TE.1$]7("HI3E5,3#L*("`@=FEE=V5R+3YT:71L90D)/2!C:&%R,D-H
M='EP92`H(CPO53XJ*BH@56YT:71L960@*BHJ/"%5/B(L("9V:65W97(M/G1I
M=&QE3&5N+"`F=FEE=V5R+3YT:71L95!O<RD["B`@('9I97=E<BT^=&ET;&50
M;W,)"3T@:G5S=&EF>5-T<FEN9R`H8F]X5VED=&@L('9I97=E<BT^=&ET;&5,
M96XL('9I97=E<BT^=&ET;&50;W,I.PH@("!V:65W97(M/F)U='1O;DAI9VAL
M:6=H=`D](&)U='1O;DAI9VAL:6=H=#L*("`@=FEE=V5R+3YB;WA(96EG:'0)
M"3T@8F]X2&5I9VAT.PH@("!V:65W97(M/F)O>%=I9'1H"0D](&)O>%=I9'1H
M("T@,CL*("`@=FEE=V5R+3YV:65W4VEZ90D)/2!H96EG:'0@+2`R.PH@("!V
M:65W97(M/F)O>`D)"3T@8F]X.PH@("!V:65W97(M/G-H861O=PD)/2!S:&%D
M;W<["B`@('9I97=E<BT^8W5R<F5N=$)U='1O;@D](#`["B`@('9I97=E<BT^
M8W5R<F5N=%1O<`D)/2`P.PH@("!V:65W97(M/FQE;F=T:`D)/2`P.PH@("!V
M:65W97(M/FQE9G1#:&%R"0D](#`["B`@('9I97=E<BT^;6%X3&5F=$-H87()
M"3T@,#L*("`@=FEE=V5R+3YM87A4;W!,:6YE"0D](#`["B`@('9I97=E<BT^
M8VAA<F%C=&5R<PD)/2`P.PH@("!V:65W97(M/FEN9F]3:7IE"0D]("TQ.PH*
M("`@+RH@1&\@=V4@;F5E9"!T;R!C<F5A=&4@82!S:&%D;W<_/S\)"0D)"2HO
M"B`@(&EF("AS:&%D;W<I"B`@('L*("`@("`@=FEE=V5R+3YS:&%D;W=7:6X@
M/2!N97=W:6X@*&)O>$AE:6=H="P@8F]X5VED=&@K,2P@>7!O<RLQ+"!X<&]S
M*S$I.PH@("!]"@H@("`O*B!#;&5A;B!T:&4@:V5Y(&)I;F1I;F=S"0D)"0D)
M*B\*("`@8VQE86Y#1$M/8FIE8W1":6YD:6YG<R`H=E9)15=%4BP@=FEE=V5R
M*3L*"B`@("\J(%)E9VES=&5R('1H:7,@8F%B>2X)"0D)"0DJ+PH@("!R96=I
M<W1E<D-$2T]B:F5C="`H8V1K<V-R965N+"!V5DE%5T52+"!V:65W97(I.PH*
M("`@+RH@4F5T=7)N('1H92!V:65W97(@;&ES=`D)"0D)"2HO"B`@(')E='5R
M;B`H=FEE=V5R*3L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!S971S('1H92!C
M;VYT96YT<R!O9B!T:&4@=FEE=V5R+@H@*B\*=F]I9"!S971#1$M6:65W97(@
M*$-$2U9)15=%4B`J=FEE=V5R+"!C:&%R("IT:71L92P@8VAA<B`J*FEN9F\L
M(&EN="!I;F9O4VEZ92P@8VAT>7!E(&)U='1O;DAI9VAL:6=H="P@8F]O;&5A
M;B!A='1R26YT97)P+"!B;V]L96%N(&)O>"D*>PH@("`O*B!$96-L87)E(&QO
M8V%L('9A<FEA8FQE<RX)"0D)"0DJ+PH@("!I;G0@=VED97-T3&EN90D)/2`M
M,3L*("`@:6YT('@)"0D](#`["B`@(&EN="!Y"0D)/2`P.PH*("`@+RH@0VQE
M86X@;W5T('1H92!O;&0@=FEE=V5R(&EN9F\N("AI9B!T:&5R92!I<R!A;GDI
M"0D)*B\*("`@9G)E94-H='EP92`H=FEE=V5R+3YT:71L92D["B`@(&9O<B`H
M>#TP.R!X(#P]('9I97=E<BT^:6YF;U-I>F4[('@K*RD*("`@>PH@("`@("!F
M<F5E0VAT>7!E("AV:65W97(M/FEN9F];>%TI.PH@("!]"@H@("`O*B!+965P
M('-O;64@<V5M:2UP97)I;F%N="!I;F9O"0D)"0DJ+PH@("!V:65W97(M/F)O
M>`D)"3T@8F]X.PH@("!V:65W97(M/FEN9F]3:7IE"0D](&EN9F]3:7IE.PH@
M("!V:65W97(M/FEN=&5R<')E=`D)/2!A='1R26YT97)P.PH@("!V:65W97(M
M/F)U='1O;DAI9VAL:6=H=`D](&)U='1O;DAI9VAL:6=H=#L*"B`@("\J(%-E
M="!U<"!T:&4@;F5E9&5D('9A<G,@9F]R('1H92!V:65W97(@;&ES="X@("`@
M"0D)*B\*("`@:68@*&EN9F]3:7IE(#P]('9I97=E<BT^=FEE=U-I>F4I"B`@
M('L*("`@("`@=FEE=V5R+3YM87A4;W!,:6YE("`@("`@("`]("TQ.PH@("!]
M"B`@(&5L<V4*("`@>PH@("`@("!V:65W97(M/FUA>%1O<$QI;F4@("`@("`@
M(#T@=FEE=V5R+3YI;F9O4VEZ92TQ.PH@("!]"@H@("`O*B!3970@=7`@=&AE
M('1I=&QE(&]F('1H92!V:65W97(N"0D)"0DJ+PH@("!I9B`H=&ET;&4@(3T@
M*&-H87(@*BE.54Q,*0H@("!["B`@("`@('9I97=E<BT^=&ET;&4@/2!C:&%R
M,D-H='EP92`H=&ET;&4L("9V:65W97(M/G1I=&QE3&5N+"`F=FEE=V5R+3YT
M:71L95!O<RD["B`@("`@('9I97=E<BT^=&ET;&50;W,@/2!J=7-T:69Y4W1R
M:6YG("AV:65W97(M/F)O>%=I9'1H+`H)"0D)=FEE=V5R+3YT:71L94QE;BP@
M=FEE=V5R+3YT:71L95!O<RD["B`@('T*"B`@("\J($1I9"!T:&5Y(&%S:R!F
M;W(@871T<FEB=71E(&EN=&5R<')E=&%T:6]N/S\_"0D)*B\*("`@:68@*"%A
M='1R26YT97)P*0H@("!["B`@("`@("\J($-O<'D@=&AE(&EN9F]R;6%T:6]N
M(&=I=F5N+"!W:71H;W5T(&EN=&5R<')E=&%T:6]N+@D)*B\*("`@("`@9F]R
M("AX/3`[('@@/#T@:6YF;U-I>F4[('@K*RD*("`@("`@>PH@("`@("`@("!I
M9B`H:6YF;UMX72`]/2`H8VAA<B`J*2!.54Q,*0H@("`@("`@("!["B`@("`@
M("`@("`@('9I97=E<BT^:6YF;UMX70D]("AC:'1Y<&4@*BE.54Q,.PH@("`@
M("`@("`@("!V:65W97(M/FEN9F],96Y;>%T)/2`P.PH@("`@("`@("`@("!V
M:65W97(M/FEN9F]0;W-;>%T)/2`P.PH@("`@("`@("!]"B`@("`@("`@(&5L
M<V4@"B`@("`@("`@('L*("`@("`@("`@("`@:6YT(&QE;@D)/2!S=')L96X@
M*&EN9F];>%TI.PH@("`@("`@("`@("!W:61E<W1,:6YE"3T@34%8*'=I9&5S
M=$QI;F4L;&5N*3L*"B`@("`@("`@("`@("\J($EN:70@;65M;W)Y(&%N9"!C
M;&5A;B!I="X)"0D)*B\*("`@("`@("`@("`@=FEE=V5R+3YI;F9O6WA="3T@
M*&-H='EP92`J*6UA;&QO8R`H<VEZ96]F*&-H='EP92D@*B`H;&5N*S,I*3L*
M("`@("`@("`@("`@8VQE86Y#:'1Y<&4@*'9I97=E<BT^:6YF;UMX72P@;&5N
M*S,L("=<,"<I.PH@("`*("`@("`@("`@("`@+RH@0V]P>2!F<F]M(&]N92!T
M;R!T:&4@;W1H97(N"0D)"2HO"B`@("`@("`@("`@(&9O<B`H>3TP.R!Y(#P@
M;&5N.R!Y*RLI"B`@("`@("`@("`@('L*("`@("`@("`@("`@("`@=FEE=V5R
M+3YI;F9O6WA=6WE="3T@:6YF;UMX75MY72!\($%?3D]234%,.PH@("`@("`@
M("`@("!]"B`@("`@("`@("`@('9I97=E<BT^:6YF;TQE;EMX70D](&QE;CL*
M("`@("`@("`@("`@=FEE=V5R+3YI;F9O4&]S6WA="3T@,#L*("`@("`@("`@
M("`@=FEE=V5R+3YC:&%R86-T97)S"2L](&QE;CL*("`@("`@("`@?0H@("`@
M("!]"B`@('T*("`@96QS90H@("!["B`@("`@("\J($-O<'D@=&AE(&EN9F]R
M;6%T:6]N(&=I=F5N+"!W:71H(&EN=&5R<')E=&%T:6]N+@D)*B\*("`@("`@
M9F]R("AX/3`[('@@/#T@:6YF;U-I>F4[('@K*RD*("`@("`@>PH@("`@("`@
M("!I9B`H:6YF;UMX72`]/2`H8VAA<B`J*4Y53$PI"B`@("`@("`@('L*("`@
M("`@("`@("`@9G)E94-H='EP92`H=FEE=V5R+3YI;F9O6WA=*3L*("`@("`@
M("`@("`@=FEE=V5R+3YI;F9O6WA="3T@*&-H='EP92`J*4Y53$P["B`@("`@
M("`@("`@('9I97=E<BT^:6YF;TQE;EMX70D](#`["B`@("`@("`@("`@('9I
M97=E<BT^:6YF;U!O<UMX70D](#`["B`@("`@("`@('T*("`@("`@("`@96QS
M90H@("`@("`@("!["B`@("`@("`@("`@('9I97=E<BT^:6YF;UMX72`](&-H
M87(R0VAT>7!E("AI;F9O6WA=+"`F=FEE=V5R+3YI;F9O3&5N6WA=+`H)"0D)
M"0DF=FEE=V5R+3YI;F9O4&]S6WA=*3L*("`@("`@("`@("`@=FEE=V5R+3YI
M;F9O4&]S6WA=(#T@:G5S=&EF>5-T<FEN9R`H=FEE=V5R+3YB;WA7:61T:"P*
M"0D)"0D)=FEE=V5R+3YI;F9O3&5N6WA=+`H)"0D)"0EV:65W97(M/FEN9F]0
M;W-;>%TI.PH@("`@("`@("`@("!W:61E<W1,:6YE(#T@34%8*'=I9&5S=$QI
M;F4L=FEE=V5R+3YI;F9O3&5N6WA=*3L*("`@("`@("`@("`@=FEE=V5R+3YC
M:&%R86-T97)S("L]('9I97=E<BT^:6YF;TQE;EMX73L*("`@("`@("`@?0H@
M("`@("!]"B`@('T*("`@"B`@("\J($1E=&5R;6EN92!H;W<@;6%N>2!C:&%R
M86-T97)S('=E(&-A;B!S:&EF="!T;R!T:&4@<FEG:'0)"2HO"B`@("\J(&)E
M9F]R92!A;&P@=&AE(&ET96US(&AA=F4@8F5E;B!V:65W97(@;V9F('1H92!S
M8W)E96XN"0DJ+PH@("!I9B`H=VED97-T3&EN92`^('9I97=E<BT^8F]X5VED
M=&@I"B`@('L*("`@("`@=FEE=V5R+3YM87A,969T0VAA<@D]("AW:61E<W1,
M:6YE("T@=FEE=V5R+3YB;WA7:61T:"D["B`@('T*("`@96QS90H@("!["B`@
M("`@('9I97=E<BT^;6%X3&5F=$-H87()/2`P.PH@("!]"GT*"B\J"B`J(%1H
M:7,@9G5N8W1I;VX@86-T=6%L;'D@8V]N=')O;',@=&AE('9E=V5R+BXN"B`J
M+PII;G0@86-T:79A=&5#1$M6:65W97(@*$-$2U9)15=%4B`J=FEE=V5R*0I[
M"B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@($-$
M2TQ!0D5,("IF:6QE26YF;TQA8F5L.PH@("!C:'1Y<&4@:6YP=70["B`@(&-H
M87(@*F9I;&5);F9O6S$P72P@=&5M<%LU,#!=.PH@("!I;G0@>"P@4D5&4D53
M2#L*"B-I9F1E9B!.3T193D%,3$]#"B`@(&-H='EP92!E;7!T>5-T<FEN9ULR
M-39=.PHC96QS90H@("!C:'1Y<&4@96UP='E3=')I;F=;=FEE=V5R+3YB;WA7
M:61T:%T["B-E;F1I9@H*("`@+RH@0W)E871E(&$@<W1R:6YG(&9U;&P@;V8@
M<W!A8V5S+@D)"0D)*B\*("`@8VQE86Y#:'1Y<&4@*&5M<'1Y4W1R:6YG+"!V
M:65W97(M/F)O>%=I9'1H+3$L("=<,"<I.PH@("!C;&5A;D-H='EP92`H96UP
M='E3=')I;F<L('9I97=E<BT^8F]X5VED=&@M,RP@)R`G*3L*"B`@("\J($-R
M96%T92!T:&4@:6YF;W)M871I;VX@86)O=70@=&AE(&9I;&4@<W1A=',N"0D)
M*B\*("`@<W!R:6YT9B`H=&5M<"P@(CQ#/CPO-3X@(#PO53Y6:65W97(@1FEL
M92!3=&%T:7-T:6-S/"%5/B`@/"$U/B(I.PH@("!F:6QE26YF;ULP72`](&-O
M<'E#:&%R*'1E;7`I.PH@("!S<')I;G1F("AT96UP+"`B/$,^/"\U/B`@("`@
M("`@("`@("`@("`@("`@("`@("`@/"$U/B(I.PH@("!F:6QE26YF;ULQ72`]
M(&-O<'E#:&%R*'1E;7`I.PH@("!S<')I;G1F("AT96UP+"`B/"\U+U(^0VAA
M<F%C=&5R($-O=6YT.CPA4CX@)2TT9"`@("`@/"$U/B(L('9I97=E<BT^8VAA
M<F%C=&5R<RD["B`@(&9I;&5);F9O6S)=(#T@8V]P>4-H87(H=&5M<"D["B`@
M('-P<FEN=&8@*'1E;7`L("(\+S4O4CY,:6YE($-O=6YT("`@("`Z/"%2/B`E
M+31D("`@("`\(34^(BP@=FEE=V5R+3YI;F9O4VEZ92D["B`@(&9I;&5);F9O
M6S-=(#T@8V]P>4-H87(H=&5M<"D["B`@('-P<FEN=&8@*'1E;7`L("(\0SX\
M+S4^("`@("`@("`@("`@("`@("`@("`@("`@("`\(34^(BD["B`@(&9I;&5)
M;F9O6S1=(#T@8V]P>4-H87(H=&5M<"D["B`@('-P<FEN=&8@*'1E;7`L("(\
M0SX\+S4^4')E<W,@06YY($ME>2!4;R!#;VYT:6YU92X\(34^(BD["B`@(&9I
M;&5);F9O6S5=(#T@8V]P>4-H87(H=&5M<"D["@H@("`O*B!3970@=&AE(&-U
M<G)E;G0@8G5T=&]N+@D)"0D)"2HO"B`@('9I97=E<BT^8W5R<F5N=$)U='1O
M;@D](#`["@H@("`O*B!$<F%W('1H92!V:65W97(@;&ES=`D)"0D)"2HO"B`@
M(&1R87=#1$M6:65W97(@*'9I97=E<BP@=FEE=V5R+3YB;W@I.PH*("`@+RH@
M1&\@=&AI<R!U;G1I;"!+15E?4D5455).(&ES(&AI="X)"0D)"2HO"B`@(&9O
M<B`H.SLI"B`@('L*("`@("`@+RH@4F5S970@=&AE(')E9G)E<V@@9FQA9RX)
M"0D)"2HO"B`@("`@(%)%1E)%4T@)/2!&04Q313L*"B`@("`@("\J($=E="!T
M:&4@=7-E<B!I;G!U="X)"0D)"0DJ+PH@("`@("!I;G!U="`]('=G971C:"`H
M=FEE=V5R+3YW:6XI.PH@("`@("!I9B`H(2!C:&5C:T-$2T]B:F5C=$)I;F0@
M*'96245715(L('9I97=E<BP@:6YP=70I*0H@("`@("!["B`@("`@("`@('-W
M:71C:"`H:6YP=70I"B`@("`@("`@('L*("`@("`@("`@("`@8V%S92!+15E?
M5$%"(#H@"@D@("`@("`@("!I9B`H=FEE=V5R+3YB=71T;VY#;W5N="`^(#$I
M"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@(&EF("AV
M:65W97(M/F-U<G)E;G1"=71T;VX@/3T@=FEE=V5R+3YB=71T;VY#;W5N="`M
M,2D*("`@("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@
M("`@=FEE=V5R+3YC=7)R96YT0G5T=&]N"3T@,#L*("`@("`@("`@("`@("`@
M("`@("!]"B`@("`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@("`@("`@("!V:65W97(M/F-U<G)E
M;G1"=71T;VXK*SL*("`@("`@("`@("`@("`@("`@("!]"@H@("`@("`@("`@
M("`@("`@("`@("\J(%)E9')A=R!T:&4@8G5T=&]N<RX)"0D)*B\*("`@("`@
M("`@("`@("`@("`@("!D<F%W0T1+5FEE=V5R0G5T=&]N<R`H=FEE=V5R*3L*
M("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@8G)E86L["B`@
M(`H@("`@("`@("`@("!C87-E($M%65]54"`Z"B`@("`@("`@("`@("`@("`@
M:68@*'9I97=E<BT^8W5R<F5N=%1O<"`^(#`I"B`@("`@("`@("`@("`@("`@
M>PH@("`@("`@("`@("`@("`@("`@('9I97=E<BT^8W5R<F5N=%1O<"TM.PH@
M("`@("`@("`@("`@("`@("`@(%)%1E)%4T@)/2!44E5%.PH@("`@("`@("`@
M("`@("`@('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@
M("`@>PH@("`@("`@("`@("`@("`@("`@($)E97`H*3L*("`@("`@("`@("`@
M("`@("!]"B`@("`@("`@("`@("`@("`@8G)E86L["B`@(`H@("`@("`@("`@
M("!C87-E($M%65]$3U=.(#H*("`@("`@("`@("`@("`@("!I9B`H=FEE=V5R
M+3YC=7)R96YT5&]P(#P@=FEE=V5R+3YM87A4;W!,:6YE*0H@("`@("`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@("`@("!V:65W97(M/F-U<G)E;G14
M;W`K*SL*("`@("`@("`@("`@("`@("`@("!2149215-("3T@5%)513L*("`@
M("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@96QS90H@("`@("`@
M("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!"965P*"D["B`@("`@
M("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@(&)R96%K.PH@("`*("`@
M("`@("`@("`@8V%S92!+15E?4DE'2%0@.@H@("`@("`@("`@("`@("`@(&EF
M("AV:65W97(M/FQE9G1#:&%R(#P@=FEE=V5R+3YM87A,969T0VAA<BD*("`@
M("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@=FEE=V5R+3YL
M969T0VAA<B`K*SL*("`@("`@("`@("`@("`@("`@("!2149215-("3T@5%)5
M13L*("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@96QS90H@
M("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!"965P*"D[
M"B`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@(&)R96%K.PH@
M("`*("`@("`@("`@("`@8V%S92!+15E?3$5&5"`Z"B`@("`@("`@("`@("`@
M("`@:68@*'9I97=E<BT^;&5F=$-H87(@/B`P*0H@("`@("`@("`@("`@("`@
M('L*("`@("`@("`@("`@("`@("`@("!V:65W97(M/FQE9G1#:&%R("TM.PH@
M("`@("`@("`@("`@("`@("`@(%)%1E)%4T@)/2!44E5%.PH@("`@("`@("`@
M("`@("`@('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@
M("`@>PH@("`@("`@("`@("`@("`@("`@($)E97`H*3L*("`@("`@("`@("`@
M("`@("!]"B`@("`@("`@("`@("`@("`@8G)E86L["B`@(`H@("`@("`@("`@
M("!C87-E($M%65]04$%'12`Z(&-A<V4@)P(G(#H@8V%S92`G8B<@.B!C87-E
M("=")R`Z"B`@("`@("`@("`@("`@("`@:68@*'9I97=E<BT^8W5R<F5N=%1O
M<"`^(#`I"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@
M(&EF("@H=FEE=V5R+3YC=7)R96YT5&]P("T@*'9I97=E<BT^=FEE=U-I>F4M
M,2DI(#X@,"D*("`@("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@
M("`@("`@("`@=FEE=V5R+3YC=7)R96YT5&]P"3T@=FEE=V5R+3YC=7)R96YT
M5&]P("T@*'9I97=E<BT^=FEE=U-I>F4@+2`Q*3L*("`@("`@("`@("`@("`@
M("`@("!]"B`@("`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@("`@("`@("!V:65W97(M/F-U<G)E
M;G14;W`@"3T@,#L*("`@("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@
M("`@("`@("`@4D5&4D532`D](%12544["B`@("`@("`@("`@("`@("`@?0H@
M("`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("!["B`@("`@
M("`@("`@("`@("`@("`@0F5E<"@I.PH@("`@("`@("`@("`@("`@('T*("`@
M("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@2T59
M7TY004=%(#H@8V%S92`G!B<@.B!C87-E("<@)R`Z(&-A<V4@)V8G(#H@8V%S
M92`G1B<@.@H@("`@("`@("`@("`@("`@(&EF("AV:65W97(M/F-U<G)E;G14
M;W`@/"!V:65W97(M/FUA>%1O<$QI;F4I"B`@("`@("`@("`@("`@("`@>PH@
M("`@("`@("`@("`@("`@("`@(&EF("@H=FEE=V5R+3YC=7)R96YT5&]P("L@
M=FEE=V5R+3YV:65W4VEZ92D@/"!V:65W97(M/FUA>%1O<$QI;F4I"B`@("`@
M("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@("`@('9I97=E
M<BT^8W5R<F5N=%1O<`D]('9I97=E<BT^8W5R<F5N=%1O<"`K("AV:65W97(M
M/G9I97=3:7IE("T@,2D["B`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@
M("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@("`@("`@("!["B`@("`@
M("`@("`@("`@("`@("`@("`@=FEE=V5R+3YC=7)R96YT5&]P"3T@=FEE=V5R
M+3YM87A4;W!,:6YE.PH@("`@("`@("`@("`@("`@("`@('T*("`@("`@("`@
M("`@("`@("`@("!2149215-("3T@5%)513L*("`@("`@("`@("`@("`@("!]
M"B`@("`@("`@("`@("`@("`@96QS90H@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("!"965P*"D["B`@("`@("`@("`@("`@("`@?0H@
M("`@("`@("`@("`@("`@(&)R96%K.PH@("`*("`@("`@("`@("`@8V%S92!+
M15E?2$]-12`Z(&-A<V4@)WPG(#H*("`@("`@("`@("`@("`@("!V:65W97(M
M/FQE9G1#:&%R(#T@,#L*("`@("`@("`@("`@("`@("!2149215-("3T@5%)5
M13L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A
M<V4@2T597T5.1"`Z(&-A<V4@)R0G(#H*("`@("`@("`@("`@("`@("!V:65W
M97(M/FQE9G1#:&%R(#T@=FEE=V5R+3YM87A,969T0VAA<CL*("`@("`@("`@
M("`@("`@("!2149215-("3T@5%)513L*("`@("`@("`@("`@("`@("!B<F5A
M:SL*("`@"B`@("`@("`@("`@(&-A<V4@)V<G(#H@8V%S92`G,2<@.@H@("`@
M("`@("`@("`@("`@('9I97=E<BT^8W5R<F5N=%1O<"`](#`["B`@("`@("`@
M("`@("`@("`@4D5&4D532`D](%12544["B`@("`@("`@("`@("`@("`@8G)E
M86L["B`@(`H@("`@("`@("`@("!C87-E("=')R`Z(`H@("`@("`@("`@("`@
M("`@('9I97=E<BT^8W5R<F5N=%1O<"`]('9I97=E<BT^;6%X5&]P3&EN93L*
M("`@("`@("`@("`@("`@("!2149215-("3T@5%)513L*("`@("`@("`@("`@
M("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@)TPG(#H*("`@("`@
M("`@("`@("`@("!X(#T@*&EN="D@*"AV:65W97(M/FEN9F]3:7IE("L@=FEE
M=V5R+3YC=7)R96YT5&]P*2`O(#(I.PH@("`@("`@("`@("`@("`@(&EF("AX
M(#P@=FEE=V5R+3YM87A4;W!,:6YE*0H@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("!V:65W97(M/F-U<G)E;G14;W`@/2!X.PH@("`@
M("`@("`@("`@("`@("`@(%)%1E)%4T@)/2!44E5%.PH@("`@("`@("`@("`@
M("`@('T*("`@("`@("`@("`@("`@("!E;'-E"B`@("`@("`@("`@("`@("`@
M>PH@("`@("`@("`@("`@("`@("`@($)E97`H*3L*("`@("`@("`@("`@("`@
M("!]"B`@("`@("`@("`@("`@("`@8G)E86L["B`@(`H@("`@("`@("`@("!C
M87-E("=L)R`Z"B`@("`@("`@("`@("`@("`@>"`]("AI;G0I("AV:65W97(M
M/F-U<G)E;G14;W`@+R`R*3L*("`@("`@("`@("`@("`@("!I9B`H>"`^/2`P
M*0H@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!V:65W
M97(M/F-U<G)E;G14;W`@/2!X.PH@("`@("`@("`@("`@("`@("`@(%)%1E)%
M4T@)/2!44E5%.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@("`@
M("!E;'-E"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@
M($)E97`H*3L*("`@("`@("`@("`@("`@("!]"B`@("`@("`@("`@("`@("`@
M8G)E86L["B`@(`H@("`@("`@("`@("!C87-E("<_)R`Z"B`@("`@("`@("`@
M("`@("`@4V5A<F-H1&ER96-T:6]N"3T@55`["B`@("`@("`@("`@("`@("`@
M9V5T06YD4W1O<F50871T97)N("AV:65W97(M/G-C<F5E;BP@=FEE=V5R+3YB
M;WA7:61T:"TR*3L*("`@("`@("`@("`@("`@("!I9B`H(2!S96%R8VA&;W)7
M;W)D*'9I97=E<BP@4V5A<F-H4&%T=&5R;BP@4V5A<F-H1&ER96-T:6]N*2D*
M("`@("`@("`@("`@("`@("!["B`@("`@("`@("`@("`@("`@("`@<W!R:6YT
M9B`H=&5M<"P@(CPO52\U/E!A='1E<FX@)R5S)R!N;W0@9F]U;F0N/"%5(34^
M(BP@4V5A<F-H4&%T=&5R;BD["B`@("`@("`@("`@("`@("`@("`@<&]P57!,
M86)E;"`H=FEE=V5R+"!T96UP*3L*("`@("`@("`@("`@("`@("!]"B`@("`@
M("`@("`@("`@("`@4D5&4D532`D](%12544["B`@("`@("`@("`@("`@("`@
M8G)E86L["B`@(`H@("`@("`@("`@("!C87-E("<O)R`Z"B`@("`@("`@("`@
M("`@("`@4V5A<F-H1&ER96-T:6]N"3T@1$]73CL*("`@("`@("`@("`@("`@
M("!G971!;F13=&]R95!A='1E<FX@*'9I97=E<BT^<V-R965N+"!V:65W97(M
M/F)O>%=I9'1H+3(I.PH@("`@("`@("`@("`@("`@(&EF("@A('-E87)C:$9O
M<E=O<F0H=FEE=V5R+"!396%R8VA0871T97)N+"!396%R8VA$:7)E8W1I;VXI
M*0H@("`@("`@("`@("`@("`@('L*("`@("`@("`@("`@("`@("`@("!S<')I
M;G1F("AT96UP+"`B/"]5+S4^4&%T=&5R;B`G)7,G(&YO="!F;W5N9"X\(54A
M-3XB+"!396%R8VA0871T97)N*3L*("`@("`@("`@("`@("`@("`@("!P;W!5
M<$QA8F5L("AV:65W97(L('1E;7`I.PH@("`@("`@("`@("`@("`@('T*("`@
M("`@("`@("`@("`@("!2149215-("3T@5%)513L*("`@("`@("`@("`@("`@
M("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@)VXG(#H*("`@("`@("`@
M("`@("`@("!I9B`H4V5A<F-H4&%T=&5R;B`]/2`H8VAA<B`J*4Y53$PI"B`@
M("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@("`@('!O<%5P3&%B
M96P@*'9I97=E<BP@(CPO-3Y4:&5R92!I<R!N;R!P871T97)N(&EN('1H92!B
M=69F97(N/"$U/B(I.PH@("`@("`@("`@("`@("`@('T*("`@("`@("`@("`@
M("`@("!E;'-E"B`@("`@("`@("`@("`@("`@>PH@("`@("`@("`@("`@("`@
M("`@(&EF("@A('-E87)C:$9O<E=O<F0H=FEE=V5R+"!396%R8VA0871T97)N
M+"!396%R8VA$:7)E8W1I;VXI*0H@("`@("`@("`@("`@("`@("`@('L*("`@
M("`@("`@("`@("`@("`@("`@("!S<')I;G1F("AT96UP+"`B/"\U/E!A='1E
M<FX@)R5S)R!N;W0@9F]U;F0N/"$U/B(L(%-E87)C:%!A='1E<FXI.PH@("`@
M("`@("`@("`@("`@("`@("`@('!O<%5P3&%B96P@*'9I97=E<BP@=&5M<"D[
M"B`@("`@("`@("`@("`@("`@("`@?0H@("`@("`@("`@("`@("`@('T*("`@
M("`@("`@("`@("`@("!2149215-((#T@5%)513L*("`@("`@("`@("`@("`@
M("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@)SHG(#H*("`@("`@("`@
M("`@("`@("!V:65W97(M/F-U<G)E;G14;W`)/2!J=6UP5&],:6YE("AV:65W
M97(I.PH@("`@("`@("`@("`@("`@(%)%1E)%4T@)"3T@5%)513L*("`@("`@
M("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@)VDG(#H@
M8V%S92`G<R<@.@H@("`@("`@("`@("`@("`@(&9I;&5);F9O3&%B96P)/2!N
M97=#1$M,86)E;"`H=FEE=V5R+3YS8W)E96XL($-%3E1%4BP@0T5.5$52+"!F
M:6QE26YF;RP@-BP@5%)512P@1D%,4T4I.PH@("`@("`@("`@("`@("`@(&1R
M87=#1$M,86)E;"`H9FEL94EN9F],86)E;"P@0D]8*3L*("`@("`@("`@("`@
M("`@("!W9V5T8V@@*&9I;&5);F9O3&%B96PM/G=I;BD["B`@("`@("`@("`@
M("`@("`@9&5S=')O>4-$2TQA8F5L("AF:6QE26YF;TQA8F5L*3L*("`@("`@
M("`@("`@("`@("!2149215-("3T@5%)513L*("`@("`@("`@("`@("`@("!B
M<F5A:SL*("`@"B`@("`@("`@("`@(&-A<V4@0T1+7TY%6%0@.B!C87-E($M%
M65]%4T,@.@H@("`@("`@("`@("`@("`@(&9R965#:&%R("AF:6QE26YF;ULP
M72D["B`@("`@("`@("`@("`@("`@9G)E94-H87(@*&9I;&5);F9O6S%=*3L*
M("`@("`@("`@("`@("`@("!F<F5E0VAA<B`H9FEL94EN9F];,ETI.PH@("`@
M("`@("`@("`@("`@(&9R965#:&%R("AF:6QE26YF;ULS72D["B`@("`@("`@
M("`@("`@("`@9G)E94-H87(@*&9I;&5);F9O6S1=*3L*("`@("`@("`@("`@
M("`@("!F<F5E0VAA<B`H9FEL94EN9F];-5TI.PH@("`@("`@("`@("`@("`@
M(')E='5R;B`M,3L*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@
M("`@("`@(&-A<V4@2T597U)%5%523B`Z"B`@("`@("`@("`@("`@("`@9G)E
M94-H87(@*&9I;&5);F9O6S!=*3L*("`@("`@("`@("`@("`@("!F<F5E0VAA
M<B`H9FEL94EN9F];,5TI.PH@("`@("`@("`@("`@("`@(&9R965#:&%R("AF
M:6QE26YF;ULR72D["B`@("`@("`@("`@("`@("`@9G)E94-H87(@*&9I;&5)
M;F9O6S-=*3L*("`@("`@("`@("`@("`@("!F<F5E0VAA<B`H9FEL94EN9F];
M-%TI.PH@("`@("`@("`@("`@("`@(&9R965#:&%R("AF:6QE26YF;ULU72D[
M"B`@("`@("`@("`@("`@("`@<F5T=7)N('9I97=E<BT^8W5R<F5N=$)U='1O
M;CL*("`@("`@("`@("`@("`@("!B<F5A:SL*("`@"B`@("`@("`@("`@(&-A
M<V4@0T1+7U)%1E)%4T@@.@H@("`@("`@("`@("`@("`@(')E9G)E<VA#1$M3
M8W)E96X@*'9I97=E<BT^<V-R965N*3L*("`@("`@("`@("`@("`@("!B<F5A
M:SL*("`@"B`@("`@("`@("`@(&1E9F%U;'0@.@H@("`@("`@("`@("`@("`@
M(&)R96%K.PH@("`@("`@("!]"B`@("`@('T*("`@("`@"B`@("`@("\J($1O
M('=E(&YE960@=&\@<F5D<F%W('1H92!S8W)E96X_/S\)"0D)*B\*("`@("`@
M:68@*%)%1E)%4T@I"B`@("`@('L*("`@("`@("`@+RH@0VQE87(@=&AE('=I
M;F1O=RX)"0D)"0DJ+PH@("`@("`@("!W97)A<V4@*'9I97=E<BT^=VEN*3L*
M"B`@("`@("`@("\J(%)E9')A=R!T:&4@=&ET;&4N"0D)"0D)*B\*("`@("`@
M("`@=W)I=&5#:'1Y<&4@*'9I97=E<BT^=VEN+"!V:65W97(M/G1I=&QE4&]S
M+"`Q+"`*"0D)=FEE=V5R+3YT:71L92P@2$]225I/3E1!3"P@,"P@=FEE=V5R
M+3YT:71L94QE;BD["@H@("`@("`@("`O*B!2961R87<@=&AE(&QI<W0)"0D)
M"0DJ+PH@("`@("`@("!F;W(@*'@],#L@>"`\('9I97=E<BT^=FEE=U-I>F4[
M('@K*RD*("`@("`@("`@>PH@("`@("`@("`@("!I9B`H=FEE=V5R+3YC=7)R
M96YT5&]P("L@>"`\/2!V:65W97(M/FEN9F]3:7IE*0H@("`@("`@("`@("![
M"B`@("`@("`@("`@("`@(&EN="!S8W)E96Y0;W,@/2!V:65W97(M/FEN9F]0
M;W-;=FEE=V5R+3YC=7)R96YT5&]P*WA=*S$@+2!V:65W97(M/FQE9G1#:&%R
M.PH@("`@("`@("`@("`@("!I9B`H<V-R965N4&]S(#X](#`I"B`@("`@("`@
M("`@("`@('L*("`@("`@("`@("`@("`@("`@=W)I=&5#:'1Y<&4@*'9I97=E
M<BT^=VEN+`H)"0D)<V-R965N4&]S+"!X*S(L"@D)"0EV:65W97(M/FEN9F];
M>"MV:65W97(M/F-U<G)E;G14;W!=+`H)"0D)2$]225I/3E1!3"P@,"P*"0D)
M"79I97=E<BT^:6YF;TQE;EMX*W9I97=E<BT^8W5R<F5N=%1O<%TI.PH@("`@
M("`@("`@("`@("!]"B`@("`@("`@("`@("`@(&5L<V4*("`@("`@("`@("`@
M("`@>PH@("`@("`@("`@("`@("`@("!W<FET94-H='EP92`H=FEE=V5R+3YW
M:6XL"@D)"0DQ+"!X*S(L"@D)"0EV:65W97(M/FEN9F];>"MV:65W97(M/F-U
M<G)E;G14;W!=+`H)"0D)2$]225I/3E1!3"P*"0D)"79I97=E<BT^;&5F=$-H
M87(@+2!V:65W97(M/FEN9F]0;W-;=FEE=V5R+3YC=7)R96YT5&]P*WA=+`H)
M"0D)=FEE=V5R+3YI;F9O3&5N6W@K=FEE=V5R+3YC=7)R96YT5&]P72D["B`@
M("`@("`@("`@("`@('T*("`@("`@("`@("`@?0H@("`@("`@("!]"B`@("`@
M"B`@("`@("`@("\J(%)E9')A=R!T:&4@8G5T=&]N<RX)"0D)"0DJ+PH@("`@
M("`@("!F;W(@*'@],#L@>"`\('9I97=E<BT^8G5T=&]N0V]U;G0[('@K*RD*
M("`@("`@("`@>PH@("`@("`@("`@("!W<FET94-H='EP92`H=FEE=V5R+3YW
M:6XL('9I97=E<BT^8G5T=&]N4&]S6WA=+"`*"0D)"79I97=E<BT^8F]X2&5I
M9VAT+3(L('9I97=E<BT^8G5T=&]N6WA=+`H)"0D)2$]225I/3E1!3"P@,"P@
M=FEE=V5R+3YB=71T;VY,96Y;>%TI.PH@("`@("`@("!]"@H@("`@("`@("`O
M*B!$<F%W(&EN('1H92!C=7)R96YT(&QI;F4@870@=&AE('1O<"X@"0D)*B\*
M("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(B5D+R5D("4R+C!F)24B+"`H=FEE
M=V5R+3YC=7)R96YT5&]P*S$I+"!V:65W97(M/FEN9F]3:7IE+"`H*&9L;V%T
M*2AV:65W97(M/F-U<G)E;G14;W`K,2DO*&9L;V%T*79I97=E<BT^:6YF;U-I
M>F4I("H@,3`P*3L*("`@("`@("`@=W)I=&5#:&%R("AV:65W97(M/G=I;BP@
M,2P@,2P@=&5M<"P@2$]225I/3E1!3"P@,"P@<W1R;&5N*'1E;7`I*3L*("`@
M("`*("`@("`@("`@+RH@0F]X(&ET(&EF('=E(&AA=F4@=&\N"0D)"0DJ+PH@
M("`@("`@("!I9B`H=FEE=V5R+3YB;W@I"B`@("`@("`@('L*("`@("`@("`@
M("`@8F]X("AV:65W97(M/G=I;BP@04-37U9,24Y%+"!!0U-?2$Q)3D4I.PH@
M("`@("`@("!]"@H@("`@("`@("`O*B!$<F%W('1H92!S97!E<F%T:6]N(&QI
M;F4N"0D)"0DJ+PH@("`@("`@("!F;W(@*'@],3L@>"`\/2!V:65W97(M/F)O
M>%=I9'1H*S$[('@K*RD*("`@("`@("`@>PH@("`@("`@("`@("!M=G=A9&1C
M:"`H=FEE=V5R+3YW:6XL('9I97=E<BT^8F]X2&5I9VAT+3,L('@L($%#4U](
M3$E.12D["B`@("`@("`@('T*("`@("`@("`@;79W861D8V@@*'9I97=E<BT^
M=VEN+"!V:65W97(M/F)O>$AE:6=H="TS+"`P+"!!0U-?3%1%12D["B`@("`@
M("`@(&UV=V%D9&-H("AV:65W97(M/G=I;BP@=FEE=V5R+3YB;WA(96EG:'0M
M,RP@=FEE=V5R+3YW:6XM/E]M87AX+"!!0U-?4E1%12D["@H@("`@("`@("`O
M*B!2969R97-H('1H92!S8W)E96XN"0D)"0D)*B\*("`@("`@("`@=W)E9G)E
M<V@@*'9I97=E<BT^=VEN*3L*("`@("`@?0H@("!]"GT*"B\J"B`J(%1H:7,@
M<V5A<F-H97,@=&AE(&1O8W5M96YT(&QO;VMI;F<@9F]R('1H92!G:79E;B!W
M;W)D+@H@*B\*=F]I9"!G971!;F13=&]R95!A='1E<FX@*$-$2U-#4D5%3B`J
M<V-R965N+"!I;G0@=VED=&@I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I
M86)L97,N"0D)"0D)*B\*("`@0T1+14Y44ED)*F=E=%!A='1E<FX["B`@(&-H
M87()"2IT96UP.PH*("`@+RH@0VAE8VL@=&AE(&1I<F5C=&EO;BX)"0D)"0DJ
M+PH@("!I9B`H4V5A<F-H1&ER96-T:6]N(#T](%50*0H@("!["B`@("`@('1E
M;7`)/2`B/"\U/E-E87)C:"!5<"`@.B`\(34^(CL*("`@?0H@("!E;'-E"B`@
M('L*("`@("`@=&5M<`D]("(\+S4^4V5A<F-H($1O=VXZ(#PA-3XB.PH@("!]
M"@H@("`O*B!0;W`@=7`@=&AE(&5N=')Y(&9I96QD+@D)"0D)"2HO"B-I9F1E
M9B!#3TQ/4@H@("!G9710871T97)N"3T@;F5W0T1+16YT<GD@*'-C<F5E;BP@
M0T5.5$52+"!#14Y415(L($Q%1E0L('1E;7`L($-/3$]27U!!25(H-2E\05]"
M3TQ$+"`G+B=\0T],3U)?4$%)4B@U*7Q!7T)/3$0L('9-25A%1"P@,3`L(#`L
M(#(U-BP@5%)512P@1D%,4T4I.PHC96QS90H@("!G9710871T97)N"3T@;F5W
M0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52+"!#14Y415(L($Q%1E0L('1E;7`L
M($%?0D],1"P@)RXG?$%?0D],1"P@=DU)6$5$+"`Q,"P@,"P@,C4V+"!44E5%
M+"!&04Q312D["B-E;F1I9@H*"B`@("\J($ES('1H97)E(&%N(&]L9"!S97)A
M8V@@<&%T=&5R;C\)"0D)"2HO"B`@(&EF("A396%R8VA0871T97)N("$]("AC
M:&%R("HI3E5,3"D@"B`@('L*("`@("`@<V5T0T1+16YT<GD@*&=E=%!A='1E
M<FXL(%-E87)C:%!A='1E<FXL(&=E=%!A='1E<FXM/FUI;BP@9V5T4&%T=&5R
M;BT^;6%X+"!G9710871T97)N+3YB;W@I.PH@("!]"B`@(&9R965#:&%R("A3
M96%R8VA0871T97)N*3L*"B`@("\J($%C=&EV871E('1H:7,@8F%B>2X)"0D)
M"0DJ+PH@("!A8W1I=F%T94-$2T5N=')Y("AG9710871T97)N+"`H8VAT>7!E
M("HI3E5,3"D["@H@("`O*B!3879E('1H92!I;F9O+@D)"0D)"0DJ+PH@("!3
M96%R8VA0871T97)N"3T@8V]P>4-H87(@*&=E=%!A='1E<FXM/FEN9F\I.PH*
M("`@+RH@0VQE86X@=7`N"0D)"0D)"0DJ+PH@("!D97-T<F]Y0T1+16YT<GD@
M*&=E=%!A='1E<FXI.PI]"@HO*@H@*B!4:&ES('-E87)C:&5S(&9O<B!T:&4@
M=V]R9"!A;F0@<F5A;&EG;G,@=&AE('9A;'5E(&]N('1H92!S8W)E96XN"B`J
M+PII;G0@<V5A<F-H1F]R5V]R9"`H0T1+5DE%5T52("IV:65W97(L(&-H87(@
M*G!A='1E<FXL(&EN="!D:7)E8W1I;VXI"GL*("`@+RH@1&5C;&%R92!L;V-A
M;"!V87)I86)L97,N"0D)"0D)*B\*("`@:6YT('@L('DL('!O<RP@;&5N+"!P
M;&5N.PH*("`@+RH@268@=&AE('!A='1E<FX@:7,@3E5,3"!T:&5N(')E='5R
M;BX)"0D)*B\*("`@:68@*'!A='1E<FX@/3T@*&-H87(@*BE.54Q,*0H@("![
M"B`@("`@(')E='5R;B@P*3L*("`@?0H@("!P;&5N"3T@<W1R;&5N*'!A='1E
M<FXI.PH*("`@+RH@1VEV96X@=&AE(&1I<F5C=&EO;BP@<W1A<G0@;&]O:VEN
M9RXN+BX)"0D)*B\*("`@:68@*&1I<F5C=&EO;B`]/2!$3U=.*0H@("!["B`@
M("`@("\J(%-T87)T(&QO;VMI;F<@9G)O;2`G:&5R92<@9&]W;BX)"0D)*B\*
M("`@("`@9F]R("AX(#T@=FEE=V5R+3YC=7)R96YT5&]P("L@,3L@>"`\('9I
M97=E<BT^:6YF;U-I>F4[('@K*RD*("`@("`@>PH@("`@("`@("`O*B!3=&%R
M="!L;V]K:6YG+B!)9B!W92!F:6YD(&ET+"!T:&5N('-E="!T:&4@=F%L=64@
M;V8)"2HO"B`@("`@("`@("\J('9I97=E<BT^8W5R<F5N=%1O<"!A;F0@<&]S
M<VEB;'D@979E;B!L969T0VAA<BXN+@D)*B\*("`@("`@("`@;&5N"3T@8VAL
M96X@*'9I97=E<BT^:6YF;UMX72D["B`@("`@("`@('!O<PD](#`["B`@("`@
M("`@(&9O<B`H>3TP.R!Y(#P@;&5N.R!Y*RLI"B`@("`@("`@('L*("`@("`@
M("`@("`@+RH@5V4@:&%V92!T;R!T96%R('1H92!A='1R:6)U=&5S(&9R;VT@
M=&AE(&-H='EP92X)"2HO"B`@("`@("`@("`@(&-H87(@<&QA:6Y#:&%R"3T@
M=FEE=V5R+3YI;F9O6WA=6WE=("8@05]#2$%25$585#L*"B`@("`@("`@("`@
M("\J(%=E(&AA=F4@9F]U;F0@=&AE('=O<F0@870@=&AI<R!P;VEN="X)"0DJ
M+PH@("`@("`@("`@("!I9B`H<&]S(#T]('!L96XI"B`@("`@("`@("`@('L*
M("`@("`@("`@("`@("`@=FEE=V5R+3YC=7)R96YT5&]P"3T@*'@@/"!V:65W
M97(M/FUA>%1O<$QI;F4@(#\@>"`Z('9I97=E<BT^;6%X5&]P3&EN92D["B`@
M("`@("`@("`@("`@('9I97=E<BT^;&5F=$-H87()/2`H>2`\('9I97=E<BT^
M8F]X5VED=&@@/R`P(#H@=FEE=V5R+3YM87A,969T0VAA<BD["B`@("`@("`@
M("`@("`@(')E='5R;B`H,2D["B`@("`@("`@("`@('T*"B`@("`@("`@("`@
M("\J($ME97`@=')U9&=I;F<@86QO;F<N"0D)"0DJ+PH@("`@("`@("`@("!I
M9B`H<&%T=&5R;EMP;W,K*UT@(3T@<&QA:6Y#:&%R*0H@("`@("`@("`@("![
M"B`@("`@("`@("`@("`@('!O<PD](#`["B`@("`@("`@("`@('T*("`@("`@
M("`@?0H@("`@("!]"B`@('T*("`@96QS90H@("!["B`@("`@("\J(%-T87)T
M(&QO;VMI;F<@9G)O;2`G:&5R92<@=7`N"0D)"0DJ+PH@("`@("!F;W(@*'@@
M/2!V:65W97(M/F-U<G)E;G14;W`@+2`Q.R!X(#X](#`[('@M+2D*("`@("`@
M>PH@("`@("`@("`O*B!3=&%R="!L;V]K:6YG+B!)9B!W92!F:6YD(&ET+"!T
M:&5N('-E="!T:&4@=F%L=64@;V8)"2HO"B`@("`@("`@("\J('9I97=E<BT^
M8W5R<F5N=%1O<"!A;F0@<&]S<VEB;'D@979E;B!L969T0VAA<BXN+@D)*B\*
M("`@("`@("`@;&5N"3T@8VAL96X@*'9I97=E<BT^:6YF;UMX72D["B`@("`@
M("`@('!O<PD](#`["B`@("`@("`@(&9O<B`H>3TP.R!Y(#P@;&5N.R!Y*RLI
M"B`@("`@("`@('L*("`@("`@("`@("`@+RH@5V4@:&%V92!T;R!T96%R('1H
M92!A='1R:6)U=&5S(&9R;VT@=&AE(&-H='EP92X)"2HO"B`@("`@("`@("`@
M(&-H87(@<&QA:6Y#:&%R"3T@=FEE=V5R+3YI;F9O6WA=6WE=("8@05]#2$%2
M5$585#L*"B`@("`@("`@("`@("\J(%=E(&AA=F4@9F]U;F0@=&AE('=O<F0@
M870@=&AI<R!P;VEN="X)"0DJ+PH@("`@("`@("`@("!I9B`H<&]S(#T]('!L
M96XI"B`@("`@("`@("`@('L*("`@("`@("`@("`@("`@=FEE=V5R+3YC=7)R
M96YT5&]P"3T@>#L*("`@("`@("`@("`@("`@=FEE=V5R+3YL969T0VAA<@D]
M("AY(#P@=FEE=V5R+3YB;WA7:61T:"`_(#`@.B!V:65W97(M/FUA>$QE9G1#
M:&%R*3L*("`@("`@("`@("`@("`@<F5T=7)N("@Q*3L*("`@("`@("`@("`@
M?0H*("`@("`@("`@("`@+RH@2V5E<"!T<G5D9VEN9R!A;&]N9RX)"0D)"2HO
M"B`@("`@("`@("`@(&EF("AP871T97)N6W!O<RLK72`A/2!P;&%I;D-H87(I
M"B`@("`@("`@("`@('L*("`@("`@("`@("`@("`@<&]S"3T@,#L*("`@("`@
M("`@("`@?0H@("`@("`@("!]"B`@("`@('T*("`@?0H@("!R971U<FXH,"D[
M"GT*"B\J"B`J(%1H:7,@86QL;W=S('5S('1O("=J=6UP)R!T;R!A(&=I=F5N
M(&QI;F4@:6X@=&AE(&9I;&4N"B`J+PII;G0@:G5M<%1O3&EN92`H0T1+5DE%
M5T52("IV:65W97(I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N
M"0D)"0D)*B\*("`@:6YT(&QI;F4)"3T@,#L*("`@0T1+4T-!3$4@*B!N97=L
M:6YE"3T@;F5W0T1+4V-A;&4@*'9I97=E<BT^<V-R965N+"!#14Y415(L($-%
M3E1%4BP@3$5&5"P*"0D)"2(\+S4^1V\@5&\@3&EN92`Z(BP@05]"3TQ$+"`U
M+`H)"0D),"P@,"P@=FEE=V5R+3YM87A4;W!,:6YE*S$L(#$L(#$P+"!44E5%
M+"!44E5%*3L*("`@;&EN92`](&%C=&EV871E0T1+4V-A;&4@*&YE=VQI;F4L
M("AC:'1Y<&4@*BE.54Q,*3L*("`@9&5S=')O>4-$2U-C86QE("AN97=L:6YE
M*3L*("`@<F5T=7)N("@H;&EN92TQ*2D["GT*"B\J"B`J(%1H:7,@<&]P<R!A
M(&QI='1L92!M97-S86=E('5P(&]N('1H92!S8W)E96XN"B`J+PIV;VED('!O
M<%5P3&%B96P@*$-$2U9)15=%4B`J=FEE=V5R+"!C:&%R("IM97-G*0I["B`@
M("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@(&-H87(@
M*FEN9F];,UT["B`@($-$2TQ!0D5,("IL86)E;#L*"B`@("\J(%-E="!U<"!V
M87)I86)L97,N"0D)"0D)"2HO"B`@(&EN9F];,%T)/2!M97-G.PH@("!L86)E
M;`D](&YE=T-$2TQA8F5L("AV:65W97(M/G-C<F5E;BP@0T5.5$52+"!#14Y4
M15(L(&EN9F\L(#$L(%12544L($9!3%-%*3L*"B`@("\J($1R87<@=&AE(&QA
M8F5L(&%N9"!W86ET+@D)"0D)"2HO"B`@(&1R87=#1$M,86)E;"`H;&%B96PL
M($)/6"D["B`@('=G971C:"`H;&%B96PM/G=I;BD["@H@("`O*B!#;&5A;B!U
M<"X)"0D)"0D)"2HO"B`@(&1E<W1R;WE#1$M,86)E;"`H;&%B96PI.PI]"@HO
M*@H@*B!4:&ES(&9U;F-T:6]N(&1R87=S('1H92!V:65W97(@=VED9V5T+@H@
M*B\*=F]I9"!D<F%W0T1+5FEE=V5R("A#1$M6245715(@*G9I97=E<BP@8F]O
M;&5A;B!";W@I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)
M"0D)*B\*("`@:6YT('@)/2`P.PH@("!I;G0@;&%S=$QI;F4)/2`P.PH@("!C
M:&%R('1E;7!;,3`P73L*"B`@("\J($5R87-E('1H92!O;&0@;V)J96-T+BXN
M"0D)"0D)*B\*("`@97)A<V5#1$M6:65W97(@*'9I97=E<BD["@H@("`O*B!$
M;R!W92!N965D('1O(&1R87<@:6X@=&AE('-H861O=S\_/PD)"0DJ+PH@("!I
M9B`H=FEE=V5R+3YS:&%D;W<I"B`@('L*("`@("`@9')A=U-H861O=R`H=FEE
M=V5R+3YS:&%D;W=7:6XI.PH@("!]"B`@(`H@("`O*B!$<F%W(&EN('1H92!T
M:71L90D)"0D)"0DJ+PH@("!W<FET94-H='EP92`H=FEE=V5R+3YW:6XL('9I
M97=E<BT^=&ET;&50;W,L(#$L('9I97=E<BT^=&ET;&4L(`H)"4A/4DE:3TY4
M04PL(#`L('9I97=E<BT^=&ET;&5,96XI.PH*("`@+RH@1')A=R!I;B!T:&4@
M;65S<V%G92!C;VYT96YT<RX)"0D)"2HO"B`@(&QA<W1,:6YE(#T@*'9I97=E
M<BT^:6YF;U-I>F4@/"!V:65W97(M/G9I97=3:7IE(#\@=FEE=V5R+3YI;F9O
M4VEZ92`Z('9I97=E<BT^=FEE=U-I>F4I.PH@("!F;W(@*'@],#L@>"`\(&QA
M<W1,:6YE.R!X*RLI"B`@('L*("`@("`@:68@*'9I97=E<BT^:6YF;UMV:65W
M97(M/F-U<G)E;G14;W`K>%T@(3T@*&-H='EP92`J*4Y53$PI"B`@("`@('L*
M("`@("`@("`@=W)I=&5#:'1Y<&4@*'9I97=E<BT^=VEN+"!V:65W97(M/FEN
M9F]0;W-;=FEE=V5R+3YC=7)R96YT5&]P*WA=*S$L"@D)"7@K,BP@=FEE=V5R
M+3YI;F9O6W@K=FEE=V5R+3YC=7)R96YT5&]P72P@2$]225I/3E1!3"P*"0D)
M=FEE=V5R+3YL969T0VAA<BP*"0D)=FEE=V5R+3YI;F9O3&5N6W@K=FEE=V5R
M+3YC=7)R96YT5&]P72D["B`@("`@('T*("`@?0H*("`@+RH@0F]X(&ET(&EF
M(&ET('=A<R!A<VME9"!F;W(N"0D)"0DJ+PH@("!I9B`H=FEE=V5R+3YB;W@I
M"B`@('L*("`@("`@8F]X("AV:65W97(M/G=I;BP@04-37U9,24Y%+"!!0U-?
M2$Q)3D4I.PH@("!]"@H@("`O*B!$<F%W('1H92!S97!E<F%T:6]N(&QI;F4N
M"0D)"0D)*B\*("`@9F]R("AX/3$[('@@/#T@=FEE=V5R+3YB;WA7:61T:"LQ
M.R!X*RLI"B`@('L*("`@("`@;79W861D8V@@*'9I97=E<BT^=VEN+"!V:65W
M97(M/F)O>$AE:6=H="TS+"!X+"!!0U-?2$Q)3D4I.PH@("!]"B`@(&UV=V%D
M9&-H("AV:65W97(M/G=I;BP@=FEE=V5R+3YB;WA(96EG:'0M,RP@,"P@04-3
M7TQ4144I.PH@("!M=G=A9&1C:"`H=FEE=V5R+3YW:6XL('9I97=E<BT^8F]X
M2&5I9VAT+3,L('9I97=E<BT^=VEN+3Y?;6%X>"P@04-37U)4144I.PH*("`@
M+RH@1')A=R!I;B!T:&4@8W5R<F5N="!L:6YE(&%T('1H92!T;W`N(`D)"0DJ
M+PH@("!S<')I;G1F("AT96UP+"`B)60O)60@)3(N,&8E)2(L("AV:65W97(M
M/F-U<G)E;G14;W`K,2DL('9I97=E<BT^:6YF;U-I>F4L("@H9FQO870I*'9I
M97=E<BT^8W5R<F5N=%1O<"LQ*2\H9FQO870I=FEE=V5R+3YI;F9O4VEZ92D@
M*B`Q,#`I.PH@("!W<FET94-H87(@*'9I97=E<BT^=VEN+"`Q+"`Q+"!T96UP
M+"!(3U))6D].5$%,+"`P+"!S=')L96XH=&5M<"DI.PH*("`@+RH@1')A=R!T
M:&4@8G5T=&]N<RX)"0D)"0D)*B\*("`@9')A=T-$2U9I97=E<D)U='1O;G,@
M*'9I97=E<BD["GT*"B\J"B`J(%1H:7,@<F5D<F%W<R!T:&4@=FEE=V5R(&)U
M='1O;G,N"B`J+PIV;VED(&1R87=#1$M6:65W97)"=71T;VYS("A#1$M62457
M15(@*G9I97=E<BD*>PH@("`O*B!$96-L87)E(&QO8V%L('9A<FEA8FQE<RX)
M"0D)"0DJ+PH@("!C:&%R(&-H87)A8W1E<CL*("`@:6YT('@["@H@("`O*B!2
M961R87<@=&AE(&)U='1O;G,N"0D)"0D)*B\*("`@9F]R("AX/3`[('@@/"!V
M:65W97(M/F)U='1O;D-O=6YT.R!X*RLI"B`@('L*("`@("`@=W)I=&5#:'1Y
M<&4@*'9I97=E<BT^=VEN+"!V:65W97(M/F)U='1O;E!O<UMX72P*"0D)=FEE
M=V5R+3YB;WA(96EG:'0M,BP@=FEE=V5R+3YB=71T;VY;>%TL($A/4DE:3TY4
M04PL"@D)"3`L('9I97=E<BT^8G5T=&]N3&5N6WA=*3L*("`@?0H*("`@+RH@
M2&EG:&QI9VAT('1H92!C=7)R96YT(&)U='1O;BX)"0D)"2HO"B`@(&9O<B`H
M>#TP.R!X(#P@=FEE=V5R+3YB=71T;VY,96Y;=FEE=V5R+3YC=7)R96YT0G5T
M=&]N73L@>"LK*0H@("!["B`@("`@("\J(%-T<FEP('1H92!C:&%R86-T97(@
M;V8@86YY(&5X=')A(&%T=')I8G5T97,N"0D)*B\*("`@("`@8VAA<F%C=&5R
M"3T@=FEE=V5R+3YB=71T;VY;=FEE=V5R+3YC=7)R96YT0G5T=&]N75MX72`F
M($%?0TA!4E1%6%0["@H@("`@("`O*B!!9&0@=&AE(&-H87)A8W1E<B!I;G1O
M('1H92!W:6YD;W<N"0D)"2HO"B`@("`@(&UV=V%D9&-H("AV:65W97(M/G=I
M;BP@=FEE=V5R+3YB;WA(96EG:'0M,BP*"0EV:65W97(M/F)U='1O;E!O<UMV
M:65W97(M/F-U<G)E;G1"=71T;VY=*W@L"@D)8VAA<F%C=&5R?'9I97=E<BT^
M8G5T=&]N2&EG:&QI9VAT*3L*("`@?0H*("`@+RH@4F5F<F5S:"!T:&4@=VEN
M9&]W+@D)"0D)"2HO"B`@('=R969R97-H("AV:65W97(M/G=I;BD["GT*"B\J
M"B`J(%1H:7,@9G5N8W1I;VX@9&5S=')O>7,@=&AE('9I97=E<B!W:61G970N
M"B`J+PIV;VED(&1E<W1R;WE#1$M6:65W97(@*$-$2U9)15=%4B`J=FEE=V5R
M*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)"2HO"B`@
M(&EN="!X"3T@,#L*"B`@("\J($5R87-E('1H92!O8FIE8W0N"0D)"0D)"2HO
M"B`@(&5R87-E0T1+5FEE=V5R("AV:65W97(I.PH*("`@+RH@0VQE87(@=7`@
M=&AE(&-H87(@<&]I;G1E<G,N"0D)"0DJ+PH@("!F<F5E0VAT>7!E("AV:65W
M97(M/G1I=&QE*3L*("`@9F]R("AX/3`[('@@/#T@=FEE=V5R+3YI;F9O4VEZ
M93L@>"LK*0H@("!["B`@("`@(&9R965#:'1Y<&4@*'9I97=E<BT^:6YF;UMX
M72D["B`@('T*("`@9F]R("AX/3`[('@@/"!V:65W97(M/F)U='1O;D-O=6YT
M.R!X*RLI"B`@('L*("`@("`@9G)E94-H='EP92`H=FEE=V5R+3YB=71T;VY;
M>%TI.PH@("!]"@H@("`O*B!#;&5A;B!U<"!T:&4@=VEN9&]W<RX)"0D)"0DJ
M+PH@("!D96QW:6X@*'9I97=E<BT^=VEN*3L*("`@:68@*'9I97=E<BT^<VAA
M9&]W*0H@("!["B`@("`@(&1E;'=I;B`H=FEE=V5R+3YS:&%D;W=7:6XI.PH@
M("!]"@H@("`O*B!5;G)E9VES=&5R('1H:7,@;V)J96-T+@D)"0D)"2HO"B`@
M('5N<F5G:7-T97)#1$M/8FIE8W0@*'96245715(L('9I97=E<BD["@H@("`O
M*B!&:6YI<V@@8VQE86YI;F<@=7`N"0D)"0D)*B\*("`@9G)E92`H=FEE=V5R
M*3L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!E<F%S97,@=&AE('9I97=E<B!W
M:61G970@9G)O;2!T:&4@<V-R965N+@H@*B\*=F]I9"!E<F%S94-$2U9I97=E
M<B`H0T1+5DE%5T52("IV:65W97(I"GL*("`@=V5R87-E("AV:65W97(M/G=I
M;BD["B`@('=R969R97-H("AV:65W97(M/G=I;BD["B`@(&EF("AV:65W97(M
M/G-H861O=RD*("`@>PH@("`@("!W97)A<V4@*'9I97=E<BT^<VAA9&]W5VEN
M*3L*("`@("`@=W)E9G)E<V@@*'9I97=E<BT^<VAA9&]W5VEN*3L*("`@?0I]
!"CL*
`
end
SHAR_EOF
  echo 'uudecoding file viewer.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0503190896 'viewer.c' &&
  chmod 0444 'viewer.c' ||
  echo 'restore of viewer.c failed'
  shar_count="`wc -c < 'viewer.c'`"
  test 25291 -eq "$shar_count" ||
    echo "viewer.c: original size 25291, current size $shar_count"
  rm -f _sharnew.tmp
fi
rm -f _sharseq.tmp
echo 'You have unpacked the last part'
exit 0
