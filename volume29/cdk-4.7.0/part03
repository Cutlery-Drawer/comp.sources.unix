Newsgroups: comp.sources.unix
From: glover@credit.erin.utoronto.ca (Mike Glover)
Subject: v29i107: cdk-4.7.0 - Curses Development Kit, V4.7.0, Part03/10
References: <1.833427459.28242@gw.home.vix.com>
Sender: unix-sources-moderator@gw.home.vix.com
Approved: vixie@gw.home.vix.com

Submitted-By: glover@credit.erin.utoronto.ca (Mike Glover)
Posting-Number: Volume 29, Issue 107
Archive-Name: cdk-4.7.0/part03

#!/bin/sh
# This is `cdk_part.03' (part 3 of a multipart archive).
# Do not concatenate these parts, unpack them in order with `/bin/sh'.
# File `demo/rolodex.c' is being continued...
#
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  echo 'WARNING: not restoring timestamps.  Consider getting and'
  echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
if test ! -r _sharseq.tmp; then
  echo 'Please unpack part 1 first!'
  exit 1
fi
shar_sequence=`cat _sharseq.tmp`
if test "$shar_sequence" != 3; then
  echo "Please unpack part $shar_sequence next!"
  exit 1
fi
if test ! -f _sharnew.tmp; then
  echo 'x - still skipping demo/rolodex.c'
else
  echo 'x - continuing file demo/rolodex.c'
  sed 's/^X//' << 'SHAR_EOF' >> '_sharuue.tmp' &&
M(VEN8VQU9&4@(G)O;&]D97@N:"(*"F5X=&5R;B!C:&%R("I'17-C87!E2&ET
M.PH*+RH*("H@5&AI<R!I<R!T:&4@;6%I;B!P87)T(&]F('1H92!L;V]P+@H@
M*B\*=F]I9"!M86EN*&EN="!A<F=C+"!C:&%R("HJ87)G=BD*>PH@("`O*B!$
M96-L87)E('9A<FEA8FQE<RX)"0D)"2HO"B`@($-$2U-#4D5%3B`J8V1K<V-R
M965N.PH@("!#1$M-14Y5("IR;VQO9&5X365N=3L*("`@0T1+3$%"14P@*G)O
M;&]D97A4:71L93L*("`@4U)O;&]D97@@9W)O=7!,:7-T6TU!6$=23U504UT[
M"B`@(%=)3D1/5R`J8W5R<V5S5VEN.PH@("!C:&%R("IM96YU;&ES=%M-05A-
M14Y5251%35-=6TU!6%-50DE414U372P@*G1I=&QE6S5=.PH@("!C:&%R("IH
M;VUE+"!T96UP6S(U-ETL("IM97-G6S$U73L*("`@:6YT('-U8DUE;G53:7IE
M6S-=+"!M96YU3&]C871I;VYS6S1=+"!S96QE8W1I;VX["B`@(&EN="!G<F]U
M<"P@<F5T.PH@("!I;G0@9W)O=7!#;W5N="`](#`["@H@("`O*B!3970@=7`@
M0T1+(`D)"0D)"2HO(`H@("!C=7)S97-7:6X@/2!I;FET<V-R*"D["B`@(&-D
M:W-C<F5E;B`](&EN:71#1$M38W)E96X@*&-U<G-E<U=I;BD["@H@("`O*B!3
M=&%R="!#1$L@8V]L;W(N"0D)"0D)*B\*("`@:6YI=$-$2T-O;&]R*"D["@H@
M("`O*B!#<F5A=&4@=&AE(&UE;G4@;&ES=',N"0D)"0DJ+PH@("!M96YU;&ES
M=%LP75LP72`]("(\+U4^1FEL92(["0EM96YU;&ES=%LQ75LP72`]("(\+U4^
M1W)O=7!S(CL*("`@;65N=6QI<W1;,%U;,5T@/2`B3W!E;B`@("(["0EM96YU
M;&ES=%LQ75LQ72`](").97<@("`B.PH@("!M96YU;&ES=%LP75LR72`](")3
M879E("`@(CL)"6UE;G5L:7-T6S%=6S)=(#T@(D]P96X@("(["B`@(&UE;G5L
M:7-T6S!=6S-=(#T@(E-A=F4@07,B.PD);65N=6QI<W1;,5U;,UT@/2`B1&5L
M971E(CL*("`@;65N=6QI<W1;,%U;-%T@/2`B475I="`@("(["@H@("!M96YU
M;&ES=%LR75LP72`]("(\+U4^4')I;G0B.PEM96YU;&ES=%LS75LP72`]("(\
M+U4^2&5L<"(["B`@(&UE;G5L:7-T6S)=6S%=(#T@(E!R:6YT($=R;W5P<R([
M"6UE;G5L:7-T6S-=6S%=(#T@(D%B;W5T(%)O;&]D97@@("`@("(["B`@(`D)
M"0D);65N=6QI<W1;,UU;,ET@/2`B4F]L;V1E>"!3=&%T:7-T:6-S(CL*"B`@
M("\J(%-E="!U<"!T:&4@<W5B+6UE;G4@<VEZ97,@86YD('1H96ER(&QO8V%T
M:6]N<RX)"2HO"B`@('-U8DUE;G53:7IE6S!=(#T@-3L);65N=4QO8V%T:6]N
M<ULP72`]($Q%1E0["B`@('-U8DUE;G53:7IE6S%=(#T@-#L);65N=4QO8V%T
M:6]N<ULQ72`]($Q%1E0["B`@('-U8DUE;G53:7IE6S)=(#T@,CL);65N=4QO
M8V%T:6]N<ULR72`]($Q%1E0["B`@('-U8DUE;G53:7IE6S-=(#T@,SL);65N
M=4QO8V%T:6]N<ULS72`](%))1TA4.PH*("`@+RH@0W)E871E('1H92!M96YU
M+@D)"0D)"2HO"B`@(')O;&]D97A-96YU(#T@;F5W0T1+365N=2`H8V1K<V-R
M965N+"!M96YU;&ES="P@-"P*"0D)"7-U8DUE;G53:7IE+"!M96YU3&]C871I
M;VYS+"!43U`L"@D)"0E!7T)/3$1\05]53D1%4DQ)3D4L($%?4D5615)312D[
M"B`@(`H@("`O*B!#<F5A=&4@=&AE('1I=&QE+@D)"0D)"2HO"B`@('1I=&QE
M6S!="3T@(CQ#/CPO53Y#9&L@4F]L;V1E>"(["B`@('1I=&QE6S%="3T@(CQ#
M/E=R:71T96X@8GD@36EK92!';&]V97(B.PH@("!R;VQO9&5X5&ET;&4@/2!N
M97=#1$M,86)E;"`H8V1K<V-R965N+"!#14Y415(L($-%3E1%4BP@=&ET;&4L
M(#(L($9!3%-%+"!&04Q312D["@H@("`O*B!$969I;F4@=&AE(&AE;'`@:V5Y
M(&)I;F1I;F<N"0D)"2HO"B`@(&)I;F1#1$M/8FIE8W0@*'9-14Y5+"!R;VQO
M9&5X365N=2P@)S\G+"!H96QP0T(L($Y53$PI.PH*("`@+RH@1')A=R!T:&4@
M0T1+('-C<F5E;BX)"0D)"2HO"B`@(')E9G)E<VA#1$M38W)E96X@*&-D:W-C
M<F5E;BD["B`@("`*("`@+RH@0VAE8VL@=&AE('9A;'5E(&]F('1H92!(3TU%
M(&5N=B!V87(N"0D)*B\*("`@:&]M92`](&=E=&5N=B`H(DA/344B*3L*("`@
M:68@*&AO;64@(3T@*&-H87(@*BE.54Q,*0H@("!["B`@("`@("\J($UA:V4@
M<W5R92!T:&4@)$A/344O+G)O;&]D97@@9&ER96-T;W)Y(&5X:7-T<RX)"2HO
M"B`@("`@('-P<FEN=&8@*'1E;7`L("(E<R\N<F]L;V1E>"(L(&AO;64I.PH*
M("`@("`@+RH@4V5T('1H92!V86QU92!O9B!T:&4@9VQO8F%L(')O;&]D97@@
M1$)-(&1I<F5C=&]R>2X)*B\*("`@("`@1T1"341I<B`](&-O<'E#:&%R("AT
M96UP*3L*"B`@("`@("\J(%-E="!T:&4@=F%L=64@;V8@=&AE(&=L;V)A;"!2
M0R!F:6QE;F%M92X)"2HO"B`@("`@('-P<FEN=&8@*'1E;7`L("(E<R\N<F]L
M;W)C(BP@:&]M92D["B`@("`@($=20T9I;&4@/2!C;W!Y0VAA<B`H=&5M<"D[
M"B`@('T*("`@96QS90H@("!["B`@("`@("\J(%-E="!T:&4@=F%L=64@;V8@
M=&AE(&=L;V)A;"!R;VQO9&5X($1"32!D:7)E8W1O<GDN"2HO"B`@("`@($=$
M0DU$:7(@/2!C;W!Y0VAA<B`H(BYR;VQO9&5X(BD["@H@("`@("`O*B!3970@
M=&AE('9A;'5E(&]F('1H92!G;&]B86P@4D,@9FEL96YA;64N"0DJ+PH@("`@
M("!'4D-&:6QE(#T@8V]P>4-H87(@*"(N<F]L;W)C(BD["B`@('T*"B`@("\J
M($UA:V4@=&AE(')O;&]D97@@9&ER96-T;W)Y+@D)"0DJ+PH@("!M:V1I<B`H
M1T1"341I<BP@,#<U-2D["@H@("`O*B!/<&5N('1H92!R;VQO9&5X(%)#(&9I
M;&4N"0D)"0DJ+PH@("!G<F]U<$-O=6YT(#T@<F5A9%)#1FEL92`H1U)#1FEL
M92P@9W)O=7!,:7-T*3L*"B`@("\J($-H96-K('1H92!V86QU92!O9B!G<F]U
M<$-O=6YT+@D)"0DJ+PH@("!I9B`H9W)O=7!#;W5N="`\(#`I"B`@('L*("`@
M("`@+RH@5&AE(%)#(&9I;&4@<V5E;7,@=&\@8F4@8V]R<G5P="X)"0DJ+PH@
M("`@("!S<')I;G1F("AT96UP+"`B/$,^5&AE(%)#(&9I;&4@*"5S*2!S965M
M<R!T;R!B92!C;W)R=7!T+B(L($=20T9I;&4I.PH@("`@("!M97-G6S!=(#T@
M8V]P>4-H87(@*'1E;7`I.PH@("`@("!M97-G6S%=(#T@(CQ#/DYO(')O;&]D
M97@@9W)O=7!S('=E<F4@;&]A9&5D+B(["B`@("`@(&UE<V=;,ET@/2`B/$,^
M4')E<W,@86YY(&ME>2!T;R!C;VYT:6YU92XB.PH@("`@("!P;W!U<$UE<W-A
M9V4@*&-D:W-C<F5E;BP@;65S9RP@,RD["B`@("`@(&9R965#:&%R("AM97-G
M6S!=*3L*("`@("`@9W)O=7!#;W5N="`](#`["B`@('T*("`@96QS92!I9B`H
M9W)O=7!#;W5N="`]/2`P*0H@("!["B`@("`@(&UE<V=;,%T@/2`B/$,^16UP
M='D@<F]L;V1E>"!20R!F:6QE+B!.;R!G<F]U<',@;&]A9&5D+B(["B`@("`@
M(&UE<V=;,5T@/2`B/$,^4')E<W,@86YY(&ME>2!T;R!C;VYT:6YU92XB.PH@
M("`@("!P;W!U<$UE<W-A9V4@*&-D:W-C<F5E;BP@;65S9RP@,BD["B`@('T*
M("`@96QS90H@("!["B`@("`@(&EF("AG<F]U<$-O=6YT(#T](#$I"B`@("`@
M('L*("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/E1H97)E('=A<R`Q(&=R
M;W5P(&QO861E9"!F<F]M('1H92!20R!F:6QE+B(I.PH@("`@("!]"B`@("`@
M(&5L<V4*("`@("`@>PH@("`@("`@("!S<')I;G1F("AT96UP+"`B/$,^5&AE
M<F4@=V5R92`E9"!G<F]U<',@;&]A9&5D(&9R;VT@=&AE(%)#(&9I;&4N(BP@
M9W)O=7!#;W5N="D["B`@("`@('T*("`@("`@;65S9ULP72`](&-O<'E#:&%R
M("AT96UP*3L*("`@("`@;65S9ULQ72`]("(\0SY0<F5S<R!A;GD@:V5Y('1O
M(&-O;G1I;G5E+B(["B`@("`@('!O<'5P365S<V%G92`H8V1K<V-R965N+"!M
M97-G+"`R*3L*("`@("`@9G)E94-H87(@*&UE<V=;,%TI.PH@("!]"@H@("`O
M*B!,;V]P('5N=&EL('=E(&%R92!D;VYE+@D)"0D)*B\*("`@9F]R("@[.RD*
M("`@>PH@("`@("`O*B!!8W1I=F%T92!T:&4@;65N=0D)"0D)*B\*("`@("`@
M<V5L96-T:6]N"3T@86-T:79A=&5#1$M-96YU("AR;VQO9&5X365N=2P@*&-H
M='EP92`J*4Y53$PI.PH*("`@("`@+RH@0VAE8VL@=&AE(')E='5R;B!V86QU
M92!O9B!T:&4@<V5L96-T:6]N+@D)*B\*("`@("`@:68@*'-E;&5C=&EO;B`]
M/2`P*0H@("`@("!["B`@("`@("`@("\J($]P96X@=&AE(')O;&]D97@@4D,@
M9FEL92X)"0D)"2HO"B`@("`@("`@(&=R;W5P0V]U;G0@/2!O<&5N3F5W4D-&
M:6QE("AC9&MS8W)E96XL(&=R;W5P3&ES="P@9W)O=7!#;W5N="D["B`@("`@
M('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$I"B`@("`@('L*("`@
M("`@("`@+RH@5W)I=&4@;W5T('1H92!20R!F:6QE+@D)"0DJ+PH@("`@("`@
M("!R970@/2!W<FET95)#1FEL92`H8V1K<V-R965N+"!'4D-&:6QE+"!G<F]U
M<$QI<W0L(&=R;W5P0V]U;G0I.PH*("`@("`@("`@+RH@4F5S970@=&AE('-A
M=F5D(&9L86<@:68@=&AE(')C(&9I;&4@<V%V960@;VLN"2HO"B`@("`@("`@
M(&EF("AR970@(3T@,"D*("`@("`@("`@>PH@("`@("`@("`@("!'1W)O=7!-
M;V1I9FEE9"`](#`["B`@("`@("`@('T*("`@("`@?0H@("`@("!E;'-E(&EF
M("AS96QE8W1I;VX@/3T@,BD*("`@("`@>PH@("`@("`@("`O*B!3879E(&%S
M+@D)"0D)"2HO"B`@("`@("`@(')E="`]('=R:71E4D-&:6QE07,@*&-D:W-C
M<F5E;BP@9W)O=7!,:7-T+"!G<F]U<$-O=6YT*3L*"0D)"B`@("`@("`@("\J
M(%)E<V5T('1H92!S879E9"!F;&%G(&EF('1H92!R8R!F:6QE('-A=F5D(&]K
M+@DJ+PH@("`@("`@("!I9B`H<F5T("$](#`I"B`@("`@("`@('L*("`@("`@
M("`@("`@1T=R;W5P36]D:69I960@/2`P.PH@("`@("`@("!]"B`@("`@('T*
M("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T](#,I"B`@("`@('L*("`@("`@
M("`@+RH@2&%S(&%N>71H:6YG(&-H86YG960_/S\)"0D)*B\*("`@("`@("`@
M:68@*$='<F]U<$UO9&EF:65D("$](#`I"B`@("`@("`@('L*("`@("`@("`@
M("`@+RH@5W)I=&4@;W5T('1H92!20R!F:6QE+@D)"0DJ+PH@("`@("`@("`@
M("!W<FET95)#1FEL92`H8V1K<V-R965N+"!'4D-&:6QE+"!G<F]U<$QI<W0L
M(&=R;W5P0V]U;G0I.PH@("`@("`@("!]"@H@("`@("`@("`O*B!296UO=F4@
M=&AE($-$2R!W:61G970@<&]I;G1E<G,N"0D)*B\*("`@("`@("`@9&5S=')O
M>4-$2TUE;G4@*')O;&]D97A-96YU*3L*("`@("`@("`@9&5S=')O>4-$2TQA
M8F5L("AR;VQO9&5X5&ET;&4I.PH@("`@("`@("!D97-T<F]Y0T1+4V-R965N
M("AC9&MS8W)E96XI.PH*("`@("`@("`@+RH@1G)E92!U<"!O=&AE<B!P;VEN
M=&5R<RX)"0D)*B\*("`@("`@("`@9G)E94-H87(@*$=#=7)R96YT1W)O=7`I
M.PH@("`@("`@("!F<F5E0VAA<B`H1U)#1FEL92D["B`@("`@("`@(&9R965#
M:&%R("A'1$)-1&ER*3L*("`@("`@("`@9&5L=VEN("AC=7)S97-7:6XI.PH*
M("`@("`@("`@+RH@4VAU=&1O=VX@0T1++@D)"0D)*B\*("`@("`@("`@96YD
M0T1+*"D["@H@("`@("`@("`O*B!%>&ET(&-L96%N;'DN"0D)"0DJ+PH@("`@
M("`@("!E>&ET("@P*3L*("`@("`@?0H@("`@("!E;'-E(&EF("AS96QE8W1I
M;VX@/3T@,3`P*0H@("`@("!["B`@("`@("`@("\J($%D9"!A(&YE=R!G<F]U
M<"!T;R!T:&4@;&ES="X)"0DJ+PH@("`@("`@("!G<F]U<$-O=6YT(#T@861D
M4F]L;V1E>$=R;W5P("AC9&MS8W)E96XL(&=R;W5P3&ES="P@9W)O=7!#;W5N
M="D["B`@("`@('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,2D*
M("`@("`@>PH@("`@("`@("`O*B!'970@=&AE(&YU;6)E<B!O9B!T:&4@9W)O
M=7`@=&\@;W!E;BX)"2HO"B`@("`@("`@(&=R;W5P(#T@<&EC:U)O;&]D97A'
M<F]U<"`H8V1K<V-R965N+"`B/$,^/"]5/D]P96X@4F]L;V1E>"!'<F]U<"(L
M(`H)"0D)"6=R;W5P3&ES="P@9W)O=7!#;W5N="D["@H@("`@("`@("`O*B!-
M86ME('-U<F4@82!G<F]U<"!W87,@<&EC:V5D+@D)"2HO"B`@("`@("`@(&EF
M("AG<F]U<"`^/2`P*0H@("`@("`@("!["B`@("`@("`@("`@("\J(%-E="!T
M:&4@9VQO8F%L('9A<FEA8FQE($=#=7)R96YT1W)O=7`)"2HO"B`@("`@("`@
M("`@(&9R965#:&%R("A'0W5R<F5N=$=R;W5P*3L*("`@("`@("`@("`@1T-U
M<G)E;G1'<F]U<"`](&-O<'E#:&%R("AG<F]U<$QI<W1;9W)O=7!=+FYA;64I
M.PH*("`@("`@("`@("`@+RH@5')Y('1O(&]P96X@=&AE($1"32!F:6QE(&%N
M9"!R96%D('1H92!C;VYT96YT<RX)*B\*("`@("`@("`@("`@=7-E4F]L;V1E
M>$=R;W5P("AC9&MS8W)E96XL"@D)"0EG<F]U<$QI<W1;9W)O=7!=+FYA;64L
M"@D)"0EG<F]U<$QI<W1;9W)O=7!=+F1E<V,L"@D)"0EG<F]U<$QI<W1;9W)O
M=7!=+F1B;2D["B`@("`@("`@('T*("`@("`@?0H@("`@("!E;'-E(&EF("AS
M96QE8W1I;VX@/3T@,3`R*0H@("`@("!["B`@("`@("`@("\J($1E;&5T92!T
M:&4@9W)O=7`@8VAO<V5N+@D)"0DJ+PH@("`@("`@("!G<F]U<$-O=6YT(#T@
M9&5L971E4F]L;V1E>$=R;W5P("AC9&MS8W)E96XL(&=R;W5P3&ES="P@9W)O
M=7!#;W5N="D["B`@("`@('T*("`@("`@96QS92!I9B`H<V5L96-T:6]N(#T]
M(#(P,"D*("`@("`@>PH@("`@("`@("`O*B!0<FEN="!0:&]N92!.=6UB97(@
M1W)O=7`N"0D)"2HO"B`@("`@("`@('!R:6YT1W)O=7!.=6UB97)S("AC9&MS
M8W)E96XL(&=R;W5P3&ES="P@9W)O=7!#;W5N="D["B`@("`@('T*("`@("`@
M96QS92!I9B`H<V5L96-T:6]N(#T](#,P,"D*("`@("`@>PH@("`@("`@("`O
M*B!!8F]U="!2;VQO9&5X+@D)"0D)*B\*("`@("`@("`@86)O=71#9&M2;VQO
M9&5X*&-D:W-C<F5E;BD["B`@("`@('T*("`@("`@96QS92!I9B`H<V5L96-T
M:6]N(#T](#,P,2D*("`@("`@>PH@("`@("`@("!D:7-P;&%Y4F]L;V1E>%-T
M871S("AR;VQO9&5X365N=2T^<V-R965N+"!G<F]U<$-O=6YT*3L*("`@("`@
M?0H@("!]"GT*"B\J"B`J(%1H:7,@=W)I=&5S(&]U="!T:&4@;F5W(%)#(&9I
M;&4N"B`J+PII;G0@=W)I=&520T9I;&4@*$-$2U-#4D5%3B`J<V-R965N+"!C
M:&%R("IF:6QE;F%M92P@4U)O;&]D97@@*F=R;W5P3&ES="P@:6YT(&=R;W5P
M0V]U;G0I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ
M+PH@("!C:&%R("IM97-G6S5=+"!T96UP6S(U-ET["B`@('1I;65?="!C;&-K
M.PH@("!&24Q%("IF9#L*("`@:6YT('@["@H@("`O*B!#86X@=V4@;W!E;B!T
M:&4@9FEL93\@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@("`@
M*B\*("`@:68@*"AF9"`](&9O<&5N("AF:6QE;F%M92P@(G<B*2D@/3T@3E5,
M3"D*("`@>PH@("`@("`O*B!0;W`@=7`@82!M97-S86=E+@D)"0D)*B\*("`@
M("`@<W!R:6YT9B`H=&5M<"P@(E1H92!F:6QE(#PE<SX@8V]U;&0@;F]T(&)E
M(&]P96YE9"XB+"!F:6QE;F%M92D["B`@("`@(&UE<V=;,%T@/2!C;W!Y0VAA
M<B`H=&5M<"D["B-I9F1E9B!.3U-44D524@H@("`@("!S<')I;G1F("AT96UP
M+"`B/$,^/"]5/E5N:VYO=VX@<F5A<V]N+B(I.PHC96QS90H@("`@("!S<')I
M;G1F("AT96UP+"`B/$,^/"]5/B5S(BP@<W1R97)R;W(H97)R;F\I*3L*(V5N
M9&EF"B`@("`@(&UE<V=;,5T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@(&UE
M<V=;,ET@/2`B/$,^4')E<W,@86YY(&ME>2!T;R!C;VYT:6YU92XB.PH*("`@
M("`@<&]P=7!-97-S86=E("AS8W)E96XL(&UE<V<L(#,I.PH*("`@("`@9G)E
M94-H87(@*&UE<V=;,%TI.PH@("`@("!F<F5E0VAA<B`H;65S9ULQ72D["@H@
M("`@("!R971U<FX@*#`I.PH@("!]"@H@("`O*B!'970@=&AE(&-U<G)E;G0@
M=&EM92X)"0D)"2HO"B`@('1I;64H)F-L8VLI.PH*("`@+RH@4'5T('-O;64@
M8V]M;65N=',@870@=&AE('1O<"!O9B!T:&4@:&5A9&5R+@D)*B\*("`@9G!R
M:6YT9B`H9F0L("(C7&XB*3L*("`@9G!R:6YT9B`H9F0L("(C(%1H:7,@9FEL
M92!W87,@875T;VUA=&EC86QL>2!G96YE<F%T960@;VX@)7,B+"!C=&EM92@F
M8VQC:RDI.PH@("!F<')I;G1F("AF9"P@(B-<;B(I.PH*("`@+RH@4W1A<G0@
M=W)I=&EN9R!T:&4@4D,@9FEL92X)"0D)*B\*("`@9F]R("AX/3`[('@@/"!G
M<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@9G!R:6YT9B`H9F0L("(E<Q8E
M<Q8E<UQN(BP@9W)O=7!,:7-T6WA=+FYA;64L(&=R;W5P3&ES=%MX72YD97-C
M+"!G<F]U<$QI<W1;>%TN9&)M*3L*("`@?0H@("!F8VQO<V4@*&9D*3L*"B`@
M("\J(%!O<"!U<"!A(&UE<W-A9V4@<W1A=&EN9R!T:&%T(&ET(&AA<R!B965N
M('-A=F5D+@D)*B\*("`@:68@*&=R;W5P0V]U;G0@/3T@,2D*("`@>PH@("`@
M("!S<')I;G1F("AT96UP+"`B5&AE<F4@=V%S(#$@9W)O=7`@<V%V960@=&\@
M9FEL92(I.PH@("`@("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("!]
M"B`@(&5L<V4*("`@>PH@("`@("!S<')I;G1F("AT96UP+"`B5&AE<F4@=V5R
M92`E9"!G<F]U<',@<V%V960@=&\@9FEL92(L(&=R;W5P0V]U;G0I.PH@("`@
M("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH@("!]"@H@("!S<')I;G1F
M("AT96UP+"`B/$,^)7,B+"!F:6QE;F%M92D["B`@(&UE<V=;,5T@/2!C;W!Y
M0VAA<B`H=&5M<"D["B`@(&UE<V=;,ET@/2`B/$,^4')E<W,@86YY(&ME>2!T
M;R!C;VYT:6YU92XB.PH*("`@<&]P=7!-97-S86=E("AS8W)E96XL(&UE<V<L
M(#,I.PH@("!F<F5E0VAA<B`H;65S9ULP72D[(&9R965#:&%R("AM97-G6S%=
M*3L*("`@<F5T=7)N("@Q*3L*?0H*+RH*("H@5&AI<R!A;&QO=W,@=&AE('5S
M97(@=&\@<&EC:R!A($1"32!F:6QE('1O(&]P96XN"B`J+PII;G0@<&EC:U)O
M;&]D97A'<F]U<"`H0T1+4T-2145.("IS8W)E96XL(&-H87(@*G1I=&QE+"!3
M4F]L;V1E>"`J9W)O=7!,:7-T+"!I;G0@9W)O=7!#;W5N="D*>PH@("`O*B!$
M96-L87)E(&QO8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@($-$2U-#4D],3"`J
M<F]L;TQI<W0)/2`H0T1+4T-23TQ,("HI3E5,3#L*("`@8VAA<B`J;65S9UM-
M05A'4D]54%-=+"!T96UP6S(U-ET["B`@(&EN="!H96EG:'0@/2!G<F]U<$-O
M=6YT.PH@("!I;G0@<V5L96-T:6]N+"!X.PH*("`@+RH@1&5T97)M:6YE('1H
M92!H96EG:'0@;V8@=&AE('-C<F]L;&EN9R!L:7-T+@D)*B\*("`@:68@*&=R
M;W5P0V]U;G0@/B`U*0H@("!["B`@("`@(&AE:6=H="`](#4["B`@('T*("`@
M:&5I9VAT("L](#,["@H@("`O*B!#;W!Y('1H92!N86UE<R!O9B!T:&4@<V-R
M;VQL:6YG(&QI<W0@:6YT;R!A;B!A<G)A>2X)*B\*("`@9F]R("AX/3`[('@@
M/"!G<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@<W!R:6YT9B`H=&5M<"P@
M(CQ#/B5S(BP@9W)O=7!,:7-T6WA=+FYA;64I.PH@("`@("!M97-G6WA=(#T@
M8V]P>4-H87(@*'1E;7`I.PH@("!]"@H@("`O*B!#<F5A=&4@=&AE('-C<F]L
M;&EN9R!L:7-T+@D)"0DJ+PH@("!R;VQO3&ES="`](&YE=T-$2U-C<F]L;"`H
M<V-R965N+`H)"0D)0T5.5$52+"!#14Y415(L"@D)"0EH96EG:'0L(#4P+"!T
M:71L92P@;65S9RP@9W)O=7!#;W5N="P*"0D)"4Y/3E5-0D524RP@05]2159%
M4E-%+"!44E5%+"!&04Q312D["@H@("`O*B!#<F5A=&4@82!C86QL8F%C:R!T
M;R!T:&4@<V-R;VQL:6YG(&QI<W0N"0D)*B\*("`@8FEN9$-$2T]B:F5C="`H
M=E-#4D],3"P@<F]L;TQI<W0L("<_)RP@9W)O=7!);F9O0T(L(&=R;W5P3&ES
M="D["@H@("`O*B!!8W1I=F%T92!T:&4@<V-R;VQL:6YG(&QI<W0N"0D)"2HO
M"B`@('-E;&5C=&EO;B`](&%C=&EV871E0T1+4V-R;VQL("AR;VQO3&ES="P@
M*&-H='EP92`J*4Y53$PI.PH*("`@+RH@1&5S=')O>2!T:&4@<V-R;VQL:6YG
M(&QI<W0N"0D)"2HO"B`@(&1E<W1R;WE#1$M38W)O;&P@*')O;&],:7-T*3L*
M("`@9F]R("AX/3`[('@@/"!G<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@
M9G)E94-H87(@*&UE<V=;>%TI.PH@("!]"@H@("`O*B!2971U<FX@=&AE(&YA
M;64@;V8@=&AE(&=R;W5P('!I8VME9"X)"0DJ+PH@("!R971U<FX@<V5L96-T
M:6]N.PI]"@HO*@H@*B!4:&ES(&%L;&]W<R!T:&4@=7-E<B!T;R!A9&0@82!R
M;VQO(&=R;W5P('1O('1H92!L:7-T+@H@*B\*:6YT(&%D9%)O;&]D97A'<F]U
M<"`H0T1+4T-2145.("IS8W)E96XL(%-2;VQO9&5X("IG<F]U<$QI<W0L(&EN
M="!G<F]U<$-O=6YT*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S
M+@D)"0D)*B\*("`@0T1+14Y44ED@*FYE=TYA;64)/2`H0T1+14Y44ED@*BE.
M54Q,.PH@("!#1$M%3E1262`J;F5W1&5S8PD]("A#1$M%3E1262`J*4Y53$P[
M"B`@(&-H87(@*FUE<V=;-%TL("IN97='<F]U<$YA;64L('1E;7!;,C4V73L*
M("`@:6YT('@["@H@("`O*B!#<F5A=&4@=&AE(&YA;64@=VED9V5T+@D)"0D)
M*B\*("`@;F5W3F%M92`](&YE=T-$2T5N=')Y("AS8W)E96XL($-%3E1%4BP@
M."P@3$5&5"P*"0D)"2(\+U(^("`@3F5W($=R;W5P($YA;64B+`H)"0D)05].
M3U)-04PL("=?)RP@=DU)6$5$+`H)"0D),C`L(#(L(#(U-BP*"0D)"512544L
M($9!3%-%*3L*"@H@("`O*B!'970@=&AE(&YA;64N"0D)"0D)*B\*("`@;F5W
M1W)O=7!.86UE(#T@86-T:79A=&5#1$M%;G1R>2`H;F5W3F%M92P@*&-H='EP
M92`J*4Y53$PI.PH*("`@+RH@36%K92!S=7)E('1H97D@9&ED;B=T(&AI="!E
M<V-A<&4N"0D)"2HO"B`@(&EF("AN97='<F]U<$YA;64@/3T@1T5S8V%P94AI
M="D*("`@>PH@("`@("!M97-G6S!=(#T@(CQ#/D%D9"!'<F]U<"!#86YC96QE
M9"XB.PH@("`@("!D97-T<F]Y0T1+16YT<GD@*&YE=TYA;64I.PH@("`@("!P
M;W!U<$UE<W-A9V4@*'-C<F5E;BP@;65S9RP@,2D["B`@("`@(')E='5R;B!G
M<F]U<$-O=6YT.PH@("!]"@H@("`O*B!-86ME('-U<F4@=&AA="!G<F]U<"!N
M86UE(&1O97,@;F]T(&%L<F5A9'D@97AI<W0N"0DJ+PH@("!F;W(@*'@],#L@
M>"`\(&=R;W5P0V]U;G0[('@K*RD*("`@>PH@("`@("!I9B`H<W1R8VUP("AN
M97='<F]U<$YA;64L(&=R;W5P3&ES=%MX72YN86UE*2`]/2`P*0H@("`@("![
M"B`@("`@("`@('-P<FEN=&8@*'1E;7`L("(\0SY3;W)R>2!T:&4@9W)O=7`@
M*"5S*2!A;')E861Y(&5X:7-T<RXB+"!N97='<F]U<$YA;64I.PH@("`@("`@
M("!M97-G6S!=(#T@(&-O<'E#:&%R("AT96UP*3L*("`@("`@("`@<&]P=7!-
M97-S86=E("AS8W)E96XL(&UE<V<L(#$I.PH@("`@("`@("!F<F5E0VAA<B`H
M;65S9ULP72D["B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H;F5W3F%M92D[
M"B`@("`@("`@(')E='5R;B!G<F]U<$-O=6YT.PH@("`@("!]"B`@('T*"B`@
M("\J($ME97`@=&AE(&YA;64N"0D)"0D)*B\*("`@9W)O=7!,:7-T6V=R;W5P
M0V]U;G1=+FYA;64@/2!C;W!Y0VAA<B`H;F5W1W)O=7!.86UE*3L*"B`@("\J
M($-R96%T92!T:&4@9&5S8W)I<'1I;VX@=VED9V5T+@D)"0DJ+PH@("!N97=$
M97-C(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52+"`Q,2P@3$5&5"P*
M"0D)"2(\+U(^1W)O=7`@1&5S8W)I<'1I;VXB+`H)"0D)05].3U)-04PL("=?
M)RP@=DU)6$5$+`H)"0D),C`L(#(L(#(U-BP*"0D)"512544L($9!3%-%*3L*
M("`@+RH@1V5T('1H92!D97-C<FEP=&EO;BX)"0D)"2HO"B`@(&=R;W5P3&ES
M=%MG<F]U<$-O=6YT72YD97-C(#T@8V]P>4-H87(@*&%C=&EV871E0T1+16YT
M<GD@*&YE=T1E<V,L("AC:'1Y<&4@*BE.54Q,*2D["@H@("`O*B!#<F5A=&4@
M=&AE($1"32!F:6QE;F%M92X)"0D)"2HO"B`@('-P<FEN=&8@*'1E;7`L("(E
M<R\E<RYP:&PB+"!'1$)-1&ER+"!G<F]U<$QI<W1;9W)O=7!#;W5N=%TN;F%M
M92D["B`@(&=R;W5P3&ES=%MG<F]U<$-O=6YT72YD8FT@/2!C;W!Y0VAA<B`H
M=&5M<"D["@H@("`O*B!);G)E;65N="!T:&4@9W)O=7`@8V]U;G0N"0D)"0DJ
M+PH@("!G<F]U<$-O=6YT*RL["B`@($='<F]U<$UO9&EF:65D(#T@,3L*"B`@
M("\J($1E<W1R;WD@=&AE('=I9&=E=',N"0D)"0DJ+PH@("!D97-T<F]Y0T1+
M16YT<GD@*&YE=TYA;64I.PH@("!D97-T<F]Y0T1+16YT<GD@*&YE=T1E<V,I
M.PH@("!R971U<FX@9W)O=7!#;W5N=#L*?0H*+RH*("H@5&AI<R!D:7-P;&%Y
M<R!R;VQO9&5X(&EN9F]R;6%T:6]N+@H@*B\*=F]I9"!D:7-P;&%Y4F]L;V1E
M>%-T871S("A#1$M30U)%14X@*G-C<F5E;BP@:6YT(&=R;W5P0V]U;G0I"GL*
M("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!C:&%R
M("IM97-G6S9=+"!T96UP6S(U-ET["@H@("`O*B!#<F5A=&4@=&AE(&EN9F]R
M;6%T:6]N('1O(&1I<W!L87DN"0D)*B\*("`@<W!R:6YT9B`H=&5M<"P@(CQ#
M/CPO53Y2;VQO9&5X(%-T871I<W1I8W,B*3L*("`@;65S9ULP72`](&-O<'E#
M:&%R("AT96UP*3L*("`@<W!R:6YT9B`H=&5M<"P@(CPO4CY296%D($-O;6UA
M;F0@1FEL96YA;64\(5(^(#PO53XE<SPA53XB+"!'4D-&:6QE*3L*("`@;65S
M9ULQ72`](&-O<'E#:&%R("AT96UP*3L*("`@<W!R:6YT9B`H=&5M<"P@(CPO
M4CY'<F]U<"!#;W5N="`@("`@("`@("`\(5(^(#PO53XE9#PA53XB+"!G<F]U
M<$-O=6YT*3L*("`@;65S9ULR72`](&-O<'E#:&%R("AT96UP*3L*"B`@("\J
M($1I<W!L87D@=&AE(&UE<W-A9V4N"0D)"0DJ+PH@("!P;W!U<$UE<W-A9V4@
M*'-C<F5E;BP@;65S9RP@,RD["B`*("`@+RH@0VQE86X@=7`N"0D)"0D)"2HO
M"B`@(&9R965#:&%R("AM97-G6S!=*3L*("`@9G)E94-H87(@*&UE<V=;,5TI
M.PI]"@HO*@H@*B!4:&ES(&9U;F-T:6]N(&=E=',@82!N97<@<F,@9FEL96YA
M;64@86YD('-A=F5S('1H92!C;VYT96YT<R!O9B!T:&4*("H@9W)O=7!S('5N
M9&5R('1H870@;F%M92X*("HO"FEN="!W<FET95)#1FEL94%S("A#1$M30U)%
M14X@*G-C<F5E;BP@4U)O;&]D97@@*F=R;W5P3&ES="P@:6YT(&=R;W5P0V]U
M;G0I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@
M("!#1$M%3E1262`J;F5W4D-&:6QE.PH@("!C:&%R("IN97=&:6QE;F%M93L*
M("`@:6YT(')E=#L*"B`@("\J($-R96%T92!T:&4@96YT<GD@9FEE;&0N"0D)
M"0DJ+PH@("!N97=20T9I;&4@/2!N97=#1$M%;G1R>2`H<V-R965N+`H)"0D)
M0T5.5$52+"!#14Y415(L($Q%1E0L"@D)"0DB/"]2/E-A=F4@07,B+"!!7TY/
M4DU!3"P@)U\G+"!V34E8140L(`H)"0D),C`L(#(L(#(U-BP@5%)512P@1D%,
M4T4I.PH*("`@+RH@061D(&$@<')E+7!R;V-E<W,@9G5N8W1I;VX@<V\@;F\@
M<W!A8V5S(&%R92!I;G1R;V1U8V5D+@DJ+PH@("!S971#1$M%;G1R>5!R95!R
M;V-E<W,@*&YE=U)#1FEL92P@96YT<GE0<F50<F]C97-S0T(L($Y53$PI.PH*
M("`@+RH@1V5T('1H92!F:6QE;F%M92X)"0D)"0DJ+PH@("!N97=&:6QE;F%M
M92`](&%C=&EV871E0T1+16YT<GD@*&YE=U)#1FEL92P@3E5,3"D["@H@("`O
M*B!#86QL('1H92!F=6YC=&EO;B!T;R!S879E('1H92!20R!F:6QE+@D)"2HO
M"B`@(')E="`]('=R:71E4D-&:6QE("AS8W)E96XL(&YE=T9I;&5N86UE+"!G
M<F]U<$QI<W0L(&=R;W5P0V]U;G0I.PH@"B`@("\J(%)E<V5T('1H92!S879E
M9"!F;&%G(&EF('1H92!R8R!F:6QE('-A=F5D(&]K+@D)*B\*("`@:68@*')E
M="`A/2`P*0H@("!["B`@("`@("\J($-H86YG92!T:&4@9&5F875L="!F:6QE
M;F%M92X)"0D)*B\*("`@("`@9G)E94-H87(@*$=20T9I;&4I.PH@("`@("!'
M4D-&:6QE(#T@8V]P>4-H87(@*&YE=T9I;&5N86UE*3L*("`@("`@1T=R;W5P
M36]D:69I960@/2`P.PH@("!]"@H@("`O*B!#;&5A;B!U<"X)"0D)"0D)*B\*
M("`@9&5S=')O>4-$2T5N=')Y("AN97=20T9I;&4I.PH@("!R971U<FX@*#$I
M.PI]"@HO*B`*("H@5&AI<R!O<&5N<R!A(&YE=R!20R!F:6QE+@H@*B\*:6YT
M(&]P96Y.97=20T9I;&4@*$-$2U-#4D5%3B`J<V-R965N+"!34F]L;V1E>"`J
M9W)O=7!,:7-T+"!I;G0@9W)O=7!#;W5N="D*>PH@("`O*B!$96-L87)E(&QO
M8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@($-$2T9314Q%0U0@*F9I;&5396QE
M8W1O<CL*("`@8VAA<B`J9FEL96YA;64L("IM97-G6S-=+"!T96UP6S(U-ET[
M"B`@(&EN="!X.PH*("`@+RH@1V5T('1H92!F:6QE;F%M92X)"0D)"0DJ+PH@
M("!F:6QE4V5L96-T;W(@/2!N97=#1$M&<V5L96-T("AS8W)E96XL($-%3E1%
M4BP@0T5.5$52+"`R,"P@-34L"@D)"0D)05].3U)-04PL("<N)RP@05]2159%
M4E-%+`H)"0D)"2(\+S4^(BP@(CPO-#@^(BP@(CPO3CXB+"`B/"]./B(L"@D)
M"0D)5%)512P@1D%,4T4I.PH@"B`@("\J($%C=&EV871E('1H92!F:6QE('-E
M;&5C=&]R+@D)"0DJ+PH@("!F:6QE;F%M92`](&-O<'E#:&%R("AA8W1I=F%T
M94-$2T9S96QE8W0@*&9I;&5396QE8W1O<BDI.PH@("!D97-T<F]Y0T1+1G-E
M;&5C="`H9FEL95-E;&5C=&]R*3L*"B`@("\J($-H96-K(&EF('1H92!F:6QE
M('-E;&5C=&]R(&QE9G0@96%R;'DN"0D)*B\*("`@:68@*&9I;&5N86UE(#T]
M("AC:&%R("HI3E5,3"D*("`@>PH@("`@("!M97-G6S!=(#T@(D]P96X@3F5W
M(%)#($9I;&4@06)O<G1E9"XB.PH@("`@("!P;W!U<$UE<W-A9V4@*'-C<F5E
M;BP@;65S9RP@,2D["B`@("`@(')E='5R;B!G<F]U<$-O=6YT.PH@("!]"@H@
M("`O*B!#;&5A;B!O=70@=&AE(&]L9"!I;F9O<FUA=&EO;BX)"0D)*B\*("`@
M9F]R("AX/3`[('@@/"!G<F]U<$-O=6YT.R!X*RLI"B`@('L*("`@("`@9G)E
M94-H87(@*&=R;W5P3&ES=%MX72YN86UE*3L*("`@("`@9G)E94-H87(@*&=R
M;W5P3&ES=%MX72YD97-C*3L*("`@("`@9G)E94-H87(@*&=R;W5P3&ES=%MX
M72YD8FTI.PH@("!]"@H@("`O*B!/<&5N('1H92!20R!F:6QE+@D)"0D)"2HO
M"B`@(&=R;W5P0V]U;G0@/2!R96%D4D-&:6QE("AF:6QE;F%M92P@9W)O=7!,
M:7-T*3L*"B`@("\J($-H96-K('1H92!R971U<FX@=F%L=64N"0D)"0DJ+PH@
M("!I9B`H9W)O=7!#;W5N="`\(#`I"B`@('L*("`@("`@+RH@5&AI<R!F:6QE
M(&1O97,@;F]T(&%P<&5A<B!T;R!B92!A(')O;&]D97@@9FEL92X)*B\*("`@
M("`@<W!R:6YT9B`H=&5M<"P@(CQ#/E1H92!F:6QE("@E<RD@9&]E<R!N;W0@
M<V5E;2!T;R!B92!A(')O;&]D97@@4D,@9FEL92XB+"!F:6QE;F%M92D["B`@
M("`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@(&UE<V=;,5T@
M/2`B/$,^4')E<W,@86YY(&ME>2!T;R!C;VYT:6YU92XB.PH@("`@("!P;W!U
M<$UE<W-A9V4@*'-C<F5E;BP@;65S9RP@,BD["B`@("`@(&9R965#:&%R("AM
M97-G6S!=*3L*("`@("`@9W)O=7!#;W5N="`](#`["B`@('T*"B`@("\J($-L
M96%N('5P+@D)"0D)"0DJ+PH@("!F<F5E0VAA<B`H9FEL96YA;64I.PH@("!R
M971U<FX@*&=R;W5P0V]U;G0I.PI]"@HO*@H@*B!4:&ES(')E861S('1H92!U
M<V5R<R!R8R!F:6QE+@H@*B\*:6YT(')E86120T9I;&4@*&-H87(@*F9I;&5N
M86UE+"!34F]L;V1E>"`J9W)O=7!,:7-T*0I["B`@("\J($1E8VQA<F4@=F%R
M:6%B;&5S+@D)"0D)*B\*("`@:6YT(&=R;W5P<T9O=6YD"3T@,#L*("`@:6YT
M(&5R<F]R<T9O=6YD"3T@,#L*("`@8VAA<B`J;&EN97-;34%83$E.15-=+"`J
M:71E;7-;,3`P73L*("`@:6YT(&QI;F5S4F5A9"P@8VAU;FMS+"!X.PH*("`@
M+RH@3W!E;B!T:&4@9FEL92!A;F0@<W1A<G0@<F5A9&EN9RX)"0D)*B\*("`@
M;&EN97-296%D(#T@<F5A9$9I;&4@*&9I;&5N86UE+"!L:6YE<RP@34%83$E.
M15,I.PH*("`@+RH@0VAE8VL@=&AE(&YU;6)E<B!O9B!L:6YE<R!R96%D+@D)
M"0DJ+PH@("!I9B`H;&EN97-296%D(#T](#`I"B`@('L*("`@("`@<F5T=7)N
M("@P*3L*("`@?0H*("`O*@H@("`J($-Y8VQE('1H<F]U9V@@=VAA="!W87,@
M9VEV96X@=&\@=7,@86YD('-A=F4@:70N"B`@("HO"B`@(&9O<B`H>#TP.R!X
M(#P@;&EN97-296%D.R!X*RLI"B`@('L*("`@("`@+RH@4W1R:7`@=VAI=&4@
M<W!A8V4@9G)O;2!T:&4@;&EN92X)"0DJ+PH@("`@("!S=')I<%=H:71E4W!A
M8V4@*'9"3U1(+"!L:6YE<UMX72D["@H@("`@("`O*B!/;FQY('-P;&ET(&QI
M;F5S('=H:6-H(&1O(&YO="!S=&%R="!W:71H(&$@(PD)*B\*("`@("`@:68@
M*&QI;F5S6WA=6S!=("$]("<C)RD*("`@("`@>PH@("`@("`@("`O*B!3<&QI
M="!T:&4@;&EN92!O;B!T:&4@/2!S:6=N+@D)"2HO"B`@("`@("`@(&-H=6YK
M<R`]('-P;&ET4W1R:6YG("AL:6YE<UMX72P@:71E;7,L("<6)RD["@H@("`@
M("`@("`O*B!/;FQY('1A:V4@=&AE(&]N97,@=VAI8V@@9FET('1H92!F;W)M
M870N"0DJ+PH@("`@("`@("!I9B`H8VAU;FMS(#T](#,I"B`@("`@("`@('L*
M("`@("`@("`@("`@+RH@0VQE86X@;V9F('1H92!N86UE(&%N9"!$0B!N86UE
M+@D)"2HO"B`@("`@("`@("`@('-T<FEP5VAI=&53<&%C92`H=D)/5$@L(&ET
M96US6S!=*3L*("`@("`@("`@("`@<W1R:7!7:&ET95-P86-E("AV0D]42"P@
M:71E;7-;,5TI.PH@("`@("`@("`@("!S=')I<%=H:71E4W!A8V4@*'9"3U1(
M+"!I=&5M<ULR72D["@H@("`@("`@("`@("`O*B!3970@=&AE(&=R;W5P(&YA
M;64@86YD($1"(&YA;64N"0D)*B\*("`@("`@("`@("`@9W)O=7!,:7-T6V=R
M;W5P<T9O=6YD72YN86UE(#T@:71E;7-;,%T["B`@("`@("`@("`@(&=R;W5P
M3&ES=%MG<F]U<'-&;W5N9%TN9&5S8R`](&ET96US6S%=.PH@("`@("`@("`@
M("!G<F]U<$QI<W1;9W)O=7!S1F]U;F1=+F1B;2`](&ET96US6S)=.PH@("`@
M("`@("`@("!G<F]U<'-&;W5N9"LK.PH@("`@("`@("!]"B`@("`@("`@(&5L
M<V4*("`@("`@("`@>PH@("`@("`@("`@("!E<G)O<G-&;W5N9"LK.PH@("`@
M("`@("!]"B`@("`@('T*("`@?0H*("`@+RH@0VAE8VL@=&AE(&YU;6)E<B!O
M9B!G<F]U<',@=&\@=&AE(&YU;6)E<B!O9B!E<G)O<G,N"2HO"B`@(&EF("AE
M<G)O<G-&;W5N9"`^(#`@)B8@9W)O=7!S1F]U;F0@/3T@,"D*("`@>PH@("`@
M("`O*B!4:&ES(&1O97,@3D]4(&QO;VL@;&EK92!T:&4@<F]L;V1E>"!20R!F
M:6QE+@D)*B\*("`@("`@<F5T=7)N("TQ.PH@("!]"B`@(')E='5R;B!G<F]U
M<'-&;W5N9#L*?0H*+RH*("H@5&AI<R!F=6YC=&EO;B!A;&QO=W,@=&AE('5S
M97(@=&\@861D+V1E;&5T92]M;V1I9GDO<V%V92!T:&4*("H@8V]N=&5N=',@
M;V8@82!R;VQO9&5X(&=R;W5P+@H@*B\*=F]I9"!U<V52;VQO9&5X1W)O=7`@
M*$-$2U-#4D5%3B`J<V-R965N+"!C:&%R("IG<F]U<$YA;64L(&-H87(@*F=R
M;W5P1&5S8RP@8VAA<B`J9W)O=7!$0DTI"GL*("`@+RH@1&5C;&%R92!L;V-A
M;"!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M30U)/3$P@*FYA;65,:7-T"3T@
M*$-$2U-#4D],3"`J*4Y53$P["B`@($-$2TQ!0D5,("IH96QP5VEN9&]W(#T@
M*$-$2TQ!0D5,("HI3E5,3#L*("`@4U!H;VYE1&%T82!P:&]N941A=&$["B`@
M(%-0:&]N95)E8V]R9"`J<&AO;F5296-O<F0["B`@(&-H87(@*FEN9&5X6TU!
M6$E414U372P@*G1I=&QE6S-=+"`J;65S9ULS72P@=&5M<%LR-39=.PH@("!I
M;G0@<&AO;F5#;W5N="P@<V5L96-T:6]N+"!H96EG:'0L('@["@H@("`O*B!3
M970@=7`@=&AE(&AE;'`@=VEN9&]W(&%T('1H92!B;W1T;VT@;V8@=&AE('-C
M<F5E;BX)*B\*("`@=&ET;&5;,%T@("`@(#T@(CQ#/CPC2$PH,S`I/B(["B`@
M('1I=&QE6S%=("`@("`]("(\0SY0<F5S<R`\+T(^/SPA0CX@=&\@9V5T(&1E
M=&%I;&5D(&AE;'`N(CL*("`@=&ET;&5;,ET@("`@(#T@(CQ#/CPC2$PH,S`I
M/B(["B`@(&AE;'!7:6YD;W<)/2!N97=#1$M,86)E;"`H<V-R965N+"!#14Y4
M15(L($)/5%1/32P@=&ET;&4L(#,L($9!3%-%+"!&04Q312D["B`@(&1R87=#
M1$M,86)E;"`H:&5L<%=I;F1O=RP@1D%,4T4I.PH*("`@+RH@3W!E;B!T:&4@
M1$)-(&9I;&4@86YD(')E860@:6X@=&AE(&-O;G1E;G1S(&]F('1H92!F:6QE
M"2HO"B`@('!H;VYE0V]U;G0@/2!R96%D4&AO;F5$871A1FEL92`H9W)O=7!$
M0DTL("9P:&]N941A=&$I.PH@("!P:&]N941A=&$N<F5C;W)D0V]U;G0@/2!P
M:&]N94-O=6YT.PH*("`@+RH@0VAE8VL@=&AE(&YU;6)E<B!O9B!E;G1R:65S
M(')E='5R;F5D+@D)"2HO"B`@(&EF("AP:&]N94-O=6YT(#T](#`I"B`@('L*
M("`@("`@+RH*("`@("`@("H@5&AE>2!T<FEE9"!T;R!O<&5N(&%N(&5M<'1Y
M(&=R;W5P+"!M87EB92!T:&5Y('=A;G0@=&\*("`@("`@("H@861D(&$@;F5W
M(&5N=')Y('1O('1H:7,@;G5M8F5R+@H@("`@("`@*B\@"B`@("`@(&-H87(@
M*F)U='1O;G-;72`]('LB/#Q997,^/B(L("(\/$YO/CXB?3L*("`@("`@;65S
M9ULP72`]("(\0SY4:&5R92!W97)E(&YO(&5N=')I97,@:6X@=&AI<R!G<F]U
M<"XB.PH@("`@("!M97-G6S%=(#T@(CQ#/D1O('EO=2!W86YT('1O(&%D9"!A
M(&YE=R!L:7-T;F<_(CL*("`@("`@:68@*'!O<'5P475E<W1I;VX@*'-C<F5E
M;BP@;65S9RP@,BP@8G5T=&]N<RP@,BD@/3T@,2D*("`@("`@>PH@("`@("`@
M("!D97-T<F]Y0T1+3&%B96P@*&AE;'!7:6YD;W<I.PH@("`@("`@("!R971U
M<FX["B`@("`@('T*"B`@("`@("\J($=E="!T:&4@:6YF;W)M871I;VX@9F]R
M(&$@;F5W(&YU;6)E<BX)"0DJ+PH@("`@("!I9B`H861D4&AO;F5296-O<F0@
M*'-C<F5E;BP@)G!H;VYE1&%T82D@(3T@,"D*("`@("`@>PH@("`@("`@("!R
M971U<FX["B`@("`@('T*("`@?0H@("!E;'-E(&EF("AP:&]N94-O=6YT(#P@
M,"D*("`@>PH@("`@("!M97-G6S!=(#T@(CQ#/D-O=6QD(&YO="!O<&5N('1H
M92!D871A8F%S92!F;W(@=&AI<R!G<F]U<"XB.PH@("`@("!P;W!U<$UE<W-A
M9V4@*'-C<F5E;BP@;65S9RP@,2D["B`@("`@(&1E<W1R;WE#1$M,86)E;"`H
M:&5L<%=I;F1O=RD["B`@("`@(')E='5R;CL*("`@?0H*("`@+RH@4V5T('5P
M('1H92!D871A(&YE961E9"!F;W(@=&AE('-C<F]L;&EN9R!L:7-T+@D)*B\*
M("`@9F]R("AX/3`[('@@/"!P:&]N94-O=6YT.R!X*RLI"B`@('L*("`@("`@
M<&AO;F5296-O<F0@/2`F<&AO;F5$871A+G)E8V]R9%MX73L*("`@("`@<W!R
M:6YT9B`H=&5M<"P@(B5S("@E<RDB+"!P:&]N95)E8V]R9"T^;F%M92P@1TQI
M;F54>7!E6W!H;VYE4F5C;W)D+3YL:6YE5'EP95TI.PH@("`@("!I;F1E>%MX
M72`](&-O<'E#:&%R("AT96UP*3L*("`@?0H@("!S<')I;G1F("AT96UP+"`B
M/$,^3&ES=&EN9R!O9B!'<F]U<"`\+U4^)7,B+"!G<F]U<$YA;64I.PH@("!H
M96EG:'0@/2`H<&AO;F5$871A+G)E8V]R9$-O=6YT(#X@-2`_(#@@.B!P:&]N
M941A=&$N<F5C;W)D0V]U;G0K,RD["@H@("`O*B!#<F5A=&4@=&AE('-C<F]L
M;&EN9R!L:7-T+@D)"0DJ+PH@("!N86UE3&ES="`](&YE=T-$2U-C<F]L;"`H
M<V-R965N+`H)"0D)0T5.5$52+"!#14Y415(L(&AE:6=H="P@-3`L"@D)"0ET
M96UP+"!I;F1E>"P@<&AO;F5$871A+G)E8V]R9$-O=6YT+`H)"0D)3E5-0D52
M4RP@05]2159%4E-%+"!44E5%+"!&04Q312D["@H@("`O*B!#<F5A=&4@:V5Y
M(&)I;F1I;F=S+@D)"0D)*B\*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],3"P@
M;F%M94QI<W0L("=I)RP@:6YS97)T4&AO;F5%;G1R>4-"+"`F<&AO;F5$871A
M*3L*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],3"P@;F%M94QI<W0L("=D)RP@
M9&5L971E4&AO;F5%;G1R>4-"+"`F<&AO;F5$871A*3L*("`@8FEN9$-$2T]B
M:F5C="`H=E-#4D],3"P@;F%M94QI<W0L($1%3$5412P@9&5L971E4&AO;F5%
M;G1R>4-"+"`F<&AO;F5$871A*3L*("`@8FEN9$-$2T]B:F5C="`H=E-#4D],
M3"P@;F%M94QI<W0L("<_)RP@<&AO;F5%;G1R>4AE;'!#0BP@3E5,3"D["@H@
M("`O*B!,970@=&AE;2!P;&%Y+@D)"0D)"2HO"B`@('-E;&5C=&EO;B`](#`[
M"B`@('=H:6QE("AS96QE8W1I;VX@/CT@,"D*("`@>PH@("`@("`O*B!'970@
M=&AE(&EN9F]R;6%T:6]N('1H97D@=V%N="!T;R!V:65W+@D)"2HO"B`@("`@
M('-E;&5C=&EO;B`](&%C=&EV871E0T1+4V-R;VQL("AN86UE3&ES="P@*&-H
M='EP92`J*4Y53$PI.PH*("`@("`@+RH@1&ES<&QA>2!T:&4@:6YF;W)M871I
M;VXN"0D)"2HO"B`@("`@(&EF("AS96QE8W1I;VX@/CT@,"D*("`@("`@>PH@
M("`@("`@("!D:7-P;&%Y4&AO;F5);F9O("AS8W)E96XL('!H;VYE1&%T82YR
M96-O<F1;<V5L96-T:6]N72D["B`@("`@('T*("`@?0H*("`@+RH@4V%V92!T
M:&4@<F]L;V1E>"!I;F9O<FUA=&EO;B!T;R!F:6QE+@D)"2HO"B`@(&EF("AS
M879E4&AO;F5$871A1FEL92`H9W)O=7!$0DTL("9P:&]N941A=&$I(#T](#`I
M"B`@('L*("`@("`@+RH@4V]M971H:6YG(&AA<'!E;F5D+@D)"0D)*B\*("`@
M("`@;65S9ULP72`]("(\0SY#;W5L9"!N;W0@<V%V92!P:&]N92!D871A('1O
M(&1A=&$@9FEL92XB.PH@("`@("!M97-G6S%=(#T@(CQ#/D%L;"!C:&%N9V5S
M(&AA=F4@8F5E;B!L;W-T+B(["B`@("`@('!O<'5P365S<V%G92`H<V-R965N
M+"!M97-G+"`R*3L*("`@?0H*("`@+RH@0VQE86X@=7`N"0D)"0D)"2HO"B`@
M(&9O<B`H>#TP.R!X(#P@<&AO;F5#;W5N=#L@>"LK*0H@("!["B`@("`@(&9R
M965#:&%R("AI;F1E>%MX72D["B`@('T*("`@9&5S=')O>4-$2U-C<F]L;"`H
M;F%M94QI<W0I.PH@("!D97-T<F]Y0T1+3&%B96P@*&AE;'!7:6YD;W<I.PI]
M"@HO*@H@*B!4:&ES(&]P96YS(&$@<&AO;F4@9&%T82!F:6QE(&%N9"!R971U
M<FYS('1H92!N=6UB97(@;V8@96QE;65N=',@<F5A9"X*("HO"FEN="!R96%D
M4&AO;F5$871A1FEL92`H8VAA<B`J9&%T849I;&4L(%-0:&]N941A=&$@*G!H
M;VYE1&%T82D*>PH@("`O*B!$96-L87)E('9A<FEA8FQE<RX)"0D)"2HO"B`@
M(&-H87(@*FQI;F5S6TU!6$Q)3D5372P@*FET96US6S,P73L*("`@:6YT(&QI
M;F5S4F5A9`D](#`["B`@(&EN="!C:'5N:W,)"3T@,#L*("`@:6YT(&QI;F5S
M1F]U;F0)/2`P.PH@("!I;G0@>"P@>3L*(`H@("`O*B!/<&5N('1H92!F:6QE
M(&%N9"!S=&%R="!R96%D:6YG+@D)"0DJ+PH@("!L:6YE<U)E860@/2!R96%D
M1FEL92`H9&%T849I;&4L(&QI;F5S+"!-05A,24Y%4RD["B`*("`@+RH@0VAE
M8VL@=&AE(&YU;6)E<B!O9B!L:6YE<R!R96%D+@D)"0DJ+PH@("!I9B`H;&EN
M97-296%D(#T](#`I"B`@('L*("`@("`@<F5T=7)N("@P*3L*("`@?0H@"B`@
M+RH*("`@*B!#>6-L92!T:')O=6=H('=H870@=V%S(&=I=F5N('1O('5S(&%N
M9"!S879E(&ET+@H@("`J+PH@("!F;W(@*'@],#L@>"`\(&QI;F5S4F5A9#L@
M>"LK*0H@("!["B`@("`@(&EF("AL:6YE<UMX75LP72`A/2`G(R<I"B`@("`@
M('L*("`@("`@("`@+RH@4W!L:70@=&AE('-T<FEN9RX)"0D)"2HO"B`@("`@
M("`@(&-H=6YK<R`]('-P;&ET4W1R:6YG("AL:6YE<UMX72P@:71E;7,L("<6
M)RD["@H@("`@("`@("`O*B!#;W!Y('1H92!C:'5N:W,N"0D)"0DJ+PH@("`@
M("`@("!I9B`H8VAU;FMS(#T](#@I"B`@("`@("`@('L*("`@("`@("`@("`@
M<&AO;F5$871A+3YR96-O<F1;;&EN97-&;W5N9%TN;F%M90D)/2!I=&5M<ULP
M73L*("`@("`@("`@("`@<&AO;F5$871A+3YR96-O<F1;;&EN97-&;W5N9%TN
M;&EN951Y<&4)/2!A=&]I("AI=&5M<ULQ72D["B`@("`@("`@("`@('!H;VYE
M1&%T82T^<F5C;W)D6VQI;F5S1F]U;F1=+G!H;VYE3G5M8F5R"3T@:71E;7-;
M,ET["B`@("`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D6VQI;F5S1F]U;F1=
M+F%D9')E<W,)/2!I=&5M<ULS73L*("`@("`@("`@("`@<&AO;F5$871A+3YR
M96-O<F1;;&EN97-&;W5N9%TN8VET>0D)/2!I=&5M<ULT73L*("`@("`@("`@
M("`@<&AO;F5$871A+3YR96-O<F1;;&EN97-&;W5N9%TN<')O=FEN8V4)/2!I
M=&5M<ULU73L*("`@("`@("`@("`@<&AO;F5$871A+3YR96-O<F1;;&EN97-&
M;W5N9%TN<&]S=&%L0V]D90D](&ET96US6S9=.PH@("`@("`@("`@("!P:&]N
M941A=&$M/G)E8V]R9%ML:6YE<T9O=6YD72YD97-C"0D](&ET96US6S==.PH@
M("`@("`@("`@("!F<F5E0VAA<B`H:71E;7-;,5TI.PH@("`@("`@("`@("!L
M:6YE<T9O=6YD*RL["B`@("`@("`@('T*("`@("`@("`@96QS90H@("`@("`@
M("!["B`@("`@("`@("`@("\J($)A9"!L:6YE+"!R96-O=F5R('1H92!M96UO
M<GDN"0D)*B\*("`@("`@("`@("`@9F]R("AY/3`[('D@/"!C:'5N:W,[('DK
M*RD*("`@("`@("`@("`@>PH@("`@("`@("`@("`@("!F<F5E0VAA<B`H:71E
M;7-;>5TI.PH@("`@("`@("`@("!]"B`@("`@("`@('T*("`@("`@?0H@("!]
M"B`@('!H;VYE1&%T82T^<F5C;W)D0V]U;G0@/2!L:6YE<T9O=6YD.PH@("!R
M971U<FX@;&EN97-&;W5N9#L*?0H*+RH*("H@5&AI<R!O<&5N<R!A('!H;VYE
M(&1A=&$@9FEL92!A;F0@<F5T=7)N<R!T:&4@;G5M8F5R(&]F(&5L96UE;G1S
M(')E860N"B`J+PII;G0@<V%V95!H;VYE1&%T849I;&4@*&-H87(@*F9I;&5N
M86UE+"!34&AO;F5$871A("IP:&]N941A=&$I"GL*("`@+RH@1&5C;&%R92!V
M87)I86)L97,N"0D)"0DJ+PH@("!34&AO;F5296-O<F0@*G!H;VYE4F5C;W)D
M.PH@("!T:6UE7W0@8VQC:SL*("`@1DE,12`J9F0["B`@(&EN="!X.PH@"B`@
M("\J($-A;B!W92!O<&5N('1H92!F:6QE/PD)"0D)*B\*("`@:68@*"AF9"`]
M(&9O<&5N("AF:6QE;F%M92P@(G<B*2D@/3T@3E5,3"D*("`@>PH@("`@("!R
M971U<FX@,#L*("`@?0H*("`@+RH@1V5T('1H92!C=7)R96YT('1I;64N"0D)
M"0DJ+PH@("!T:6UE*"9C;&-K*3L*"B`@("\J($%D9"!T:&4@:&5A9&5R('1O
M('1H92!F:6QE+@D)"0DJ+PH@("!F<')I;G1F("AF9"P@(B-<;B(I.PH@("!F
M<')I;G1F("AF9"P@(B,@5&AI<R!F:6QE('=A<R!A=71O;6%T:6-A;&QY('-A
M=F5D(&]N("5S(BP@8W1I;64H)F-L8VLI*3L*("`@9G!R:6YT9B`H9F0L("(C
M(%1H97)E('-H;W5L9"!B92`E9"!P:&]N92!N=6UB97)S(&EN('1H:7,@9FEL
M92Y<;B(L('!H;VYE1&%T82T^<F5C;W)D0V]U;G0I.PH@("!F<')I;G1F("AF
M9"P@(B-<;B(I.PH*("`@+RH@0WEC;&4@=&AR;W5G:"!T:&4@9&%T82!A;F0@
M<W1A<G0@=W)I=&EN9R!I="!T;R!T:&4@9FEL92X)*B\*("`@9F]R("AX/3`[
M('@@/"!P:&]N941A=&$M/G)E8V]R9$-O=6YT.R!X*RLI"B`@('L*("`@("`@
M+RH@1V5T(&$@<&]I;G1E<B!T;R!T:&4@;V)J96-T+@D)"0DJ+PH@("`@("!P
M:&]N95)E8V]R9"`]("9P:&]N941A=&$M/G)E8V]R9%MX73L*"B`@("`@("\J
M($-H96-K('1H92!P:&]N92!T>7!E+@D)"0D)*B\*("`@("`@:68@*'!H;VYE
M4F5C;W)D+3YL:6YE5'EP92`]/2!V0V5L;"!\?"!P:&]N95)E8V]R9"T^;&EN
M951Y<&4@/3T@=E!A9V5R*0H@("`@("!["B`@("`@("`@(&9P<FEN=&8@*&9D
M+"`B)7,6)606)7,6+18M%BT6+18E<UQN(BP*"0EP:&]N95)E8V]R9"T^;F%M
M92P*"0EP:&]N95)E8V]R9"T^;&EN951Y<&4L"@D)<&AO;F5296-O<F0M/G!H
M;VYE3G5M8F5R+`H)"7!H;VYE4F5C;W)D+3YD97-C*3L*("`@("`@?0H@("`@
M("!E;'-E"B`@("`@('L*("`@("`@("`@9G!R:6YT9B`H9F0L("(E<Q8E9!8E
M<Q8E<Q8E<Q8E<Q8E<Q8E<UQN(BP*"0EP:&]N95)E8V]R9"T^;F%M92P*"0EP
M:&]N95)E8V]R9"T^;&EN951Y<&4L"@D)<&AO;F5296-O<F0M/G!H;VYE3G5M
M8F5R+`H)"7!H;VYE4F5C;W)D+3YA9&1R97-S+`H)"7!H;VYE4F5C;W)D+3YC
M:71Y+`H)"7!H;VYE4F5C;W)D+3YP<F]V:6YC92P*"0EP:&]N95)E8V]R9"T^
M<&]S=&%L0V]D92P*"0EP:&]N95)E8V]R9"T^9&5S8RD["B`@("`@('T*("`@
M?0H@("!F8VQO<V4@*&9D*3L*("`@<F5T=7)N(#$["GT*"B\J"B`J(%1H:7,@
M9&ES<&QA>7,@=&AE(&EN9F]R;6%T:6]N(&%B;W5T('1H92!P:&]N92!R96-O
M<F0N"B`J+PIV;VED(&1I<W!L87E0:&]N94EN9F\@*$-$2U-#4D5%3B`J<V-R
M965N+"!34&AO;F5296-O<F0@<F5C;W)D*0I["B`@("\J($1E8VQA<F4@;&]C
M86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@8VAA<B`J;65S9ULQ,%TL('1E;7!;
M,C4V73L*"B`@("\J($-H96-K('1H92!T>7!E(&]F(&QI;F4@:70@:7,N"0D)
M"2HO"B`@(&EF("AR96-O<F0N;&EN951Y<&4@/3T@=E9O:6-E('Q\(%P*"7)E
M8V]R9"YL:6YE5'EP92`]/2!V1&%T83$@?'P@7`H)<F5C;W)D+FQI;F54>7!E
M(#T]('9$871A,B!\?"!<"@ER96-O<F0N;&EN951Y<&4@/3T@=D1A=&$S('Q\
M(%P*"7)E8V]R9"YL:6YE5'EP92`]/2!V1D%8,2!\?"!<"@ER96-O<F0N;&EN
M951Y<&4@/3T@=D9!6#(@?'P@7`H)<F5C;W)D+FQI;F54>7!E(#T]('9&05@S
M*0H@("!["B`@("`@("\J($-R96%T92!T:&4@:6YF;W)M871I;VX@=&\@9&ES
M<&QA>2X)"0DJ+PH@("`@("!S<')I;G1F("AT96UP+"`B/$,^/"]5/B5S(%!H
M;VYE(%)E8V]R9"(L($=,:6YE5'EP95MR96-O<F0N;&EN951Y<&5=*3L*("`@
M("`@;65S9ULP72`](&-O<'E#:&%R("AT96UP*3L*"B`@("`@('-P<FEN=&8@
M*'1E;7`L("(\+U(^3F%M92`@("`@("`@/"%2/B5S(BP@<F5C;W)D+FYA;64I
M.PH@("`@("!M97-G6S%=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@<W!R
M:6YT9B`H=&5M<"P@(CPO4CY0:&]N92!.=6UB97(\(5(^)7,B+"!R96-O<F0N
M<&AO;F5.=6UB97(I.PH@("`@("!M97-G6S)=(#T@8V]P>4-H87(@*'1E;7`I
M.PH*("`@("`@<W!R:6YT9B`H=&5M<"P@(CPO4CY!9&1R97-S("`@("`\(5(^
M)7,B+"!R96-O<F0N861D<F5S<RD["B`@("`@(&UE<V=;,UT@/2!C;W!Y0VAA
M<B`H=&5M<"D["@H@("`@("!S<')I;G1F("AT96UP+"`B/"]2/D-I='D@("`@
M("`@(#PA4CXE<R(L(')E8V]R9"YC:71Y*3L*("`@("`@;65S9ULT72`](&-O
M<'E#:&%R("AT96UP*3L*"B`@("`@('-P<FEN=&8@*'1E;7`L("(\+U(^4')O
M=FEN8V4@("`@/"%2/B5S(BP@<F5C;W)D+G!R;W9I;F-E*3L*("`@("`@;65S
M9ULU72`](&-O<'E#:&%R("AT96UP*3L*"B`@("`@('-P<FEN=&8@*'1E;7`L
M("(\+U(^4&]S=&%L($-O9&4@/"%2/B5S(BP@<F5C;W)D+G!O<W1A;$-O9&4I
M.PH@("`@("!M97-G6S9=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@<W!R
M:6YT9B`H=&5M<"P@(CPO4CY#;VUM96YT("`@("`\(5(^)7,B+"!R96-O<F0N
M9&5S8RD["B`@("`@(&UE<V=;-UT@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`@
M("`O*B!0;W`@=&AE(&EN9F]R;6%T:6]N('5P(&]N('1H92!S8W)E96XN"0D)
M*B\*("`@("`@<&]P=7!-97-S86=E("AS8W)E96XL(&UE<V<L(#@I.PH*("`@
M("`@+RH@0VQE86X@=7`N"0D)"0D)*B\*("`@("`@9G)E94-H87(@*&UE<V=;
M,%TI.R!F<F5E0VAA<B`H;65S9ULQ72D[(&9R965#:&%R("AM97-G6S)=*3L*
M("`@("`@9G)E94-H87(@*&UE<V=;,UTI.R!F<F5E0VAA<B`H;65S9ULT72D[
M(&9R965#:&%R("AM97-G6S5=*3L*("`@("`@9G)E94-H87(@*&UE<V=;-ETI
M.R!F<F5E0VAA<B`H;65S9ULW72D["B`@('T*("`@96QS92!I9B`H<F5C;W)D
M+FQI;F54>7!E(#T]('9086=E<B!\?"!R96-O<F0N;&EN951Y<&4@/3T@=D-E
M;&PI"B`@('L*("`@("`@+RH@0W)E871E('1H92!I;F9O<FUA=&EO;B!T;R!D
M:7-P;&%Y+@D)"2HO"B`@("`@('-P<FEN=&8@*'1E;7`L("(\0SX\+U4^)7,@
M4&AO;F4@4F5C;W)D(BP@1TQI;F54>7!E6W)E8V]R9"YL:6YE5'EP95TI.PH@
M("`@("!M97-G6S!=(#T@8V]P>4-H87(@*'1E;7`I.PH*("`@("`@<W!R:6YT
M9B`H=&5M<"P@(CPO4CY.86UE("`@("`@("`\(5(^)7,B+"!R96-O<F0N;F%M
M92D["B`@("`@(&UE<V=;,5T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`@("!S
M<')I;G1F("AT96UP+"`B/"]2/E!H;VYE($YU;6)E<CPA4CXE<R(L(')E8V]R
M9"YP:&]N94YU;6)E<BD["B`@("`@(&UE<V=;,ET@/2!C;W!Y0VAA<B`H=&5M
M<"D["@H@("`@("!S<')I;G1F("AT96UP+"`B/"]2/D-O;6UE;G0@("`@(#PA
M4CXE<R(L(')E8V]R9"YD97-C*3L*("`@("`@;65S9ULS72`](&-O<'E#:&%R
M("AT96UP*3L*"B`@("`@("\J(%!O<"!T:&4@:6YF;W)M871I;VX@=7`@;VX@
M=&AE('-C<F5E;BX)"0DJ+PH@("`@("!P;W!U<$UE<W-A9V4@*'-C<F5E;BP@
M;65S9RP@-"D["@H@("`@("`O*B!#;&5A;B!U<"X)"0D)"0DJ+PH@("`@("!F
M<F5E0VAA<B`H;65S9ULP72D[(&9R965#:&%R("AM97-G6S%=*3L*("`@("`@
M9G)E94-H87(@*&UE<V=;,ETI.R!F<F5E0VAA<B`H;65S9ULS72D["B`@('T*
M("`@96QS90H@("!["B`@("`@(&UE<V=;,%T@/2`B/$,^/"]2/D5R<F]R/"%2
M/B`\+U4^56YK;F]W;B!0:&]N92!,:6YE(%1Y<&4B.PH@("`@("!M97-G6S%=
M(#T@(CQ#/D-A;B!N;W0@9&ES<&QA>2!I;F9O<FUA=&EO;BXB.PH@("`@("!P
M;W!U<$UE<W-A9V4@*'-C<F5E;BP@;65S9RP@,BD["B`@('T*?0H*+RH*("H@
M5&AI<R!F=6YC=&EO;B!D:7-P;&%Y<R!A(&QI='1L92!P;W`@=7`@=VEN9&]W
M(&1I<V-U<W-I;F<@=&AI<R!D96UO+@H@*B\*=F]I9"!A8F]U=$-D:U)O;&]D
M97@@*$-$2U-#4D5%3B`J<V-R965N*0I["B`@(&-H87(@*FUE<V=;,35=.PH*
M("`@;65S9ULP72`]("(\0SX\+U4^06)O=70@0V1K(%)O;&]D97@B.PH@("!M
M97-G6S%=(#T@(B`B.PH@("!M97-G6S)=(#T@(E1H:7,@9&5M;R!W87,@=W)I
M='1E;B!T;R!D96UO;G-T<F%T92!T:&4@=VED9V5T<R(["B`@(&UE<V=;,UT@
M/2`B879A:6QA8FQE('=I=&@@=&AE($-D:R!L:6)R87)Y+B!.;W0@86QL(&]F
M('1H92(["B`@(&UE<V=;-%T@/2`B0V1K('=I9&=E=',@87)E('5S960L(&)U
M="!M;W-T(&]F('1H96T@:&%V92!B965N+B(["B`@(&UE<V=;-5T@/2`B22!H
M;W!E('1H:7,@;&ET=&QE(&1E;6]N<W1R871I;VX@:&5L<',@9VEV92!Y;W4@
M86XB.PH@("!M97-G6S9=(#T@(G5N9&5R<W1A;F1I;F<@;V8@=VAA="!T:&4@
M0V1K(&QI8G)A<GD@;V9F97)S+B(["B`@(&UE<V=;-UT@/2`B2&%V92!F=6X@
M=VET:"!I="XB.PH@("!M97-G6SA=(#T@(B`B.PH@("!M97-G6SE=(#T@(G1T
M9FXL(CL*("`@;65S9ULQ,%T@/2`B/$,^36EK92(["B`@(&UE<V=;,3%=(#T@
M(CQ#/CPC2$PH,S4I/B(["B`@(&UE<V=;,3)=(#T@(CQ#/DUA<F-H(#$Y.38B
M.PH*("`@<&]P=7!-97-S86=E("AS8W)E96XL(&UE<V<L(#$S*3L*?0H*+RH*
M("H@5&AI<R!D96QE=&5S(&$@<F]L;V1E>"!G<F]U<"X*("HO"FEN="!D96QE
M=&52;VQO9&5X1W)O=7`@*$-$2U-#4D5%3B`J<V-R965N+"!34F]L;V1E>"`J
M9W)O=7!,:7-T+"!I;G0@9W)O=7!#;W5N="D*>PH@("`O*B!$96-L87)E(&QO
M8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@(&-H87(@*FUE<V=;-5TL("IB=71T
M;VYS6S)=+"!T96UP6S(U-ET["B`@(&EN="!S96QE8W1I;VXL(&-H;VEC92P@
M>#L*"B`@("\J($=E="!T:&4@;G5M8F5R(&]F('1H92!G<F]U<"!T;R!D96QE
M=&4N"0D)*B\*("`@<V5L96-T:6]N(#T@<&EC:U)O;&]D97A'<F]U<"`H<V-R
M965N+"`B/$,^/"]5/D1E;&5T92!7:&EC:"!2;VQO9&5X($=R;W5P/R(L(&=R
M;W5P3&ES="P@9W)O=7!#;W5N="D["@H@("`O*B!#:&5C:R!T:&4@<F5S=6QT
M<RX)"0D)"2HO"B`@(&EF("AS96QE8W1I;VX@/"`P*0H@("!["B`@("`@(&UE
M<V=;,%T@/2`B/$,^("`@1&5L971E($-A;F-E;&5D("`@(CL*("`@("`@;65S
M9ULQ72`]("(\0SY.;R!'<F]U<"!$96QE=&5D(CL*("`@("`@<&]P=7!-97-S
M86=E("AS8W)E96XL(&UE<V<L(#(I.PH@("`@("!R971U<FX@9W)O=7!#;W5N
M=#L*("`@?0H*("`@+RH@3&5T)W,@;6%K92!S=7)E('1H97D@=V%N="!T;R!D
M96QE=&4@=&AE(&=R;W5P+@D)*B\*("`@;65S9ULP72`]("(\0SX\+U4^0V]N
M9FER;2!$96QE=&4B.PH@("!M97-G6S%=(#T@(CQ#/D%R92!Y;W4@<W5R92!Y
M;W4@=V%N="!T;R!D96QE=&4@=&AE(&=R;W5P(CL*("`@<W!R:6YT9B`H=&5M
M<"P@(CQ#/CPO4CXE<SPA4CX_(BP@9W)O=7!,:7-T6W-E;&5C=&EO;ETN;F%M
M92D["B`@(&UE<V=;,ET@/2!C;W!Y0VAA<B`H=&5M<"D["B`@(&)U='1O;G-;
M,%T@/2`B/#Q.;SX^(CL*("`@8G5T=&]N<ULQ72`]("(\/%EE<SX^(CL*("`@
M8VAO:6-E(#T@<&]P=7!1=65S=&EO;B`H<V-R965N+"!M97-G+"`S+"!B=71T
M;VYS+"`R*3L*"B`@("\J($-H96-K('1H92!R97-U;'1S(&]F('1H92!C;VYF
M:7)M871I;VXN"0D)*B\*("`@:68@*&-H;VEC92`]/2`P*0H@("!["B`@("`@
M(&UE<V=;,%T@/2`B/$,^("`@1&5L971E($-A;F-E;&5D("`@(CL*("`@("`@
M;65S9ULQ72`]("(\0SY.;R!'<F]U<"!$96QE=&5D(CL*("`@("`@<&]P=7!-
M97-S86=E("AS8W)E96XL(&UE<V<L(#(I.PH@("!]"@H@("`O*B!792!N965D
M('1O(&1E;&5T92!T:&4@9W)O=7`@9FEL92!F:7)S="X)"0DJ+PH@("!U;FQI
M;FL@*&=R;W5P3&ES=%MS96QE8W1I;VY=+F1B;2D["@H@("`O*B!/2RP@;&5T
M<R!D96QE=&4@=&AE(&=R;W5P+@D)"0DJ+PH@("!F<F5E0VAA<B`H9W)O=7!,
M:7-T6W-E;&5C=&EO;ETN;F%M92D["B`@(&9R965#:&%R("AG<F]U<$QI<W1;
M<V5L96-T:6]N72YD97-C*3L*("`@9G)E94-H87(@*&=R;W5P3&ES=%MS96QE
M8W1I;VY=+F1B;2D["B`@(&9O<B`H>#US96QE8W1I;VX[('@@/"!G<F]U<$-O
M=6YT+3$[('@K*RD*("`@>PH@("`@("!G<F]U<$QI<W1;>%TN;F%M92`](&=R
M;W5P3&ES=%MX*S%=+FYA;64["B`@("`@(&=R;W5P3&ES=%MX72YD97-C(#T@
M9W)O=7!,:7-T6W@K,5TN9&5S8SL*("`@("`@9W)O=7!,:7-T6WA=+F1B;2`]
M(&=R;W5P3&ES=%MX*S%=+F1B;3L*("`@?0H@("!G<F]U<$-O=6YT+2T["B`@
M($='<F]U<$UO9&EF:65D(#T@,3L*"B`@("\J($-L96%N('5P+@D)"0D)"0DJ
M+PH@("!R971U<FX@9W)O=7!#;W5N=#L*?0H*+RH*("H@5&AI<R!F=6YC=&EO
M;B!G971S(&EN9F]R;6%T:6]N(&%B;W5T(&$@;F5W('!H;VYE(&YU;6)E<BX*
M("HO"FEN="!A9&10:&]N95)E8V]R9"`H0T1+4T-2145.("IS8W)E96XL(%-0
M:&]N941A=&$@*G!H;VYE1&%T82D*>PH@("`O*B!$96-L87)E(&QO8V%L('9A
M<FEA8FQE<RX)"0D)"2HO"B`@($-$2TQ!0D5,("IT:71L93L*("`@0T1+251%
M34Q)4U0@*FET96U,:7-T.PH@("!34&AO;F5296-O<F0@*G!H;VYE4F5C;W)D
M.PH@("!C:&%R("IT:71L94UE<V=;,UTL("IT>7!E<UM'3$E.15194$5#3U5.
M5%TL('1E;7!;,C4V73L*("`@:6YT(')E="P@>#L*"B`@("\J($=E="!T:&4@
M<&AO;F4@<F5C;W)D('!O:6YT97(N"0D)"2HO"B`@('!H;VYE4F5C;W)D(#T@
M)G!H;VYE1&%T82T^<F5C;W)D6W!H;VYE1&%T82T^<F5C;W)D0V]U;G1=.PH*
M("`@+RH@0W)E871E(&$@=&ET;&4@;&%B96P@=&\@9&ES<&QA>2X)"0D)*B\*
M("`@=&ET;&5-97-G6S!=(#T@(CQ#/CPO4CY!9&0@3F5W(%!H;VYE(%)E8V]R
M9"(["B`@('1I=&QE(#T@;F5W0T1+3&%B96P@*'-C<F5E;BP@0T5.5$52+"!4
M3U`L('1I=&QE365S9RP@,2P@1D%,4T4L($9!3%-%*3L*("`@9')A=T-$2TQA
M8F5L("AT:71L92P@1D%,4T4I.PH*("`@+RH@0W)E871E('1H92!P:&]N92!L
M:6YE('1Y<&4@;&ES="X)"0D)*B\*("`@9F]R("AX/3`[('@@/"!'3$E.1519
M4$5#3U5.5#L@>"LK*0H@("!["B`@("`@('-P<FEN=&8@*'1E;7`L("(\0SX\
M+U4^)7,B+"!'3&EN951Y<&5;>%TI.PH@("`@("!T>7!E<UMX72`](&-O<'E#
M:&%R("AT96UP*3L*("`@?0H*("`@+RH@1V5T('1H92!P:&]N92!L:6YE('1Y
M<&4N"0D)"0DJ+PH@("!I=&5M3&ES="`](&YE=T-$2TET96UL:7-T("AS8W)E
M96XL($-%3E1%4BP@0T5.5$52+"!,1494+`H)"2)7:&%T(%1Y<&4@3V8@3&EN
M92!)<R!)=#\B+"!T>7!E<RP@1TQ)3D5465!%0T]53E0L(#`L"@D)5%)512P@
M1D%,4T4I.PH@("!P:&]N95)E8V]R9"T^;&EN951Y<&4@/2!A8W1I=F%T94-$
M2TET96UL:7-T("AI=&5M3&ES="P@3E5,3"D["B`@(&1E<W1R;WE#1$M)=&5M
M;&ES="`H:71E;4QI<W0I.PH*("`@+RH@0VAE8VL@=&AE(')E='5R;B!C;V1E
M(&]F('1H92!L:6YE('1Y<&4@<75E<W1I;VXN"0DJ+PH@("!I9B`H<&AO;F52
M96-O<F0M/FQI;F54>7!E(#T]("TQ*0H@("!["B`@("`@('!H;VYE4F5C;W)D
M+3YL:6YE5'EP92`](#`["B`@("`@(')E='5R;B`Q.PH@("!]"B`@(&5L<V4@
M:68@*'!H;VYE4F5C;W)D+3YL:6YE5'EP92`]/2!V4&%G97(@?'P@<&AO;F52
M96-O<F0M/FQI;F54>7!E(#T]('9#96QL*0H@("!["B`@("`@(')E="`](&=E
M=%-M86QL4&AO;F5296-O<F0@*'-C<F5E;BP@<&AO;F5296-O<F0I.PH@("!]
M"B`@(&5L<V4*("`@>PH@("`@("!R970@/2!G971,87)G95!H;VYE4F5C;W)D
M("AS8W)E96XL('!H;VYE4F5C;W)D*3L*("`@?0H*("`@+RH@0VAE8VL@=&AE
M(')E='5R;B!V86QU92!F<F]M('1H92!G97186%A0:&]N95)E8V]R9"!F=6YC
M=&EO;BXJ+PH@("!I9B`H<F5T(#T](#`I"B`@('L*("`@("`@<&AO;F5$871A
M+3YR96-O<F1#;W5N="LK.PH@("!]"@H@("`O*B!#;&5A;B!U<"X)"0D)"0D)
M*B\*("`@9&5S=')O>4-$2TQA8F5L("AT:71L92D["B`@(&9O<B`H>#TP.R!X
M(#P@1TQ)3D5465!%0T]53E0[('@K*RD*("`@>PH@("`@("!F<F5E0VAA<B`H
M='EP97-;>%TI.PH@("!]"@H@("`O*B!2971U<FX@=&AE(&YE=R!P:&]N92!L
M:7-T(&-O=6YT+@D)"0DJ+PH@("!R971U<FX@<F5T.PI]"@HO*@H@*B!4:&ES
M(&=E=',@82!P:&]N92!R96-O<F0@=VET:"!A;&P@;V8@=&AE(&1E=&%I;',N
M"B`J+PII;G0@9V5T3&%R9V50:&]N95)E8V]R9"`H0T1+4T-2145.("IS8W)E
M96XL(%-0:&]N95)E8V]R9"`J<&AO;F5296-O<F0I"GL*("`@+RH@1&5C;&%R
M92!L;V-A;"!V87)I86)L97,N"0D)"0DJ+PH@("!#1$M%3E1262`J;F%M945N
M=')Y+"`J861D<F5S<T5N=')Y+"`J8VET>45N=')Y.PH@("!#1$M%3E1262`J
M<')O=D5N=')Y+"`J<&]S=&%L16YT<GDL("ID97-C16YT<GD["B`@($-$2U1%
M35!,051%("IP:&]N951E;7!L871E.PH@("!C:&%R("IB=71T;VYS6S)=+"`J
M;65S9ULR73L*("`@:6YT(')E=#L*"B`@("\J($1E9FEN92!T:&4@=VED9V5T
M<RX)"0D)"2HO"B`@(&YA;65%;G1R>2`](&YE=T-$2T5N=')Y("AS8W)E96XL
M($Q%1E0L(#4L($Q%1E0L"@D)"0DB/"]2/DYA;64B+"!!7TY/4DU!3"P*"0D)
M"2=?)RP@=DU)6$5$+"`R,"P@,BP@,C4V+`H)"0D)5%)512P@1D%,4T4I.PH@
M("!A9&1R97-S16YT<GD@/2!N97=#1$M%;G1R>2`H<V-R965N+"!224=(5"P@
M-2P@3$5&5"P*"0D)"2(\+U(^061D<F5S<R(L($%?3D]234%,+`H)"0D))U\G
M+"!V34E8140L(#0P+"`R+"`R-38L"@D)"0E44E5%+"!&04Q312D["B`@(&-I
M='E%;G1R>2`](&YE=T-$2T5N=')Y("AS8W)E96XL($Q%1E0L(#@L($Q%1E0L
M"@D)"0DB/"]2/D-I='DB+"!!7TY/4DU!3"P*"0D)"2=?)RP@=DU)6$5$+"`R
M,"P@,BP@,C4V+`H)"0D)5%)512P@1D%,4T4I.PH@("!P<F]V16YT<GD@/2!N
M97=#1$M%;G1R>2`H<V-R965N+"`R.2P@."P@3$5&5"P*"0D)"2(\+U(^4')O
M=FEN8V4B+"!!7TY/4DU!3"P*"0D)"2=?)RP@=DU)6$5$+"`Q-2P@,BP@,C4V
M+`H)"0D)5%)512P@1D%,4T4I.PH@("!P;W-T86Q%;G1R>2`](&YE=T-$2T5N
M=')Y("AS8W)E96XL(%))1TA4+"`X+"!,1494+`H)"0D)(CPO4CY0;W-T86P@
M0V]D92(L($%?3D]234%,+`H)"0D))U\G+"!V54U)6$5$+"`Q,"P@,BP@,C4V
M+`H)"0D)5%)512P@1D%,4T4I.PH@("!P:&]N951E;7!L871E(#T@;F5W0T1+
M5&5M<&QA=&4@*'-C<F5E;BP@3$5&5"P@,3$L($Q%1E0L"@D)"0DB/"]2/DYU
M;6)E<B(L(`H)"0D)(B@C(R,I(",C(RTC(R,C(BP@"@D)"0DB*%]?7RD@7U]?
M+5]?7U\B+`H)"0D)5%)512P@1D%,4T4I.PH@("!D97-C16YT<GD@/2!N97=#
M1$M%;G1R>2`H<V-R965N+"!224=(5"P@,3$L($Q%1E0L"@D)"0DB/"]2/D1E
M<V-R:7!T:6]N(BP@05].3U)-04PL"@D)"0DG7R<L('9-25A%1"P@,C`L(#(L
M(#(U-BP*"0D)"512544L($9!3%-%*3L*"B`@("\J($=E="!T:&4@<&AO;F4@
M:6YF;W)M871I;VXN"0D)"2HO"B`@(&9O<B`H.SLI"B`@('L*("`@("`@+RH@
M1')A=R!T:&4@=VED9V5T<R!O;B!T:&4@<V-R965N+@D)"2HO"B`@("`@(&1R
M87=#1$M%;G1R>2`H;F%M945N=')Y+"!N86UE16YT<GDM/F)O>"D["B`@("`@
M(&1R87=#1$M%;G1R>2`H861D<F5S<T5N=')Y+"!A9&1R97-S16YT<GDM/F)O
M>"D["B`@("`@(&1R87=#1$M%;G1R>2`H8VET>45N=')Y+"!C:71Y16YT<GDM
M/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H<')O=D5N=')Y+"!P<F]V16YT
M<GDM/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H<&]S=&%L16YT<GDL('!O
M<W1A;$5N=')Y+3YB;W@I.PH@("`@("!D<F%W0T1+5&5M<&QA=&4@*'!H;VYE
M5&5M<&QA=&4L('!H;VYE5&5M<&QA=&4M/F)O>"D["B`@("`@(&1R87=#1$M%
M;G1R>2`H9&5S8T5N=')Y+"!D97-C16YT<GDM/F)O>"D["@H@("`@("`O*B!!
M8W1I=F%T92!T:&4@96YT<FEE<R!T;R!G970@=&AE(&EN9F]R;6%T:6]N+@D)
M*B\*("`@("`@<&AO;F5296-O<F0M/FYA;64@/2!C;W!Y0VAA<B`H86-T:79A
M=&5#1$M%;G1R>2`H;F%M945N=')Y+"!.54Q,*2D["B`@("`@('!H;VYE4F5C
M;W)D+3YA9&1R97-S(#T@8V]P>4-H87(@*&%C=&EV871E0T1+16YT<GD@*&%D
M9')E<W-%;G1R>2P@3E5,3"DI.PH@("`@("!P:&]N95)E8V]R9"T^8VET>2`]
M(&-O<'E#:&%R("AA8W1I=F%T94-$2T5N=')Y("AC:71Y16YT<GDL($Y53$PI
M*3L*("`@("`@<&AO;F5296-O<F0M/G!R;W9I;F-E(#T@8V]P>4-H87(@*&%C
M=&EV871E0T1+16YT<GD@*'!R;W9%;G1R>2P@3E5,3"DI.PH@("`@("!P:&]N
M95)E8V]R9"T^<&]S=&%L0V]D92`](&-O<'E#:&%R("AA8W1I=F%T94-$2T5N
M=')Y("AP;W-T86Q%;G1R>2P@3E5,3"DI.PH@("`@("!A8W1I=F%T94-$2U1E
M;7!L871E("AP:&]N951E;7!L871E+"!.54Q,*3L*("`@("`@<&AO;F5296-O
M<F0M/G!H;VYE3G5M8F5R(#T@8V]P>4-H87(@*&UI>$-$2U1E;7!L871E("AP
M:&]N951E;7!L871E*2D["B`@("`@('!H;VYE4F5C;W)D+3YD97-C(#T@8V]P
M>4-H87(@*&%C=&EV871E0T1+16YT<GD@*&1E<V-%;G1R>2P@3E5,3"DI.PH*
M("`@("`@+RH@1&5T97)M:6YE(&EF('1H92!U<V5R('=A;G1S('1O('-U8FUI
M="!T:&4@:6YF;RX)*B\*("`@("`@;65S9ULP72`]("(\0SX\+U4^0V]N9FER
M;2!.97<@4&AO;F4@16YT<GDB.PH@("`@("!M97-G6S%=(#T@(CQ#/D1O('EO
M=2!W86YT('1O(&%D9"!T:&ES('!H;VYE(&YU;6)E<C\B.PH@("`@("!B=71T
M;VYS6S!=(#T@(CP\061D(%!H;VYE($YU;6)E<CX^(CL*("`@("`@8G5T=&]N
M<ULQ72`]("(\/$-A;F-E;#X^(CL*("`@("`@8G5T=&]N<ULR72`]("(\/$UO
M9&EF>2!);F9O<FUA=&EO;CX^(CL*("`@("`@<F5T(#T@<&]P=7!1=65S=&EO
M;B`H<V-R965N+"!M97-G+"`R+"!B=71T;VYS+"`S*3L*"B`@("`@("\J($-H
M96-K('1H92!R97-P;VYS92!O9B!T:&4@<&]P=7`@9&EA;&]G(&)O>"X)"2HO
M"B`@("`@(&EF("AR970@/3T@,"D*("`@("`@>PH@("`@("`@("`O*B!4:&4@
M=7-E<B!W86YT<R!T;R!S=6)M:70@=&AE(&EN9F]R;6%T:6]N+@D)*B\*("`@
M("`@("`@9&5S=')O>4-$2T5N=')Y("AN86UE16YT<GDI.PH@("`@("`@("!D
M97-T<F]Y0T1+16YT<GD@*&%D9')E<W-%;G1R>2D["B`@("`@("`@(&1E<W1R
M;WE#1$M%;G1R>2`H8VET>45N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2T5N
M=')Y("AP<F]V16YT<GDI.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*'!O
M<W1A;$5N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2T5N=')Y("AD97-C16YT
M<GDI.PH@("`@("`@("!R969R97-H0T1+4V-R965N("AP:&]N951E;7!L871E
M+3YS8W)E96XI.PH@("`@("`@("!D97-T<F]Y0T1+5&5M<&QA=&4@*'!H;VYE
M5&5M<&QA=&4I.PH@("`@("`@("!R971U<FX@<F5T.PH@("`@("!]"B`@("`@
M(&5L<V4@:68@*')E="`]/2`Q*0H@("`@("!["B`@("`@("`@("\J(%1H92!U
M<V5R(&1O97,@;F]T('=A;G0@=&\@<W5B;6ET('1H92!I;F9O<FUA=&EO;BX)
M*B\*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YN86UE*3L*("`@
M("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YA9&1R97-S*3L*("`@("`@
M("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YC:71Y*3L*("`@("`@("`@9G)E
M94-H87(@*'!H;VYE4F5C;W)D+3YP<F]V:6YC92D["B`@("`@("`@(&9R965#
M:&%R("AP:&]N95)E8V]R9"T^<&]S=&%L0V]D92D["B`@("`@("`@(&9R965#
M:&%R("AP:&]N95)E8V]R9"T^<&AO;F5.=6UB97(I.PH@("`@("`@("!F<F5E
M0VAA<B`H<&AO;F5296-O<F0M/F1E<V,I.PH@("`@("`@("!D97-T<F]Y0T1+
M16YT<GD@*&YA;65%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H
M861D<F5S<T5N=')Y*3L*("`@("`@("`@9&5S=')O>4-$2T5N=')Y("AC:71Y
M16YT<GDI.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*'!R;W9%;G1R>2D[
M"B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H<&]S=&%L16YT<GDI.PH@("`@
M("`@("!D97-T<F]Y0T1+16YT<GD@*&1E<V-%;G1R>2D["B`@("`@("`@(')E
M9G)E<VA#1$M38W)E96X@*'!H;VYE5&5M<&QA=&4M/G-C<F5E;BD["B`@("`@
M("`@(&1E<W1R;WE#1$M496UP;&%T92`H<&AO;F5496UP;&%T92D["B`@("`@
M("`@(')E='5R;B!R970["B`@("`@('T*("`@("`@96QS90H@("`@("!["B`@
M("`@("`@("\J(%1H92!U<V5R('=A;G1S('1O(&5D:70@=&AE(&EN9F]R;6%T
M:6]N(&%G86EN+@D)*B\*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D
M+3YN86UE*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YA9&1R
M97-S*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YC:71Y*3L*
M("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D+3YP<F]V:6YC92D["B`@
M("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^<&]S=&%L0V]D92D["B`@
M("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^<&AO;F5.=6UB97(I.PH@
M("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M/F1E<V,I.PH@("`@("!]
M"B`@('T*?0H*+RH*("H@5&AI<R!G971S(&$@<VUA;&P@<&AO;F4@<F5C;W)D
M+@H@*B\*:6YT(&=E=%-M86QL4&AO;F5296-O<F0@*$-$2U-#4D5%3B`J<V-R
M965N+"!34&AO;F5296-O<F0@*G!H;VYE4F5C;W)D*0I["B`@("\J($1E8VQA
M<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)*B\*("`@0T1+14Y44ED@*FYA;65%
M;G1R>2P@*F1E<V-%;G1R>3L*("`@0T1+5$5-4$Q!5$4@*G!H;VYE5&5M<&QA
M=&4["B`@(&-H87(@*F)U='1O;G-;,ETL("IM97-G6S)=.PH@("!I;G0@<F5T
M.PH*("`@+RH@1&5F:6YE('1H92!W:61G971S+@D)"0D)*B\*("`@;F%M945N
M=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52+"`X+"!,1494+`H)
M"0D)(CPO4CY.86UE(BP@05].3U)-04PL"@D)"0DG7R<L('9-25A%1"P@,C`L
M(#(L(#(U-BP*"0D)"512544L($9!3%-%*3L*("`@<&AO;F5496UP;&%T92`]
M(&YE=T-$2U1E;7!L871E("AS8W)E96XL($-%3E1%4BP@,3$L($Q%1E0L"@D)
M"0DB/"]2/DYU;6)E<B(L(`H)"0D)(B@C(R,I(",C(RTC(R,C(BP@"@D)"0DB
M*%]?7RD@7U]?+5]?7U\B+`H)"0D)5%)512P@1D%,4T4I.PH@("!D97-C16YT
M<GD@/2!N97=#1$M%;G1R>2`H<V-R965N+"!#14Y415(L(#$T+"!,1494+`H)
M"0D)(CPO4CY$97-C<FEP=&EO;B(L($%?3D]234%,+`H)"0D))U\G+"!V34E8
M140L(#(P+"`R+"`R-38L"@D)"0E44E5%+"!&04Q312D["@H@("`O*B!'970@
M=&AE('!H;VYE(&EN9F]R;6%T:6]N+@D)"0DJ+PH@("!F;W(@*#L[*0H@("![
M"B`@("`@("\J($1R87<@=&AE('=I9&=E=',@;VX@=&AE('-C<F5E;BX)"0DJ
M+PH@("`@("!D<F%W0T1+16YT<GD@*&YA;65%;G1R>2P@;F%M945N=')Y+3YB
M;W@I.PH@("`@("!D<F%W0T1+5&5M<&QA=&4@*'!H;VYE5&5M<&QA=&4L('!H
M;VYE5&5M<&QA=&4M/F)O>"D["B`@("`@(&1R87=#1$M%;G1R>2`H9&5S8T5N
M=')Y+"!D97-C16YT<GDM/F)O>"D["@H@("`@("`O*B!!8W1I=F%T92!T:&4@
M96YT<FEE<R!T;R!G970@=&AE(&EN9F]R;6%T:6]N+@D)*B\*("`@("`@<&AO
M;F5296-O<F0M/FYA;64@/2!C;W!Y0VAA<B`H86-T:79A=&5#1$M%;G1R>2`H
M;F%M945N=')Y+"!.54Q,*2D["B`@("`@(&%C=&EV871E0T1+5&5M<&QA=&4@
M*'!H;VYE5&5M<&QA=&4L($Y53$PI.PH@("`@("!P:&]N95)E8V]R9"T^<&AO
M;F5.=6UB97(@/2!C;W!Y0VAA<B`H;6EX0T1+5&5M<&QA=&4@*'!H;VYE5&5M
M<&QA=&4I*3L*("`@("`@<&AO;F5296-O<F0M/F1E<V,@/2!C;W!Y0VAA<B`H
M86-T:79A=&5#1$M%;G1R>2`H9&5S8T5N=')Y+"!.54Q,*2D["@H@("`@("`O
M*B!$971E<FUI;F4@:68@=&AE('5S97(@=V%N=',@=&\@<W5B;6ET('1H92!I
M;F9O+@DJ+PH@("`@("!M97-G6S!=(#T@(CQ#/CPO53Y#;VYF:7)M($YE=R!0
M:&]N92!%;G1R>2(["B`@("`@(&UE<V=;,5T@/2`B/$,^1&\@>6]U('=A;G0@
M=&\@861D('1H:7,@<&AO;F4@;G5M8F5R/R(["B`@("`@(&)U='1O;G-;,%T@
M/2`B/#Q!9&0@4&AO;F4@3G5M8F5R/CXB.PH@("`@("!B=71T;VYS6S%=(#T@
M(CP\0V%N8V5L/CXB.PH@("`@("!B=71T;VYS6S)=(#T@(CP\36]D:69Y($EN
M9F]R;6%T:6]N/CXB.PH@("`@("!R970@/2!P;W!U<%%U97-T:6]N("AS8W)E
M96XL(&UE<V<L(#(L(&)U='1O;G,L(#,I.PH*("`@("`@+RH@0VAE8VL@=&AE
M(')E<W!O;G-E(&]F('1H92!P;W!U<"!D:6%L;V<@8F]X+@D)*B\*("`@("`@
M:68@*')E="`]/2`P*0H@("`@("!["B`@("`@("`@("\J(%1H92!U<V5R('=A
M;G1S('1O('-U8FUI="!T:&4@:6YF;W)M871I;VXN"0DJ+PH@("`@("`@("!D
M97-T<F]Y0T1+16YT<GD@*&YA;65%;G1R>2D["B`@("`@("`@(&1E<W1R;WE#
M1$M%;G1R>2`H9&5S8T5N=')Y*3L*("`@("`@("`@<F5F<F5S:$-$2U-C<F5E
M;B`H<&AO;F5496UP;&%T92T^<V-R965N*3L*("`@("`@("`@9&5S=')O>4-$
M2U1E;7!L871E("AP:&]N951E;7!L871E*3L*("`@("`@("`@<F5T=7)N(')E
M=#L*("`@("`@?0H@("`@("!E;'-E(&EF("AR970@/3T@,2D*("`@("`@>PH@
M("`@("`@("`O*B!4:&4@=7-E<B!D;V5S(&YO="!W86YT('1O('-U8FUI="!T
M:&4@:6YF;W)M871I;VXN"2HO"B`@("`@("`@(&9R965#:&%R("AP:&]N95)E
M8V]R9"T^;F%M92D["B`@("`@("`@(&9R965#:&%R("AP:&]N95)E8V]R9"T^
M<&AO;F5.=6UB97(I.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M
M/F1E<V,I.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*&YA;65%;G1R>2D[
M"B`@("`@("`@(&1E<W1R;WE#1$M%;G1R>2`H9&5S8T5N=')Y*3L*("`@("`@
M("`@<F5F<F5S:$-$2U-C<F5E;B`H<&AO;F5496UP;&%T92T^<V-R965N*3L*
M("`@("`@("`@9&5S=')O>4-$2U1E;7!L871E("AP:&]N951E;7!L871E*3L*
M("`@("`@("`@<F5T=7)N(')E=#L*("`@("`@?0H@("`@("!E;'-E"B`@("`@
M('L*("`@("`@("`@+RH@5&AE('5S97(@=V%N=',@=&\@961I="!T:&4@:6YF
M;W)M871I;VX@86=A:6XN"0DJ+PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F52
M96-O<F0M/FYA;64I.PH@("`@("`@("!F<F5E0VAA<B`H<&AO;F5296-O<F0M
M/G!H;VYE3G5M8F5R*3L*("`@("`@("`@9G)E94-H87(@*'!H;VYE4F5C;W)D
M+3YD97-C*3L*("`@("`@?0H@("!]"GT*"B\J"B`J(%1H:7,@<')I;G1S(&$@
M9W)O=7!S('!H;VYE(&YU;6)E<G,N"B`J+PIV;VED('!R:6YT1W)O=7!.=6UB
M97)S("A#1$M30U)%14X@*G-C<F5E;BP@4U)O;&]D97@@*F=R;W5P3&ES="P@
M:6YT(&=R;W5P0V]U;G0I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L
M97,N"0D)"0D)*B\*("`@0T1+4T5,14-424].("IS96QE8W1I;VY,:7-T.PH@
M("!#1$M%3E1262`J96YT<GD["B`@($-$2TQ!0D5,("IT:71L93L*("`@8VAA
M<B`J:71E;4QI<W1;34%8251%35-=+"`J;65S9ULQ,%TL('1E;7!;,C4V73L*
M("`@8VAA<B`J8VAO:6-E<UM=(#T@>R)0<FEN="!T;R!0<FEN=&5R("(L(")0
M<FEN="!T;R!&:6QE(BP@(D1O;B=T(%!R:6YT(GT["B`@(&-H87(@*F9I;&5N
M86UE(#T@*&-H87(@*BE.54Q,.PH@("!C:&%R("IP<FEN=&5R(#T@*&-H87(@
M*BE.54Q,.PH@("!C:&%R("ID969A=6QT4')I;G1E<B`]("AC:&%R("HI3E5,
M3#L*("`@:6YT(&AE:6=H="`](&=R;W5P0V]U;G0["B`@(&EN="!X.PH*("`@
M+RH@0W)E871E('1H92!G<F]U<"!L:7-T+@D)"0D)"2HO"B`@(&9O<B`H>#TP
M.R!X(#P@9W)O=7!#;W5N=#L@>"LK*0H@("!["B`@("`@(&ET96U,:7-T6WA=
M(#T@8V]P>4-H87(@*&=R;W5P3&ES=%MX72YN86UE*3L*("`@?0H*("`@+RH@
M4V5T('1H92!H96EG:'0@;V8@=&AE('-E;&5C=&EO;B!L:7-T+@D)"0DJ+PH@
M("!I9B`H9W)O=7!#;W5N="`^(#4I"B`@('L*("`@("`@:&5I9VAT(#T@-3L*
M("`@?0H@("!H96EG:'0@*ST@,SL*"B`@("\J($-R96%T92!T:&4@<V5L96-T
M:6]N(&QI<W0N"0D)"0DJ+PH@("!S96QE8W1I;VY,:7-T(#T@;F5W0T1+4V5L
M96-T:6]N("AS8W)E96XL($-%3E1%4BP@0T5.5$52+`H)"0D)"6AE:6=H="P@
M-#`L"@D)"0D)(CQ#/CPO53Y396QE8W0@5VAI8V@@1W)O=7!S(%1O(%!R:6YT
M(BP*"0D)"0EI=&5M3&ES="P@9W)O=7!#;W5N="P*"0D)"0EC:&]I8V5S+"`R
M+`H)"0D)"4%?4D5615)312P@5%)512P@1D%,4T4I.PH*("`@+RH@06-T:79A
M=&4@=&AE('-E;&5C=&EO;B!L:7-T+@D)"0D)*B\*("`@:68@*&%C=&EV871E
M0T1+4V5L96-T:6]N("AS96QE8W1I;VY,:7-T+"!.54Q,*2`]/2`M,2D*("`@
M>PH@("`@("!D97-T<F]Y0T1+4V5L96-T:6]N("AS96QE8W1I;VY,:7-T*3L*
M("`@("`@;65S9ULP72`]("(\0SY0<FEN="!#86YC96QE9"XB.PH@("`@("!P
M;W!U<$UE<W-A9V4@*'-C<F5E;BP@;65S9RP@,2D["B`@("`@(')E='5R;CL*
M("`@?0H@("!E<F%S94-$2U-E;&5C=&EO;B`H<V5L96-T:6]N3&ES="D["@H@
M("`O*B!$971E<FUI;F4@=VAI8V@@9W)O=7!S('=E('=A;G0@=&\@<')I;G0N
M"0D)"2HO"B`@(&9O<B`H>#TP.R!X(#P@9W)O=7!#;W5N=#L@>"LK*0H@("![
M"B`@("`@(&EF("AS96QE8W1I;VY,:7-T+3YS96QE8W1I;VYS6WA=(#T](#`I
M"B`@("`@('L*("`@("`@("`@+RH@0W)E871E(&$@=&ET;&4N"0D)"0D)*B\*
M("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/CPO4CY0<FEN=&EN9R!'<F]U
M<"!;)7-=('1O(%!R:6YT97(B+"!G<F]U<$QI<W1;>%TN;F%M92D["B`@("`@
M("`@(&UE<V=;,%T@/2!C;W!Y0VAA<B`H=&5M<"D["B`@("`@("`@('1I=&QE
M(#T@;F5W0T1+3&%B96P@*'-C<F5E;BP@0T5.5$52+"!43U`L(&UE<V<L(#$L
M($9!3%-%+"!&04Q312D["B`@("`@("`@(&1R87=#1$M,86)E;"`H=&ET;&4L
M($9!3%-%*3L*("`@("`@("`@9G)E94-H87(@*&UE<V=;,%TI.PH*("`@("`@
M("`@+RH@1V5T('1H92!P<FEN=&5R(&YA;64@=&\@<')I;G0@=&\N"0D)"2HO
M"B`@("`@("`@(&5N=')Y(#T@;F5W0T1+16YT<GD@*'-C<F5E;BP@0T5.5$52
M+"`X+"!,1494+`H)"0D)(CPO4CY0<FEN=&5R($YA;64B+"!!7TY/4DU!3"P*
M"0D)"2=?)RP@=DU)6$5$+"`R,"P@,BP@,C4V+"!44E5%+"!&04Q312D["@H@
M("`@("`@("`O*B!3970@=&AE('!R:6YT97(@;F%M92!T;R!T:&4@9&5F875L
M="!P<FEN=&5R+@D)*B\*("`@("`@("`@9&5F875L=%!R:6YT97(@/2!G971E
M;G8H(E!224Y415(B*3L*("`@("`@("`@<V5T0T1+16YT<GD@*&5N=')Y+"!D
M969A=6QT4')I;G1E<BP@,BP@,C4V+"!44E5%*3L*("`@("`@("`@<')I;G1E
M<B`](&-O<'E#:&%R("AA8W1I=F%T94-$2T5N=')Y("AE;G1R>2P@3E5,3"DI
M.PH@("`@("`@("!D97-T<F]Y0T1+16YT<GD@*&5N=')Y*3L*(`H@("`@("`@
M("`O*B!0<FEN="!T:&4@9W)O=7`N"0D)"0D)*B\*("`@("`@("`@:68@*'!R
M:6YT1W)O=7`@*&=R;W5P3&ES=%MX72P@(B]T;7`O<F]L;V1E>"YT;7`B+"!P
M<FEN=&5R*2`]/2`P*0H@("`@("`@("!["B`@("`@("`@("`@("\J(%1H92!G
M<F]U<"!C;W5L9"!N;W0@8F4@<')I;G1E9"X)"0D)*B\*("`@("`@("`@("`@
M<W!R:6YT9B`H=&5M<"P@(CQ#/E-O<G)Y('1H92!G<F]U<"`G)7,G(&-O=6QD
M(&YO="!B92!P<FEN=&5D+B(L(&=R;W5P3&ES=%MX72YN86UE*3L*("`@("`@
M("`@("`@;65S9ULP72`]('-T<F1U<"`H=&5M<"D["B`@("`@("`@("`@('!O
M<'5P365S<V%G92`H<V-R965N+"!M97-G+"`Q*3L*("`@("`@("`@("`@9G)E
M94-H87(@*&UE<V=;,%TI.PH@("`@("`@("!]"@H@("`@("`@("`O*B!#;&5A
M;B!U<"X)"0D)"0D)*B\*("`@("`@("`@9&5S=')O>4-$2TQA8F5L("AT:71L
M92D["B`@("`@("`@(&9R965#:&%R("AD969A=6QT4')I;G1E<BD["B`@("`@
M("`@(&9R965#:&%R("AP<FEN=&5R*3L*("`@("`@("`@=6YL:6YK("@B+W1M
M<"]R;VQO9&5X+G1M<"(I.PH@("`@("!]"B`@("`@(&5L<V4@:68@*'-E;&5C
M=&EO;DQI<W0M/G-E;&5C=&EO;G-;>%T@/3T@,2D*("`@("`@>PH@("`@("`@
M("`O*B!#<F5A=&4@82!T:71L92X)"0D)"0DJ+PH@("`@("`@("!S<')I;G1F
M("AT96UP+"`B/$,^/"]2/E!R:6YT:6YG($=R;W5P(%LE<UT@=&\@1FEL92(L
M(&=R;W5P3&ES=%MX72YN86UE*3L*("`@("`@("`@;65S9ULP72`](&-O<'E#
M:&%R("AT96UP*3L*("`@("`@("`@=&ET;&4@/2!N97=#1$M,86)E;"`H<V-R
M965N+"!#14Y415(L(%1/4"P@;65S9RP@,2P@1D%,4T4L($9!3%-%*3L*("`@
M("`@("`@9')A=T-$2TQA8F5L("AT:71L92P@1D%,4T4I.PH@("`@("`@("!F
M<F5E0VAA<B`H;65S9ULP72D["@H@("`@("`@("`O*B!'970@=&AE(&9I;&5N
M86UE('1O('!R:6YT('1O+@D)"0DJ+PH@("`@("`@("!E;G1R>2`](&YE=T-$
M2T5N=')Y("AS8W)E96XL($-%3E1%4BP@."P@3$5&5"P*"0D)"2(\+U(^1FEL
M96YA;64B+"!!7TY/4DU!3"P@)U\G+"!V34E8140L"@D)"0DR,"P@,BP@,C4V
M+"!44E5%+"!&04Q312D["B`@("`@("`@(&9I;&5N86UE(#T@8V]P>4-H87(@
M*&%C=&EV871E0T1+16YT<GD@*&5N=')Y+"!.54Q,*2D["B`@("`@("`@(&1E
M<W1R;WE#1$M%;G1R>2`H96YT<GDI.PH*("`@("`@("`@+RH@4')I;G0@=&AE
M(&=R;W5P+@D)"0D)"2HO"B`@("`@("`@(&EF("AP<FEN=$=R;W5P("AG<F]U
M<$QI<W1;>%TL(&9I;&5N86UE+"!P<FEN=&5R*2`]/2`P*0H@("`@("`@("![
M"B`@("`@("`@("`@("\J(%1H92!G<F]U<"!C;W5L9"!N;W0@8F4@<')I;G1E
M9"X)"0D)*B\*("`@("`@("`@("`@<W!R:6YT9B`H=&5M<"P@(CQ#/E-O<G)Y
M('1H92!G<F]U<"`G)7,G(&-O=6QD(&YO="!B92!P<FEN=&5D+B(L(&=R;W5P
M3&ES=%MX72YN86UE*3L*("`@("`@("`@("`@;65S9ULP72`]('-T<F1U<"`H
M=&5M<"D["B`@("`@("`@("`@('!O<'5P365S<V%G92`H<V-R965N+"!M97-G
M+"`Q*3L*("`@("`@("`@("`@9G)E94-H87(@*&UE<V=;,%TI.PH@("`@("`@
M("!]"B`@("`@("`@(`H@("`@("`@("`O*B!#;&5A;B!U<"X)"0D)"0D)*B\*
M("`@("`@("`@9&5S=')O>4-$2TQA8F5L("AT:71L92D["B`@("`@("`@(&9R
M965#:&%R("AF:6QE;F%M92D["B`@("`@('T*("`@?0H*("`@+RH@0VQE86X@
M=7`N"0D)"0D)"0DJ+PH@("!D97-T<F]Y0T1+4V5L96-T:6]N("AS96QE8W1I
M;VY,:7-T*3L*?0H*+RH*("H@5&AI<R!A8W1U86QL>2!P<FEN=',@=&AE('!H
M;VYE(')E8V]R9"X*("HO"FEN="!P<FEN=$=R;W5P("A34F]L;V1E>"!G<F]U
M<%)E8V]R9"P@8VAA<B`J9FEL96YA;64L(&-H87(@*G!R:6YT97(I"GL*("`@
M+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)"0D)*B\*("`@=6ED7W0@
M=6ED(#T@9V5T=6ED*"D["B`@(&-H87(@=&5M<$9I;&5N86UE6S(U-ETL(&-O
M;6UA;F1;,C4V73L*("`@4U!H;VYE1&%T82!P:&]N941A=&$["B`@(%-0:&]N
M95)E8V]R9"`J<&AO;F5296-O<F0["B`@(&EN="!P:&]N94-O=6YT+"!X.PH@
M("!&24Q%("IF9#L*"B`@("\J(%)E860@=&AE(&1A=&$@9FEL92X)"0D)"0DJ
M+PH@("!P:&]N94-O=6YT(#T@<F5A9%!H;VYE1&%T849I;&4@*&=R;W5P4F5C
M;W)D+F1B;2P@)G!H;VYE1&%T82D["@H@("`O*B!#<F5A=&4@=&AE('1E;7!O
M<F%R>2!F:6QE;F%M92X)"0D)"2HO"B`@(&EF("AF:6QE;F%M92`A/2`H8VAA
M<B`J*4Y53$PI"B`@('L*("`@("`@<W!R:6YT9B`H=&5M<$9I;&5N86UE+"`B
M)7,B+"!F:6QE;F%M92D["B`@('T*("`@96QS90H@("!["B`@("`@('-P<FEN
M=&8@*'1E;7!&:6QE;F%M92P@(B]T;7`O<F]L;V1E>"XE9"(L('5I9"D["B`@
M('T*"B`@("\J($]P96X@=&AE(&9I;&4N"0D)"0D)"2HO"B`@(&EF("@H9F0@
M/2!F;W!E;B`H=&5M<$9I;&5N86UE+"`B82LB*2D@/3T@3E5,3"D*("`@>PH@
M("`@("!R971U<FX@,#L*("`@?0H*("`@+RH@4W1A<G0@=W)I=&EN9R!T:&4@
M9W)O=7`@:6YF;W)M871I;VX@=&\@=&AE('1E;7`@9FEL92X)"2HO"B`@(&9P
M<FEN=&8@*&9D+"`B1W)O=7`@3F%M93H@)30P<UQN(BP@9W)O=7!296-O<F0N
M;F%M92D["B`@(&9P<FEN=&8@*&9D+"`B/3T]/3T]/3T]/3T]/3T]/3T]/3T]
M/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]/3T]
M/3T]/3T]/3T]/3T]7&XB*3L*("`@9F]R("AX/3`[('@@/"!P:&]N94-O=6YT
M.R!X*RLI"B`@('L*("`@("`@<&AO;F5296-O<F0@/2`F<&AO;F5$871A+G)E
M8V]R9%MX73L*("`@("`@9G!R:6YT9B`H9F0L(").86UE("`@("`@("`Z("5S
M7&XB+"!P:&]N95)E8V]R9"T^;F%M92D["B`@("`@(&9P<FEN=&8@*&9D+"`B
M4&AO;F4@3G5M8F5R.B`E<R`H)7,I7&XB+"!P:&]N95)E8V]R9"T^<&AO;F5.
M=6UB97(L($=,:6YE5'EP95MP:&]N95)E8V]R9"T^;&EN951Y<&5=*3L*("`@
M("`@:68@*'!H;VYE4F5C;W)D+3YL:6YE5'EP92`A/2!V4&%G97(@)B8@<&AO
M;F5296-O<F0M/FQI;F54>7!E("$]('9#96QL*0H@("`@("!["B`@("`@("`@
M(&9P<FEN=&8@*&9D+"`B061D<F5S<R`@("`@.B`E+3(P<RP@)2TR,'-<;B(L
M('!H;VYE4F5C;W)D+3YA9&1R97-S+"!P:&]N95)E8V]R9"T^8VET>2D["B`@
M("`@("`@(&9P<FEN=&8@*&9D+"`B("`@("`@("`@("`@.B`E+3$P<RP@)2TQ
M,'-<;B(L('!H;VYE4F5C;W)D+3YP<F]V:6YC92P@<&AO;F5296-O<F0M/G!O
M<W1A;$-O9&4I.PH@("`@("!]"B`@("`@(&9P<FEN=&8@*&9D+"`B1&5S8W)I
M<'1I;VX@.B`E+3,P<UQN(BP@<&AO;F5296-O<F0M/F1E<V,I.PH@("`@("!F
M<')I;G1F("AF9"P@(BTM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
M+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM+2TM
M+5QN(BD["B`@('T*"B`@("\J($1E=&5R;6EN92!I9B!T:&4@:6YF;W)M871I
M;VX@:7,@9V]I;F<@=&\@82!F:6QE(&]R('!R:6YT97(N"2HO"B`@(&EF("AP
M<FEN=&5R("$]("AC:&%R("HI3E5,3"D*("`@>PH@("`@("`O*B!0<FEN="!T
M:&4@9FEL92!T;R!T:&4@9VEV96X@<')I;G1E<BX)"0D)*B\*("`@("`@<W!R
M:6YT9B`H8V]M;6%N9"P@(FQP<B`M4"5S("5S(BP@<')I;G1E<BP@=&5M<$9I
M;&5N86UE*3L*("`@("`@<WES=&5M("AC;VUM86YD*3L*"B`@("`@("\J(%=E
M(&AA=F4@=&\@=6YL:VEN:R!T:&4@=&5M<"!F:6QE+@D)"0DJ+PH@("`@("!U
M;FQI;FL@*'1E;7!&:6QE;F%M92D["B`@('T*"B`@("\J($-L;W-E('1H92!F
M:6QE;F%M92X)"0D)"0DJ+PH@("!F8VQO<V4@*&9D*3L*("`@<F5T=7)N(#$[
M"GT*"B\J"B`J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ"B`J(%A86"`@("`@("`@("`@
M("`@4W1A<G0@;V8@8V%L;&)A8VL@9G5N8W1I;VYS+@H@*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*@H@*B\*:6YT(&5N=')Y4')E4')O8V5S<T-"("A%3V)J96-T5'EP
M92!C9&M4>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L:65N=$1A=&$L(&-H
M='EP92!I;G!U="D*>PH@("!I9B`H:6YP=70@/3T@)R`G*0H@("!["B`@("`@
M($)E97`H*3L*("`@("`@<F5T=7)N(#`["B`@('T*("`@<F5T=7)N(#$["GT*
M"B\J"B`J(%1H:7,@86QL;W=S('1H92!U<V5R('1O(&EN<V5R="!A(&YE=R!P
M:&]N92!E;G1R>2!I;G1O('1H92!D871A8F%S92X*("HO"G9O:60@:6YS97)T
M4&AO;F5%;G1R>4-"("A%3V)J96-T5'EP92!C9&M4>7!E+"!V;VED("IO8FIE
M8W0L('9O:60@*F-L:65N=$1A=&$I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V
M87)I86)L97,N"0D)"0DJ+PH@("!#1$M30U)/3$P@*G-C<F]L;`D)/2`H0T1+
M4T-23TQ,("HI;V)J96-T.PH@("!34&AO;F5$871A("IP:&]N941A=&$)/2`H
M4U!H;VYE1&%T82`J*6-L:65N=$1A=&$["B`@(%-0:&]N95)E8V]R9"`J<&AO
M;F5296-O<F0)/2`F<&AO;F5$871A+3YR96-O<F1;<&AO;F5$871A+3YR96-O
M<F1#;W5N=%T["B`@(&-H87(@=&5M<%LR-39=.PH*("`@+RH@36%K92!T:&4@
M<V-R;VQL:6YG(&QI<W0@9&ES87!P96%R+@D)"2HO"B`@(&5R87-E0T1+4V-R
M;VQL("AS8W)O;&PI.PH*("`@+RH@0V%L;"!T:&4@9G5N8W1I;VX@=VAI8V@@
M9V5T<R!P:&]N92!R96-O<F0@:6YF;W)M871I;VXN"2HO"B`@(&EF("AA9&10
M:&]N95)E8V]R9"`H<V-R;VQL+3YS8W)E96XL('!H;VYE1&%T82D@/3T@,"D*
M("`@>PH@("`@("!S<')I;G1F("AT96UP+"`B)7,@*"5S*2(L('!H;VYE4F5C
M;W)D+3YN86UE+"!'3&EN951Y<&5;<&AO;F5296-O<F0M/FQI;F54>7!E72D[
M"B`@("`@(&%D9$-$2U-C<F]L;$ET96T@*'-C<F]L;"P@=&5M<"D["B`@('T*
M"B`@("\J(%)E9')A=R!T:&4@<V-R;VQL:6YG(&QI<W0N"0D)"2HO"B`@(&1R
M87=#1$M38W)O;&P@*'-C<F]L;"P@<V-R;VQL+3YB;W@I.PI]"@HO*@H@*B!4
M:&ES(&%L;&]W<R!T:&4@=7-E<B!T;R!D96QE=&4@82!P:&]N92!E;G1R>2!F
M<F]M('1H92!D871A8F%S92X*("HO"G9O:60@9&5L971E4&AO;F5%;G1R>4-"
M("A%3V)J96-T5'EP92!C9&M4>7!E+"!V;VED("IO8FIE8W0L('9O:60@*F-L
M:65N=$1A=&$I"GL*("`@+RH@1&5C;&%R92!L;V-A;"!V87)I86)L97,N"0D)
M"0DJ+PH@("!#1$M30U)/3$P@*G-C<F]L;"`]("A#1$M30U)/3$P@*BEO8FIE
M8W0["B`@(%-0:&]N941A=&$@*G!H;VYE1&%T82`]("A34&AO;F5$871A("HI
M8VQI96YT1&%T83L*("`@8VAA<B`J;65S9ULS72P@=&5M<%LR-39=+"`J:&]L
M9#L*("`@8VAA<B`J8G5T=&]N<UM=(#T@>R(\/$YO/CXB+"`B/#Q997,^/B)]
M.PH@("!I;G0@<&]S:71I;VX@/2!S8W)O;&PM/F-U<G)E;G1)=&5M.PH@("!I
M;G0@>#L*"B`@("\J($UA:V4@=&AE('-C<F]L;&EN9R!L:7-T(&1I<V%P<&5A
M<BX)"0DJ+PH@("!E<F%S94-$2U-C<F]L;"`H<V-R;VQL*3L*"B`@("\J($-H
M96-K('1H92!N=6UB97(@;V8@96YT<FEE<R!L969T(&EN('1H92!L:7-T+@D)
M*B\*("`@:68@*'-C<F]L;"T^;&ES=%-I>F4@/3T@,"D*("`@>PH@("`@("!M
M97-G6S!=(#T@(E1H97)E(&%R92!N;R!M;W)E(&YU;6)E<G,@=&\@9&5L971E
M+B(["B`@("`@('!O<'5P365S<V%G92`H<V-R;VQL+3YS8W)E96XL(&UE<V<L
M(#$I.PH@("`@("!R971U<FX["B`@('T*"B`@("\J($%S:R!T:&4@=7-E<B!I
M9B!T:&5Y(')E86QL>2!W86YT('1O(&1E;&5T92!T:&4@;&ES=&EN9RX)*B\*
M("`@;65S9ULP72`]("(\0SY$;R!Y;W4@<F5A;&QY('=A;G0@=&\@9&5L971E
M('1H92!P:&]N92!E;G1R>2(["B`@(&AO;&0@/2!C:'1Y<&4R0VAA<B`H<V-R
M;VQL+3YI=&5M6W-C<F]L;"T^8W5R<F5N=$ET96U=*3L*("`@<W!R:6YT9B`H
M=&5M<"P@(CQ#/CPO4CXE<R(L(&AO;&0I.PH@("!M97-G6S%=(#T@8V]P>4-H
M87(@*'1E;7`I.PH@("!I9B`H<&]P=7!1=65S=&EO;B`H<V-R;VQL+3YS8W)E
M96XL(&UE<V<L(#(L(&)U='1O;G,L(#(I(#T](#$I"B`@('L*("`@("`@+RH@
M4F5M;W9E('1H92!I=&5M(&9R;VT@=&AE('!H;VYE(&1A=&$@<F5C;W)D+@D)
M*B\*("`@("`@9F]R("AX/7!O<VET:6]N.R!X(#P@<&AO;F5$871A+3YR96-O
M<F1#;W5N="TQ.R!X*RLI"B`@("`@('L*("`@("`@("`@<&AO;F5$871A+3YR
M96-O<F1;>%TN;F%M92`]('!H;VYE1&%T82T^<F5C;W)D6W@K,5TN;F%M93L*
M("`@("`@("`@<&AO;F5$871A+3YR96-O<F1;>%TN;&EN951Y<&4@/2!P:&]N
M941A=&$M/G)E8V]R9%MX*S%=+FQI;F54>7!E.PH@("`@("`@("!P:&]N941A
M=&$M/G)E8V]R9%MX72YP:&]N94YU;6)E<B`]('!H;VYE1&%T82T^<F5C;W)D
M6W@K,5TN<&AO;F5.=6UB97(["B`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D
M6WA=+F%D9')E<W,@/2!P:&]N941A=&$M/G)E8V]R9%MX*S%=+F%D9')E<W,[
M"B`@("`@("`@('!H;VYE1&%T82T^<F5C;W)D6WA=+F-I='D@/2!P:&]N941A
M=&$M/G)E8V]R9%MX*S%=+F-I='D["B`@("`@("`@('!H;VYE1&%T82T^<F5C
M;W)D6WA=+G!R;W9I;F-E(#T@<&AO;F5$871A+3YR96-O<F1;>"LQ72YP<F]V
M:6YC93L*("`@("`@("`@<&AO;F5$871A+3YR96-O<F1;>%TN<&]S=&%L0V]D
M92`]('!H;VYE1&%T82T^<F5C;W)D6W@K,5TN<&]S=&%L0V]D93L*("`@("`@
M("`@<&AO;F5$871A+3YR96-O<F1;>%TN9&5S8R`]('!H;VYE1&%T82T^<F5C
M;W)D6W@K,5TN9&5S8SL*("`@("`@?0H@("`@("!P:&]N941A=&$M/G)E8V]R
M9$-O=6YT+2T["@H@("`@("`O*B!.=6ME('1H92!E;G1R>2X)"0D)"2HO"B`@
M("`@(&1E;&5T94-$2U-C<F]L;$ET96T@*'-C<F]L;"P@<&]S:71I;VXI.PH@
M("!]"@H@("`O*B!2961R87<@=&AE('-C<F]L;&EN9R!L:7-T+@D)"0DJ+PH@
M("!D<F%W0T1+4V-R;VQL("AS8W)O;&PL('-C<F]L;"T^8F]X*3L*?0H*+RH*
M("H@5&AI<R!F=6YC=&EO;B!P<F]V:6-E<R!H96QP(&9O<B!T:&4@<&AO;F4@
M;&ES="!E9&ET;W(N"B`J+PIV;VED('!H;VYE16YT<GE(96QP0T(@*$5/8FIE
M8W14>7!E(&-D:U1Y<&4L('9O:60@*F]B:F5C="P@=F]I9"`J8VQI96YT1&%T
M82D*>PH@("`O*B!$96-L87)E(&QO8V%L('9A<FEA8FQE<RX)"0D)"2HO"B`@
M($-$2U-#4D],3"`J<V-R;VQL(#T@*$-$2U-#4D],3"`J*6]B:F5C=#L*("`@
M8VAA<B`J;65S9ULQ,%TL('1E;7!;,3`P73L*"B`@("\J($-R96%T92!T:&4@
M:&5L<"!T:71L92X)"0D)"2HO"B`@('-P<FEN=&8@*'1E;7`L("(\0SX\+U(^
M4F]L;V1E>"!0:&]N92!%9&ET;W(B*3L*("`@;65S9ULP72`](&-O<'E#:&%R
M("AT96UP*3L*"B`@('-P<FEN=&8@*'1E;7`L("(\0CUI("`@("`^($EN<V5R
M=',@82!N97<@<&AO;F4@96YT<GDN(BD["B`@(&UE<V=;,5T@/2!C;W!Y0VAA
M<B`H=&5M<"D["@H@("!S<')I;G1F("AT96UP+"`B/$(]9"`@("`@/B!$96QE
M=&5S('1H92!C=7)R96YT;'D@<V5L96-T960@<&AO;F4@96YT<GDN(BD["B`@
M(&UE<V=;,ET@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("!S<')I;G1F("AT96UP
M+"`B/$(]17-C87!E/B!%>&ET<R!T:&4@<V-R;VQL:6YG(&QI<W0N(BD["B`@
M(&UE<V=;,UT@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("!S<')I;G1F("AT96UP
M+"`B/$(]/R`@("`@/B!0;W!S('5P('1H:7,@:&5L<"!W:6YD;W<N(BD["B`@
M(&UE<V=;-%T@/2!C;W!Y0VAA<B`H=&5M<"D["@H@("`O*B!0;W`@=7`@=&AE
M(&UE<W-A9V4N"0D)"0DJ+PH@("!P;W!U<$UE<W-A9V4@*'-C<F]L;"T^<V-R
M965N+"!M97-G+"`U*3L*"B`@("\J($-L96%N('5P+@D)"0D)"0DJ+PH@("!F
M<F5E0VAA<B`H;65S9ULP72D[(&9R965#:&%R("AM97-G6S%=*3L*("`@9G)E
M94-H87(@*&UE<V=;,ETI.R!F<F5E0VAA<B`H;65S9ULS72D["B`@(&9R965#
M:&%R("AM97-G6S1=*3L*?0H*+RH*("H@5&AI<R!I<R!A(&-A;&QB86-K('1O
M('1H92!M96YU('=I9&=E="X@270@86QL;W=S('1H92!U<V5R('1O(`H@*B!A
M<VL@9F]R(&AE;'`@86)O=70@86YY('-U8BUM96YU(&ET96TN"B`J+PIV;VED
M(&AE;'!#0B`H14]B:F5C=%1Y<&4@8V1K5'EP92P@=F]I9"`J;V)J96-T+"!V
M;VED("IC;&EE;G1$871A*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B
M;&5S+@D)"0D)*B\*("`@0T1+345.52`J;65N=0D]("A#1$M-14Y5("HI;V)J
M96-T.PH@("!I;G0@;65N=4QI<W0)"3T@;65N=2T^8W5R<F5N=%1I=&QE.PH@
M("!I;G0@<W5B;65N=4QI<W0)/2!M96YU+3YC=7)R96YT4W5B=&ET;&4["B`@
M(&EN="!S96QE8W1I;VX)/2`H*&UE;G5,:7-T("H@,3`P*2`K('-U8FUE;G5,
M:7-T*3L*("`@8VAA<B`J;65S9ULR,%TL("IN86UE+"!T96UP6S$P,%T["@H@
M("`O*B!#<F5A=&4@=&AE(&AE;'`@=&ET;&4N"0D)"0DJ+PH@("!N86UE(#T@
M8VAT>7!E,D-H87(@*&UE;G4M/G-U8FQI<W1;;65N=4QI<W1=6W-U8FUE;G5,
M:7-T72D["B`@('-T<FEP5VAI=&53<&%C92`H=D)/5$@L(&YA;64I.PH@("!S
M<')I;G1F("AT96UP+"`B/$,^/"]2/DAE;'`\(5(^(#PO53XE<SPA53XB+"!N
M86UE*3L*("`@;65S9ULP72`](&-O<'E#:&%R("AT96UP*3L*("`@9G)E94-H
M87(@*&YA;64I.PH*("`@+RH@4V5T('1H92!D969A=6QT('9A;'5E(&9O<B!T
M:&4@;65S<V%G92X)"0DJ+PH@("!M97-G6S%=(#T@(CQ#/DYO(&AE;'`@9&5F
M:6YE9"!F;W(@=&AI<R!M96YU+B(["@H@("`O*B!':79E;B!T:&4@8W5R<F5N
M="!M96YU(&ET96TL(&-R96%T92!A(&UE<W-A9V4N"0DJ+PH@("!I9B`H<V5L
M96-T:6]N(#T](#`I"B`@('L*("`@("`@;65S9ULQ72`]("(\0SY4:&ES(')E
M861S(&$@;F5W(')O;&]D97@@4D,@9FEL92XB.PH@("!]"B`@(&5L<V4@:68@
M*'-E;&5C=&EO;B`]/2`Q*0H@("!["B`@("`@(&UE<V=;,5T@/2`B/$,^5&AI
M<R!S879E<R!T:&4@8W5R<F5N="!G<F]U<"!I;F9O<FUA=&EO;B!I;B!T:&4@
M9&5F875L="!20R!F:6QE+B(["B`@('T*("`@96QS92!I9B`H<V5L96-T:6]N
M(#T](#(I"B`@('L*("`@("`@;65S9ULQ72`]("(\0SY4:&ES('-A=F5S('1H
M92!C=7)R96YT(&=R;W5P(&EN9F]R;6%T:6]N(&EN(&$@;F5W(%)#(&9I;&4N
M(CL*("`@?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,RD*("`@>PH@("`@
M("!M97-G6S%=(#T@(CQ#/E1H:7,@97AI=',@=&AI<R!P<F]G<F%M+B(["B`@
M('T*("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,"D*("`@>PH@("`@("!M
M97-G6S%=(#T@(CQ#/E1H:7,@8W)E871E<R!A(&YE=R!R;VQO9&5X(&=R;W5P
M+B(["B`@('T*("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,2D*("`@>PH@
M("`@("!M97-G6S%=(#T@(CQ#/E1H:7,@;W!E;G,@82!R;VQO9&5X(&=R;W5P
M+B(["B`@('T*("`@96QS92!I9B`H<V5L96-T:6]N(#T](#$P,BD*("`@>PH@
M("`@("!M97-G6S%=(#T@(CQ#/E1H:7,@9&5L971E<R!A(')O;&]D97@@9W)O
M=7`N(CL*("`@?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,C`P*0H@("![
M"B`@("`@(&UE<V=;,5T@/2`B/$,^5&AI<R!P<FEN=',@;W5T('-E;&5C=&5D
M(&=R;W5P<R!P:&]N92!N=6UB97)S+B(["B`@('T*("`@96QS92!I9B`H<V5L
M96-T:6]N(#T](#,P,"D*("`@>PH@("`@("!M97-G6S%=(#T@(CQ#/E1H:7,@
M9VEV97,@82!L:71T;&4@:&ES=&]R>2!O;B!T:&ES('!R;V=R86TN(CL*("`@
M?0H@("!E;'-E(&EF("AS96QE8W1I;VX@/3T@,S`Q*0H@("!["B`@("`@(&UE
M<V=;,5T@/2`B/$,^5&AI<R!P<F]V:61E<R!I;F9O<FUA=&EO;B!A8F]U="!T
M:&4@<F]L;V1E>"XB.PH@("!]"@H@("`O*B!0;W`@=7`@=&AE(&UE<W-A9V4N
M"0D)"0DJ+PH@("!P;W!U<$UE<W-A9V4@*&UE;G4M/G-C<F5E;BP@;65S9RP@
M,BD["B`@(&9R965#:&%R("AM97-G6S!=*3L*"B`@("\J(%)E9')A=R!T:&4@
M<W5B;65N=2!W:6YD;W<N"0D)"2HO"B`@(&1R87=#1$M-96YU4W5B=VEN("AM
M96YU*3L*?0H*+RH*("H@5&AI<R!I<R!A(&-A;&QB86-K('1O('1H92!G<F]U
M<"!L:7-T('-C<F]L;&EN9R!L:7-T+@H@*B\*=F]I9"!G<F]U<$EN9F]#0B`H
M14]B:F5C=%1Y<&4@8V1K5'EP92P@=F]I9"`J;V)J96-T+"!V;VED("IC;&EE
M;G1$871A*0I["B`@("\J($1E8VQA<F4@;&]C86P@=F%R:6%B;&5S+@D)"0D)
M*B\*("`@0T1+4T-23TQ,("IS8W)O;&P)"3T@*$-$2U-#4D],3"`J*6]B:F5C
M=#L*("`@4U)O;&]D97@@*F=R;W5P3&ES=`D)/2`H4U)O;&]D97@@*BEC;&EE
M;G1$871A.PH@("!I;G0@<V5L96-T:6]N"0D]('-C<F]L;"T^8W5R<F5N=$ET
M96T["B`@(&-H87(@*FUE<V=;-5TL('1E;7!;,3`P73L*"B`@("\J($-R96%T
M92!T:&4@;65S<V%G92!T;R!B92!D:7-P;&%Y960N"0D)*B\*("`@;65S9ULP
M72`]("(\0SX\+U4^1&5T86EL960@1W)O=7`@26YF;W)M871I;VXN(CL*"B`@
M('-P<FEN=&8@*'1E;7`L("(\+U(^1W)O=7`@3F%M92`@("`@("`@(#PA4CX@
M)7,B+"!G<F]U<$QI<W1;<V5L96-T:6]N72YN86UE*3L*("`@;65S9ULQ72`]
M(&-O<'E#:&%R("AT96UP*3L*"B`@('-P<FEN=&8@*'1E;7`L("(\+U(^1W)O
M=7`@1&5S8W)I<'1I;VX@(#PA4CX@)7,B+"!G<F]U<$QI<W1;<V5L96-T:6]N
M72YD97-C*3L*("`@;65S9ULR72`](&-O<'E#:&%R("AT96UP*3L*"B`@('-P
M<FEN=&8@*'1E;7`L("(\+U(^1W)O=7`@1&%T86)A<V4@1FEL93PA4CX@)7,B
M+"!G<F]U<$QI<W1;<V5L96-T:6]N72YD8FTI.PH@("!M97-G6S-=(#T@8V]P
M>4-H87(@*'1E;7`I.PH*("`@+RH@1&ES<&QA>64@=&AE(&UE<W-A9V4N"0D)
M"0DJ+PH@("!P;W!U<$UE<W-A9V4@*'-C<F]L;"T^<V-R965N+"!M97-G+"`T
M*3L*("`@9G)E94-H87(@*&UE<V=;,5TI.R!F<F5E0VAA<B`H;65S9ULR72D[
M"B`@(&9R965#:&%R("AM97-G6S-=*3L*"B`@("\J(%)E9')A=R!T:&4@<V-R
M;VQL:6YG(&QI<W0N"0D)"2HO"B`@(&1R87=#1$M38W)O;&P@*'-C<F]L;"P@
0<V-R;VQL+3YB;W@I.PI]"BHO
`
end
SHAR_EOF
  echo 'File demo/rolodex.c is complete' &&
  echo 'uudecoding file demo/rolodex.c' &&
  uudecode _sharuue.tmp < _sharuue.tmp && rm -f _sharuue.tmp &&
  $shar_touch -am 0503190996 'demo/rolodex.c' &&
  chmod 0444 'demo/rolodex.c' ||
  echo 'restore of demo/rolodex.c failed'
  shar_count="`wc -c < 'demo/rolodex.c'`"
  test 50056 -eq "$shar_count" ||
    echo "demo/rolodex.c: original size 50056, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= demo/command.c ==============
if test -f 'demo/command.c' && test X"$1" != X"-c"; then
  echo 'x - skipping demo/command.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting demo/command.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'demo/command.c' &&
#include "cdk.h"
X
extern char *GEscapeHit;
#define MAXHISTORY	500
X
/* This structure is used for keeping command history.		*/
struct history_st {
X   int count;
X   int current;
X   char *command[MAXHISTORY];
};
X
void historyUpCB (EObjectType cdktype, void *object, void *clientData);
void historyDownCB (EObjectType cdktype, void *object, void *clientData);
void viewHistoryCB (EObjectType cdktype, void *object, void *clientData);
void listHistoryCB (EObjectType cdktype, void *object, void *clientData);
void helpCB (EObjectType cdktype, void *object, void *clientData);
X
/*
X * Written by:	Mike Glover
X * Purpose:
X *		This creates a very simple command interface.
X */
X
void main()
{
X   /* Declare variables.					*/
X   CDKSCREEN	*cdkscreen;
X   CDKSWINDOW	*commandOutput;
X   CDKENTRY	*commandEntry;
X   WINDOW	*cursesWin;
X   char		*command, temp[600];
X   struct history_st history;
X
X   /* set up the history.					*/
X   history.count = 0;
X   history.current = 0;
X
X   /* Set up CDK 						*/ 
X   cursesWin = initscr();
X   cdkscreen = initCDKScreen (cursesWin);
X
X   /* Start color.						*/
X   initCDKColor();
X
X   /* Create the scrolling window.				*/
X   commandOutput = newCDKSwindow (cdkscreen, CENTER, TOP, LINES-8, COLS-2,
X					"<C></U>Command Output Window",
X					1000, TRUE, FALSE);
X
X   /* Create the entry field.					*/
X   commandEntry = newCDKEntry (cdkscreen, CENTER, BOTTOM, LEFT,
X				"Command >", A_NORMAL, '_', vMIXED,
X				COLS-14, 1, 512, FALSE, FALSE);
X
X   /* Create the key bindings.					*/
X   bindCDKObject (vENTRY, commandEntry, KEY_UP, &historyUpCB, &history);
X   bindCDKObject (vENTRY, commandEntry, KEY_DOWN, &historyDownCB, &history);
X   bindCDKObject (vENTRY, commandEntry, TAB, &viewHistoryCB, commandOutput);
X   bindCDKObject (vENTRY, commandEntry, '', &listHistoryCB, &history);
X   bindCDKObject (vENTRY, commandEntry, '?', &helpCB, NULL);
X
X   /* Draw the screen.						*/
X   refreshCDKScreen (cdkscreen);
X
X   /* Do this forever.						*/
X   for (;;)
X   {
X      /* Get the command.					*/
X      command = activateCDKEntry (commandEntry, NULL);
X
X      /* Check the output of the command.			*/
X      if (strcmp (command, "QUIT") == 0 ||
X		strcmp (command, "quit") == 0 ||
X		strcmp (command, "Quit") == 0 ||
X		strcmp (command, "Q") == 0 ||
X		strcmp (command, "q") == 0 ||
X		command == GEscapeHit)
X      {
X         /* All done.						*/
X         destroyCDKEntry (commandEntry);
X         destroyCDKSwindow (commandOutput);
X         delwin (cursesWin);
X         endCDK();
X         exit (0);
X      }
X
X      /* Keep the history.					*/
X      history.command[history.count] = copyChar (command);
X      history.count++;
X      history.current = history.count;
X
X      /* Insert a line providing the command.			*/
X      sprintf (temp, "Command: </R>%s", command);
X      addCDKSwindow (commandOutput, temp, BOTTOM);
X
X      /* Run the command.					*/
X      execCDKSwindow (commandOutput, command, BOTTOM);
X      cleanCDKEntry (commandEntry);
X   }
}
X
/*
X * This is the callback for the down arrow.
X */
void historyUpCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKENTRY *entry = (CDKENTRY *)object;
X   struct history_st *history = (struct history_st *) clientData;
X
X   /* Make sure we don't go out of bounds.			*/
X   if (history->current == 0)
X   {
X      Beep();
X      return;
X   }
X
X   /* Decrement the counter					*/
X   history->current--;
X
X   /* Display the command.					*/
X   setCDKEntry (entry, history->command[history->current], entry->min, entry->max, entry->box);
X   drawCDKEntry (entry, entry->box);
}
X
/*
X * This is the callback for the down arrow.
X */
void historyDownCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKENTRY *entry = (CDKENTRY *)object;
X   struct history_st *history = (struct history_st *) clientData;
X
X   /* Make sure we don't go out of bounds.			*/
X   if (history->current == history->count)
X   {
X      Beep();
X      return;
X   }
X
X   /* Increment the counter...					*/
X   history->current++;
X
X   /* If we are at the end, clear the entry field.		*/
X   if (history->current == history->count)
X   {
X      cleanCDKEntry (entry);
X      drawCDKEntry (entry, entry->box);
X      return;
X   }
X
X   /* Display the command.					*/
X   setCDKEntry (entry, history->command[history->current], entry->min, entry->max, entry->box);
X   drawCDKEntry (entry, entry->box);
}
X
/*
X * This callback allows the user to play with the scrolling window.
X */
void viewHistoryCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKENTRY *entry = (CDKENTRY *)object;
X   CDKSWINDOW *swindow = (CDKSWINDOW *)clientData;
X
X   /* Let them play...						*/
X   activateCDKSwindow (swindow, NULL);
X
X   /* Clean the screen.						*/
X   refreshCDKScreen (entry->screen);
}
X
/*
X * This callback allows the user to pick from the history list from a
X * scrolling list.
X */
void listHistoryCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKENTRY *entry = (CDKENTRY *)object;
X   struct history_st *history = (struct history_st *) clientData;
X   CDKSCROLL *scrollList;
X   int height = (history->count < 10 ? history->count+3 : 13);
X   int selection;
X
X   /* No history, no list.					*/
X   if (history->count == 0)
X   {
X      char *mesg[] = {"<C>No Commands Entered.", "<C>No History"};
X      popupMessage (entry->screen, mesg, 2);
X      return;
X   }
X
X   /* Create the scrolling list.				*/
X   scrollList = newCDKScroll (entry->screen, CENTER, CENTER,
X				height, 20, "<C>Command History",
X				history->command, history->count,
X				NUMBERS, A_REVERSE, TRUE, FALSE);
X
X   /* Get the command to execute.				*/
X   selection = activateCDKScroll (scrollList, NULL);
X   destroyCDKScroll (scrollList);
X
X   /* Check the results of the selection.			*/
X   if (selection >= 0)
X   {
X      /* Get the command and sticj it back in the entry field.	*/
X      setCDKEntry (entry, history->command[selection], entry->min, entry->max, entry->box);
X   }
X
X   /* Clean the screen.						*/
X   refreshCDKScreen (entry->screen);
}
X
/*
X * This callback is to display help.
X */
void helpCB (EObjectType cdktype, void *object, void *clientData)
{
X   CDKENTRY *entry = (CDKENTRY *)object;
X   char *mesg[20];
X
X   /* Create the help message.					*/
X   mesg[0] = "<B=Ctrl-H    > Displays the command history.";
X   mesg[1] = "<B=Up Arrow  > Scrolls to a previous command.";
X   mesg[2] = "<B=Down Arrow> Scrolls to a previous command.";
X   mesg[3] = "<B=?         > Displays this help window.";
X   popupMessage (entry->screen, mesg, 4);
}
SHAR_EOF
  $shar_touch -am 0503190996 'demo/command.c' &&
  chmod 0444 'demo/command.c' ||
  echo 'restore of demo/command.c failed'
  shar_count="`wc -c < 'demo/command.c'`"
  test 6439 -eq "$shar_count" ||
    echo "demo/command.c: original size 6439, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= demo/rolodex.h ==============
if test -f 'demo/rolodex.h' && test X"$1" != X"-c"; then
  echo 'x - skipping demo/rolodex.h (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting demo/rolodex.h (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'demo/rolodex.h' &&
#include "cdk.h"
#include <time.h>
#include <ndbm.h>
#include <fcntl.h>
#include <unistd.h>
X
#define	MAXGROUPS	100
#define	GLINETYPECOUNT	9
X
/*
X * Declare some global variables.
X */
char *GCurrentGroup	= (char *)NULL;
char *GRCFile		= (char *)NULL;
char *GDBMDir		= (char *)NULL;
int GGroupModified	= FALSE;
int GPhoneListModified	= FALSE;
char *GLineType[]	= {"Voice", "Cell", "Pager", "First FAX", "Second FAX", "Third FAX", "First Data Line", "Second Data Line", "Third Data Line"};
X
/*
X * Create some definitions.
X */
typedef enum {vVoice, vCell, vPager, vFAX1, vFAX2, vFAX3, vData1, vData2, vData3} ELineType;
X
/*
X * Define the group record structure.
X */
struct _group_st {
X	char *name;
X	char *desc;
X	char *dbm;
};
typedef struct _group_st SRolodex;
X
/*
X * Define a phone record structure;
X */
struct _record_st {
X	char *name;
X	ELineType lineType;
X	char *phoneNumber;
X	char *address;
X	char *city;
X	char *province;
X	char *postalCode;
X	char *desc;
};
typedef struct _record_st SPhoneRecord;
X
struct _phone_data_st {
X	SPhoneRecord record[MAXITEMS];
X	int recordCount;
};
typedef struct _phone_data_st SPhoneData;
X
/* 
X * Define the callback prototypes.
X */
void helpCB (EObjectType cdkType, void *object, void *clientData);
void groupInfoCB (EObjectType cdkType, void *object, void *clientData);
void insertPhoneEntryCB (EObjectType cdkType, void *object, void *clientData);
void deletePhoneEntryCB (EObjectType cdkType, void *object, void *clientData);
void phoneEntryHelpCB (EObjectType cdkType, void *object, void *clientData);
int entryPreProcessCB (EObjectType cdkType, void *object, void *clientData, chtype input);
X
/* 
X * These functions use/modify the rolodex RC file.
X */
int readRCFile (char *filename, SRolodex *groupInfo);
int openNewRCFile (CDKSCREEN *screen, SRolodex *groups, int groupCount);
int writeRCFile (CDKSCREEN *screen, char *file, SRolodex *groups, int count);
int writeRCFileAs (CDKSCREEN *screen, SRolodex *groups, int count);
X
/*
X * These functions use/modify rolodex phone groups.
X */
int addRolodexGroup (CDKSCREEN *screen, SRolodex *groups, int count);
int deleteRolodexGroup (CDKSCREEN *screen, SRolodex *groups, int count);
int pickRolodexGroup (CDKSCREEN *screen, char *title, SRolodex *groups, int count);
void useRolodexGroup (CDKSCREEN *screen, char *name, char *desc, char *dbm);
X
/*
X * These functions display misc information about the rolodex program.
X */
void displayRolodexStats (CDKSCREEN *screen, int groupCount);
void aboutCdkRolodex (CDKSCREEN *screen);
void displayPhoneInfo (CDKSCREEN *screen, SPhoneRecord record);
X
/*
X * These functions use/modify phone data lists.
X */
int readPhoneDataFile (char *filename, SPhoneData *record);
int savePhoneDataFile (char *filename, SPhoneData *record);
int addPhoneRecord (CDKSCREEN *screen, SPhoneData *phoneData);
int deletePhoneRecord (CDKSCREEN *screen, SPhoneData *phoneData);
int getLargePhoneRecord (CDKSCREEN *screen, SPhoneRecord *phoneRecord);
int getSmallPhoneRecord (CDKSCREEN *screen, SPhoneRecord *phoneRecord);
X
/* 
X * These functions allow us to print out phone numbers.
X */
void printGroupNumbers (CDKSCREEN *screen, SRolodex *groups, int count);
int printGroup (SRolodex groupRecord, char *filename, char *printer);
SHAR_EOF
  $shar_touch -am 0503190996 'demo/rolodex.h' &&
  chmod 0444 'demo/rolodex.h' ||
  echo 'restore of demo/rolodex.h failed'
  shar_count="`wc -c < 'demo/rolodex.h'`"
  test 3225 -eq "$shar_count" ||
    echo "demo/rolodex.h: original size 3225, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= demo/Makefile.demos ==============
if test -f 'demo/Makefile.demos' && test X"$1" != X"-c"; then
  echo 'x - skipping demo/Makefile.demos (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting demo/Makefile.demos (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'demo/Makefile.demos' &&
default:
X	@for i in $(CDKDEMOBIN); do \
X	   echo "$(CC) $(CFLAGS) -o $$i $${i}.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB)"; \
X	   $(CC) $(CFLAGS) -o $$i $${i}.c $(INCPATH) -I.. $(LIBPATH) -L.. -lcdk $(LINKLIB); \
X	done
X
clean:
X	rm -f *.o core $(CDKDEMOBIN)
SHAR_EOF
  $shar_touch -am 0503190996 'demo/Makefile.demos' &&
  chmod 0444 'demo/Makefile.demos' ||
  echo 'restore of demo/Makefile.demos failed'
  shar_count="`wc -c < 'demo/Makefile.demos'`"
  test 265 -eq "$shar_count" ||
    echo "demo/Makefile.demos: original size 265, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= dialog.c ==============
if test -f 'dialog.c' && test X"$1" != X"-c"; then
  echo 'x - skipping dialog.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting dialog.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'dialog.c' &&
#include "cdk.h"
X
/*
X * $Author: glover $
X * $Date: 1996/04/14 03:02:12 $
X * $Revision: 1.29 $
X */
X
/*
X * This function creates a dialog widget.
X */
CDKDIALOG *newCDKDialog( CDKSCREEN *cdkscreen, int xplace, int yplace, char **mesg, int rows, char **buttonLabel, int buttonCount, chtype highlight, boolean separator, boolean box, boolean shadow)
{
X   /* Declare local variables.						*/
X   CDKDIALOG *dialog	= (CDKDIALOG *)malloc (sizeof (CDKDIALOG));
X   int boxWidth		= MINDIALOGWIDTH;
X   int boxHeight	= rows + 3 + separator;
X   int maxmessagewidth	= -1;
X   int buttonwidth	= 0;
X   int xpos		= xplace;
X   int ypos		= yplace;
X   int temp		= 0;
X   int buttonadj	= 0;
X   int x		= 0;
X
X   /* Translate the char * message to a chtype *			*/
X   for (x=0; x < rows; x++)
X   {
X      dialog->info[x]	= char2Chtype (mesg[x], &dialog->infoLen[x], &dialog->infoPos[x]);
X      maxmessagewidth	= MAX(maxmessagewidth, dialog->infoLen[x]);
X   }
X
X   /* Translate the button label char * to a chtype *			*/
X   for (x = 0; x < buttonCount; x++)
X   {
X      dialog->buttonLabel[x]	= char2Chtype (buttonLabel[x], &dialog->buttonLen[x], &temp);
X      buttonwidth		+= dialog->buttonLen[x] + 1;
X   }
X   buttonwidth--;
X
X   /* Determine the final dimensions of the box.			*/
X   boxWidth	= MAX(boxWidth, maxmessagewidth);
X   boxWidth	= MAX(boxWidth, buttonwidth);
X   boxWidth	= boxWidth + 4;
X
X   /* Now we have to readjust the x and y positions			*/
X   alignxy (cdkscreen->window, &xpos, &ypos, boxWidth, boxHeight);
X
X   /* Set up the dialog box attributes.					*/
X   dialog->parent		= cdkscreen->window;
X   dialog->win			= newwin (boxHeight, boxWidth, ypos, xpos);
X   dialog->shadowWin		= (WINDOW *)NULL;
X   dialog->buttonCount		= buttonCount;
X   dialog->currentButton	= 0;
X   dialog->messageRows		= rows;
X   dialog->boxHeight		= boxHeight;
X   dialog->boxWidth		= boxWidth;
X   dialog->highlight		= highlight;
X   dialog->separator		= separator;
X   dialog->box			= box;
X   dialog->shadow		= shadow;
X   dialog->preProcessFunction	= (PROCESSFN)NULL;
X   dialog->preProcessData	= (void *)NULL;
X   dialog->postProcessFunction	= (PROCESSFN)NULL;
X   dialog->postProcessData	= (void *)NULL;
X
X   /* If we couldn't create the window, we should return a NULL value.	*/
X   if (dialog->win == (WINDOW *)NULL)
X   {
X      /* Couldn't create the window. Clean up used memory.		*/
X      for (x=0; x < dialog->messageRows ; x++)
X      {
X         freeChtype (dialog->info[x]);
X      }
X      for (x=0; x < dialog->buttonCount; x++)
X      {
X         freeChtype (dialog->buttonLabel[x]);
X      }
X
X      /* Remove the memory used by the dialog pointer.			*/
X      free (dialog);
X
X      /* Return a NULL dialog box.					*/
X      return ( (CDKDIALOG *)NULL );
X   }
X
X   /* Find the button positions.					*/
X   buttonadj		= ((int)((boxWidth-buttonwidth)/2));
X   for (x = 0; x < buttonCount; x++)
X   {
X      dialog->buttonPos[x]	= buttonadj;
X      buttonadj			= buttonadj + dialog->buttonLen[x] + 1;
X   }
X
X   /* Create the string alignments.					*/
X   for (x=0; x < rows; x++)
X   {
X      dialog->infoPos[x]	= justifyString (boxWidth, dialog->infoLen[x], dialog->infoPos[x]);
X   }
X
X   /* Was there a shadow???						*/
X   if (shadow)
X   {
X      dialog->shadowWin		= newwin (boxHeight, boxWidth, ypos+1, xpos+1);
X   }
X
X   /* Let them use escape keys.						*/
X   keypad (dialog->win, TRUE);
X
X   /* Empty the key bindings.						*/
X   cleanCDKObjectBindings (vDIALOG, dialog);
X
X   /* Register this baby.						*/
X   registerCDKObject (cdkscreen, vDIALOG, dialog);
X
X   /* Return the dialog box pointer.					*/
X   return (dialog);
}
X
/*
X * This lets the user select the button.
X */
int activateCDKDialog (CDKDIALOG *dialog, chtype *actions)
{
X   /* Declare local variables.						*/
X   chtype input		= (chtype)NULL;
X   int ret;
X
X   /* Draw the dialog box.						*/
X   drawCDKDialog (dialog, dialog->box);
X
X   /* Lets move to the first button					*/
X   writeChtypeAttrib (dialog->win,
X			dialog->buttonPos[dialog->currentButton],
X			dialog->boxHeight-2,
X			dialog->buttonLabel[dialog->currentButton],
X			dialog->highlight,
X			HORIZONTAL,
X			0, dialog->buttonLen[dialog->currentButton]);
X
X   /* Turn off the cursor.						*/
#ifndef AIX
X   curs_set (0);
#endif
X   wrefresh (dialog->win);
X
X   /* Check if actions is NULL.						*/
X   if (actions == (chtype *)NULL)
X   {
X      for (;;)
X      {
X         /* Get the input.						*/
X         input = wgetch (dialog->win);
X
X         /* Inject the character into the widget.			*/
X         ret = injectCDKDialog (dialog, input);
X         if (ret != -2)
X         {
X            return ret;
X         }
X      }
X   }
X   else
X   {
X      int length = chlen (actions);
X      int x = 0;
X
X      /* Inject each character one at a time.				*/
X      for (x=0; x < length; x++)
X      {
X         ret = injectCDKDialog (dialog, actions[x]);
X         if (ret != -2)
X         {
X            return ret;
X         }
X      }
X   }
X   return -2;
}
X
/*
X * This injects a single character into the dialog widget.
X */
int injectCDKDialog (CDKDIALOG *dialog, chtype input)
{
X   int firstButton	= 0;
X   int lastButton	= dialog->buttonCount - 1;
X   int ppReturn		= 1;
X
X   /* Check if there is a pre-process function to be called.		*/
X   if (dialog->preProcessFunction != (PROCESSFN)NULL)
X   {
X      /* Call the pre-process function.					*/
X      ppReturn = ((PROCESSFN)(dialog->preProcessFunction)) (vDIALOG, dialog, dialog->preProcessData, input);
X   }
X
X   /* Should we continue?						*/
X   if (ppReturn != 0)
X   {
X      /* Check for a key binding...					*/
X      if (! checkCDKObjectBind (vDIALOG, dialog, input))
X      {
X         switch (input)
X         {
X            case KEY_LEFT :
X                 if (dialog->currentButton == firstButton)
X                 {
X                    dialog->currentButton = lastButton;;
X                 }
X                 else
X                 {
X                    dialog->currentButton--;
X                 }
X                 break;
X   
X            case KEY_RIGHT : case KEY_TAB : case ' ' :
X                 if (dialog->currentButton == lastButton)
X                 {
X                    dialog->currentButton = firstButton;
X                 }
X                 else
X                 {
X                    dialog->currentButton++;
X                 }
X                 break;
X   
X            case KEY_UP : case KEY_DOWN :
X                 Beep();
X                 break;
X   
X            case CDK_REFRESH :
X                 refreshCDKScreen (dialog->screen);
X                 break;
X   
X            case CDK_NEXT : case KEY_ESC :
X                 return -1;
X                 break;
X   
X            case KEY_RETURN :
X                 return dialog->currentButton;
X                 break;
X   
X         default :
X            break;
X         }
X      }
X
X      /* Should we call a post-process?					*/
X      if (dialog->postProcessFunction != (PROCESSFN)NULL)
X      {
X         ((PROCESSFN)(dialog->postProcessFunction)) (vDIALOG, dialog, dialog->postProcessData, input);
X      }
X   }
X
X   /* Redraw the buttons.						*/
X   redrawCDKDialogButtons (dialog);
X   wrefresh (dialog->win);
X   return -2;
}
X
/*
X * This function draws the dialog widget.
X */
void drawCDKDialog (CDKDIALOG *dialog, boolean Box)
{
X   /* Declare local variables.						*/
X   int x	= 0;
X
X   /* Erase the dialog widget from the screen.				*/
X   eraseCDKDialog (dialog);
X
X   /* Is there a shadow???						*/
X   if (dialog->shadow)
X   {
X      drawShadow (dialog->shadowWin);
X   }
X
X   /* Box the widget if they asked.					*/
X   if (Box)
X   {
X      box (dialog->win, ACS_VLINE, ACS_HLINE);
X   }
X
X   /* Draw in the message.						*/
X   for (x=0; x < dialog->messageRows; x++)
X   {
X      writeChtype (dialog->win,
X			dialog->infoPos[x], x+1,
X			dialog->info[x],
X			HORIZONTAL, 0,
X			dialog->infoLen[x]);
X   }
X
X   /* Draw in the buttons.						*/
X   redrawCDKDialogButtons (dialog);
X   wrefresh (dialog->win);
}
X
/*
X * This function destroys the dialog widget.
X */
void destroyCDKDialog (CDKDIALOG *dialog)
{
X   /* Declare local variables.						*/
X   int x	= 0;
X
X   /* Erase the object.							*/
X   eraseCDKDialog (dialog);
X
X   /* Clean up the char pointers.					*/
X   for (x=0; x < dialog->messageRows ; x++)
X   {
X      freeChtype (dialog->info[x]);
X   }
X   for (x=0; x < dialog->buttonCount; x++)
X   {
X      freeChtype (dialog->buttonLabel[x]);
X   }
X
X   /* Clean up the windows.						*/
X   delwin (dialog->win);
X   if (dialog->shadow)
X   {
X      delwin (dialog->shadowWin);
X   }
X
X   /* Unregister this object.						*/
X   unregisterCDKObject (vDIALOG, dialog);
X
X   /* Finish cleaning up.						*/
X   free (dialog);
}
X
/*
X * This function erases the dialog widget from the screen.
X */
void eraseCDKDialog (CDKDIALOG *dialog)
{
X   /* Erase the main window.						*/
X   werase (dialog->win);
X   wrefresh (dialog->win);
X
X   /* Do we need to erase the shadow???					*/
X   if (dialog->shadow)
X   {
X      werase (dialog->shadowWin);
X      wrefresh (dialog->shadowWin);
X   }
}
X
/*
X * This sets attributes of the dialog box.
X */
void setCDKDialog (CDKDIALOG *dialog, chtype highlight, boolean separator, boolean box)
{
X   dialog->highlight	= highlight;
X   dialog->separator	= separator;
X   dialog->box		= box;
}
X
/*
X * This redraws the dialog buttons and trhe separation line.
X */
void redrawCDKDialogButtons (CDKDIALOG *dialog)
{
X   /* Declare local variables.						*/
X   int x;
X
X   for (x=0; x < dialog->buttonCount; x++)
X   {
X      writeChtype (dialog->win,
X			dialog->buttonPos[x],
X			dialog->boxHeight-2,
X			dialog->buttonLabel[x],
X			HORIZONTAL, 0,
X			dialog->buttonLen[x]);
X   }
X   writeChtypeAttrib (dialog->win,
X		dialog->buttonPos[dialog->currentButton],
X		dialog->boxHeight-2,
X		dialog->buttonLabel[dialog->currentButton],
X		dialog->highlight,
X		HORIZONTAL, 0,
X		dialog->buttonLen[dialog->currentButton]);
X
X   /* Draw the separation line.						*/
X   if (dialog->separator)
X   {
X      for (x=1; x < dialog->boxWidth-1; x++)
X      {
X         mvwaddch (dialog->win, dialog->boxHeight-3, x, ACS_HLINE);
X      }
X      mvwaddch (dialog->win, dialog->boxHeight-3, 0, ACS_LTEE);
X      mvwaddch (dialog->win, dialog->boxHeight-3, dialog->win->_maxx, ACS_RTEE);
X   }
}
X
/*
X * This function sets the pre-process function.
X */
void setCDKDialogPreProcess (CDKDIALOG *dialog, PROCESSFN callback, void *data)
{
X   dialog->preProcessFunction = callback;
X   dialog->preProcessData = data;
}
X 
/*
X * This function sets the post-process function.
X */
void setCDKDialogPostProcess (CDKDIALOG *dialog, PROCESSFN callback, void *data)
{
X   dialog->postProcessFunction = callback;
X   dialog->postProcessData = data;
}
SHAR_EOF
  $shar_touch -am 0503190896 'dialog.c' &&
  chmod 0444 'dialog.c' ||
  echo 'restore of dialog.c failed'
  shar_count="`wc -c < 'dialog.c'`"
  test 10522 -eq "$shar_count" ||
    echo "dialog.c: original size 10522, current size $shar_count"
  rm -f _sharnew.tmp
fi
# ============= draw.c ==============
if test -f 'draw.c' && test X"$1" != X"-c"; then
  echo 'x - skipping draw.c (file already exists)'
  rm -f _sharnew.tmp
else
  > _sharnew.tmp
  echo 'x - extracting draw.c (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'draw.c' &&
#include "cdk.h"
X
/*
X * $Author: mikeg $
X * $Date: 1996/04/19 13:51:02 $
X * $Revision: 1.17 $
X */
X
/*
X * This sets up a basic set of color pairs. These can be redefined
X * if wanted...
X */
void initCDKColor ()
{
#ifdef COLOR
X   /* Declare local variables.					*/
X   int color[]	= {
X			COLOR_WHITE,	COLOR_RED,	COLOR_GREEN,
X			COLOR_YELLOW,	COLOR_BLUE,	COLOR_MAGENTA,
X			COLOR_CYAN,	COLOR_BLACK
X		};
X   int pair	= 1;
X   int x, y;
X
X   /* Start color first.					*/
X   start_color();
X  
X   /* Create the color pairs.					*/
X   for (x=0; x < 8; x++)
X   {
X      for (y=0; y < 8; y++)
X      {
X         init_pair (pair++, color[x], color[y]);
X      }
X   }
#endif
}
X
/*
X * This prints out a box around a window with attributes
X */
void boxWindow (WINDOW *window, chtype attr)
{
X   /* Set some variables.					*/
X   int tlx	= 0;
X   int tly	= 0;
X   int brx	= window->_maxx - 1;
X   int bry	= window->_maxy;
X   int x, y;
X
X   /* Draw horizontal lines 					*/
X   for (x=tlx; x<=brx;x++) 
X   {
X       mvwaddch(window, tly, x, ACS_HLINE | attr);
X       mvwaddch(window, bry, x, ACS_HLINE | attr);
X    }
X
X   /* Draw vertical lines 					*/
X   for (y=tly; y<=bry;y++) 
X   {
X       mvwaddch(window, y, tlx, ACS_VLINE | attr);
X       mvwaddch(window, y, brx, ACS_VLINE | attr);
X    }
X
X   /* Draw in the corners */
X   mvwaddch(window, tly, tlx, ACS_ULCORNER | attr);
X   mvwaddch(window, tly, brx, ACS_URCORNER | attr);
X   mvwaddch(window, bry, tlx, ACS_LLCORNER | attr);
X   mvwaddch(window, bry, brx, ACS_LRCORNER | attr);
X   wrefresh(window);
}
X
/*
X * This draws a box with attributes and lets the user define
X * each element of the box.
X */
void attrbox (WINDOW *win, chtype tlc, chtype trc, chtype blc, chtype brc, chtype horz, chtype vert, chtype attr)
{
X   /* Set the coordinates.	*/
X   int x1		= 0;
X   int y1		= 0;
#ifdef OLDCURSES
X   int y2		= win->_maxy;
X   int x2		= win->_maxx;
#else
X   int y2		= win->_maxy - 1;
X   int x2		= win->_maxx - 1;
#endif
X   int x, y;
X
X   /* Draw horizontal lines.	*/
X   for (x=x1; x<=x2;x++) 
X   {
X       mvwaddch(win, y1, x, horz | attr);
X       mvwaddch(win, y2, x, horz | attr);
X    }
X
X   /* Draw vertical lines.	*/
X   for (y=y1; y<=y2;y++) 
X   {
X       mvwaddch(win, y, x1, vert | attr);
X       mvwaddch(win, y, x2, vert | attr);
X    }
X
X   /* Draw in the corners.	*/
X   mvwaddch(win, y1, x1, tlc | attr);
X   mvwaddch(win, y1, x2, trc | attr);
X   mvwaddch(win, y2, x1, blc | attr);
X   mvwaddch(win, y2, x2, brc | attr);
X   wrefresh(win);
}
X
/*
X * This draws a line on the given window. (odd angle lines not working yet)
X */
void drawLine  (WINDOW *window, int startx, int starty, int endx, int endy, chtype line)
{
X   /* De=clare some local vars.	*/
X   int xdiff	= endx - startx;
X   int ydiff	= endy - starty;
X   int x	= 0;
X   int y	= 0;
X
X   /* Determine if we are drawing a horizontal or vertical line.	*/
X   if ( ydiff == 0)
X   {
X      /* Horizontal line.      <--------- X -------->			*/
X      for (x=0; x < xdiff ; x++)
X      {
X         mvwaddch (window, starty, startx + x, line);
X      }
X   }
X   else if (xdiff == 0)
X   {
X      /* Vertical line.							*/
X      for (y=0; y < ydiff ; y++)
X      {
X         mvwaddch (window, starty + y, startx, line);
X      }
X   }
X   else
X   {
X      /* We need to determine the angle of the line.	*/
X      int height	= xdiff;
X      int width		= ydiff;
X      int xratio	= (height > width ? 1 : (width / height));
X      int yratio	= (width > height ? (width / height) : 1);
X      int xadj		= 0;
X      int yadj		= 0;
X  
X      /* Set the vars.	*/
X      x	= startx;
X      y	= starty;
X      while (x != endx && y != endy)
X      {
X
X         /* Add the char to the window.		*/
X         mvwaddch (window, y, x, line);
X
X         /* Make the x and y adjustments.	*/
X         if (xadj != xratio)
X         {
X            x	= (xdiff < 0 ? x-1 : x+1);
X            xadj++;
X         }
X         else
X         {
X            xadj	= 0;
X         }
X         if (yadj != yratio)
X         {
X            y	= (ydiff < 0 ? y-1 : y+1);
X            yadj++;
X         }
X         else
X         {
X            yadj	= 0;
X         }
X      }
X   }
}
X
/*
X * This draws a shadow around a window.
X */
void drawShadow (WINDOW *shadowwin)
{
X   /* Declare local variables.					*/
X   int x		= 0;
X
X   /* Draw the line on the bottom.				*/
X   for (x=1; x <= shadowwin->_maxx; x++)
X   {
X      mvwaddch (shadowwin, shadowwin->_maxy, x, ACS_HLINE | A_DIM);
X   }
X
X   /* Draw the line on the right.				*/
X   for (x=0; x < shadowwin->_maxy; x++)
X   {
X      mvwaddch (shadowwin, x, shadowwin->_maxx, ACS_VLINE |A_DIM);
X   }
X   mvwaddch (shadowwin, 0, shadowwin->_maxx, ACS_URCORNER | A_DIM);
X   mvwaddch (shadowwin, shadowwin->_maxy, 0, ACS_LLCORNER | A_DIM);
X   mvwaddch (shadowwin, shadowwin->_maxy, shadowwin->_maxx, ACS_LRCORNER | A_DIM);
X   wrefresh (shadowwin);
}
X
/*
X * This writes out a char * string with no attributes.
X */
void writeChar (WINDOW *window, int xpos, int ypos, char *string, int align, int start, int end)
{
X   /* Declare local variables.					*/
X   int display		= end - start;
X   int x		= 0;
X
X   /* Check the alignment of the message.			*/
X   if (align == HORIZONTAL)
X   { 
X      display		= MIN(display,window->_maxx-1);
X      for (x=0; x < display ; x++)
X      {
X         /* Draw the message on a horizontal axis.		*/
X         mvwaddch (window, ypos, xpos+x, string[x+start] | A_NORMAL);
X      }
X   }
X   else
X   {
X      /* Draw the message on a vertical axis.			*/
X      display		= MIN(display,window->_maxy-1);
X      for (x=0; x < display ; x++)
X      {
X         mvwaddch (window, ypos+x, xpos, string[x+start] | A_NORMAL);
X      }
X   }
}
X
/*
X * This writes out a char * string with attributes.
X */
void writeCharAttrib (WINDOW *window, int xpos, int ypos, char *string, chtype attr, int align, int start, int end)
{
X   /* Declare local variables.					*/
X   int display		= end - start;
X   int x		= 0;
X
X   /* Check the alignment of the message.			*/
X   if (align == HORIZONTAL)
X   { 
X      /* Draw the message on a horizontal axis.			*/
X      display		= MIN(display,window->_maxx-1);
X      for (x=0; x < display ; x++)
X      {
X         mvwaddch (window, ypos, xpos+x, string[x+start] | attr);
X      }
X   }
X   else
X   {
X      /* Draw the message on a vertical axis.			*/
X      display		= MIN(display,window->_maxy-1);
X      for (x=0; x < display ; x++)
X      {
X         mvwaddch (window, ypos+x, xpos, string[x+start] | attr);
X      }
X   }
}
X
/*
X * This writes out a chtype * string.
X */
void writeChtype (WINDOW *window, int xpos, int ypos, chtype *string, int align, int start, int end)
{
X   /* Declare local variables.					*/
X   int diff		= 0;
X   int display		= 0;
X   int x		= 0;
X
X   /* Determine how much we need to display.			*/
X   if ( end >= start)
X   {
X      diff	= end - start;
X   }
X
X   /* Check the alignment of the message.			*/
X   if (align == HORIZONTAL)
X   {
X      /* Draw the message on a horizontal axis. 		*/
X      display		= MIN(diff,window->_maxx-1);
X      for (x=0; x < display; x++)
X      {
X         mvwaddch (window, ypos, xpos+x, string[x+start]);
X      }
X   }
X   else
X   {
X      /* Draw the message on a vertical axis.			*/
X      display		= MIN(diff,window->_maxy-1);
X      for (x=0; x < display; x++)
X      {
X         mvwaddch (window, ypos+x, xpos, string[x+start]);
X      }
X   }
}
X
/*
X * This writes out a chtype * string forcing the chtype string
X * to be printed out with the given attributes instead.
SHAR_EOF
  : || echo 'restore of draw.c failed'
fi
echo 'End of archive part 3'
echo 'File draw.c is continued in part 4'
echo 4 > _sharseq.tmp
exit 0
