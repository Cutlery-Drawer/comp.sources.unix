Newsgroups: comp.sources.unix
From: jnweiger@immd4.informatik.uni-erlangen.de (Juergen Weigert)
Subject: v25i042: Screen3 - multiple windows on an ASCII terminal, Part02/08
Sender: sources-moderator@pa.dec.com
Approved: vixie@pa.dec.com

Submitted-By: jnweiger@immd4.informatik.uni-erlangen.de (Juergen Weigert)
Posting-Number: Volume 25, Issue 42
Archive-Name: screen3/part02

#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of archive 2 (of 8)."
# Contents:  config.h config/config.mips config/config.rs6000
#   config/config.sequent_ptx config/config.sgi config/config.sunos41
#   config/config.svr4 config/config.ultrix31 config/config.xenix
#   extern.h
# Wrapped by vixie@cognition.pa.dec.com on Thu Dec 19 17:36:04 1991
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f 'config.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config.h'\"
else
echo shar: Extracting \"'config.h'\" \(8140 characters\)
sed "s/^X//" >'config.h' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.ultrix31,v 1.7 91/10/06 11:59:08 jnweiger Exp $ FAU
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#ifndef POSIX
X# define POSIX
X#endif
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#undef SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#undef SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#undef UTMPOK
X#define LOGINDEFAULT	0
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#undef GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#undef NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#define  LOADAV_3DOUBLES
X#undef LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#define GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X#define TMPTEST
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#undef ETCSCREENRC "/local/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
X
X
X#define NEEDSETENV
END_OF_FILE
if test 8140 -ne `wc -c <'config.h'`; then
    echo shar: \"'config.h'\" unpacked with wrong size!
fi
# end of 'config.h'
fi
if test -f 'config/config.mips' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.mips'\"
else
echo shar: Extracting \"'config/config.mips'\" \(8176 characters\)
sed "s/^X//" >'config/config.mips' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.mips,v 1.7 91/10/06 11:58:46 jnweiger Exp $ FAU
X */
X
X/****************************************************************
X * This file is by  Markku J{rvinen (mta@cc.tut.fi). It was done for a
X * MIPS RC6280 running RiscOS 4.52. 
X *
X ********************************************************** 
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#undef  POSIX
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#undef  TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#undef SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#undef  SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#undef  DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#define UTMPOK
X#define LOGINDEFAULT	0
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#undef GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef  UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#undef NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV_3DOUBLES
X#define LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#undef  LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/tmp/screens"
X# else
X#  define SOCKDIR "/tmp/testscreens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8176 -ne `wc -c <'config/config.mips'`; then
    echo shar: \"'config/config.mips'\" unpacked with wrong size!
fi
# end of 'config/config.mips'
fi
if test -f 'config/config.rs6000' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.rs6000'\"
else
echo shar: Extracting \"'config/config.rs6000'\" \(8086 characters\)
sed "s/^X//" >'config/config.rs6000' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.rs6000,v 1.11 91/10/06 11:58:56 jnweiger Exp $ FAU
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#define POSIX
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#define SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#define UTMPOK
X#define LOGINDEFAULT	1
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#define GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#define UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#define NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV_3DOUBLES
X#undef  LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/local/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8086 -ne `wc -c <'config/config.rs6000'`; then
    echo shar: \"'config/config.rs6000'\" unpacked with wrong size!
fi
# end of 'config/config.rs6000'
fi
if test -f 'config/config.sequent_ptx' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.sequent_ptx'\"
else
echo shar: Extracting \"'config/config.sequent_ptx'\" \(8091 characters\)
sed "s/^X//" >'config/config.sequent_ptx' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.sequent_ptx,v 1.14 91/10/06 11:58:57 jnweiger Exp $ FAU
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#define POSIX
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#define TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#define SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#define UTMPOK
X#define LOGINDEFAULT	1
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#define GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#define UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#define NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV_3DOUBLES
X#define LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#undef NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#undef NETHACK 
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/local/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8091 -ne `wc -c <'config/config.sequent_ptx'`; then
    echo shar: \"'config/config.sequent_ptx'\" unpacked with wrong size!
fi
# end of 'config/config.sequent_ptx'
fi
if test -f 'config/config.sgi' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.sgi'\"
else
echo shar: Extracting \"'config/config.sgi'\" \(8207 characters\)
sed "s/^X//" >'config/config.sgi' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.sgi,v 1.4 91/10/06 11:58:59 jnweiger Exp $ FAU
X */
X
X/****************************************************************
X * This file is by Andrea Malagoli (alagoli@mhd4.uchicago.edu).
X * It was done for a SGI MIPS Iris4D/20 running Irix 3.3.2.
X ********************************************************** 
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#undef  POSIX
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define  TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#define TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#define SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define  SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define  DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#undef UTMPOK
X#define LOGINDEFAULT	0
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#undef GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef  UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#undef NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV
X#undef  LOADAV_3DOUBLES
X#undef  LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#undef  LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/tmp/screens"
X# else
X#  define SOCKDIR "/tmp/testscreens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#define USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#undef NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8207 -ne `wc -c <'config/config.sgi'`; then
    echo shar: \"'config/config.sgi'\" unpacked with wrong size!
fi
# end of 'config/config.sgi'
fi
if test -f 'config/config.sunos41' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.sunos41'\"
else
echo shar: Extracting \"'config/config.sunos41'\" \(8086 characters\)
sed "s/^X//" >'config/config.sunos41' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.sunos41,v 1.15 91/10/06 11:59:01 jnweiger Exp $ FAU
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#define POSIX
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#undef SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#define UTMPOK
X#define LOGINDEFAULT	1
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#undef GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#define UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#undef NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV_3DOUBLES
X#define LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/tmp/screens"
X# else
X#  define SOCKDIR "/tmp/testscreens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/local/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8086 -ne `wc -c <'config/config.sunos41'`; then
    echo shar: \"'config/config.sunos41'\" unpacked with wrong size!
fi
# end of 'config/config.sunos41'
fi
if test -f 'config/config.svr4' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.svr4'\"
else
echo shar: Extracting \"'config/config.svr4'\" \(8375 characters\)
sed "s/^X//" >'config/config.svr4' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.svr4,v 1.7 91/10/06 11:59:03 jnweiger Exp $ FAU
X */
X
X/****************************************************************
X * this config file was contributed by Marc Boucher <marc@CAM.ORG>
X * it supports System V Release 4.0
X ********************************************************** 
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#define POSIX
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database. 
X * Thus the .screenrc file is parsed for 
X * the command 'terminfo' and not 'termcap'.
X */
X#define TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#define SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#define SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#define UTMPOK
X#define LOGINDEFAULT	1
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#define GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#define NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#define LOADAV_3DOUBLES
X#undef  LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#define USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#define ETCSCREENRC "/local/etc/screenrc"
X
X#define SVR4
X/*#define NEEDSETENV*/
X/*#define DEBUG*/
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8375 -ne `wc -c <'config/config.svr4'`; then
    echo shar: \"'config/config.svr4'\" unpacked with wrong size!
fi
# end of 'config/config.svr4'
fi
if test -f 'config/config.ultrix31' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.ultrix31'\"
else
echo shar: Extracting \"'config/config.ultrix31'\" \(8140 characters\)
sed "s/^X//" >'config/config.ultrix31' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.ultrix31,v 1.7 91/10/06 11:59:08 jnweiger Exp $ FAU
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#ifndef POSIX
X# define POSIX
X#endif
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#define BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
X#undef SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#undef SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#undef UTMPOK
X#define LOGINDEFAULT	0
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#undef GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#undef NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#define  LOADAV_3DOUBLES
X#undef LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#define GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#define LOCALSOCKDIR
X#define TMPTEST
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#define NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X#undef ETCSCREENRC "/local/etc/screenrc"
X
X/*
X *	End of User Configuration Section
X */
X
X
X#define NEEDSETENV
END_OF_FILE
if test 8140 -ne `wc -c <'config/config.ultrix31'`; then
    echo shar: \"'config/config.ultrix31'\" unpacked with wrong size!
fi
# end of 'config/config.ultrix31'
fi
if test -f 'config/config.xenix' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'config/config.xenix'\"
else
echo shar: Extracting \"'config/config.xenix'\" \(8478 characters\)
sed "s/^X//" >'config/config.xenix' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: config.xenix,v 1.3 91/10/06 11:59:11 jnweiger Exp $ FAU
X */
X
X/****************************************************************
X * minimal config for SCO XENIX 386 2.3.[34].  avenrun could be
X * configured in, but a) I can't be bothered and b) I want the binaries
X * to work unchanged on SCO UNIX too
X *    Ronald Khoo <ronald@robobar.co.uk> 
X ****************************************************************
X */
X
X
X/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
X#undef POSIX
X
X/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
X#undef BSDJOBS
X
X/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
X#define TERMIO
X
X/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
X#undef TERMINFO
X
X/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X * We use uname() instead of Gethostname().
X */
X#define SYSV
X
X/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
X#define SIGVOID 
X
X/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
X#define DIRENT
X
X/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
X#undef SUIDROOT
X
X/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
X#undef UTMPOK
X#define LOGINDEFAULT	0
X
X/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
X#define GETUTENT
X
X/*
X * Define UTHOST if the utmp file has a host field.
X */
X#undef UTHOST
X
X/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
X#undef USRLIMIT
X
X/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
X#undef LOCKPTY
X
X/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
X#define NOREUID
X
X/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
X#undef  LOADAV_3DOUBLES
X#undef  LOADAV_3LONGS
X#undef  LOADAV_4LONGS
X
X/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
X#undef GETTTYENT
X
X/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
X#undef NFS_HACK
X
X/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
X#undef LOCALSOCKDIR
X
X#ifdef LOCALSOCKDIR
X# ifndef TMPTEST
X#  define SOCKDIR "/local/screens"
X# else
X#  define SOCKDIR "/tmp/screens"
X# endif
X#endif
X
X/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
X#undef USEBCOPY
X
X/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
X#undef TOPSTAT
X
X/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
X#undef USEVARARGS
X
X/*
X * Define this if your system supports named pipes.
X */
X#define NAMEDPIPE
X
X/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
X#define LOCK
X#define PASSWORD
X#define COPY_PASTE
X#define REMOTE_DETACH
X#define POW_DETACH
X
X/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
X#undef NETHACK
X
X/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
X/* #define ETCSCREENRC "/local/etc/screenrc" */
X
X/*
X *	End of User Configuration Section
X */
END_OF_FILE
if test 8478 -ne `wc -c <'config/config.xenix'`; then
    echo shar: \"'config/config.xenix'\" unpacked with wrong size!
fi
# end of 'config/config.xenix'
fi
if test -f 'extern.h' -a "${1}" != "-c" ; then 
  echo shar: Will not clobber existing file \"'extern.h'\"
else
echo shar: Extracting \"'extern.h'\" \(8727 characters\)
sed "s/^X//" >'extern.h' <<'END_OF_FILE'
X/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id: extern.h,v 1.30 91/10/11 11:42:30 jnweiger Exp $ FAU
X */
X
X/****************************************************************
X * Thanks to Christos S. Zoulas (christos@ee.cornell.edu) who 
X * mangled the screen source through 'gcc -Wall'.
X *
X * this is his extern.h
X ****************************************************************
X */
X
X#ifndef SYSV
extern void bzero __P((char *, int));
X#endif
X#ifdef sun
extern char *memset __P((char *, int, size_t));
X#endif
extern void bcopy __P((char *, char *, int));
struct rusage;
X#ifdef BSDWAIT
union wait;
extern int wait3 __P((union wait *, int, struct rusage *));
X#else
extern int wait3 __P((int *, int, struct rusage *));
X#endif
extern int getdtablesize __P((void));
X#if !defined(NOREUID)
X# ifdef hpux
extern int setresuid __P((int, int, int));
extern int setresgid __P((int, int, int));
X# else
extern int setreuid __P((uid_t, uid_t));
extern int setregid __P((gid_t, gid_t));
X# endif
X#endif
extern char *crypt __P((char *, char *));
X#ifdef sun
extern int getpgrp __P((int));
X#endif
X#ifdef POSIX
extern int mknod __P((char *, mode_t, dev_t));
X#else
extern int mknod __P((char *, int, int));
X#endif
extern int putenv __P((char *));
extern int kill __P((pid_t, int));
X#ifndef SYSV
extern int killpg __P((pid_t, int));
X#endif
extern int tgetent __P((char *, char *));
extern int tgetnum __P((char *));
extern int tgetflag __P((char *));
extern void tputs __P((char *, int, void (*)(int)));
X#ifdef notdef
extern unsigned char     *_flsbuf __P((unsigned char, FILE *));
X#endif
extern int _flsbuf __P((unsigned char, FILE *));
X#ifdef POSIX
extern pid_t setsid __P((void));
X#ifdef SVR4
extern int setpgid __P((pid_t, pid_t));
X#else
extern int setpgid __P((pid_t, int));
X#endif
extern int tcsetpgrp __P((int, pid_t));
X#endif
extern pid_t getpid __P((void));
extern uid_t getuid __P((void)); 
extern uid_t geteuid __P((void));
extern gid_t getgid __P((void)); 
extern gid_t getegid __P((void));
extern int isatty __P((int)); 
X#ifdef notdef
extern int chown __P((const char *, uid_t, gid_t)); 
X#endif
X#ifndef SVR4
extern int gethostname __P((char *, size_t));
X#endif
extern off_t lseek __P((int, off_t, int));
X#if defined(sun) && !defined(__GNUC__)		/* sun's exit returns ??? */
extern int exit __P((int));
X#else
extern void exit __P((int));
X#endif
extern char *getwd __P((char *));
extern char *getenv __P((const char *));
extern time_t time __P((time_t *));
X
extern char *getlogin(), *getpass(), *ttyname();
extern int fflush(); 
X#if !defined(__STDC__) || !defined(POSIX)
extern char *malloc(), *realloc();
X#endif
X
X
X
extern char *Filename __P((char *));
extern char *MakeTermcap __P((int));
extern char *ParseChar __P((char *, char *));
extern char *ProcessInput __P((char *, int *, char *, int *, int));
extern char *SaveStr __P((char *));
extern char *findcap __P((char *, char **, int));
extern char *findrcfile __P((char *));
extern char *strdup __P((const char *));
extern int ChangeScrollback __P((struct win *, int, int));
extern int ChangeWindowSize __P((struct win *, int, int));
extern int CompileKeys __P((char *, char *));
extern int CountUsers __P((void));
extern int FindSocket __P((int, int *));
extern int GetAvenrun __P((void));
extern int GetSockName __P((void));
extern int MakeClientSocket __P((int, char *));
extern int MakeServerSocket __P((void));
extern int MakeWindow __P((char *, char **, int, int, int, char *, int, int, char *));
extern int MarkRoutine __P((int));
extern int ParseEscape __P((char *));
extern void RcLine __P((char *));
extern int RecoverSocket __P((void));
extern int RemoveUtmp __P((struct win *));
extern int SetUtmp __P((struct win *, int));
extern int UserContext __P((void));
extern int UserStatus __P((void));
extern int display_help __P((void));
extern void display_copyright __P((void));
X#ifdef DEBUG
extern sig_t FEChld __P(SIGPROTOARG);
X#endif
extern sig_t SigHup __P(SIGPROTOARG);
extern void AbortRc __P((void));
extern void Activate __P((void));
extern void ChangeScreenSize __P((int, int, int));
extern void ChangeScrollRegion __P((int, int));
extern void CheckLP __P((int));
extern void CheckScreenSize __P((int));
extern void ClearDisplay __P((void));
extern void Detach __P((int));
extern void DisplayLine __P((char *, char *, char *, char *, char *, char *, int, int, int));
extern void DoScreen __P((char *, char **));
extern void DoSet __P((char **));
extern void ExitOverlayPage __P((void));
extern void FinishRc __P((char *));
extern void FinitTerm __P((void));
extern void FixLP __P((int, int));
extern void GetTTY __P((int, struct mode *));
extern void GotoPos __P((int, int));
extern void InitKmem __P((void));
extern void InitOverlayPage __P((void (*)(), void (*)(), int (*)(), int));
extern void InitTerm __P((int));
extern void InitTermcap __P((void));
extern void InitUtmp __P((void));
extern void InputAKA __P((void));
extern void InputColon __P((void));
extern void InsertMode __P((int));
extern void Kill __P((int, int));
extern int CheckPid __P((int));
extern void KillBuffers __P((void));
extern void MakeBlankLine __P((char *, int));
extern void MakeStatus __P((char *));
X#ifdef USEVARARGS
extern void Msg __P((int, char *, ...));
X#else
extern void Msg __P(());
X#endif
extern void NewCharset __P((int));
extern void NewRendition __P(());
extern void PUTCHAR __P((int));
extern void INSERTCHAR __P((int));
extern void ParseNum __P((int, char *[], int *));
extern void ParseOnOff __P((int, char *[], int *));
extern void PutChar __P((int));
extern void PutStr __P((char *));
extern void ReInitUtmp __P((void));
extern void ReadFile __P((void));
extern void ReceiveMsg __P((int));
extern void Redisplay __P((void));
extern void RefreshLine __P((int, int, int));
struct utmp;
extern void RemoveLoginSlot __P((slot_t, struct utmp *));
extern void RemoveStatus __P((void));
extern void Report __P((struct win *, char *, int, int));
extern void ResetScreen __P((struct win *));
extern void ResizeScreen __P((struct win *));
extern void RestoreAttr __P((void));
extern void RestoreLoginSlot __P((void));
extern void SaveSetAttr __P((int, int));
extern void ScrollRegion __P((int, int, int));
extern void SendCreateMsg __P((int, int, char **, int, int, int, int, char *));
X#ifdef USEVARARGS
extern void SendErrorMsg __P((char *, ...));
X#else
extern void SendErrorMsg __P(());
X#endif
extern void SetFlow __P((int));
extern void SetLastPos __P((int, int));
extern void SetMode __P((struct mode *, struct mode *));
extern void SetOvlCurr __P((void));
extern void SetTTY __P((int, struct mode *));
extern void SlotToggle __P((int));
extern void StartRc __P((char *));
extern void SwitchWindow __P((int));
extern void ToggleFlow __P((void));
extern void UserReturn __P((int));
extern void WSresize __P((int, int));
extern void WriteFile __P((int));
extern void WriteString __P((struct win *, char *, int));
extern void bclear __P((char *, int));
extern void bcopy __P((char *, char *, int));
extern void eexit __P((int));
extern void exit_with_usage __P((char *));
extern void main __P((int, char **));
extern void screen_builtin_lck __P((void));
extern void KillWindow __P((int));
extern char *xrealloc __P((char *, int));
extern void AddLineToHist __P((struct win *, char **, char **, char **));
extern FILE *secfopen __P((char *, char *));
extern int secopen __P((char *, int, int));
END_OF_FILE
if test 8727 -ne `wc -c <'extern.h'`; then
    echo shar: \"'extern.h'\" unpacked with wrong size!
fi
# end of 'extern.h'
fi
echo shar: End of archive 2 \(of 8\).
cp /dev/null ark2isdone
MISSING=""
for I in 1 2 3 4 5 6 7 8 ; do
    if test ! -f ark${I}isdone ; then
	MISSING="${MISSING} ${I}"
    fi
done
if test "${MISSING}" = "" ; then
    echo You have unpacked all 8 archives.
    rm -f ark[1-9]isdone
else
    echo You still need to unpack the following archives:
    echo "        " ${MISSING}
fi
##  End of shell archive.
exit 0
