From mooers@SH.CS.NET Tue May  9 10:28:29 1989
Received: from SH.CS.NET by pineapple.bbn.com
	id <AA03820@pineapple.bbn.com>; Tue, 9 May 89 10:28:19 -0400
Received: from seismo.css.gov by SH.CS.NET id aa20020; 9 May 89 1:46 EDT
Received: from esosun.CSS.GOV by seismo.CSS.GOV (5.61/1.14) with SMTP 
	id AA12653; Tue, 9 May 89 01:41:32 -0400
Received: by esosun.css.gov (3.2/) 
	id AA26430; Mon, 8 May 89 22:41:24 PDT
Received: by sol.sag.uucp (3.2/SAIC-SAG/kfp-1.2)
	id AA17143 for cic@SH.CS.NET; Mon, 8 May 89 17:43:41 PDT
Message-Id: <8905090043.AA17143@sol.sag.uucp>
Organization: Science Applications International Corporation
From: Keith Pilotti <sol!keith@esosun.css.gov>
To: cic@SH.CS.NET
Subject: Re: c-kermit.ann C-Kermit & USENET <Fragment 1 of 1> 
In-Reply-To: Your message of Fri, 05 May 89 23:46:34 -0400.
             <8905060555.AA10786@seismo.CSS.GOV> 
Date: Mon, 08 May 89 17:43:40 -0700
Resent-To: rsalz@esosun.css.gov
Resent-Date: Tue, 09 May 89 10:26:43 -0400
Resent-From: mooers@SH.CS.NET
Status: R

The contents of this file are quite outdated.  I've appended the current
version of this information I obtained (after much frustration) from
the OK State archive.  FYI the file is okstate!~uucp/kermit-b/aanoks.hlp

Thanks...
+Keith Pilotti
--
SAIC Comsystems Division
2815 Camino Del Rio South, M/S-122, San Diego, CA 92108

(619)293-7500    {sun!suntan,seismo!esosun}!sol!keith
                 Pilotti@UCSD.edu

========================================================================
OKLAHOMA STATE UNIVERSITY KERMIT DIALUP ACCESS


UUCP and Kermit access to the complete Kermit distribution is available from
the Department of Computing and Information Sciences, Oklahoma State 
University, Stillwater, Oklahoma.

The files from TAPE A are in /usr/spool/uucppublic/kermit-a/*
The files from TAPE B are in /usr/spool/uucppublic/kermit-b/*
The files from TAPE C are in /usr/spool/uucppublic/kermit-c/*
The files from TAPE D are in /usr/spool/uucppublic/kermit-d/*
The files from TAPE E are in /usr/spool/uucppublic/kermit-e/*


 -- UUCP --

You need to set up "okstate" as a site in your "L.sys" UUCP dialing file
using the information listed below.  You can then issue the following 
commands on your system:

   uucp okstate!~uucp/kermit-a/aaaread.me /usr/spool/uucppublic

   (this example will retrieve a general information file about the entire
    Kermit Distribution.  DO THIS FIRST!)

   uucp okstate!~uucp/kermit-b/ck\* /usr/spool/uucppublic

   (this example will retrieve the current version of C-Kermit)

WARNING:  Using wildcards on extremely large collections of files will probably
fail without an error message.  This was recently seen when someone tried to
request /usr/spool/uucppublic/kermit-a/ms* (all of the MS-DOS related files).

"/usr/spool/uucppublic" was chosen as the destination on your system since
the destination must be WIDE OPEN (drwxrwxrwx) to everyone.  Also, the system
"okstate" must be allowed (via the Permissions or USERFILE file) to write into
the destination directory.

There are 2 files available that contain information about the entire
distribution.  We recommend that you retrieve these files first.  They are
"aaaread.me" which explains the file name conventions used, and "aafiles.dir"
which is a complete listing (by name) of all files in the in each kermit
directory.  These files will enable you to choose the right files the first
time.

 ----- UUCP Login information -----

Site Name    : okstate
Phone number : (405) 744-6953
Login name   : uucpker
Password     : thefrog
Hours        : 24 hours per day, 7 days a week
Problem      : okstate!uucp-support                          (UUCP)
  reports    : uucp-support@a.cs.okstate.edu                 (Internet)

The phone number is for 300/1200/2400 baud (bell 103/212a/2224 compatible).

The following is a sample L.sys line (\r is a carriage return).  You might
want to put a time restriction on "Any", such as Any0000-0800 to save on
your phone bills.

okstate Any ACU 2400 405-744-6953 "" \r ogin: uucpker word: thefrog

Just a few notes on how to best retrieve parts of the Kermit distribution
using UUCP...

  -  Install the proper L.sys entry and test it using the debugging option
     of UUCICO (-x4).  Repeat this step until you successfully complete a
     "no work" connection, this will verify that your L.sys entry is correct
     and will minimize frazzled nerves.

  -  Retrieve the files `aaaread.me' and `aafiles.dir' with the following
     commands:

uucp okstate!~uucp/kermit-a/aaaread.me  /usr/spool/uucppublic
uucp okstate!~uucp/kermit-a/aafiles.dir /usr/spool/uucppublic/files.dir.a
uucp okstate!~uucp/kermit-b/aafiles.dir /usr/spool/uucppublic/files.dir.b
uucp okstate!~uucp/kermit-c/aafiles.dir /usr/spool/uucppublic/files.dir.c
uucp okstate!~uucp/kermit-d/aafiles.dir /usr/spool/uucppublic/files.dir.d
uucp okstate!~uucp/kermit-e/aafiles.dir /usr/spool/uucppublic/files.dir.e

     You will have to escape the exclamation point and the tilde if you are
     using the C shell (i.e. ...okstate\!\~uucp/kermit-a...).

  -  Choose the versions of Kermit that you wish to transfer and issue the
     proper UUCP command.  Some systems don't seem to like wildcards, but
     in any case the wildcards will have to be escaped from your shell. The
     following command would retrieve the files relating to C-Kermit:

uucp okstate!~uucp/kermit-b/ck\* /usr/spool/uucppublic

     PLEASE NOTE THE USE OF /usr/spool/uucppublic!  Unless you *really* 
     understand how UUCP's protections work you should not change this!  A
     number of people have queued >100 files and had their systems refuse
     to store them in out of the way places.  This results in wasted phone
     time!



KERMIT SERVER ACCESS TO THE KERMIT DISTRIBUTION AREA.

Okstate also provides access to the KERMIT distribution via a KERMIT Server.
The number is the same as above for the uucpker login, so the line may be busy
quite a bit.  This server is a specialized server with controlled access.  At
present, the server is only allowed access to the KERMIT directories on our
machine.  

                      Path names for the C-KERMIT server:


          1.   The server now allows relative paths.  When the  server
               starts it is in the kermit-a subdirectory of the direc-
               tory  /usr/spool/uucppublic.   You  can  move  to   the
               kermit-b  directory  by using "remote cwd ../kermit-b",
               or you can get files from  another  directory,  without
               using    remote    cwd,    by    using   the   pathname
               ../<subdir>/filespec, e.g. ../kermit-b/ck*.

          2.   No password is needed for the directory  change.   Just
               specify  the  proper path (selected from the list shown
               when the server starts up).

          3.   When you use the  REMOTE  DIRECTORY  command,  remember
               that  there  are a great number of files in some of the
               directories accessible by the server.  This means  that
               it can take a little while for the listing to come back
               to you.

          4.   The server makes use of the "set  filenames  converted"
               command  to  allow  you  to specify filenames in either
               upper or lower case.

                    ../KERMIT-A/AA*

               is a valid file name to the server as well as

                    ../kermit-a/aa*

               is a valid file name.

          5.   The messages returned by the server in the acknowledge-
               ment, and error packets are very helpful.  If a partic-
               ular KERMIT does not print the messages, then  it  will
               be difficult to know what is really going wrong.

          6.   Wildcarding is allowed in file specifications.  At this
               time,  only  as wildcard characters.  As with most Unix
               wildcarding, '*' represents zero or more of any charac-
               ter, including '.', and '?' represents any single char-
               acter, also including '.'.  Thus, ck*.*  is  equivalent
               to  ck* for all filenames containing a '.', and ck?* is
               not equivelent to ck* Since the  '?'  requires  that  a
               character be present.



                         What the startup information means:

               When the server starts up, several pieces  of  informa-
          tion are printed out.  Below is a sample:

               Server capabilities:

               GET      DIR      TYPE     CWD      JOURNAL

               max-on-time = `-2'
               max-idle   = `600'

               Home directory: `/usr/spool/uucppublic/kermit-a'
               Alternate path: `/usr/spool/uucppublic/kermit-a: r'
               Alternate path: `/usr/spool/uucppublic/kermit-b: r'
               Alternate path: `/usr/spool/uucppublic/kermit-c: r'
               Alternate path: `/usr/spool/uucppublic/kermit-d: r'
               Alternate path: `/usr/spool/uucppublic/kermit-e: r'


               C-Kermit>set file names converted
               C-Kermit>set parity even
               C-Kermit>server

               C-Kermit server starting.  Return to your local machine by typing
               its escape sequence for closing the connection, and issue further
               commands from there.  To shut down the C-Kermit server, issue the
               FINISH or BYE command.

               The information given above,  describes  the  types  of
          functions the server can perform, the time limits associated
          with the server, and the paths that you may  use  to  access
          files with.  The value of max-on-time represents the maximum
          length of a session.  In this case,  the  value  `-2'  means
          infinite.  The value of max-idle represents the maximum time
          that can elapse between transactions before the session ter-
          minates.   The  value  given is in seconds, so 10 minutes is
          the limit.  If max-on-time was  enforced,  its  value  would
          also be in seconds.

               The "Home directory" path is  the  directory  that  the
          server starts the session in.  Since it is also an alternate
          path, it is listed as one.  The letters appearing after  the
          ':'  in  the Alternate path names, represent the permissions
          applicable in that directory.  'r' is for READ.   The  other
          possibilities  are 'w' - WRITE, 'd' - DELETE, and 'x' - EXE-
          CUTE.

               The lines beginning with "C-kermit>" show you the  KER-
          MIT commands that the server is executing when it starts up.
          In this case, filenames will be converted (forced  to  lower
          case),  parity  is  set  to  even,  and  then server mode is
          entered.  The lines after  that  are  information  regarding
          what you should do to start using the server.


                             Transaction journaling

               A complete list of the transactions that  each  session
          makes  is  maintained.  You may retrieve a copy of the tran-
          saction by using the REMOTE commands associated  with  jour-
          nals.   The information within the journal represents all of
          the data and information associated  with  the  transactions
          carried out for the session.

               The server supports all of the journal functions listed
          in   the  KERMIT  protocol  manual,  ../kermit-a/kproto.doc.
          Transaction files can be named, if an argument is  given  to
          the  REMOTE  START-LOG  command.   Only the base name of the
          file name will be used.  An example series of command to the
          server might be:

               KERMIT> remote start-log files
               KERMIT> remote cwd ../kermit-b
               KERMIT> get ck*
               KERMIT> get hp*
               KERMIT> remote cwd ../kermit-a
               KERMIT> get ms*
               KERMIT> remote send-log

               The resulting log would contain information about which
          file  were  transferred  and  the  times associated with the
          transfer.  The final command, remote send-log, would  result
          in the file "files" being  sent to the users'  host.  It can
          then be reviewed at a later date to  verify  what  had  been
          transferred.


You need the following information in order to access the server.

KERMIT login   :   kermsrv
Password       :   piggy
Parity         :   even
Data path      :   7 bit
Available      :   24 hours/day, 7 days a week

When the login is completed, the server will start, and you should escape
back to your local KERMIT to issue further commands.  If the server remains
idle for a period of time around 10 minutes, it will be stopped.  While the
server is receiving data other than NAK packets, it will continue to run.

The best place to start after logging on is "REMOTE HELP", followed closely by
the desired "REMOTE DIR" commands.  If you don't include an argument to REMOTE
DIR, you should be prepared for many many lines of output.  It is usually
better to read the 'aaaread.me' file (using REMOTE TYPE perhaps) and then do
the DIR with some kind of wildcard (like "REMOTE DIR ck*").

Remember that if your KERMIT does not support remote commands, then you can
get files from either directory by preceding the file name with the proper
path, as in:

	get ../kermit-b/ck*

  -  If you are having problems connecting to our system PLEASE send mail
     to uucp-support@a.cs.okstate.edu.

Thanks,

Mark Vasoll
Computing and Information Sciences       Internet:  vasoll@a.cs.okstate.edu
Oklahoma State University                UUCP:  {cbosgd, ihnp4, rutgers,
Stillwater, Oklahoma                            uokmax}!okstate!vasoll

